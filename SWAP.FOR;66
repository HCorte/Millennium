      PROGRAM SWAPNUMBS
      IMPLICIT NONE
        integer m, n
        character*17 log
        character*34 logfinal
        character*17 logaux
        character*80 path
        !character*24 date
        character*8 date
        character*10 time
        character*20 logdate

c
        m = 1
        n = 2
        path = 'GXPROJ:[WRK.HMC.EXAMPLES.LOGFILES]logs.dat' !'../logfiles/logs.dat' !'/DKD10/dmil/wrk/hmc/'
c     &  //'examples/logfiles/logs.dat'
        print *, path
        call date_and_time(date,time) !call fdate( date )
        !print *, date
        !print *, 'yyyy:'//date(1:4)
	!print *, 'mm:'//date(5:6)
        !print *, 'dd:'//date(7:8)
        !print *, time
        !print *, 'hours:'//time(1:2)
        !print *, 'minutes:'//time(3:4)
        !print *, 'seconds:'//time(5:6)
        logdate = date(7:8)//'/'//date(5:6)//'/'//date(1:4)
     &  //'  '//time(1:2)//':'//time(3:4)//':'//time(5:6)
        print *, 'date is: '//logdate
        
        !logic for converting and concatenating integer values into strings
c        write(log,1) m
c  1     format(I4)
c        log = 'm value is: '//log
c        write(logaux,2) n
c  2     format(I4)        
c        logfinal = log//' n value is: '//logaux
        
        CALL CONCATENATE_INT(m,n,logfinal) 
        print *, logdate//' -  '//logfinal 

        open(UNIT=1235, FILE=path, ACCESS='append', STATUS='old')
c        open(UNIT=1235, FILE='/DKD10/dmil/wrk/hmc/'//
c     &  'examples/logfiles/logs.dat',
c     &  ACCESS='append', STATUS='old')
        write(1235,*) logdate//' -  '//logfinal
        close(1235)
        
        !write(*,*) m, n
        !n = 2 

        !call iswap(m, n)
        !log = 'm value is: '//m//' n value is: '//n
        !write(991,*) log
        !CLOSE(991)

        SUBROUTINE CONCATENATE_INT(val1, val2, stringFinal)
           IMPLICIT NONE
           character*17 string
           !character*34 stringFinal
           character*17 stringAux

           write(log,1) val1 !convert the integer value to string using internal file log-> (write)
  1        format(I4)
           string = 'm value is: '//string           

           write(stringAux,2) n
  2        format(I4)        
           stringFinal = string//' n value is: '//stringAux

           RETURN
        END

        stop    
      END
