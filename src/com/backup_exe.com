$!
$! BACKUP_exe.COM
$!
$!*****************************************************************************
$!
$! This item is the property of GTECH Corporation, West Greenwich, Rhode
$! Island, and contains confidential and trade secret information. It may not
$! be transferred from the custody or control of GTECH except as authorized
$! in writing by an officer of GTECH. Neither this item nor the information it
$! contains may be used, transferred, reproduced, published, or disclosed, in
$! whole or in part, and directly or indirectly, except as expressly authorized
$! by an officer of GTECH, pursuant to  written agreement.
$!
$! Copyright 1993,1994 GTECH Corporation. All rights reserved.
$!
$!*****************************************************************************
$!
$! V09 14-Feb-1994 JSL  Added question to ask if they wanted logs printed.
$! V08 14-Feb-1994 JSL  Fixed a problem with trying to remove a DISK from the
$!                      BACKUP list.
$! V07 07-Feb-1994 JSL  Added Automatic printing of Logs after backup is 
$!                      complete
$! V06 01-NOV-1993 JSL  FIXED RESTORE OPTION BUG, LOOKING FOR INCORRECT SAVESET
$!                      NAME TO RESTORE.
$! V05 15-SEP-1993 JSL  ADDED SYSTEM DISK IMAGE OPTION
$! V04 07-SEP-1993 JSL  ADDED THE 'ARE YOU SURE YOU WANT TO DO THIS' QUESTIONS
$! V03 03-SEP-1993 JSL  ADDED SAVE AREA CLEANUP BEFORE YOU DUMP DOWN NEW 
$!                      FILES.  FIXED DISMOUNT PROBLEM AFTER DISK TO TAPE 
$!                      BACKUP.  VERIFIED RESTORE CODE.
$! V02 02-SEP-1993 JSL  PUT IN MINOR CHANGES FOR CALIFORNIA
$!                      ADDED BACKUP BEGIN NOTIFICATION TO CONSOLE
$! V01 19-AUG-1993 JSL  INITIAL RELEASE
$!
$ SET NOON
$ ON CONTROL_Y THEN GOTO EXIT
$ ON CONTROL_C THEN GOTO EXIT
$ DEFINE/SYSTEM MSGS     GXLOG:
$ DEFINE/SYSTEM TMFSAVE  DKA104:[TMFSAVE]
$!
$ SAVFILS       :== DKA3
$ SAY           :== WRITE SYS$OUTPUT
$ WS            :== WRITE SYS$OUTPUT
$ BS            :== BACKUP/LOG/IGNORE=INTER/FAST
$ BS2           :== BACKUP/LOG/FAST/IGNORE=LAB
$ BS3           :== BACKUP/LOG/REWIND/IGNORE=LAB
$ TERMINAL      :== _TNA79
$ CDC_DATE      == "UNKNOWN"
$ HORAS         == F$TIME()
$ TIM           == F$TIME()
$ USEN          == F$GETJPI("","USERNAME")
$!
$! WS " "
$! IF USEN .NES. "BACKUP      "
$!       THEN
$!         WRITE SYS$OUTPUT "      - THE USER IS NOT BACKUP"
$!         GOTO EXIT
$! ENDIF
$MENU1:
$!
$ SAY " "
$ SAY " Please choose from options below ...."
$ SAY " "
$ SAY "                 1 - Backup release to Save Disk "
$ SAY "                 2 - Backup release to Tape "
$ SAY "                 3 - Restore release from Tape "
$ SAY "                 4 - Restore release from Save Disk
$ SAY "                 5 - Modify/View release configuration"
$ SAY "                 6 - Verify release execution
$ SAY "                 7 - Display release log
$ SAY " "
$ SAY "                 E - EXIT"
$ SAY " "
$!
$ INQUIRE BACKUP_OPTION "SELECT RELEASE OPTION "
$ IF BACKUP_OPTION .EQS. "" 
$   THEN 
$    GOSUB NOOPTION
$    GOTO MENU1
$ ENDIF
$!
$ IF (BACKUP_OPTION .EQS. "E") THEN GOTO EXIT
$!
$ IF (BACKUP_OPTION .LT. 1) .OR. (BACKUP_OPTION .GT. 8)
$   THEN
$    GOSUB OUTOFRANGE
$    GOTO MENU1
$    ENDIF
$ GOTO 'BACKUP_OPTION'
$!
$!*************************************************************************
$!
$1:
$!
$ WS " "
$ WS "       YOU WILL LOOSE YOUR PREVIOUS RELEASE ON DISK IF YOU ARE DOING IT ON DISK  "
$ ws "       MAKE SURE THE SYSTEM IS NOT RUNNING WHEN YOU ARE DOING THE RELEASE BACKUP "
$I0:
$   INQUIRE A "- TO CONTINUE PUT C, TO STOP PUT S"
$        IF A .EQS. "C" THEN GOTO I1
$        IF A .EQS. "S" THEN GOTO EXIT
$   GOTO I0
$I1:
$!
$ INQUIRE D " YOU WANT TO RELEASE TO THE DISK SAVFILES - DKA3:? [Y/N]"
$ IF D .EQS. "N" THEN GOTO J1
$ IF D .EQS. "Y" THEN GOTO J2
$J1:
$ INQUIRE SAVFILS " WHICH DISK DO YOU WANT TO MAKE THE RELEASE ON?"
$   IF SAVFILS .EQS. "" THEN GOTO J1
$   IF F$LOCATE(":",SAVFILS) .EQ. F$LENGTH(SAVFILS)-1 THEN SAVFILS = F$EXT(0,F$LOC(":",SAVFILS),SAVFILS)
$   WS ""
$   WS                " DISK IS:           "+SAVFILS
$   WS ""
$I222:
$   INQUIRE B "      - IS THE DISK GIVEN CORRECT? [Y/N]"
$        IF B .EQS. "N" THEN GOTO J1
$        IF B .EQS. "Y" THEN GOTO J2
$J2:
$!
$ OPEN/READ/ERROR=OPENERROR10 INPUT10 GXPROJ:[COM]RELEASE-CONFIG.NAM
$LOOP10:
$   READ/END_OF_FILE=ENDLOOP10/ERROR=ENDLOOP10 INPUT10 DISK
$   IF DISK .EQS. "" THEN GOTO LOOP10
$ IF FRST .EQS."G" 
$       THEN 
$               DIRBACK = F$EXTRACT(0,5,DISK)
$       ELSE
$               DIRBACK = F$EXTRACT(0,4,DISK)
$ ENDIF 
$   FRST = F$EXTRACT(0,1,DISK)
$   IF FRST .EQS."!" THEN GOTO LOOP10
$ IF F$SEARCH("GXPROJ:[COM]''DISK'RELBCK.COM") .NES. "" THEN DELETE GXPROJ:[COM]''DISK'RELBCK.COM;*
$ IF F$SEARCH("GXPROJ:[LOG]''DISK'RELBCK.LOG") .NES. "" -
        THEN DELETE GXPROJ:[LOG]'DISK'RELBCK.LOG;*
$!
$   INQUIRE/NOPUNCT YESNO "DO YOU WANT TO BACKUP/RELEASE ''DISK' TO THE SAVE DISK ? [YES] "
$   IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO LOOP10
$   IF (F$EXTRACT(0,1,YESNO) .EQS. "E") THEN GOTO EXIT
$!   IF F$LOCATE(":",DISK) .EQ. F$LENGTH(DISK)-1 THEN -
$!    DISK = F$EXT(0,F$LOC(":",DISK),DISK)
$!
$ IF F$SEARCH("GXPROJ:[COM]''DISK'RLEBCK.NAM") .EQS. "" THEN GOTO OPENERROR11
$ IF F$FILE_ATTRIBUTES("GXPROJ:[COM]''DISK'RLEBCK.NAM","EOF") .EQS. "0" 
$  THEN 
$    SAY " "
$    SAY "THERE ARE NO FILES CONFIGURED TO RELEASE ..."
$    SAY " "
$!    GOTO EXIT
$ ENDIF
$!
$ OPEN/READ/ERROR=OPENERROR11 INPUT11 GXPROJ:[COM]'DISK'RLEBCK.NAM
$ OPEN/WRITE INPUT12 GXPROJ:[COM]'DISK'RLEBCK.COM
$ WRITE INPUT12 "$ SET VER"
$ WRITE INPUT12 "$ SET NOON"
$ WRITE INPUT12 "$ REPLY/USER=''USEN'/BELL ""RELEASE OF ''DISK' ON DISK HAS BEGUN... "" "
$LOOP11:
$   READ/END_OF_FILE=ENDLOOP11/ERROR=ENDLOOP11 INPUT11 FILE
$   CREATE GXPROJ:[LOG]'DISK'RLEBCK.LOG
$   WRITE INPUT12 "$ BS :== ''BS'"
$   WRITE INPUT12 "$ BS/LIST=GXPROJ:[LOG]''DISK'RLEBCK.WORK ''DIRBACK':''FILE' ''SAVFILS':[''DISK'RLEBCK]*.*"
$   WRITE INPUT12 "$ APPEND GXPROJ:[LOG]''DISK'RLEBCK.WORK; GXPROJ:[LOG]''DISK'RLEBCK.LOG;"
$   WRITE INPUT12 "$ WAIT 00:00:05"
$   WRITE INPUT12 "$ DEL/NOLOG GXPROJ:[LOG]''DISK'RLEBCK.WORK;*"
$   IF FILE .EQS. "" THEN GOTO LOOP11   
$ GOTO LOOP10
$!
$11:
$! SUBMIT THE BACKUP RELEASE AS DETACH PROCESS...
$!
$ OPEN/READ/ERROR=OPENERROR10 INPUT13 GXPROJ:[COM]RELEASE-CONFIG.NAM
$LOOP13:
$   READ/END_OF_FILE=ENDLOOP13/ERROR=ENDLOOP13 INPUT13 DISK
$   IF DISK .EQS. "" THEN GOTO LOOP13
$   FRST = F$EXTRACT(0,1,DISK)
$   IF FRST .EQS."!" THEN GOTO LOOP13
$   IF F$SEARCH("GXPROJ:[COM]''DISK'RLEBCK.COM") .NES. "" 
$     THEN
$       SAY " "
$       INQUIRE YESNO "ARE YOU SURE THAT YOU WANT TO MAKE THE RELEASE OF ''DISK' ON DISK? <YES>" 
$       IF (F$EXTRACT(0,1,YESNO) .EQS. "E") THEN GOTO EXIT
$       IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO LOOP13
$       IF F$SEARCH("''SAVFILS':[0,0]''DISK'RLEBCK.DIR") .EQS. "" 
$         THEN 
$           CRE/DIR 'SAVFILS':[''DISK'RLEBCK]
$         ELSE
$           SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$           DELETE 'SAVFILS':['DISK'RLEBCK]*.*;*
$           SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$         ENDIF
$       IF F$SEARCH("GXPROJ:[LOG]''DISK'-DETACH.LOG") .NES. "" -
        THEN DELETE/NOLOG GXPROJ:[LOG]'DISK'-DETACH.LOG;*
$       RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE /INPUT=GXPROJ:[COM]'DISK'RLEBCK.COM -
        /OUTPUT=GXPROJ:[LOG]'DISK'-DETACH.LOG /PROCESS_NAME='DISK'RLEBCK /WORKING_SET=500
$!
$! INQUIRE/NOPUNCT YESNO "DO YOU WANT TO PRINT BACKUP LOGS AUTOMATICALLY ? [Y OR N]" 
$! IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO LOOP13
$!
$! DELETE GXPROJ:[COM]'DISK'$LOOK.COM;*
$! OPEN/WRITE INPUT14 GXPROJ:[COM]'DISK'$LOOK.COM 
$! WRITE INPUT14 "$START:"
$! WRITE INPUT14 "$ WAIT 00:01"
$! WRITE INPUT14 "$    DEFINE SYS$OUTPUT GXPROJ:[COM]''DISK'$BACKUP.LOG"
$! WRITE INPUT14 "$    SH SYS"
$! WRITE INPUT14 "$    DEASSIGN SYS$OUTPUT"
$! WRITE INPUT14 "$    SEARCH GXPROJ:[COM]''DISK'$BACKUP.LOG ""''DISK'BACKUP"" "
$! WRITE INPUT14 "$    STATUS = $STATUS"
$! WRITE INPUT14 "$    IF STATUS .EQS. ""%X00000001"" "
$! WRITE INPUT14 "$      THEN"
$! WRITE INPUT14 "$         DELETE GXPROJ:[COM]''DISK'$BACKUP.LOG;"
$! WRITE INPUT14 "$         GOTO START"
$! WRITE INPUT14 "$      ELSE"
$! WRITE INPUT14 "$         PRINT GXPROJ:[COM]''DISK'-DETACH.LOG;"
$! WRITE INPUT14 "$    ENDIF"
$! WRITE INPUT14 "$ EXIT"
$! CLOSE INPUT14
$!
$! RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE /INPUT=GXPROJ:[COM]'DISK'$LOOK.COM -
$!      /OUTPUT=GXPROJ:[COM]'DISK'$LOOK.LOG /PROCESS_NAME='DISK'$LOOK -
$!      /WORKING_SET=500
$   ENDIF
$ GOTO LOOP13
$!
$OPENERROR10:
$   SAY " "
$   SAY "*****  UNABLE TO OPEN GXPROJ:[COM]RELEASE-CONFIG.NAM  *****"
$   SAY " "
$   GOTO MENU1
$!
$OPENERROR11:
$   SAY " "
$   SAY "*****  UNABLE TO OPEN GXPROJ:[COM]''DISK'RLEBCK.NAM  *****"
$   SAY " "
$   GOTO MENU1
$!
$ENDLOOP10:
$   CLOSE INPUT10
$   GOTO 11
$!
$ENDLOOP11:
$   CLOSE INPUT11
$   WRITE INPUT12 "$ DELETE GXPROJ:[COM]''DISK'RLEBCK.COM;*"
$   WRITE INPUT12 "$ REPLY/USER=''USEN'/BELL "" RELEASE BACKUP ''DISK' HAS FINISHED..."" "
$   CLOSE INPUT12
$   GOTO LOOP10
$!
$ENDLOOP13: 
$   CLOSE INPUT13
$   GOTO MENU1
$!
$!************************************************************************
$!
$!
$!
$!
$!
$!
$!
$!
$!
$!
$2:
$!
$MENU2:
$ SAY "THIS OPTION ALLOWS YOU TO BACKUP YOUR FILES TO TAPE."
$ SAY " "
$ SAY "                 1 - RELEASE FROM SAV DISK TO TAPE"
$ SAY "                 2 - RELEASE DIRECTLY TO TAPE"
$ SAY " "
$ SAY "                 3 - RETURN TO PREVIOUS MENU"
$ SAY "                 E - EXIT"
$
$ INQUIRE OPTION "PLEASE MAKE A SELECTION "
$ IF (OPTION .EQS. "E") THEN GOTO EXIT
$ IF ((OPTION .NES. 1) .AND. (OPTION .NES. 3) .AND. (OPTION .NES. 2))
$   THEN
$    GOSUB OUTOFRANGE
$    GOTO MENU2
$ ENDIF
$!
$ GOTO 2'OPTION'
$!
$!
$!
$!
$!
$21:
$!
$ SAY " "
$ SAY "ALL EXE/ESH ON YOUR SAV DISK WILL NOW BE PUT TO TAPE..."
$ GOSUB GETTAPEDRIVE
$!
$ INQUIRE D " YOU WANT TO RELEASE FROM THE DISK SAVFILES - DKA3:? [Y/N]"
$ IF D .EQS. "N" THEN GOTO J1A
$ IF D .EQS. "Y" THEN GOTO J2A
$J1A:
$ INQUIRE SAVFILS "FROM WHICH DISK DO YOU WANT TO TAKE THE RELEASE?"
$   IF SAVFILS .EQS. "" THEN GOTO J1A
$   IF F$LOCATE(":",SAVFILS) .EQ. F$LENGTH(SAVFILS)-1 THEN SAVFILS = F$EXT(0,F$LOC(":",SAVFILS),SAVFILS)
$   WS ""
$   WS                " DISK IS:           "+SAVFILS
$   WS ""
$   INQUIRE B "      - IS THE DISK GIVEN CORRECT? [Y/N]"
$        IF B .EQS. "N" THEN GOTO J1A
$        IF B .EQS. "Y" THEN GOTO J2A
$J2A:
$ OPEN/READ/ERROR=OPENERROR21 INPUT21 GXPROJ:[COM]RELEASE-CONFIG.NAM
$ OPEN/WRITE INPUT22 GXPROJ:[COM]RLEBCKDTAPE.COM
$ WRITE INPUT22 "$ SET NOON"
$ WRITE INPUT22 "$ SET VER"
$ WRITE INPUT22 "$ BS2:==''BS2'"
$ WRITE INPUT22 "$ INIT/MEDIA_FORMAT=COMPACTION ''TAPEDRIVE' SAVDSK"
$ WRITE INPUT22 "$ MOUNT/FOR/CACHE=TAPE ''TAPEDRIVE'"
$ WRITE INPUT22 "$ REPLY/USER=''USEN'/BELL ""RELEASE ON TAPE HAS BEGUN..."" "
$ LOOP21:
$   READ/END_OF_FILE=ENDLOOP21/ERROR=ENDLOOP21 INPUT21 DISK
$   IF F$SEARCH("''SAVFILS':[0,0]''DISK'RLEBCK.DIR") .NES. ""
$     THEN
$      WRITE INPUT22 "$ BS2 ''SAVFILS':[''DISK'RLEBCK]*.*;* ''TAPEDRIVE'''DISK'SAVE.BCK/SAV"
$     ELSE      
$      SAY "*****  UNABLE TO OPEN ''SAVFILS':[0,0]''DISK'RLEBCK.DIR  *****"
$      GOTO EXIT
$   ENDIF
$!
$ENDLOOP21:
$   WRITE INPUT22 "$ DISMOUNT ''TAPEDRIVE'"
$   WRITE INPUT22 "$ DELETE GXPROJ:[COM]RLEBCKDTAPE.COM;*"
$   WRITE INPUT22 "$ REPLY/USER=''USEN'/BELL ""RELEASE ON TAPE HAS FINISHED..."" "
$   IF F$SEARCH("GXPROJ:[LOG]RLEDBCKDTAPE.LOG") .NES. "" THEN DELETE GXPROJ:[LOG]RLEDBCKDTAPE.LOG;*
$   CLOSE INPUT21
$   CLOSE INPUT22
$!
$ SAY " "
$ INQUIRE YESNO "ARE YOU SURE THAT YOU WANT TO RELEASE THE SAV AREA TO ''TAPEDRIVE' <YES> " 
$ IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO MENU2
$ IF (YESNO .EQS. "EXIT") THEN GOTO MENU1
$!
$ DEFINE SYS$ERROR GXLOG:TEMP.TXT;
$ DEFINE SYS$OUTPUT GXLOG:TEMP2.TXT;
$ STOP RLEBCKDTAPE
$ DEASSIGN SYS$ERROR
$ DEASSIGN SYS$OUTPUT
$ DEL GXLOG:TEMP.TXT;*
$ DEL GXLOG:TEMP2.TXT;*
$ RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
      /INPUT=GXPROJ:[COM]RLEBCKDTAPE.COM -
      /OUTPUT=GXPROJ:[LOG]RLEBCKDTAPE.LOG -
      /PROCESS_NAME=RLEBCKDTAPE -
      /WORKING_SET=500
$!
$! INQUIRE/NOPUNCT YESNO "DO YOU WANT TO PRINT BACKUP LOGS AUTOMATICALLY ? [Y OR N]"
$! IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO MENU2
$!
$! DELETE GXPROJ:[COM]SAV_TO_TAP$LOOK.LOG;*
$! RUNZZ /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
$!      /INPUT=GXPROJ:[COM]SAV_TO_TAP$LOOK.COM /OUTPUT=GXPROJ:[COM]SAV_TO_TAP$LOOK.LOG -
$!      /PROCESS_NAME=SAVTOTAP$LOOK -
$!      /WORKING_SET=500
$!
$   GOTO MENU2
$!
$ OPENERROR21:
$   SAY " "
$   SAY "*****  UNABLE TO OPEN GXPROJ:[COM]RELEASE-CONFIG.NAM  *****"
$   SAY " "
$   GOTO MENU2
$!
$!
$!
$!
$!
$22:
$!
$ SAY " "
$ SAY "THIS OPTION WILL ALLOW YOU TO MAKE YOUR RELEASE DIRECTLY TO TAPE."
$ SAY "TO EXIT THIS OPTION ANSWER, TYPE EXIT AFTER THE NEXT PROMPT"
$!
$I220:
$   INQUIRE A "- TO CONTINUE PUT C, TO STOP PUT S"
$        IF A .EQS. "C" THEN GOTO I221
$        IF A .EQS. "S" THEN GOTO EXIT
$   GOTO I220
$!
$I221:
$ INQUIRE REL_NO  " ENTER THE RELEASE NUMBER - NO MORE THAN 3 CHAR"
$ IF REL_NO .EQS. "" THEN GOTO I221
$ IF (F$EXTRACT(0,1,REL_NO) .EQS. "E") THEN GOTO EXIT
$ WS ""
$ WS                " RELEASE NUMBER IS:           "+REL_NO
$ WS ""
$I2211:
$ INQUIRE B "      - IS THE RELEASE NUMBER ENTERED CORRECT? [Y/N]"
$ IF (F$EXTRACT(0,1,B) .EQS. "E") THEN GOTO EXIT
$ IF (F$EXTRACT(0,1,B) .EQS. "N") THEN GOTO I221 
$ IF (F$EXTRACT(0,1,B) .EQS. "Y") THEN GOTO L2
$ GOTO I2211
$L2:
$ GOSUB GETTAPEDRIVE
$!
$LOOP22:
$ OPEN/WRITE WRITEFILE GXPROJ:[COM]RLEBCKTAPE.COM
$ WRITE WRITEFILE "$ SET VER"
$ WRITE WRITEFILE "$ SET NOON"
$ WRITE WRITEFILE "$ BS2:==''BS2'"
$ WRITE WRITEFILE "$ DEFINE SYS$ERROR GXLOG:TEMP5.TXT;"
$ WRITE WRITEFILE "$ DEFINE SYS$OUTPUT GXLOG:TEMP6.TXT;"
$ WRITE WRITEFILE "$ DISMOUNT/NOUNLOAD ''TAPEDRIVE'"
$ WRITE WRITEFILE "$ DEASSIGN SYS$ERROR"
$ WRITE WRITEFILE "$ DEASSIGN SYS$OUTPUT"
$ WRITE WRITEFILE "$ DEL GXLOG:TEMP5.TXT;*"
$ WRITE WRITEFILE "$ DEL GXLOG:TEMP6.TXT;*"
$ WRITE WRITEFILE "$ INIT/OVER=EXP ''TAPEDRIVE' REL''REL_NO'"
$ WRITE WRITEFILE "$ MOUNT/FOR/CACHE=TAPE ''TAPEDRIVE'"
$ WRITE WRITEFILE "$ REPLY/USER=''USEN'/BELL ""RELEASE TO TAPE HAS BEGUN..."" "
$!
$LOOP22A:
$ SAY " "
$ TYPE GXPROJ:[COM]RELEASE-CONFIG.NAM
$ SAY " "
$!
$!
$!
$ INQUIRE DISK "WHICH DISK DO YOU WISH TO BACKUP "
$ IF (F$EXTRACT(0,1,DISK) .EQS. "E") THEN GOTO EXIT
$ IF F$LOCATE(":",DISK) .EQ. F$LENGTH(DISK)-1 THEN DISK = F$EXT(0,F$LOC(":",DISK),DISK)
$ FRST = F$EXTRACT(0,1,DISK)
$ IF FRST .EQS."G" 
$       THEN 
$               DIRBACK = F$EXTRACT(0,5,DISK)
$       ELSE
$               DIRBACK = F$EXTRACT(0,4,DISK)
$ ENDIF 
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]RELEASE-CONFIG.NAM 'DISK'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .NES. "%X00000001"
$   THEN 
$     SAY " "
$     SAY "     THE DISK YOU SELECTED"
$     GOSUB DOESNTEXIST 
$    CLOSE WRITEFILE
$     GOTO ANOTHER2
$ ENDIF
$!
$!
$!
$ 'DISK'SEL == ""
$ OPEN/READ/ERROR=OPENERROR22 INPUT22 GXPROJ:[COM]'DISK'RLEBCK.NAM
$ LOOP221:
$   READ/END_OF_FILE=ENDLOOP221 INPUT22 FILE
$   IF FILE .EQS. "" THEN GOTO LOOP221
$   XNAM = F$EDIT(FILE,"COLLAPSE,UPCASE,UNCOMMENT")
$   'DISK'Sel == 'DISK'Sel + XNAM + ","
$ GOTO LOOP221
$!
$!
$!
$ENDLOOP221:
$ CLOSE INPUT22
$ 'DISK'SEL == F$EXTRACT(0,(F$LENGTH('DISK'SEL)-1),'DISK'SEL) 
$ SEL == 'DISK'SEL
$ WRITE WRITEFILE "$ BS2 ''DIRBACK':''SEL' ''TAPEDRIVE'''DISK'SAVE.BCK/SAV" 
$ SAY " "
$ANOTHER2:
$!
$ INQUIRE ANS "DO YOU WANT TO RELEASE OTHER FILES <YES>"
$ IF (F$EXTRACT(0,1,ANS) .EQS. "E") THEN GOTO MENU2
$ IF (F$EXTRACT(0,1,ANS) .EQS. "Y") THEN GOTO LOOP22A 
$ IF (F$EXTRACT(0,1,ANS) .EQS. "N") THEN GOTO CONT22
$ GOTO ANOTHER2
$!
$!
$!
$CONT22:
$ WRITE WRITEFILE "$ DELETE GXPROJ:[COM]RLEBCKTAPE.COM;*"
$ WRITE WRITEFILE "$ dismount ''TAPEDRIVE'"
$ WRITE WRITEFILE "$ REPLY/USER=''USEN'/BELL ""RELEASE TO TAPE HAS FINISHED..."" "
$ WRITE WRITEFILE "$ EXIT"
$ CLOSE WRITEFILE
$ SAY " "
$!
$CONT2222:
$ INQUIRE YESNO "ARE YOU SURE THAT YOU WANT TO BACKUP DIRECTLY TO ''TAPEDRIVE' <YES>"
$ IF F$EXTRACT(0,1,YESNO) .EQS. "E" THEN GOTO EXIT
$ IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO MENU2
$ IF F$EXTRACT(0,1,YESNO) .EQS. "Y" THEN GOTO CONT222
$ GOTO CONT2222
$CONT222:
$ IF F$SEARCH("GXPROJ:[LOG]RLEBCKTAPE.LOG") .NES. "" THEN DELETE GXPROJ:[LOG]RLEBCKTAPE.LOG;*
$ DEFINE SYS$ERROR GXLOG:TEMP3.TXT;
$ DEFINE SYS$OUTPUT GXLOG:TEMP4.TXT;
$ STOP RLEBCKTAPE
$ DEASSIGN SYS$ERROR
$ DEASSIGN SYS$OUTPUT
$ DEL GXLOG:TEMP3.TXT;*
$ DEL GXLOG:TEMP4.TXT;*
$ RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
                /INPUT=GXPROJ:[COM]RLEBCKTAPE.COM -
                /OUTPUT=GXPROJ:[LOG]RLEBCKTAPE.LOG -
                /PROCESS_NAME=RLEBCKTAPE -
                /WORKING_SET=500 -
                /PRIV=ALL
$!
$! INQUIRE/NOPUNCT YESNO "DO YOU WANT TO PRINT BACKUP LOGS AUTOMATICALLY ? [Y OR N]"
$! IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO MENU2
$!
$!   DELETE GXPROJ:[COM]DISKBACKUP$LOOK.LOG;*
$!   RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
$!        /INPUT=GXPROJ:[COM]DISKBACKUP$LOOK.COM -
$!        /OUTPUT=GXPROJ:[COM]DISKBACKUP$LOOK.LOG -
$!        /PROCESS_NAME=DSKBCKUP$LOOK -
$!        /WORKING_SET=500 -
$!        /PRIV=ALL
$ GOTO MENU2
$!
$OPENERROR22:
$   SAY " "
$   SAY "*****  UNABLE TO OPEN GXPROJ:[COM]'DISK'RLEBCK.NAM  *****"
$   SAY " "
$ GOTO 22
$!
$!221:
$! CLOSE WRITEFILE
$! GOTO MENU2 
$!
$!
$!
$!
$!
$23:
$ GOTO MENU1 
$!
$!***********************************************************************
$!
$!
$!
$!
$!
$!
$!
$!
$!
$!
$3:
$!
$ SAY "THIS OPTION WILL MAKE THE RELEASE FROM TAPE"
$ SAY "MAKE SURE YOU DID AN EXECUTABLES BACKUP BEFORE STARTING"
$ SAY "MAKE SURE YOU DID REMCOM BEFORE STARTING"
$ GOSUB GETTAPEDRIVE 
$!
$ OPEN/WRITE INPUT3 GXPROJ:[COM]EXETAPTODSK.COM
$ WRITE INPUT3 "$ SET VER"
$ WRITE INPUT3 "$ SET NOON"
$ WRITE INPUT3 "$ BS3:==''BS3'"
$ WRITE INPUT3 "$ DEFINE SYS$ERROR GXLOG:TEMP7.TXT;"
$ WRITE INPUT3 "$ DEFINE SYS$OUTPUT GXLOG:TEMP8.TXT;"
$ WRITE INPUT3 "$ DISMOUNT/NOUNLOAD ''TAPEDRIVE'"
$ WRITE INPUT3 "$ DEASSIGN SYS$ERROR"
$ WRITE INPUT3 "$ DEASSIGN SYS$OUTPUT"
$ WRITE INPUT3 "$ DEL GXLOG:TEMP7.TXT;*"
$ WRITE INPUT3 "$ DEL GXLOG:TEMP8.TXT;*"
$ WRITE INPUT3 "$ MOUNT/FOR/CACHE=TAPE ''TAPEDRIVE'"
$ WRITE INPUT3 "$ REPLY/USER=BACKUP/BELL ""RELEASE FROM TAPE HAS BEGUN..."" "
$!
$!
$!
$LOOP3:
$ SAY " "
$ TYPE GXPROJ:[COM]RELEASE-CONFIG.NAM
$ SAY " "
$
$ INQUIRE DISK "WHICH FILES DO YOU WANT TO RELEASE "
$ IF F$EXTRACT(0,1,DISK) .EQS. "E" THEN GOTO EXIT
$ IF F$LOCATE(":",DISK) .EQ. F$LENGTH(DISK)-1 THEN -
    DISK = F$EXT(0,F$LOC(":",DISK),DISK)
$ FRST = F$EXTRACT(0,1,DISK)
$ IF FRST .EQS."G" 
$       THEN 
$               DIRBACK = F$EXTRACT(0,5,DISK)
$       ELSE
$               DIRBACK = F$EXTRACT(0,4,DISK)
$ ENDIF 
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]RELEASE-CONFIG.NAM 'DISK'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .NES. "%X00000001"
$   THEN
$     SAY " "
$     SAY "     THE DISK YOU SELECTED"
$     GOSUB DOESNTEXIST
$!    CLOSE INPUT3
$     GOTO ANOTHER3
$ ENDIF
$!
$!
$!
$!
$ 'DISK'SEL == ""
$ OPEN/READ/ERROR=OPENERROR33 INPUT33 GXPROJ:[COM]'DISK'RLEBCK.NAM
$ LOOP331:
$   READ/END_OF_FILE=ENDLOOP331 INPUT33 FILE
$   IF FILE .EQS. "" THEN GOTO LOOP331
$   XNAM = F$EDIT(FILE,"COLLAPSE,UPCASE,UNCOMMENT")
$   'DISK'Sel == 'DISK'Sel + XNAM + ","
$ GOTO LOOP331
$!
$!
$!
$ENDLOOP331:
$ CLOSE INPUT33
$ 'DISK'SEL == F$EXTRACT(0,(F$LENGTH('DISK'SEL)-1),'DISK'SEL) 
$ SEL == 'DISK'SEL
$ WRITE INPUT3 "$ DEL ''DIRBACK':''SEL'"
$ WRITE INPUT3 "$ BS3 ''TAPEDRIVE'''DISK'SAVE.BCK/SAV ''DIRBACK':*.*"
$ANOTHER3:
$!
$CONT33:
$ INQUIRE ANS "WOULD YOU ALSO LIKE TO RESTORE ANOTHER DISK <YES> "
$ IF (F$EXTRACT(0,1,ANS) .EQS. "E") THEN GOTO EXIT
$ IF (F$EXTRACT(0,1,ANS) .EQS. "Y") THEN GOTO LOOP3
$ IF (F$EXTRACT(0,1,ANS) .EQS. "N") THEN GOTO CONT3
$ GOTO CONT33
$!
$!
$!
$CONT3:
$ WRITE INPUT3 "$ dismount ''TAPEDRIVE'"
$ WRITE INPUT3 "$ DELETE/NOLOG GXPROJ:[COM]EXETAPTODSK.COM;*" 
$ WRITE INPUT3 "$ REPLY/USER=BACKUP/BELL ""RELEASE FROM TAPE HAS FINISHED..."" "
$ WRITE INPUT3 "$ EXIT"
$ CLOSE INPUT3
$ SAY " "
$!
$CONT3333:
$ INQUIRE YESNO "ARE YOU SURE THAT YOU WANT TO RESTORE FROM ''TAPEDRIVE' TO DISK <YES> "
$ IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO MENU1
$ IF F$EXTRACT(0,1,YESNO) .EQS. "E" THEN GOTO EXIT
$ IF F$EXTRACT(0,1,YESNO) .EQS. "Y" THEN GOTO CONT333
$ GOTO CONT3333
$CONT333:
$ IF F$SEARCH("GXPROJ:[LOG]EXETAPTODSK.LOG") .NES. "" THEN DELETE GXPROJ:[LOG]EXETAPTODSK.LOG;*
$ DEFINE SYS$ERROR GXLOG:TEMP3.TXT;
$ DEFINE SYS$OUTPUT GXLOG:TEMP4.TXT;
$ STOP EXETAPTODSK
$ DEASSIGN SYS$ERROR
$ DEASSIGN SYS$OUTPUT
$ DEL GXLOG:TEMP3.TXT;*
$ DEL GXLOG:TEMP4.TXT;*
$ RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
      /INPUT=GXPROJ:[COM]EXETAPTODSK.COM -
      /OUTPUT=GXPROJ:[LOG]EXETAPTODSK.LOG -
      /PROCESS_NAME=EXETAPTODSK -
      /WORKING_SET=500
$!
$! INQUIRE/NOPUNCT YESNO "DO YOU WANT TO PRINT BACKUP LOGS AUTOMATICALLY ? [Y OR N]"
$! IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO MENU1
$!
$! GOTO MENU1
$! DELETE GXPROJ:[COM]TAPTODSK$LOOK.LOG;*
$! RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
$!      /INPUT=GXPROJ:[COM]TAPTODSK$LOOK.COM -
$!      /OUTPUT=GXPROJ:[COM]TAPTODSK$LOOK.LOG -
$!      /PROCESS_NAME=TAPTODISK$LOK -
$!      /WORKING_SET=500
$!
$GOTO MENU1
$!
$!***************************************************************************
$!
$!
$!
$!
$!
$!
$!
$!
$!
$!
$4:
$!
$ SAY "THIS OPTION WILL MAKE THE RELEASE FROM THE SAV DISK."
$ SAY "MAKE SURE YOU DID AN EXECUTABLES BACKUP BEFORE STARTING"
$ SAY "MAKE SURE YOU DID REMCOM BEFORE STARTING"
$ SAY "       (TO EXIT BACK TO THE MAIN MENU TYPE EXIT)"
$ SAY " "
$!
$ INQUIRE D " YOU WANT TO SAVE FROM THE DISK SAVFILES - DKA3:? [Y/N]"
$ IF D .EQS. "N" THEN GOTO J1B
$ IF D .EQS. "Y" THEN GOTO J2B
$J1B:
$ INQUIRE SAVFILS "FROM WHICH DISK DO YOU WANT TO BACKUP?"
$   IF SAVFILS .EQS. "" THEN GOTO J1B
$   IF F$LOCATE(":",SAVFILS) .EQ. F$LENGTH(SAVFILS)-1 THEN SAVFILS = F$EXT(0,F$LOC(":",SAVFILS),SAVFILS)
$   WS ""
$   WS                " DISK IS:           "+SAVFILS
$   WS ""
$   INQUIRE B "      - IS THE DISK GIVEN CORRECT? [Y/N]"
$        IF B .EQS. "N" THEN GOTO J1B
$        IF B .EQS. "Y" THEN GOTO J2B

$J2B:
$!
$ OPEN/WRITE INPUT4 GXPROJ:[COM]'DISK'EXEDSKTODSK.COM 
$ WRITE INPUT4 "$ SET VER"
$ WRITE INPUT4 "$ SET NOON"
$ WRITE INPUT4 "$ BS3:==''BS3'"
$ WRITE INPUT4 "$ REPLY/USER=BACKUP/BELL ""RELEASE FROM DISK TO DISK HAS BEGUN"" "
$LOOP4:
$ SAY " "
$ TYPE GXPROJ:[COM]RELEASE-CONFIG.NAM
$ INQUIRE DISK "WHICH DISK DO YOU WANT TO RELEASE "
$ SAY "       (TO EXIT BACK TO THE MAIN MENU TYPE EXIT)"
$ SAY " "
$ IF F$EXTRACT(0,1,DISK) .EQS. "E" THEN GOTO EXIT
$ IF F$LOCATE(":",DISK) .EQ. F$LENGTH(DISK)-1 THEN -
    DISK = F$EXT(0,F$LOC(":",DISK),DISK)
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]RELEASE-CONFIG.NAM 'DISK'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .NES. "%X00000001"
$   THEN
$     SAY " "
$     SAY "     THE DISK YOU SELECTED"
$     GOSUB DOESNTEXIST
$     GOTO MENU1
$ ENDIF 
$!
$ 'DISK'SEL == ""
$ OPEN/READ/ERROR=OPENERROR44 INPUT44 GXPROJ:[COM]'DISK'RLEBCK.NAM
$ LOOP441:
$   READ/END_OF_FILE=ENDLOOP441 INPUT44 FILE
$   IF FILE .EQS. "" THEN GOTO LOOP441
$   XNAM = F$EDIT(FILE,"COLLAPSE,UPCASE,UNCOMMENT")
$   'DISK'Sel == 'DISK'Sel + XNAM + ","
$ GOTO LOOP441
$!
$ENDLOOP441:
$ CLOSE INPUT44
$ 'DISK'SEL == F$EXTRACT(0,(F$LENGTH('DISK'SEL)-1),'DISK'SEL) 
$ SEL == 'DISK'SEL
$ RESTDIR = F$EXTRACT(0,4,DISK)
$ WRITE INPUT4 "$ DELETE ''RESTDIR':''SEL'"
$ WRITE INPUT4 "$ BS3 ''SAVFILS':[''DISK'RLEBCK]*.* ''RESTDIR':''SEL'"
$ANOTHER4:
$ INQUIRE ANS "WOULD YOU ALSO LIKE TO RELEASE OTHER FILES <YES> "
$ IF (ANS .EQS. "EXIT") THEN GOTO MENU1
$ IF (ANS .EQS. "") .OR. (ANS .EQS. "YES") .OR. (ANS .EQS. "Y") THEN GOTO LOOP4
$ WRITE INPUT4 "$ DELETE GXPROJ:[COM]''DISK'RESTORE.COM;*"
$ WRITE INPUT4 "$ REPLY/USER=BACKUP/BELL ""''DISK'RESTORE.COM HAS FINISHED..."" "
$ WRITE INPUT4 "$ EXIT"
$ CLOSE INPUT4
$!
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DELETE GXPROJ:[COM]'DISK'RESTORE.LOG;*
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$!
$ SAY " "
$ INQUIRE YESNO "ARE YOU SURE THAT YOU WANT TO MAKE THE RELEASE FROM YOUR SAVDISK <YES> "
$ IF F$EXTRACT(0,1,YESNO) .EQS. "N" THEN GOTO 4
$!
$       RUN /DETACHED  SYS$SYSTEM:LOGINOUT.EXE -
        /INPUT=GXPROJ:[COM]EXEDSKTODSK.COM -
        /OUTPUT=GXPROJ:[LOG]EXEDSKTODSK.LOG -
        /PROCESS_NAME=EXEDSKTODSK -
        /WORKING_SET=500 
$!
$ GOTO MENU1
$!
$!************************************************************************
$!
$!
$!
$!
$!
$!
$!
$!
$!
$!
$5:
$!
$ SAY " "
$ SAY " THIS OPTION WILL ALLOW YOU TO EDIT THE BACKUP CONFIGURATION FILES"
$ SAY " "
$!
$MENU5:
$ SAY " BELOW ARE YOUR OPTIONS:"
$ SAY " "
$ SAY "                 1 - ADD A DISK TO THE BACKUP LIST"
$ SAY "                 2 - DELETE A DISK FROM THE BACKUP LIST"
$ SAY "                 3 - ADD A FILE TO THE BACKUP LIST"              
$ SAY "                 4 - DELETE A FILE FROM THE BACKUP LIST"
$ SAY "                 5 - VIEW CONFIGURATION FILES "
$ SAY " "
$ SAY "                 6 - RETURN TO MAIN MENU"
$ SAY " "
$ INQUIRE OPTION "PLEASE SELECT AN OPTION " 
$ IF OPTION .EQS. ""
$   THEN
$    GOSUB NOOPTION
$    GOTO MENU5 
$ ENDIF
$!
$ IF (OPTION .LT. 1) .OR. (OPTION .GT. 6)
$   THEN 
$    GOSUB OUTOFRANGE
$    GOTO MENU5
$ ENDIF 
$!
$ GOTO 5'OPTION'
$!
$51:
$ IF F$SEARCH("GXPROJ:[COM]DISK-CONFIG.NAM") .EQS. "" 
$   THEN 
$     SAY " "
$     SAY "GXPROJ:[COM]DISK-CONFIG.NAM DOES NOT EXIST... CREATING A NEW ONE..."
$     SAY " "
$     CREATE GXPROJ:[COM]DISK-CONFIG.NAM
$ ENDIF
$ SAY " "
$ SAY " THIS OPTION ALLOWS YOU TO ADD A DISK TO THE BACKUP LIST"
$ SAY " BELOW ARE THE DISKS THAT ARE CURRENTLY IN THE BACKUP LIST:"
$ SAY " " 
$ TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$ SAY " "
$ SAY "WHAT IS THE NAME OF THE DISK THAT YOU WISH TO ADD "
$ INQUIRE DISK_NAME "(I.E. SYSX, VALX, WORK ) "
$ IF DISK_NAME .EQS. "" THEN GOTO MENU5
$ IF F$LOCATE(":",DISK_NAME) .EQ. F$LENGTH(DISK_NAME)-1 THEN -
    DISK_NAME = F$EXT(0,F$LOC(":",DISK_NAME),DISK_NAME)
$ IF .NOT. F$GETDVI("''DISK_NAME'","EXISTS")
$   THEN
$     GOSUB INVALIDDISK
$     GOTO MENU5
$ ENDIF
$!
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]DISK-CONFIG.NAM 'DISK_NAME'  
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .NES. "%X00000001" 
$   THEN 
$     OPEN/APPEND DISK$FILE GXPROJ:[COM]DISK-CONFIG.NAM
$     WRITE DISK$FILE "''DISK_NAME'"
$     CLOSE DISK$FILE
$     SAY " "
$     SAY "''DISK_NAME' HAS BEEN ADDED TO THE CONFIGURATION FILE..."
$     SAY " "
$     TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$     SAY " "
$     IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'BACKUP.NAM") .NES. "" THEN GOTO MENU5
$     IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'BACKUP.TMP") .NES. "" THEN COPY GXPROJ:[COM]'DISK_NAME'BACKUP.TMP 'DISK_NAME'BACKUP.NAM 
$     IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'BACKUP.NAM") .EQS. "" THEN CREATE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM 
$   ELSE 
$     GOSUB ALREADYEXISTS
$ ENDIF
$!
$ GOTO MENU5
$!
$52:
$ SAY " "
$ SAY " THIS OPTION WILL DELETE A DISK FROM YOUR BACKUP LIST "
$ SAY " BELOW ARE THE DISKS THAT ARE CURRENTLY IN THE LIST: 
$ SAY " "
$ TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$ SAY " "
$ INQUIRE DISK_DELETE_NAME "WHICH DISK DO YOU WANT TO DELETE FROM THE LIST "
$ IF F$LOCATE(":",DISK_DELETE_NAME) .EQ. F$LENGTH(DISK_DELETE_NAME)-1 THEN -
    DISK_DELETE_NAME = F$EXT(0,F$LOC(":",DISK_DELETE_NAME),DISK_DELETE_NAME)
$!
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]DISK-CONFIG.NAM 'DISK_DELETE_NAME'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .EQS. "%X00000001"
$   THEN
$     OPEN/READ READ_FILE GXPROJ:[COM]DISK-CONFIG.NAM
$     OPEN/WRITE WRITE_FILE GXPROJ:[COM]DISK-CONFIG.NEW
$     LOOP52:
$       READ/END_OF_FILE=ENDLOOP/ERROR=ENDLOOP READ_FILE READ_FILE_LINE
$       IF READ_FILE_LINE .EQS. "" THEN GOTO LOOP52
$       IF F$EXTRACT(0,F$LENGTH("''DISK_DELETE_NAME'"),READ_FILE_LINE) .EQS. "''DISK_DELETE_NAME'" THEN GOTO LOOP52
$       WRITE WRITE_FILE "''READ_FILE_LINE'"
$       GOTO LOOP52
$     ENDLOOP:
$       CLOSE READ_FILE
$       CLOSE WRITE_FILE
$       DELETE GXPROJ:[COM]DISK-CONFIG.NAM;*
$       RENAME GXPROJ:[COM]DISK-CONFIG.NEW GXPROJ:[COM]DISK-CONFIG.NAM
$       SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$       DELETE/NOLOG GXPROJ:[COM]'DISK_DELETE_NAME'BACKUP.NAM;*
$       SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$       SAY " "
$       SAY "''DISK_DELETE_NAME' HAS BEEN REMOVED FROM THE BACKUP LIST..."
$       SAY " "
$       TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$       SAY " "
$!
$   ELSE
$       GOSUB INVALIDDISK
$ ENDIF
$ GOTO MENU5
$ 
$!
$53:
$!
$ SAY " THIS OPTION ALLOWS YOU TO ADD A FILE TO THE BACKUP LIST"
$ SAY " BELOW ARE THE DISKS THAT ARE CURRENTLY IN THE BACKUP LIST:"
$ SAY " "
$ TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$ SAY " "
$ INQUIRE DISK_NAME "WHICH DISK BACKUP FILE DO YOU WISH TO CHANGE "
$   IF F$LOCATE(":",DISK_NAME) .EQ. F$LENGTH(DISK_NAME)-1 THEN -
    DISK_NAME = F$EXT(0,F$LOC(":",DISK_NAME),DISK_NAME)
$!
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]DISK-CONFIG.NAM 'DISK_NAME'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .NES. "%X00000001"
$   THEN
$     GOSUB INVALIDDISK
$     GOTO MENU5
$ ENDIF
$!
$ IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'BACKUP.NAM") .EQS. "" 
$   THEN
$     GOSUB CONFIGNOTFOUND
$     GOTO MENU5
$ ENDIF
$!
$ SAY " "
$ TYPE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$ SAY " "
$ INQUIRE FILE_NAME "WHAT IS THE NAME OF FILE THAT YOU WISH TO ADD "
$ IF FILE_NAME .EQS. "" THEN GOTO MENU5
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]'DISK_NAME'BACKUP.NAM 'FILE_NAME'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ SAY " "
$ IF STATUS .NES. "%X00000001"
$   THEN
$     OPEN/APPEND DISK$FILE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$     WRITE DISK$FILE "''FILE_NAME'"
$     CLOSE DISK$FILE
$     SAY " "
$     SAY "''FILE_NAME' HAS BEEN ADDED TO THE CONFIGURATION FILE FOR ''DISK_NAME'"
$     SAY " "
$     TYPE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$     SAY " "
$   ELSE
$     GOSUB ALREADYEXISTS
$ ENDIF
$ GOTO MENU5
$! 
$54:
$ SAY " THIS OPTION ALLOWS YOU TO DELETE A FILE FROM THE BACKUP LIST"
$ SAY " BELOW ARE THE DISKS THAT ARE CURRENTLY IN THE BACKUP LIST:"
$ SAY " "
$ TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$ SAY " "
$ INQUIRE DISK_NAME "WHICH DISK BACKUP FILE DO YOU WISH TO CHANGE "
$   IF F$LOCATE(":",DISK_NAME) .EQ. F$LENGTH(DISK_NAME)-1 THEN -
    DISK_NAME = F$EXT(0,F$LOC(":",DISK_NAME),DISK_NAME)
$!
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]DISK-CONFIG.NAM 'DISK_NAME'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ IF STATUS .NES. "%X00000001"
$   THEN
$     GOSUB INVALIDDISK
$     GOTO MENU5
$ ENDIF
$!
$ IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'BACKUP.NAM") .EQS. ""
$   THEN
$     GOSUB CONFIGNOTFOUND
$     GOTO MENU5
$ ENDIF
$!
$ SAY " "
$ TYPE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$ SAY " "
$ INQUIRE FILE_DELETE_NAME "WHAT IS THE NAME OF FILE THAT YOU WISH TO DELETE "
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ DEFINE SYS$OUTPUT NLA0:
$ SEARCH GXPROJ:[COM]'DISK_NAME'BACKUP.NAM 'FILE_DELETE_NAME'
$ STATUS = $STATUS
$ DEASSIGN SYS$OUTPUT
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$ SAY " "
$ IF STATUS .NES. "%X00000001"
$   THEN
$     GOSUB DOESNTEXIST
$   ELSE
$     OPEN/READ READ_FILE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$     OPEN/WRITE WRITE_FILE GXPROJ:[COM]'DISK_NAME'BACKUP.NEW
$       LOOP54:
$         READ/END_OF_FILE=ENDLOOP/ERROR=ENDLOOP READ_FILE READ_FILE_LINE
$         IF READ_FILE_LINE .EQS. "" THEN GOTO LOOP54
$         IF F$EXTRACT(0,25,READ_FILE_LINE) .EQS. "''FILE_DELETE_NAME'" THEN GOTO LOOP54 
$         WRITE WRITE_FILE "''READ_FILE_LINE'"
$         GOTO LOOP54
$       ENDLOOP:
$       CLOSE READ_FILE
$       CLOSE WRITE_FILE
$       DELETE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM;*
$       RENAME GXPROJ:[COM]'DISK_NAME'BACKUP.NEW GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$       TYPE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$       SAY " " 
$ ENDIF
$ GOTO MENU5
$!
$55:
$ SAY "  "
$ SAY "THIS OPTION WILL ALLOW YOU TO VIEW WHAT IS IN EACH CONFIGURATION FILE"
$ SAY "WITH OUT CHANGING THEM"
$ SAY " "
$ SAY "           1 - VIEW DISKS IN BACKUP LIST"
$ SAY "           2 - VIEW FILES IN BACKUP LIST FOR A PARTICULAR DISK"
$ SAY " "
$ SAY "           3 - RETURN TO PREVIOUS MENU"
$ SAY " "
$ INQUIRE OPTION "PLEASE SELECT AN OPTION "
$ IF (OPTION .LT. 1) .OR. (OPTION .GT. 3) 
$   THEN 
$    GOSUB OUTOFRANGE
$    GOTO 55
$ ENDIF
$ GOTO 55'OPTION'
$!
$551:
$ SAY " "
$ SAY "BELOW ARE THE DISKS THAT ARE ON THE BACKUP LIST"
$ SAY " "
$ TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$ SAY " " 
$ GOTO 55
$!
$552:
$ SAY " "
$ TYPE GXPROJ:[COM]DISK-CONFIG.NAM
$ SAY " "
$ INQUIRE DISK_NAME "WHICH DISK BACKUP LIST DO YOU WISH TO VIEW "
$ IF F$FILE_ATTRIBUTES("GXPROJ:[COM]''DISK_NAME'BACKUP.NAM","EOF") .EQS. "0"
$  THEN 
$   SAY " "
$   SAY " THERE ARE NO FILES CONFIGURED FOR THIS DISK "
$   SAY " "
$   GOTO 55
$  ELSE
$   SAY " "
$   SAY "BELOW ARE THE FILES ON ''DISK_NAME' THAT ARE BACKED UP "
$   SAY " "
$   TYPE GXPROJ:[COM]'DISK_NAME'BACKUP.NAM
$   SAY " "
$   GOTO 55
$ ENDIF
$!
$553:
$ GOTO MENU5
$!
$56:
$ GOTO MENU1
$!
$!*************************************************************************
$!
$!
$!
$!
$!
$!
$!
$!
$!
$6:
$!
$MENU6:
$ SAY " "
$ SAY "THIS OPTION ALLOWS YOU TO VERIFY THE STATUS OF THE BACKUP EXECUTION."
$ SAY " "
$ SAY "                 1 - VIEW STATUS OF BACKUP TO SAVFILS DISK"
$ SAY "                 2 - VIEW STATUS OF BACKUP TO TAPE"
$ SAY "                 3 - VIEW STATUS OF BACKUP DIRECTLY FROM DISK TO TAPE"
$ SAY "                 4 - VIEW STATUS OF RESTORE FROM SAVEFILS DISK"
$ SAY "                 5 - VIEW STATUS OF RESTORE FROM TAPE"
$ SAY "                 6 - VIEW STATUS OF SYSTEM DISK BACKUP"
$ SAY " "
$ SAY "                         E - EXIT"
$ SAY " "
$!
$ INQUIRE VIEWSTAT " SELECT OPTION TO VIEW STATUS OF THE BACKUP."
$ IF VIEWSTAT .EQS. ""
$       THEN
$       GOSUB NOOPTION
$       GOTO MENU7
$ ENDIF
$!
$ IF VIEWSTAT .EQS. "E" THEN GOTO MENU1
$!
$ IF (VIEWSTAT .LT 1) .OR. (VIEWSTAT .GT. 6) 
$       THEN
$         GOSUB OUTOFRANGE
$         GOTO MENU7
$ ENDIF
$ GOTO 6'VIEWSTAT'
$!
$61:
$ PIPE SHO SYS | SEARCH SYS$PIPE "BACKUP      LEF"
$ GOTO MENU7
$!
$62:
$ PIPE SHO SYS | SEARCH SYS$PIPE "SAV_TO_TAP"
$ GOTO MENU7
$!
$63:
$ PIPE SHO SYS | SEARCH SYS$PIPE "DISKBACKUP"
$ GOTO MENU7
$!
$64:
$ PIPE SHO SYS | SEARCH SYS$PIPE "RESTORE     LEF"
$ GOTO MENU7
$!
$65:
$ PIPE SHO SYS | SEARCH SYS$PIPE "TAPTODSK"
$ GOTO MENU7
$!
$66:
$ PIPE SHO SYS | SEARCH SYS$PIPE "IMAGE     LEF"
$ GOTO MENU7 
$!
$!*************************************************************************
$!
$!
$!
$!
$!
$!
$!
$!
$!
$!
$!
$7!
$!
$MENU7:
$ SAY " "
$ SAY "THIS OPTION ALLOWS YOU TO VIEW THE LOGFILES OF THE EXECUTED BACKUPS." 
$ SAY " "
$ SAY "                 1 - VIEW BACKUP LOG TO SAVFILS DISK"
$ SAY "                 2 - VIEW BACKUP LOG FROM SAVFILS DISK TO TAPE"
$ SAY "                 3 - VIEW BACKUP LOG FROM PRODUCTION DISKS DIRECTLY TO TAPE"
$ SAY "                 4 - VIEW RESTORE LOG FROM SAVFILS DISK"
$ SAY "                 5 - VIEW RESTORE LOG FROM TAPE"
$ SAY " "
$ SAY "                         E - EXIT"
$!
$ INQUIRE VIEW_OPTION "SELECT OPTION TO VIEW DESIRED LOGFILE"
$ IF VIEW_OPTION .EQS. ""
$       THEN
$       GOSUB NOOPTION
$       GOTO MENU7
$ ENDIF
$!
$ IF (VIEW_OPTION .EQS. "E") THEN GOTO EXIT
$!
$ IF (VIEW_OPTION .LT. 1) .OR. (VIEW_OPTION .GT. 5)
$       THEN
$        GOSUB OUTOFRANGE
$        GOTO MENU7
$ ENDIF
$ GOTO 7'VIEW_OPTION'
$!
$!
$!
$!
$!
$71:
$!
$ DISK_LIST  = "SYSX,VALX,CARX,WORK,DRAW"
$ SAY "             SYSX, VALX, CARX, WORK, DRAW"
$ INQUIRE DISK_NAME "WHICH DISK FROM ABOVE LIST WOULD YOU LIKE TO VIEW OR [E] FOR EXIT."
$!
$ IF DISK_NAME .EQS. "E" THEN GOTO MENU7
$ IF F$LOCATE("''DISK_NAME'",DISK_LIST) .NE. F$LENGTH(DISK_LIST)
$       THEN
$               IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'BACKUP.LOG") .EQS. "" 
$                       THEN
$                       GOSUB FILENOTFOUND
$                       GOTO 71
$               ENDIF
$       TYPE/PAGE GXPROJ:[LOG]'DISK_NAME'BACKUP.LOG
$       ELSE
$       GOSUB INVALIDDISK
$       GOTO 71
$ ENDIF 
$       
$!
$ GOTO 71
$!
$!
$!
$!
$!
$72:
$!
$ IF F$SEARCH("GXPROJ:[LOG]SAVEDISKBACKUP.LOG") .EQS. "" 
$       THEN
$               GOSUB FILENOTFOUND
$               GOTO MENU7
$ ENDIF
$ TYPE/PAGE GXPROJ:[LOG]SAVEDISKBACKUP.LOG
$ GOTO MENU7
$!
$!
$!
$!
$!
$73:
$!
$ IF F$SEARCH("GXPROJ:[LOG]DISKBACKUP.LOG") .EQS. "" 
$       THEN
$               GOSUB FILENOTFOUND
$               GOTO MENU7
$ ENDIF
$ TYPE/PAGE GXPROJ:[LOG]DISKBACKUP.LOG
$ GOTO MENU7
$!
$!
$!
$!
$!
$74:
$!
$ DISK_LIST  = "SYSX,VALX,CARX,WORK,DRAW"
$ SAY "             SYSX, VALX, CARX, WORK, DRAW"
$ INQUIRE DISK_NAME "WHICH DISK FROM ABOVE LIST WOULD YOU LIKE TO VIEW OR [E] FOR EXIT."
$!
$ IF DISK_NAME .EQS. "E" THEN GOTO MENU7
$ IF F$LOCATE("''DISK_NAME'",DISK_LIST) .NE. F$LENGTH(DISK_LIST)
$       THEN
$               IF F$SEARCH("GXPROJ:[COM]''DISK_NAME'RESTORE.LOG") .EQS. "" 
$                       THEN
$                       GOSUB FILENOTFOUND
$                       GOTO 74
$               ENDIF
$       TYPE/PAGE GXPROJ:[LOG]'DISK_NAME'RESTORE.LOG
$       ELSE
$       GOSUB INVALIDDISK
$       GOTO 74
$ ENDIF 
$!
$ GOTO 74
$!
$!
$!
$!
$!       
$75:
$!
$ IF F$SEARCH("GXPROJ:[LOG]SAVEDISKBACKUP.LOG") .EQS. "" 
$       THEN
$               GOSUB FILENOTFOUND
$               GOTO MENU7
$ ENDIF
$ TYPE/PAGE GXPROJ:[LOG]TAPTODSK.LOG
$ GOTO MENU7
$!
$!*************************************************************************
$! 
$EXIT:
$ DISK :== ""
$ CLOSE /NOLOG INPUT10
$ CLOSE /NOLOG INPUT11
$ CLOSE /NOLOG INPUT12
$ CLOSE /NOLOG INPUT13
$ CLOSE /NOLOG INPUT22
$ CLOSE /NOLOG WRITEFILE 
$ CLOSE /NOLOG INPUT3
$ CLOSE /NOLOG INPUT4
$ CLOSE /NOLOG INPUT44
$ CLOSE /NOLOG INPUT3
$ CLOSE /NOLOG INPUT33
$ CLOSE /NOLOG INPUT14
$ CLOSE /NOLOG INPUT21
$ SET MESSAGE /NOFACIL/NOIDENT/NOSEVERITY/NOTEXT
$ PUR/NOLOG GXPROJ:[LOG]*.LOG
$ DELETE GXPROJ:[COM]SYSXBACKUP.COM;*
$ DELETE GXPROJ:[COM]CARXBACKUP.COM;*
$ DELETE GXPROJ:[COM]VALXBACKUP.COM;*
$ DELETE GXPROJ:[COM]WORKBACKUP.COM;*
$ DELETE GXPROJ:[COM]DRAWBACKUP.COM;*
$ SET MESSAGE /FACIL/IDENT/SEVERITY/TEXT
$!
$ EXIT 
$!
$!**************************************************************************
$!
$! SUBROUTINES....
$!
$OUTOFRANGE:
$ SAY " "
$ SAY "      *********************************"
$ SAY "      *****  OPTION OUT OF RANGE  *****"
$ SAY "      *********************************"
$ SAY " "
$ RETURN
$!
$NOOPTION:
$ SAY " "
$ SAY "      ************************************"
$ SAY "      *****  NO OPTION WAS SELECTED  *****"
$ SAY "      ************************************"
$ SAY " "
$ RETURN
$!
$INVALIDDISK:
$ SAY " "
$ SAY "             *************************"
$ SAY "             ***** INVALID DISK  *****"
$ SAY "             ** DISK DOES NOT EXIST **"
$ SAY "             *************************"
$ SAY " "
$ RETURN
$!
$CONFIGNOTFOUND:
$ SAY " "
$ SAY "      ************************************"
$ SAY "      ****  NO CONFIG FILE WAS FOUND  ****"
$ SAY "      ****     FOR THIS SELECTION     ****"
$ SAY "      ************************************"
$ SAY " "
$ RETURN
$!
$ALREADYEXISTS:
$ SAY " "
$ SAY "      ****************************************"
$ SAY "      * ALREADY EXISTS IN CONFIGURATION FILE *"
$ SAY "      ****************************************"
$ SAY " "
$ RETURN
$!
$DOESNTEXIST:
$ SAY " "
$ SAY "      ****************************************"
$ SAY "      ** DOESNT EXIST IN CONFIGURATION FILE **"
$ SAY "      ****************************************"
$ SAY " "
$ RETURN
$!
$FILENOTFOUND:
$ SAY " "
$ SAY "      ******************************"
$ SAY "      ** LOG FILE DOESN'T EXIST  ***"
$ SAY "      ******************************"
$ SAY " "
$ RETURN
$!
$GETTAPEDRIVE:
$ SAY " "
$ INQUIRE TAPEDRIVE "WHICH TAPEDRIVE DO YOU WISH TO USE [1-10]"
$ IF (F$EXTRACT(0,1,TAPEDRIVE) .EQS. "E") THEN GOTO MENU1
$GETSUB1:
$ WS ""
$ WS                " TAPEDRIVE IS:           "+TAPEDRIVE
$ WS ""
$ INQUIRE B "      - IS THE TAPEDRIVE ENTERED CORRECT? [Y/N]"
$ IF (F$EXTRACT(0,1,B) .EQS. "E") THEN GOTO EXIT
$ IF (F$EXTRACT(0,1,B) .EQS. "N") THEN GOTO GETTAPEDRIVE 
$ IF (F$EXTRACT(0,1,B) .EQS. "Y") THEN GOTO GETSUB2
$ GOTO GETSUB1
$GETSUB2:
$ IF TAPEDRIVE .GT. 0 .AND. TAPEDRIVE .LT. 10 
$ THEN
$   TAPEDRIVE = "MAG"+TAPEDRIVE
$ ENDIF
$ IF .NOT. F$GETDVI("''TAPEDRIVE'","EXISTS")
$   THEN 
$    SAY " ******************************"
$    SAY " ***** INVALID TAPEDRIVE ***** "
$    SAY " ******************************"
$    SAY " "
$    GOTO GETTAPEDRIVE
$ ENDIF
$!
 IF F$LOCATE(":",TAPEDRIVE) .EQ. F$LENGTH(TAPEDRIVE) THEN -
  TAPEDRIVE = TAPEDRIVE +":"
$!
$ IF F$GETDVI("''TAPEDRIVE'","MNT") .EQS. "TRUE"
$   THEN
$     INQUIRE ANS "''TAPEDRIVE' IS IN USE. ARE YOU SURE YOU WANT TO USE THIS TAPEDRIVE <YES>" 
$       IF (F$EXTRACT(0,1,ANS) .EQS. "E") THEN GOTO EXIT
$       IF (F$EXTRACT(0,1,ANS) .EQS. "Y") 
$            THEN
$              dismount/ABORT/NOUNLOAD 'TAPEDRIVE'
$            ELSE
$              GOTO GETTAPEDRIVE
$       ENDIF
$ ENDIF
$RETURN
$!
