C
C DESNET.DEF
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]DESNET.DEV                                   $
C  $Date::   17 Apr 1996 12:51:22                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C V04 15-SEP-95 PJS MODIFIED NETNUM TO NOW BE A FUNCTION OF NETSYS.
C V03 22-AUG-95 DMR NETSYS WAS SET TO 4 WHERE WE HAVE 5 SYSTEMS IN NY
C V02 24-APR-91 JWE Modify for remote site.  4 systems
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C
C     DESNET.DEF
C     ----------
C
C     NOTE THERE IS NO LOCK MECHANISM DEFINED FOR ANY RESOURCES
C
C     DESCRIPTION OF NETWORK LOGGER DATA BASE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C
        INTEGER*4  MAX_SYSTEMS
        PARAMETER (MAX_SYSTEMS=5)	!MAXIMUM NUMBER OF SYSTEMS THIS SOFTWARE
C					!CAN HANDLE SYSTEMS A,B,C,D,E
C					!CODE CHANGES NECCESARY TO HANDLE MORE
C					!DO NOT CHANGE THIS NUMBER
C
	INTEGER*4  NETLUN, NETSYS, NUMWAY
	PARAMETER (NETSYS=5)		!NR OF SYSTEMS TALKING TO EACH OTHER
	PARAMETER (NETLUN=NETSYS)	!MAXIMUM NR OF DIFFERENT LUNS OPEN
	PARAMETER (NUMWAY=1)            !NUMBER OF DIFFERENT PATHS IN THE SYSTEM
C
	INTEGER*4  NETNUM, NETLEN, NCNLEN, NUM_RECOVERY_BUFFERS
	PARAMETER (NETLEN=2048)		!LENGTH OF I/O BUFFER (IN FULL WORDS)
	PARAMETER (NCNLEN=5)		!LENGTH OF HEADER IN THE BUFFER
	PARAMETER (NUM_RECOVERY_BUFFERS=3) !NUM OF RECOVERY BUFFERS (PER SYSTEM)
	PARAMETER (NETNUM=14+           !OUTSTANDING READS & WRITES FOR TRIPLEX+
     *                    11+           !BUFFERS TO GO OUT FROM PRIMARY SYSTEM+
     *     NETSYS*NUM_RECOVERY_BUFFERS+ !RECOVERY BUFFERS+
     *                    10)		!EXTRA BUFFERS.
C
	INTEGER*4  TOTQUE, MAXQUE
	PARAMETER (TOTQUE=NETSYS*NETNUM*NUMWAY)		!MAXIMUM OF ENTRIES OF
	PARAMETER (MAXQUE=NETSYS*NETNUM)		!MAXIMUM OF ENTRIES OF
C                                                       !MOST BUSY QUEUE
C
C
	INTEGER*4 NETBUF(NETLEN,NETNUM)			!BUFFERS FOR DATA
	INTEGER*2 HNETBUF(2*NETLEN,NETNUM)		!IN HALF WORDS
	EQUIVALENCE (NETBUF,HNETBUF)
C
	INTEGER*4 NET_IOSTARTED(NETNUM+QHEDSZ,2,NETSYS) !QUEUES OF STARTED I/O
C							!FOR EACH SYSTEM
	INTEGER*4 NETFREE(NETNUM+QHEDSZ,NUMWAY)         !LIST OF FREE BUFFERS
C                                                       !FOR EACH PATH
	INTEGER*4 NETFREE_RECOVERY(NETNUM+QHEDSZ,NETSYS)!LIST OF FREE RECOVERY 
C							!BUFFERS FOR EACH PATH
	INTEGER*4 NETEXTRA(NETNUM+QHEDSZ,NUMWAY)        !LIST OF BUFFERS
C							!THAT COULD BE USED 
C                                                       !FOR READ ON PRIMARY
	INTEGER*4 RECOVQUE(NETNUM+QHEDSZ)               !RESERVE BUFFERS TO USE
C                                                       !DURING LAST PHASE OF 
C                                                       !RECOVERY
C
C
	INTEGER*4 NETEXEC(MAXQUE+QHEDSZ,NUMWAY)         !BUFFERS TO SEND-NETLOG
	INTEGER*4 NETFIL(NUMWAY*NETNUM+QHEDSZ,NUMWAY)   !BUFFERS TO SEND
C                                                       !IN FILE FORMAT
	INTEGER*4 NETIODONE(NETNUM+QHEDSZ,NETSYS)       !BUFFERS WITH I/O DONE
	INTEGER*4 NETFINISH(MAXQUE+QHEDSZ)              !BUFFER REQUESTS
C                                                       !DONE BY NETLOG
	INTEGER*4 REMFINISH(NETNUM+QHEDSZ)              !BUFFERS READ IN LOG. 
C                                                       !FORMAT QUEUE
C                                                       !TO REMPRO FROM NETMGR
C
	INTEGER*4 NETSTAT(NETSYS,NUMWAY)!STATUS FOR EVERY LUN
	   INTEGER*4  NSTAIDLE, NSTAPRIM, NSTASEC, NSTADEADP, NSTADEADS
	   PARAMETER (NSTAIDLE=0)     !NON ACTIVE
	   PARAMETER (NSTAPRIM=1)     !PRIMARY (MASTER)
	   PARAMETER (NSTASEC=2)      !SECONDARY
	   PARAMETER (NSTADEADP=-1)   !DEAD PRIMARY
	   PARAMETER (NSTADEADS=-2)   !DEAD SECONDARY
	INTEGER*4 NETMODE(NETSYS,NUMWAY)      !DATA TRANSFER MODE
C                                           ;VALUES SAME AS MODE IN BUFFER
	INTEGER*4 NETERR(NETSYS,NUMWAY) !# OF ERRORS (STATISTICS)
	INTEGER*4 NETTIM(NETSYS,NUMWAY)!TIME OF LAST I/O
	INTEGER*4 NETINIT(NETSYS,NUMWAY)!IF CONN INITIALIZED
	   INTEGER*4  NOTINITED, INITED
	   PARAMETER (NOTINITED=0)      !NOT INITIALIZED (YET???)
	   PARAMETER (INITED=1)         !ALREADY UP
	INTEGER*4 RETTIM          !TIME I/O COULD BE RETRIED (MSECS)
	INTEGER*4 NETRETRY(NETSYS,NUMWAY)  !# OF RETRIES FOR EACH NODE
	INTEGER*4 NETRDY         !READY FLAG SET BY NETLOG TO START
	INTEGER*4 REMCLOSED(NETSYS)!REM STARTED COUNTING TIME TO
C                              ;TO CLOSE (IF -1)
C                              ;NETWORK COMMUNICATION
	INTEGER*4 NODEID          !ID OF THIS NODE
C
C
	INTEGER*4 NETROUT(NETSYS,NUMWAY)  !SYSTEM ROUTING TABLE
C                    EACH ENTRY CORRESPONDS TO LOGICAL CONNECTION
C                    TO THE SYSTEM
	   INTEGER*4  ROUNO, ROUIDLE, ROUACT
	   PARAMETER (ROUNO=0)   !NO CONNECTION
	   PARAMETER (ROUIDLE=1) !THERE IS PHYSICAL CONNECTION, NOT USED
C                               NOW
	   PARAMETER (ROUACT=2)  !ACTUALLY ACTIVE, SYSTEMS TALKING TO EACH OTHER
	INTEGER*4 IDLETIM               !TIME THAT SLAVE CAN BE IDLE
C                                     ;BEFORE WILL TRY TO TAKEOVER
	INTEGER*4 NETBACKUP(NUMWAY) !NODE THAT CAN BECOME MASTER SYSTEM
C
C
C
C     NETCMD (NETWORK COMMAND) COMMANDS
C     CALL NETCMD(COMMAND,DESTINATION,VALUE,WAY)
C
      INTEGER*4  ADDLINK, REMLINK, RESYNC, SETMASTER, BROADCAST, REMCLSD
	PARAMETER (ADDLINK=1)     !SET SVCMODE FOR ALL DRIVERS
	PARAMETER (REMLINK=2)     !REMOVE PHYSICAL CONNECTION WITH SYSTEM
C                               ;DEFINED IN PATH
	PARAMETER (RESYNC=3)      !RESYNCHRONIZE SYSTEM
	PARAMETER (SETMASTER=4)   !SET SYSTEM TO MASTER SYSTEM
	PARAMETER (BROADCAST=5)   !DIAGNOSTICS BROADCAST
	PARAMETER (REMCLSD=6)     !REMOTE CLOSED COMMAND
C
C
	INTEGER*4 NETWAIT       !NETMGR MAIN LOOP WAIT PARAMETER (MSECS)
	INTEGER*4 NETWAIT_MIN	!MINIMUM NETWAIT TIME
	INTEGER*4 MAXIDLE       !TIME TO SEND IDLE BUFFERS (MSECS)
C
	INTEGER*4 NETSER(NETSYS,NUMWAY)    !CURRENT SERIAL # TO SEND
	INTEGER*4 TOFREEZ         !HOW MANY TRANS TO START FINAL STAGE
	INTEGER*4 MAXFREEZ         !MAX TIME 'NOT MASTER' IS FROZEN
C                                     IF SENDING TRANS IN LOG FORMAT
C                                  THE IDEA IS THAT DELAY MIGHT BE
C                                  PROPAGATED TO MASTER SYSTEM.
	INTEGER*4 TOUNFREEZ          !TIME LIMIT NETWAIT WILL BE UNFROZEN
C                                 ;ONLY IF THAT IS NOT MASTER SYSTEM
	INTEGER*4  TRACLEN, ERRLEN
	PARAMETER (TRACLEN=20)      !STATE SWITCHIN TABLE
	PARAMETER (ERRLEN=20)        !ERROR SWITCH TABLE
	INTEGER*4 TRACTAB(TRACLEN+QHEDSZ)  !TABLE FOR EVENTS TRACING
	INTEGER*4 ERRTAB(ERRLEN+QHEDSZ)    !TABLE FOR ERROR TRACING
C***  INTEGER*4 NETACT(NETSYS,NETSYS,NUMWAY)  ;IF .NON.0
C****                                     2 NODES ARE CONNECTED
C
	INTEGER*4 NETMASTER(NUMWAY)      !NETWORK MASTER (SET ONLY WHEN
C                                    ;DATA IS RECEIVED
	INTEGER*4 NETOPN(NETSYS,NUMWAY)   !LOGICAL UNIT OPEN
	INTEGER*4 OPNNET(NETSYS,NUMWAY)       !SYSTEM ASSIGNED TO LUNS
	INTEGER*4 NETASSN(NETSYS)      !SYSTEM ASSIGNE TO LUNS
	INTEGER*4 OPNWAY(NETSYS)      !WAY ASSIGNED TO UNIT
	INTEGER*4 NETIO(2,NUMWAY)  !NR OF OUTSTANDING I/O FOR EACH MODE
C                              ;FILE XFER OR .NON.FILE XFER MODE
C
	INTEGER*4 NETENA(NETSYS,NUMWAY) !IF '0' RESYNCH OF SYSTEM ENABLED
C                                    ;IF '1' RESYNCHRONIZE IF
C                                    ; SYSTEMS GETTING MORE OUT OF SYNC
C                                    ; IF '2' DO NOT RESYNC
C
C
C                                    ;IF '1' ONLY IF DIFFERENCE IN SYNC
C                                    ;CHANGED
C
C
	INTEGER*4 NETTIMER         !NETWORK TIMER
C
	INTEGER*4 FREEZDUMM        !FREEZ SENDING DUMMIES (FOR SWITCHING
C                                 BEETWEEN MASTER AND SLAVE)
C
	INTEGER*4 FREEZDUPL      !**** THIS VARIABLE NOT USED / PLACE HOLDER **
C
	INTEGER*4 NETRECOV(NETSYS,NUMWAY) !RECOVERY STAGE
	   INTEGER*4  RECIN, RECDONE
	   PARAMETER (RECIN=1)       !RECOVERY IN PROGRESS
	   PARAMETER (RECDONE=2)     !RECOVERY DONE
C
	INTEGER*4 RECOVWAY        !WAY LAST STAGE RECOVERY STARTED
C
C
	INTEGER*4 NETIOCNT(NETNUM)         !I/O COUNT FOR EACH BUFFER
	INTEGER*4 NETTST          !.NON.0 IF IN TEST MODE
	INTEGER*4 NETCMDFRZ      !FREEZING QUEUES FLAG
	INTEGER*4 FREEZQUEU      !FREEZ FINISH QUEUE FLAG
	INTEGER*4 SYNCWAIT    !TIME IN MSECS TO WAIT IF RUNNING IN SYNC
	INTEGER*4 SYNCWAIT_MIN   !MINIMUM SYNCWAIT TIME
	INTEGER*4 NETSPARE(943)    !LEAVE 1000 FREE WORDS FOR EXPANSION
	INTEGER*4 NETREM(NETSYS,NUMWAY) !FLAG THAT NODE REMOVED (TO COMMUNICATE
C                              ;BETWEEN NETLOG AND NETMGR)
	INTEGER*4 NETSITE(NETSYS)	!SITE LOCATION
	INTEGER*4 SITEONE
	PARAMETER (SITEONE=1)		!SITE NUMBER ONE
	INTEGER*4 SITETWO
	PARAMETER (SITETWO=2)		!SITE NUMBER TWO
C
	INTEGER*4 PANICSYS        !SYSTEM TO LISTEN TO THROUGH CRT
C                                IF LT 0  SETMASTER SENT THROUH PPI
	INTEGER*4 PANICQUE(NETSYS+QHEDSZ) !QUEUE OF SETMASTER COMMANDS TO BE
C                                   SENT THROUGH CRT
C
	INTEGER*4 NETDUMM(NETSYS,NUMWAY) !.NON.0 IF DUMMY SEND IN PROGRESS
C
	INTEGER*4 NETDEV(2,NETSYS)         ! DEVICE TABLES (MNEMONICS)
	INTEGER*4 NODEMASTER(NUMWAY)       !CURRENT PRIMARY NODE SENDING
C                                     ;TO THIS NODE
C
	INTEGER*4 NETFLOW(NETSYS+1,NETSYS,NUMWAY) !SHOWS PATHS (FLOWS)
C                                      ;OF TRANSACTIONS IN THE NETWORK
C                                      ;SET BY BROADCAST LOGIC
	INTEGER*4 NETRECV(2,NETSYS,NUMWAY)!RECOVERY/SERIAL # INFORMATION
C                                     ;SET BY BROADCAST LOGIC
	INTEGER*4 NETFROM(NETNUM)    !SYSTEM THE BUFFER WAS SENT FROM
C                                  ;POINTS TO ACTUAL ROUTING
	INTEGER*4 BROADTIM           !TIME INTERVAL BETWEEN BROADCASTS
C
	INTEGER*4 TOBROAD(NUMWAY)    !LAST BROADCAST TIME
C
	INTEGER*4 NETBRO(NETSYS,NUMWAY)    !LAST RECEIVED TIME
C
	INTEGER*4 MAXBRO             !MAX WAIT TIME FOR BROADCAST BACK
C
C
C
	INTEGER*4 LSTBRO(NETSYS,NUMWAY)    !TIME LAST BROADCAST ARRIVED BACK
C
	INTEGER*4 NETHSER(NETSYS,NUMWAY)
C
	INTEGER*4 NETTSET1          !DUMMY FOR TEST AND SET
C
	INTEGER*4 NETATR(NUMWAY)    !WAY ATTRIBUTE
C                    VALUES SET AS INP,RLG,RTR IN BUFFER IN BUFTYP
C
C
	INTEGER*4 WAYLOG   !WAY NUMBER FOR LOG TRANSFER, VALID ON MASTER
C                        ;OF THIS LOG PATH
	INTEGER*4 OTHRLOG  !LOG WAY DATA IS RECEIVED FROM ANOTHER SITE
C
	INTEGER*4 WAYINP !WAY NUMBER FOR INPUT TRANSFER, VALID ON MASTER
C                      ;OF THIS PATH
	INTEGER*4 STARTREM !SYSTEM START UP TIME, INITIALISE TO SYSTIM
C                         IN RESET (WAITREM)
	INTEGER*4 REMWAIT   !FLAG SET BY REMPRO BEFORE GOING TO SLEEP
C                          USED BY NETMGR TO LEARN THAT NOTHING
C                          OUTSTANDING IN PROGRESS (LAST STAGE OF RECOVERY)
C
	INTEGER*4 SNDIOCHK(NETSYS)    !COUNTER FOR OUSTANDING I/O
	INTEGER*4 READIOCHK(NETSYS)   !COUNTER OF OUSTANDING READS
	INTEGER*4 TRNCNT,BUFCNT,RTRNCNT,RBUFCNT  !TRN AND BUF COUNTERS
	INTEGER*4 NETTST2, WAYTRA

	INTEGER*4 NET_XFER_TIME_MAX
	   PARAMETER (NET_XFER_TIME_MAX = 30) !DELAYS UP TO 30 SECS GATHERED
	INTEGER*4 NET_XFER_TIME(0:NET_XFER_TIME_MAX,NETSYS) !XFER DELAY TABS
	INTEGER*4 NET_MAX_TIMEOUT	      !MAXIMUM TIMEOUT VALUE
	INTEGER*4 NET_XFER_LAST_DELAYS(0:NET_XFER_TIME_MAX,NETSYS,2)
	INTEGER*4 NET_CURRENT_XFER_OFFSET
C
	INTEGER*4 NET_UPDSTA_INTERVAL	      !NET_UPDSTA INTERVAL RUN
	INTEGER*4 NET_SLOW_REPORT_INTERVAL    !NET_CHKSLOW INTERVAL RUN
	INTEGER*4 NET_FIRST_REPORT_DELAY      !DELAY BEFORE REPORTING AFTER 
C					      !MODE CHANGE
	INTEGER*4 NET_XFER_MSGS_CURRENT(2,NETSYS)  !CURRENT NO OF MESSAGES
	INTEGER*4 NET_RECV_MSGS_CURRENT(2,NETSYS)  !CURRENT NO OF MESSAGES
	
	INTEGER*4 NET_LAST_BUFFER_USER(NETNUM)        !LAST BUFFER USER
	INTEGER*4 NET_START_RESYNC		!WAIT BEFOR STARTING RESYNC
	INTEGER*4 NET_MAX_ACKTIM		!MAX TIME TO ACK (IN SECS)
C						!IF TIMES EXCEEDED - REPORT IT
	INTEGER*4 NET_TIMES_RESPONSE_LONG(NETSYS) !TIMES ACK OVER NET_MAX_ACKTIM
	INTEGER*4 NET_LAST_ACK_TIME(NETSYS)	!TIME LAST ACK RECEIVED
	INTEGER*4 NET_LAST_TRANS_SENT(NETSYS)   !TIME LAST TRANS SENT
	INTEGER*4 NET_MAX_RESPONSE		!MAX TIME TO RECEIVE AN ACK
	INTEGER*4	 LAST_NETCOM
C
	COMMON /NETCOM/NETBUF,NETEXEC,NETTSET1,NETIODONE,NETFINISH
     *	      ,NETSTAT,NETERR,NETTIM,NETRETRY,NETRDY,NETMODE
     *	      ,NODEID,NETROUT,IDLETIM,NETWAIT,NETSER,TOFREEZ
     *	      ,TRACTAB,ERRTAB,NETBACKUP,NETMASTER
     *	      ,NETOPN,OPNNET,NETIO,NETFIL,NETEXTRA,FREEZQUEU,NETTIMER
     *	      ,NETDEV,RETTIM,MAXIDLE,MAXFREEZ,TOUNFREEZ,NETDUMM
     *	      ,FREEZDUMM,FREEZDUPL,NETRECOV,NETIOCNT,PANICSYS,PANICQUE
     *	      ,NETTST,NODEMASTER,NETENA,NETCMDFRZ,SYNCWAIT,NETREM
     *	      ,NETSITE
	COMMON /NETCOM/
     *	      NETFLOW,NETRECV,NETFROM,BROADTIM,TOBROAD,NETBRO,MAXBRO
     *	      ,LSTBRO,NETHSER,OPNWAY,WAYINP,WAYLOG,WAYTRA,NETATR
     *	      ,REMCLOSED,REMFINISH,NETASSN,STARTREM,RECOVWAY,REMWAIT
     *	      ,RECOVQUE,SNDIOCHK,READIOCHK,OTHRLOG
     *	      ,TRNCNT,BUFCNT,RTRNCNT,RBUFCNT,NETINIT,NETSPARE
     *	      ,NET_LAST_ACK_TIME,NET_LAST_TRANS_SENT
     *	      ,NET_MAX_RESPONSE
     *        ,NET_TIMES_RESPONSE_LONG,NET_MAX_ACKTIM,NET_START_RESYNC
     *	      ,NETWAIT_MIN,SYNCWAIT_MIN,NET_LAST_BUFFER_USER
     *	      ,NETTST2,NET_IOSTARTED,NETFREE_RECOVERY
     *	      ,NET_XFER_TIME,NET_MAX_TIMEOUT,NETFREE
C
	COMMON /NETCOM/
     *	NET_XFER_LAST_DELAYS,
     *	NET_CURRENT_XFER_OFFSET, NET_UPDSTA_INTERVAL, 
     *  NET_SLOW_REPORT_INTERVAL, NET_FIRST_REPORT_DELAY,
     *  NET_XFER_MSGS_CURRENT,NET_RECV_MSGS_CURRENT,
     *  LAST_NETCOM  !MUST BE LAST


C				NETRDY = ??? 0
C	RESET			NETRDY = NETRDY_RESET
C	NETLOG			wait for NETRDY_RESET -> NETRDY_NETLOG
C	NETMGR			wait for NETRDY_NETLOG -> NETRDY_NETMGR
C	DISPAT			wait for NETRDY_NETMGR -> NETRDY_DISPAT
C
	INTEGER*4	NETRDY_RESET
	PARAMETER	(NETRDY_RESET=1)
	INTEGER*4	NETRDY_NETLOG
	PARAMETER	(NETRDY_NETLOG=2)
	INTEGER*4	NETRDY_NETMGR
	PARAMETER	(NETRDY_NETMGR=3)
	INTEGER*4	NETRDY_DISPAT
	PARAMETER	(NETRDY_DISPAT=4)
C
C     NETFREE,NETBUF,NETEXEC,NETWRITE,NETIODONE,NETFINISH,NETERR,
C     NETRTY,NETRDY,NETTIM - SET BY NETLOG
C
C     NETMODE,NODEID,TOFREEZ,NETBACKUP
C     NETSTAT,NETROUT,IDLETIM,NETWAIT - SET BY INITIALISATION (RESET)
C
C     THIS PART HAS TO BE MODIFIED TO SUIT NEW NETWORK LOGGING PURPOSE
C
C     NOTIFY PARAMETRS VALUES
C
	INTEGER*4  NOTBUF, NOTMOD, NOTCMD, NOTABRT, NOTSYNC, NOTFIN
	PARAMETER (NOTBUF=1)            !NETWORK BUFFER ERROR
	PARAMETER (NOTMOD=2)          !INVALID MODE SE IN BUFFER
	PARAMETER (NOTCMD=3)           !COMMAND TO EXECUTE
	PARAMETER (NOTABRT=4)          !SYSTEM IS BEEING ABORTED
	PARAMETER (NOTSYNC=5)           !RESYNCHRONIZATION REQUEST
	PARAMETER (NOTFIN=6)            !FINAL STAGE STARTED
C
	INTEGER*4  NOTMASTER, NOTLINK, NOTDATA, NOTPATH, NOTVAL, NOTSER
	PARAMETER (NOTMASTER=7)        !NEW MASTER COMMING
	PARAMETER (NOTLINK=8)          !ADD NEW LINK MANUALLY
	PARAMETER (NOTDATA=9)          !DATA COMMING IN INVALID MODE
	PARAMETER (NOTPATH=10)         !COMMAND PATH
	PARAMETER (NOTVAL=11)          !COMMAND VALUE
	PARAMETER (NOTSER=12)          !SYNCRONIZING SERIAL #
C
	INTEGER*4  NOTIO, NOTSTART, NOTBRO, NOTRES, NOTCROSS, NOTCHKPNT
	PARAMETER (NOTIO=13)           !I/O ERROR (FROM NETLOG) (READ)
	PARAMETER (NOTSTART=14)        !PATH STARTED COMMUNICATING
	PARAMETER (NOTBRO=15)          !WAITING TOO LONG FOR BROADCAST
	PARAMETER (NOTRES=16)          !ATTEMPTING TO RESYNC
	PARAMETER (NOTCROSS=17)          !CROSS COMMAND BETWEEN WAYS
	PARAMETER (NOTCHKPNT=18)         !REMOTE CHKECKPOINT ERROR
C
	INTEGER*4  NOTREMCHK, NOTREST, NOTLOCCOM, NOTLOCPOL, NOTCOMNR
	PARAMETER (NOTREMCHK=19)         !REMOTE CHKECKPOINT (OK)
	PARAMETER (NOTREST=20)           !REMOTE CHECKPNT FILE
C                                      ;RESTORED
	PARAMETER (NOTLOCCOM=21)         !COMMON CHECKPNT FILE
	PARAMETER (NOTLOCPOL=22)         !POOL CHECKPNT FILE
	PARAMETER (NOTCOMNR=23)          !COM NOT RESPONDING
C
	INTEGER*4  NOTCOMNA, NOTCOMA, NOTCRT, NOTRTS, NOTDISCR, NOTNODE
	PARAMETER (NOTCOMNA=24)          !COM NOT ACTIVE
	PARAMETER (NOTCOMA=25)           !COM ACTIVE
	PARAMETER (NOTCRT=26)            !COM GEAR PROBLEMS
	PARAMETER (NOTRTS=27)            !RTS PROBLEMS
	PARAMETER (NOTDISCR=28)          !DISCR VALUE
	PARAMETER (NOTNODE=29)           !MASTER NONE CHANGE
C
C
C
C  EACH BUFFER IS COMPOSED OF A HEADER, AND DATA.  THE HEADER
C  IS DEFINED AS :
C
C
C     BUFFER IS DESIGNED AS BELOW
C     *******************
C     * DRIVER HEADER   *    LINK TO NEXT BUFFER
C     *                 *    LENGTH OF TH BUFFER
C     *******************
C     * DATA HEADER     *    NOT INTERNALLY CHECKSUMED DATA
C     *                 *    CHECKSUMDED PART OF HEADER
C     *******************
C     * DATA AREA       *
C     *                 *
C     *******************    LAST HALFWORD RESERVED FOR DRIVER
C
	INTEGER*4  HDRSIZ, HDRCHK
	PARAMETER (HDRSIZ = 13+NCNLEN)  ! NUMBER OF FULLWORDS OF HEADER
	PARAMETER (HDRCHK = 5 + NCNLEN) !FROM THIS LOCATION CRC CALCULATED
C
C
C
C
	INTEGER*4  NETBUF_TIMOFF, FDEST, PDEST
	PARAMETER (NETBUF_TIMOFF=1+NCNLEN) !CRC OFFSET
	PARAMETER (FDEST  = 2+NCNLEN)  ! DESTINATION NODE BEFORE ERROR
	PARAMETER (PDEST = 3+NCNLEN)   !DESTINATION NODE
C                                   ;HAS ITS OWN ID TO SOLVE RETRY
C                                   ;PROBLEM FOR PPI
C
	INTEGER*4  ACTFROM
	PARAMETER (ACTFROM=4+NCNLEN) !ACTUAL SENDER NODE #
C
C     FROM THIS LOCATION DATA IS CHECKSUMMED
C
	INTEGER*4  PPORG, USEID, PSTATE, NULSTA, FILCNT, FILNMR
	PARAMETER (PPORG=5+NCNLEN)     ! ORIGINATING NODE
	PARAMETER (USEID=6+NCNLEN)    !BUFFER ID, EACH BUFFER USE
	PARAMETER (PSTATE = 7+NCNLEN)  ! STATE OF FILE TRANSFER
	  PARAMETER (NULSTA = 0)  ! NULL STATE
	  PARAMETER (FILCNT = 1)  ! BUFFER WITH DATA, WILL BE MORE
	  PARAMETER (FILNMR = 2)  ! BUFFER WITH DATA, WON'T BE MORE
C
	INTEGER*4  MODE, TRNMD, FILMD, ERRMD, DUMMD, CMDMD, DRVMD
	PARAMETER (MODE   = 8+NCNLEN)  ! MODE OF TRANSFER
	  PARAMETER (TRNMD = 1) ! TRANSACTION MODE (INPUT FORMAT)
	  PARAMETER (FILMD = 2) ! FILE MODE - DATA IS IN FILE (TMF) FORMAT
	  PARAMETER (ERRMD = 3)  !ERROR MODE GENERATED BY NETLOG
	  PARAMETER (DUMMD = 4) ! SENDING DUMMIES MODE
	  PARAMETER (CMDMD = 5) ! COMMAND MODE (WRITE)
	  PARAMETER (DRVMD=6)   !COMMAND TO DRIVER (TO INITIALISE MASTER/SLAVE
	  INTEGER*4  FRZMD, REMMD
	  PARAMETER (FRZMD = 7) ! FREEZ DEQUING FROM FINISH QUEUE TILL
C                             ; NETCMDFRZ .EQ. 0
	  PARAMETER (REMMD=8)   !COMMAND TO REMPRO TO DO RESTORE
     *	                              !AND CONTINUE RESYNC OF ITSELF
		INTEGER*4 ACKMD
		PARAMETER (ACKMD=9)
C
	INTEGER*4  NUMREC, PSER, NEXT, BUFTYP, INP, RLG, RTR
	PARAMETER (NUMREC = 9+NCNLEN)  ! NUMBER RECORDS (TRANSACTIONS)
	PARAMETER (PSER   = 10+NCNLEN)  ! HIGHEST SERIAL # IN THIS BUFFER
	PARAMETER (NEXT   = 11+NCNLEN)  ! NEXT AVAILABLE FULLWORD.
	PARAMETER (BUFTYP = 12+NCNLEN)  !BUFFER TYPE
	   PARAMETER (INP=1)            !INPUT FORMAT
	   PARAMETER (RLG=2)            !REMOTE LOGGING FORMAT
	   PARAMETER (RTR=3)            !REMOTE TRANSACTION
	INTEGER*4  WAYNR
	PARAMETER (WAYNR = 13+NCNLEN) ! NETWORK WAY
C                              ;1 - INPUT ORIGINATED IN A OR B
C                              ;2 - INPUT ORIGINATED IN C OR D
C                              ;3 - LOG.  ORIGINATED IN A OR B
C                              ;4 - LOG.  ORIGINATED IN C OR D
C
C
C
C
C  THE DATA THEN IS IN RECORDS FROM 1 .. N, WITH A FULLWORD
C  IN FRONT OF EACH TELLING HOW LONG THE RECORD IS.
C
C  TRANSACTION RECORD (COMMUNICATIONS FORMAT)
C
C     INPUT BUFFER IS SET AS BELOW
C     ****************************
C     LINK TO NEXT RECORD
C     TRNS CODE / TERNUM
C     LINE NO/LENGTH
C     SERIAL #
C     TIME STAMP
C     DATA (ROUNDED TO I4)
C
C     REMOTE BUFFER IS SET AS BELOW
C     *****************************
C     LINK TO NEXT RECORD
C     ORIG. BUF #/TERNUM
C     LINE #     /LENGTH
C     ORIGINAL BUF #/0
C     SERIAL #      (SERIAL # OF ORIGINATING TRANS., NEGATIVE IF 1 WAY
C                   TRANSACTION, NO RETURN EXPECTED)
C     DATA (ROUNDED TO I4)
C
C
C     RECOVERY BUFFER FORMAT
C     **********************
C     LOG RECORD
C
C     SENDING TRANSACTIONS IN LOG FORMAT
C     **********************************
C     LOG RECORD
C
C
C
C     VERIFY RECORD FORMAT (ONLY 1 RECORD, NO REPEATS)
C     *****************
C     DAYCDC
C     NETTIMER
C
C     DRIVER COMMAND FORMAT
C     *********************
C     COMMAND (ADD/REMOVE LINK)
C     SYSTEM (1,2,...)
C     MODE (PRIMARY/SECONDARY CONNECTION)
C     WAY
C
C
C     OTHER COMMANDS
C     ***************
C     COMMAND
C     SYSTEM
C     DATA
C
C
	INTEGER*4  RESBUF, NETCMB, VISNCM
	PARAMETER (RESBUF='3FFFFFFF'X)
	PARAMETER(NETCMB=54)     !FIRST NETWORK COMMAND NUMBER
	PARAMETER(VISNCM=3)      !NUMBER OF NETWORK VIS COMMANDS
C
C
	INTEGER*4	 FRST_NETCOM(2)
	EQUIVALENCE	(FRST_NETCOM, NETBUF)
C*****	EQUIVALENCE	(LAST_NETCOM, NETFREE(NETNUM+QHEDSZ,NUMWAY))
C
	VOLATILE /NETCOM/
C
C
C	ERROR DEFINITIONS
C
	INTEGER*4 	NET_TIMEOUT_ERROR	!TIMEOUT ERROR
		PARAMETER(NET_TIMEOUT_ERROR='0000FFF1'X)


