C LCPREC.DEF
C
C V07 30-JUN-2000 UXN LCPLAT added.
C V06 18-MAY-1999 UXN LCPCMB added.
C V05 28-NOV-1995 HXK Batch of changes for Double/Couple release
C V04 23-NOV-1995 PXB Add event status
C V03 10-NOV-1995 HXK Further changes for Double, Couple
C V02 07-NOV-1995 HXK Changes for Double, Couple install
C V01 06-NOV-1995 PXB Initial revision.
C  
C LOGICAL TODAY'S COUPLE GAME RECORD LAYOUT 
C
C     LCPSTS(NUMCPL)                         ; GAME STATUS
C     LCPWEK(NUMCPL)                         ; WEEK NUMBER
C     LCPDAT(NUMCPL)                         ; DRAW DATE
C     LCPDRW(NUMCPL)                         ; DRAW NUMBER
C     LCPBSD(NUMCPL)                         ; BEGINNING SALES DATE
C     LCPESD(NUMCPL)                         ; ENDING SALES DATE
C     LCPPUP(NUMCPL)                         ; LAST PRUGE UPDATE  (FILE ONLY)
C     LCPUPD(NUMCPL)                         ; LAST FILE UPDATE   (FILE ONLY)
C     LCPCTM(NUMCPL)                         ; ACTUAL TIME WHEN CLOSED
C     LCPTIM(NUMCPL)                         ; TIME WHEN GAME SHOULD CLOSE
C     LCPSER(NUMCPL)                         ; LAST SERIAL NUMBER
C     LCPSAL(NUMTOT,NUMCPL)                  ; TOTAL SALES (COUNT , AMOUNT)
C     LCPPAD(NUMCPL)                         ; PRIZES PAID + REFUNDS
C     LCPPRG(NUMCPL)                         ; PRIZES PURGED
C     LCPPRF(NUMCPL)                         ; PAID REFUNDS
C     LCPREF(NUMCPL)                         ; TOTAL REFUND AMOUNT
C     LCPERF(NUMCPL)                         ; EARLY REFUNDS PAID
C     LCPTER(NUMCPL)                         ; TOTAL EARLY REFUNDS (LIAB)
C     LCPWON(NUMCPL)                         ; PRIZES WON
C     LCPPOL(2,NUMCPL)                       ; ROLL POOL
C     LCPTPL(NUMCPL)                         ; TOTAL PRIZE POOL
C     LCPTBK(NUMCPL)                         ; TOTAL BREAKAGE
C     LCPBRK(2,NUMCPL)                       ; WINNING ROUNDING POT
C     LCPABW(NUMCPL)                         ; AMOUNT BET ON WINNING SCORE
C     LCPODS(MAXCPLTI,NUMCPL)                ; WINNING ODDS
C     LCPWIN(2,MAXCPLTI,NUMCPL)              ; WINNING RESULTS
C     LCPHLD(2,MAXCPLTI,NUMCPL)              ; WINNING RESULTS HOLD
C     LCPTAX(NUMCPL)                         ; WINNING TAXES
C     LCPOTX(NUMTOT,NUMCPL)                  ; OVER TAX LIMIT
C     LCPMID(NUMTOT,NUMCPL)                  ; >REDMIN <REDMAX
C     LCPUTX(NUMTOT,NUMCPL)                  ; UNDER TAX LIMIT
C     LCPHST(MAXCPLTI,NUMCPL)                ; HIGHEST WINNER PER WINING COMB
C     LCPORM(NUMTOT,NUMCPL)                  ; OVER REDMAX
C     LCPENM(CPLENM_LEN/4,2,NUMCPL)          ; EVENT NAME
C     LCPDES(CPLDES_LEN/4,2,NUMCPL)          ; GAME DESCRIPTION
C     LCPNMS(CPLNMS_LEN/4,MAXCPLRW,NUMCPL)   ; ROW NAMES
C     LCPSTA(MAXCPLRW,NUMCPL)                ; ROW STATUS 1 THROUGH MAXTRW
C     LCPEST(2,NUMCPL)			     ; EVENT STATUS
C     LCPEVD(2,NUMCPL)			     ; EVENT BEGIN DATE
C     LCPEVT(2,NUMCPL)			     ; EVENT BEGIN TIME
C     LCPSBR(MAXCPLRW,NUMCPL)                ; SALES BY ROW TABLE
C     LCPREV(NUMCPL)                         ; REV #
C     LCPPFN(5,NUMCPL)                       ; POOL FILE NAME
C     LCPRTM(MAXCPLRW,NUMCPL)                ; ROW CLOSE TIMES
C     LCPPRC(NUMCPL)                         ; BASE PRICE
C     LCPSPR(NUMCPL)                         ; POOL PERCENTAGE
C     LCPTVC(CPLTVC_LEN/4,NUMCPL)    	     ; TV-CHANEL NAME
C     LCPMDS(MAXMLTD_AVL,NUMCPL)	     ; MULTI DRAW SELECTED TABLE
C						(52 BYTE / 4 = 13)
C     LCPRWS(NUMCPL)			     ; ACTUAL # OF ROWS USED.
C     LCPWCP(MAXCPLTI,NUMCPL)		     ; # WINNING COUPONS PLAYED
C     LCPWBT(NUMTOT,MAXCPLTI,NUMCPL)	     ; CNT, AMT WINNERS PLAYED BY TIES
C     LCPWRO(NUMTOT,2,NUMCPL)                ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     LCPWRA(NUMTOT,2,NUMCPL)                ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     LCPWPO(NUMTOT,2,NUMCPL)                ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     LCPWPA(NUMTOT,2,NUMCPL)                ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     LCPWPR(NUMTOT,2,NUMCPL)                ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C					     ; (1=PRWON,2=PRPAD)
C     LCPODT(MAXCPLRW/2*MAXCPLRW/2,NUMCPL)   ; TABLE OF AMTS ON COMBNS FOR ODDS
C     LCPCMB(NUMCPL)                         ; NUMBER OF WINNING COMBINATIONS
C     LCPLAT(NUMLAT,NUMCPL)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C     LCPFRS(95,NUMCPL) 		     ; FREE SPACE
C
C LOGICAL GAME FILE VARIABLE OFFSETS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C
C OFFSET PARAMETERS AND EQUIVALENCES
C
	INTEGER*4 LCPSTS_OFF, LCPWEK_OFF, LCPDAT_OFF, LCPDRW_OFF
	INTEGER*4 LCPBSD_OFF, LCPESD_OFF, LCPPUP_OFF, LCPUPD_OFF
	INTEGER*4 LCPCTM_OFF, LCPTIM_OFF, LCPSER_OFF, LCPSAL_OFF
	PARAMETER(LCPSTS_OFF = 1)		
	PARAMETER(LCPWEK_OFF = LCPSTS_OFF + NUMCPL)
	PARAMETER(LCPDAT_OFF = LCPWEK_OFF + NUMCPL)
	PARAMETER(LCPDRW_OFF = LCPDAT_OFF + NUMCPL)
	PARAMETER(LCPBSD_OFF = LCPDRW_OFF + NUMCPL)
	PARAMETER(LCPESD_OFF = LCPBSD_OFF + NUMCPL)
	PARAMETER(LCPPUP_OFF = LCPESD_OFF + NUMCPL)
	PARAMETER(LCPUPD_OFF = LCPPUP_OFF + NUMCPL)
	PARAMETER(LCPCTM_OFF = LCPUPD_OFF + NUMCPL)
	PARAMETER(LCPTIM_OFF = LCPCTM_OFF + NUMCPL)
	PARAMETER(LCPSER_OFF = LCPTIM_OFF + NUMCPL)
	PARAMETER(LCPSAL_OFF = LCPSER_OFF + NUMCPL)

	INTEGER*4 LCPPAD_OFF, LCPPRG_OFF, LCPPRF_OFF, LCPREF_OFF
	INTEGER*4 LCPERF_OFF, LCPTER_OFF, LCPWON_OFF, LCPPOL_OFF
	INTEGER*4 LCPTPL_OFF, LCPTBK_OFF, LCPBRK_OFF, LCPABW_OFF
	PARAMETER(LCPPAD_OFF = LCPSAL_OFF + NUMTOT * NUMCPL)
	PARAMETER(LCPPRG_OFF = LCPPAD_OFF + NUMCPL)
	PARAMETER(LCPPRF_OFF = LCPPRG_OFF + NUMCPL)
	PARAMETER(LCPREF_OFF = LCPPRF_OFF + NUMCPL)
	PARAMETER(LCPERF_OFF = LCPREF_OFF + NUMCPL)
	PARAMETER(LCPTER_OFF = LCPERF_OFF + NUMCPL)
	PARAMETER(LCPWON_OFF = LCPTER_OFF + NUMCPL)
	PARAMETER(LCPPOL_OFF = LCPWON_OFF + NUMCPL)
	PARAMETER(LCPTPL_OFF = LCPPOL_OFF + 2 * NUMCPL)
	PARAMETER(LCPTBK_OFF = LCPTPL_OFF + NUMCPL)
	PARAMETER(LCPBRK_OFF = LCPTBK_OFF + NUMCPL)
	PARAMETER(LCPABW_OFF = LCPBRK_OFF + 2 * NUMCPL)

	INTEGER*4 LCPODS_OFF, LCPWIN_OFF, LCPHLD_OFF, LCPTAX_OFF
	INTEGER*4 LCPOTX_OFF, LCPMID_OFF, LCPUTX_OFF, LCPHST_OFF
	INTEGER*4 LCPORM_OFF, LCPENM_OFF, LCPDES_OFF, LCPNMS_OFF
	PARAMETER(LCPODS_OFF = LCPABW_OFF + NUMCPL)
	PARAMETER(LCPWIN_OFF = LCPODS_OFF + MAXCPLTI * NUMCPL)
	PARAMETER(LCPHLD_OFF = LCPWIN_OFF + 2 * MAXCPLTI * NUMCPL)
	PARAMETER(LCPTAX_OFF = LCPHLD_OFF + 2 * MAXCPLTI * NUMCPL)
	PARAMETER(LCPOTX_OFF = LCPTAX_OFF + NUMCPL)
	PARAMETER(LCPMID_OFF = LCPOTX_OFF + NUMTOT * NUMCPL)
	PARAMETER(LCPUTX_OFF = LCPMID_OFF + NUMTOT * NUMCPL)
	PARAMETER(LCPHST_OFF = LCPUTX_OFF + NUMTOT * NUMCPL)
	PARAMETER(LCPORM_OFF = LCPHST_OFF + MAXCPLTI * NUMCPL)
	PARAMETER(LCPENM_OFF = LCPORM_OFF + NUMTOT*NUMCPL)
	PARAMETER(LCPDES_OFF = LCPENM_OFF + (CPLENM_LEN/4) * 2 * NUMCPL)
	PARAMETER(LCPNMS_OFF = LCPDES_OFF + (CPLDES_LEN/4) * 2 * NUMCPL)

	INTEGER*4 LCPSTA_OFF, LCPEST_OFF,LCPSBR_OFF, LCPREV_OFF, LCPPFN_OFF
	INTEGER*4 LCPRTM_OFF, LCPPRC_OFF, LCPSPR_OFF, LCPTVC_OFF
	INTEGER*4 LCPMDS_OFF, LCPEVD_OFF, LCPEVT_OFF
	PARAMETER(LCPSTA_OFF = LCPNMS_OFF + (CPLNMS_LEN/4) * MAXCPLRW * NUMCPL)
	PARAMETER(LCPEST_OFF = LCPSTA_OFF + MAXCPLRW * NUMCPL)
	PARAMETER(LCPEVD_OFF = LCPEST_OFF + 2 * NUMCPL)
	PARAMETER(LCPEVT_OFF = LCPEVD_OFF + 2 * NUMCPL)
	PARAMETER(LCPSBR_OFF = LCPEVT_OFF + 2 * NUMCPL)
	PARAMETER(LCPREV_OFF = LCPSBR_OFF + MAXCPLRW * NUMCPL)
	PARAMETER(LCPPFN_OFF = LCPREV_OFF + NUMCPL)
	PARAMETER(LCPRTM_OFF = LCPPFN_OFF + 5 * NUMCPL)
	PARAMETER(LCPPRC_OFF = LCPRTM_OFF + MAXCPLRW * NUMCPL)
	PARAMETER(LCPSPR_OFF = LCPPRC_OFF + NUMCPL)
	PARAMETER(LCPTVC_OFF = LCPSPR_OFF + NUMCPL)
	PARAMETER(LCPMDS_OFF = LCPTVC_OFF + (CPLTVC_LEN/4) * NUMCPL)		

        INTEGER*4 LCPWRO_OFF, LCPWRA_OFF, LCPWPO_OFF, LCPWPA_OFF
        INTEGER*4 LCPWPR_OFF, LCPRWS_OFF, LCPWCP_OFF, LCPODT_OFF
	INTEGER*4 LCPWBT_OFF
	PARAMETER(LCPRWS_OFF = LCPMDS_OFF + (MAXMLTD_AVL/4) * NUMCPL)
	PARAMETER(LCPWCP_OFF = LCPRWS_OFF + NUMCPL)
	PARAMETER(LCPWBT_OFF = LCPWCP_OFF + MAXCPLTI * NUMCPL)
        PARAMETER(LCPWRO_OFF = LCPWBT_OFF + NUMTOT * MAXCPLTI * NUMCPL)
        PARAMETER(LCPWRA_OFF = LCPWRO_OFF + NUMTOT * 2 * NUMCPL)
        PARAMETER(LCPWPO_OFF = LCPWRA_OFF + NUMTOT * 2 * NUMCPL)
        PARAMETER(LCPWPA_OFF = LCPWPO_OFF + NUMTOT * 2 * NUMCPL)
        PARAMETER(LCPWPR_OFF = LCPWPA_OFF + NUMTOT * 2 * NUMCPL) 
        PARAMETER(LCPODT_OFF = LCPWPR_OFF + NUMTOT * 2 * NUMCPL) 

	INTEGER*4 LCPCMB_OFF
	PARAMETER(LCPCMB_OFF =LCPODT_OFF +
     *            MAXCPLRW/2 * MAXCPLRW/2 * NUMCPL)
        INTEGER*4 LCPLAT_OFF
	PARAMETER(LCPLAT_OFF = LCPCMB_OFF + NUMCPL)

	INTEGER*4 LCPFRS_OFF
        PARAMETER(LCPFRS_OFF = LCPLAT_OFF + NUMLAT*NUMCPL) 


        INTEGER*4 LCPRECLEN
        PARAMETER(LCPRECLEN = LCPFRS_OFF + 95*NUMCPL -1)
C                                                                               
C LOGICAL RECORD DEFINITION                                                     
C                                                                               
        INTEGER*4 LCPREC(LCPRECLEN)

C CALCULATE FREE SPACE BASED ON MACHINE DEPENDENT SECTOR SIZES.
C SHOULD ALLWAYS ADD UP TO A EVEN SECTOR SIZE BYTES (VAX 512).
C NOTE! IN CALCULATIONS, FRE_OFF-2 IS DONE TO TAKE CARE OF WHEN THE DATA SIZE
C       ENDS ON A EVEN SECTOR SIZE.
C
C        INTEGER*4 LCPSEC_VAX, LCPSEC_NUM
C        PARAMETER (LCPSEC_VAX = SECSIZE/4)
C	PARAMETER (LCPSEC_NUM = NINT(FLOAT((LCPFRE_OFF-2)/LCPSEC_VAX)+.5))
C
C        INTEGER*4 LCPLEN, LCPSEC
C        PARAMETER(LCPLEN = LCPSEC_VAX * LCPSEC_NUM)        ! even sector size
C        PARAMETER(LCPSEC = LCPLEN/64)
C
C        INTEGER*4 LCPREC(LCPLEN)

	INTEGER*4 LCPSTS(NUMCPL),LCPWEK(NUMCPL)
        INTEGER*4 LCPDAT(NUMCPL),LCPBSD(NUMCPL)
	INTEGER*4 LCPESD(NUMCPL),LCPCTM(NUMCPL)
	INTEGER*4 LCPTIM(NUMCPL),LCPSAL(NUMTOT,NUMCPL)
	INTEGER*4 LCPPAD(NUMCPL),LCPPRG(NUMCPL)
	INTEGER*4 LCPREF(NUMCPL),LCPWON(NUMCPL)
	INTEGER*4 LCPPOL(2,NUMCPL),LCPTPL(NUMCPL)
	INTEGER*4 LCPTBK(NUMCPL),LCPBRK(2,NUMCPL)
	INTEGER*4 LCPABW(NUMCPL),LCPODS(MAXCPLTI,NUMCPL)
	INTEGER*4 LCPWIN(2,MAXCPLTI,NUMCPL),LCPTAX(NUMCPL)
	INTEGER*4 LCPOTX(NUMTOT,NUMCPL),LCPHLD(2,MAXCPLTI,NUMCPL)
	INTEGER*4 LCPMID(NUMTOT,NUMCPL),LCPUTX(NUMTOT,NUMCPL)
	INTEGER*4 LCPHST(MAXCPLTI,NUMCPL),LCPORM(2,NUMCPL)
	INTEGER*4 LCPENM(CPLENM_LEN/4,2,NUMCPL)
	INTEGER*4 LCPDES(CPLDES_LEN/4,2,NUMCPL)
	INTEGER*4 LCPNMS(CPLNMS_LEN/4,MAXCPLRW,NUMCPL)
	INTEGER*4 LCPREV(NUMCPL),LCPPUP(NUMCPL)
	INTEGER*4 LCPUPD(NUMCPL),LCPSTA(MAXCPLRW,NUMCPL),LCPEST(2,NUMCPL)
	INTEGER*4 LCPEVD(2,NUMCPL),LCPEVT(2,NUMCPL)
	INTEGER*4 LCPSBR(MAXCPLRW,NUMCPL),LCPPFN(5,NUMCPL)
	INTEGER*4 LCPERF(NUMCPL),LCPTER(NUMCPL)
	INTEGER*4 LCPDRW(NUMCPL)
	INTEGER*4 LCPRTM(MAXCPLRW,NUMCPL),LCPSER(NUMCPL)
	INTEGER*4 LCPPRF(NUMCPL),LCPSPR(NUMCPL),LCPPRC(NUMCPL)
	INTEGER*4 LCPTVC(CPLTVC_LEN/4,NUMCPL)

	BYTE	  LCPMDS(MAXMLTD_AVL,NUMCPL)

	INTEGER*4 LCPRWS(NUMCPL),LCPWCP(MAXCPLTI,NUMCPL)
	INTEGER*4 LCPWBT(NUMTOT,MAXCPLTI,NUMCPL)
        INTEGER*4 LCPWRO(NUMTOT,2,NUMCPL),LCPWRA(NUMTOT,2,NUMCPL)
	INTEGER*4 LCPWPO(NUMTOT,2,NUMCPL)
        INTEGER*4 LCPWPA(NUMTOT,2,NUMCPL),LCPWPR(NUMTOT,2,NUMCPL)       
        INTEGER*4 LCPODT(MAXCPLRW/2*MAXCPLRW/2,NUMCPL)
	INTEGER*4 LCPCMB(NUMCPL),LCPLAT(NUMLAT,NUMCPL)

	INTEGER*4 LCPFRS(95,NUMCPL)


	EQUIVALENCE(LCPSTS,LCPREC(LCPSTS_OFF))
	EQUIVALENCE(LCPWEK,LCPREC(LCPWEK_OFF))
	EQUIVALENCE(LCPDAT,LCPREC(LCPDAT_OFF))
	EQUIVALENCE(LCPDRW,LCPREC(LCPDRW_OFF))
	EQUIVALENCE(LCPBSD,LCPREC(LCPBSD_OFF))
	EQUIVALENCE(LCPESD,LCPREC(LCPESD_OFF))
	EQUIVALENCE(LCPPUP,LCPREC(LCPPUP_OFF))
	EQUIVALENCE(LCPUPD,LCPREC(LCPUPD_OFF))
	EQUIVALENCE(LCPCTM,LCPREC(LCPCTM_OFF))
	EQUIVALENCE(LCPTIM,LCPREC(LCPTIM_OFF))
	EQUIVALENCE(LCPSER,LCPREC(LCPSER_OFF))
	EQUIVALENCE(LCPSAL,LCPREC(LCPSAL_OFF))
	EQUIVALENCE(LCPPAD,LCPREC(LCPPAD_OFF))
	EQUIVALENCE(LCPPRG,LCPREC(LCPPRG_OFF))
	EQUIVALENCE(LCPPRF,LCPREC(LCPPRF_OFF))
	EQUIVALENCE(LCPREF,LCPREC(LCPREF_OFF))
	EQUIVALENCE(LCPERF,LCPREC(LCPERF_OFF))
	EQUIVALENCE(LCPTER,LCPREC(LCPTER_OFF))
	EQUIVALENCE(LCPWON,LCPREC(LCPWON_OFF))
	EQUIVALENCE(LCPPOL,LCPREC(LCPPOL_OFF))
	EQUIVALENCE(LCPTPL,LCPREC(LCPTPL_OFF))
	EQUIVALENCE(LCPTBK,LCPREC(LCPTBK_OFF))
	EQUIVALENCE(LCPBRK,LCPREC(LCPBRK_OFF))
	EQUIVALENCE(LCPABW,LCPREC(LCPABW_OFF))
	EQUIVALENCE(LCPODS,LCPREC(LCPODS_OFF))
	EQUIVALENCE(LCPWIN,LCPREC(LCPWIN_OFF))
	EQUIVALENCE(LCPHLD,LCPREC(LCPHLD_OFF))
	EQUIVALENCE(LCPTAX,LCPREC(LCPTAX_OFF))
	EQUIVALENCE(LCPOTX,LCPREC(LCPOTX_OFF))
	EQUIVALENCE(LCPMID,LCPREC(LCPMID_OFF))
	EQUIVALENCE(LCPUTX,LCPREC(LCPUTX_OFF))
	EQUIVALENCE(LCPHST,LCPREC(LCPHST_OFF))
	EQUIVALENCE(LCPORM,LCPREC(LCPORM_OFF))
	EQUIVALENCE(LCPENM,LCPREC(LCPENM_OFF))
	EQUIVALENCE(LCPDES,LCPREC(LCPDES_OFF))
	EQUIVALENCE(LCPNMS,LCPREC(LCPNMS_OFF))
	EQUIVALENCE(LCPSTA,LCPREC(LCPSTA_OFF))
	EQUIVALENCE(LCPEST,LCPREC(LCPEST_OFF))
	EQUIVALENCE(LCPEVD,LCPREC(LCPEVD_OFF))
	EQUIVALENCE(LCPEVT,LCPREC(LCPEVT_OFF))
	EQUIVALENCE(LCPSBR,LCPREC(LCPSBR_OFF))
	EQUIVALENCE(LCPREV,LCPREC(LCPREV_OFF))
	EQUIVALENCE(LCPPFN,LCPREC(LCPPFN_OFF))
	EQUIVALENCE(LCPRTM,LCPREC(LCPRTM_OFF))
	EQUIVALENCE(LCPPRC,LCPREC(LCPPRC_OFF))
	EQUIVALENCE(LCPSPR,LCPREC(LCPSPR_OFF))
	EQUIVALENCE(LCPTVC,LCPREC(LCPTVC_OFF))
	EQUIVALENCE(LCPMDS,LCPREC(LCPMDS_OFF))
	EQUIVALENCE(LCPRWS,LCPREC(LCPRWS_OFF))
	EQUIVALENCE(LCPWCP,LCPREC(LCPWCP_OFF))
	EQUIVALENCE(LCPWBT,LCPREC(LCPWBT_OFF))
        EQUIVALENCE(LCPWRO,LCPREC(LCPWRO_OFF))
        EQUIVALENCE(LCPWRA,LCPREC(LCPWRA_OFF))
        EQUIVALENCE(LCPWPO,LCPREC(LCPWPO_OFF))
        EQUIVALENCE(LCPWPA,LCPREC(LCPWPA_OFF))
        EQUIVALENCE(LCPWPR,LCPREC(LCPWPR_OFF))
        EQUIVALENCE(LCPODT,LCPREC(LCPODT_OFF))
        EQUIVALENCE(LCPCMB,LCPREC(LCPCMB_OFF))
        EQUIVALENCE(LCPFRS,LCPREC(LCPFRS_OFF))
        EQUIVALENCE(LCPLAT,LCPREC(LCPLAT_OFF))
