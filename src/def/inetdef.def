! ********************************************************************************************************************************
!  Created 28-JUL-1992 13:52:23 by VAX-11 SDL V3.0-2      Source:  9-JUN-1992 22:23:57 WORK2$:[UCX.V2.BL23.NET.][SRC]INET_USER.SDL; 
! ********************************************************************************************************************************
 
!*** MODULE $ARPREQDEF ***
	PARAMETER ARP$M_IN_USE = '00000001'X
	PARAMETER ARP$M_COM = '00000002'X
	PARAMETER ARP$M_PERM = '00000004'X
	PARAMETER ARP$M_PUBL = '00000008'X
	PARAMETER ARP$M_USETRAILERS = '00000010'X
	PARAMETER ARP$C_LENGTH = '00000022'X
	PARAMETER ARP$K_LENGTH = '00000022'X
	STRUCTURE /ARPREQDEF/
	    CHARACTER*16 ARP$T_PA			!  IP address
!  $SOCKADDRINDEF defines offsets
	    CHARACTER*16 ARP$T_HA			!  Ethernet hardware address
!  $SOCKADDRDEF defines offsets
	    UNION
	        MAP
	        INTEGER*2 ARP$W_FLAGS			!  flags
	        END MAP
	        MAP
	            PARAMETER ARP$S_IN_USE = 1
	            PARAMETER ARP$V_IN_USE = 0		!  ARP entry is in use
	            PARAMETER ARP$S_COM = 1
	            PARAMETER ARP$V_COM = 1			!  ARP entry is complete
	            PARAMETER ARP$S_PERM = 1
	            PARAMETER ARP$V_PERM = 2		!  ARP entry is pemanent
	            PARAMETER ARP$S_PUBL = 1
	            PARAMETER ARP$V_PUBL = 3		!  ARP entry is public
	            PARAMETER ARP$S_USETRAILERS = 1
	            PARAMETER ARP$V_USETRAILERS = 4		!  hosts uses trailers
	        BYTE %FILL (1)
	        END MAP
	    END UNION
	END STRUCTURE	! ARPREQDEF
 
!*** MODULE $IFREQDEF ***
	PARAMETER IFR$M_IFF_UP = '00000001'X
	PARAMETER IFR$M_IFF_BROADCAST = '00000002'X
	PARAMETER IFR$M_IFF_DEBUG = '00000004'X
	PARAMETER IFR$M_IFF_LOOPBACK = '00000008'X
	PARAMETER IFR$M_IFF_POINTOPOINT = '00000010'X
	PARAMETER IFR$M_IFF_NOTRAILERS = '00000020'X
	PARAMETER IFR$M_IFF_RUNNING = '00000040'X
	PARAMETER IFR$M_IFF_NOARP = '00000080'X
	PARAMETER IFR$M_IFF_PROMISC = '00000100'X
	PARAMETER IFR$M_IFF_ALLMULTI = '00000200'X
	PARAMETER IFR$M_IFF_DYNPROTO = '00000400'X
	PARAMETER IFR$M_IFF_MOP = '00000800'X
	PARAMETER IFR$M_IFF_NONAME = '00004000'X
	PARAMETER IFR$M_IFF_CLUSTER = '00008000'X
	PARAMETER IFR$C_LENGTH = '00000020'X
	PARAMETER IFR$K_LENGTH = '00000020'X
	STRUCTURE /IFREQDEF/
	    CHARACTER*16 IFR$T_NAME			!  device name
	    UNION
	        MAP
	        CHARACTER*16 IFR$T_ADDR			!  SOCKADDRIN structure 
	        END MAP
	        MAP
	        CHARACTER*16 IFR$T_DSTADDR		!  SOCKADDRIN structure 
	        END MAP
	        MAP
	        CHARACTER*16 IFR$T_BROADADDR		!  SOCKADDRIN structure 
	        END MAP
	        MAP
	        UNION
	            MAP
	            INTEGER*2 IFR$W_FLAGS			!  flags
	            END MAP
	            MAP
	                PARAMETER IFR$S_IFF_UP = 1
	                PARAMETER IFR$V_IFF_UP = 0		!  Interface is up
	                PARAMETER IFR$S_IFF_BROADCAST = 1
	                PARAMETER IFR$V_IFF_BROADCAST = 1	!  Broadcast address valid
	                PARAMETER IFR$S_IFF_DEBUG = 1
	                PARAMETER IFR$V_IFF_DEBUG = 2		!  Turn on tracing 
	                PARAMETER IFR$S_IFF_LOOPBACK = 1
	                PARAMETER IFR$V_IFF_LOOPBACK = 3	!  Interface set to loopback
	                PARAMETER IFR$S_IFF_POINTOPOINT = 1
	                PARAMETER IFR$V_IFF_POINTOPOINT = 4	!  Interface is point-to-point link
	                PARAMETER IFR$S_IFF_NOTRAILERS = 1
	                PARAMETER IFR$V_IFF_NOTRAILERS = 5	!  Avoid use of trailers
	                PARAMETER IFR$S_IFF_RUNNING = 1
	                PARAMETER IFR$V_IFF_RUNNING = 6		!  Resources are allocated 
	                PARAMETER IFR$S_IFF_NOARP = 1
	                PARAMETER IFR$V_IFF_NOARP = 7		!  No address resolution protocol
	                PARAMETER IFR$S_IFF_PROMISC = 1
	                PARAMETER IFR$V_IFF_PROMISC = 8		!  Receive all packets 
	                PARAMETER IFR$S_IFF_ALLMULTI = 1
	                PARAMETER IFR$V_IFF_ALLMULTI = 9	!  Receive all multicasting packets
	                PARAMETER IFR$S_IFF_DYNPROTO = 1
	                PARAMETER IFR$V_IFF_DYNPROTO = 10	!  Support dynamic proto dispatching
	                PARAMETER IFR$S_IFF_MOP = 1
	                PARAMETER IFR$V_IFF_MOP = 11		!  Device in MOP mode; not in use
	                PARAMETER IFR$S_IFF_RESERVE = 2
	                PARAMETER IFR$V_IFF_RESERVE = 12	!  SPARE bits
	                PARAMETER IFR$S_IFF_NONAME = 1
	                PARAMETER IFR$V_IFF_NONAME = 14		!  Interface cluster name flag
	                PARAMETER IFR$S_IFF_CLUSTER = 1
	                PARAMETER IFR$V_IFF_CLUSTER = 15
	                BYTE %FILL (2)				!  Interface is a cluster IFNET
	            END MAP
	            MAP
	            INTEGER*4 IFR$L_DATA			!  pointer to data
	            END MAP
	        END UNION
	        END MAP
	    END UNION
	END STRUCTURE	! IFREQDEF
 
!*** MODULE $INETERRDEF ***
	PARAMETER EPERM = '00000001'X		!  Not owner 
	PARAMETER ENOENT = '00000002'X		!  No such file or directory 
	PARAMETER ESRCH = '00000003'X		!  No such process 
	PARAMETER EINTR = '00000004'X		!  Interrupted system call 
	PARAMETER EIO = '00000005'X		!  I/O error 
	PARAMETER ENXIO = '00000006'X		!  No such device or address 
	PARAMETER E2BIG = '00000007'X		!  Arg list too long 
	PARAMETER ENOEXEC = '00000008'X		!  Exec format error 
	PARAMETER EBADF = '00000009'X		!  Bad file number 
	PARAMETER ECHILD = '0000000A'X		!  No children 
	PARAMETER EAGAIN = '0000000B'X		!  No more processes 
	PARAMETER ENOMEM = '0000000C'X		!  Not enough core 
	PARAMETER EACCES = '0000000D'X		!  Permission denied 
	PARAMETER EFAULT = '0000000E'X		!  Bad address 
	PARAMETER ENOTBLK = '0000000F'X		!  Block device required 
	PARAMETER EBUSY = '00000010'X		!  Mount device busy 
	PARAMETER EEXIST = '00000011'X		!  File exists 
	PARAMETER EXDEV = '00000012'X		!  Cross-device link 
	PARAMETER ENODEV = '00000013'X		!  No such device 
	PARAMETER ENOTDIR = '00000014'X		!  Not a directory
	PARAMETER EISDIR = '00000015'X		!  Is a directory 
	PARAMETER EINVAL = '00000016'X		!  Invalid argument 
	PARAMETER ENFILE = '00000017'X		!  File table overflow 
	PARAMETER EMFILE = '00000018'X		!  Too many open files 
	PARAMETER ENOTTY = '00000019'X		!  Not a typewriter 
	PARAMETER ETXTBSY = '0000001A'X		!  Text file busy 
	PARAMETER EFBIG = '0000001B'X		!  File too large 
	PARAMETER ENOSPC = '0000001C'X		!  No space left on device 
	PARAMETER ESPIPE = '0000001D'X		!  Illegal seek 
	PARAMETER EROFS = '0000001E'X		!  Read-only file system 
	PARAMETER EMLINK = '0000001F'X		!  Too many links 
	PARAMETER EPIPE = '00000020'X		!  Broken pipe 
!  math software 
	PARAMETER EDOM = '00000021'X		!  Argument too large 
	PARAMETER ERANGE = '00000022'X		!  Result too large 
!  non-blocking and interrupt i/o 
	PARAMETER EWOULDBLOCK = '00000023'X	!  Operation would block 
	PARAMETER EINPROGRESS = '00000024'X	!  Operation now in progress 
	PARAMETER EALREADY = '00000025'X	!  Operation already in progress 
!  ipc/network software 
!  argument errors 
	PARAMETER ENOTSOCK = '00000026'X	!  Socket operation on non-socket 
	PARAMETER EDESTADDRREQ = '00000027'X	!  Destination address required 
	PARAMETER EMSGSIZE = '00000028'X	!  Message too long 
	PARAMETER EPROTOTYPE = '00000029'X	!  Protocol wrong type for socket 
	PARAMETER ENOPROTOOPT = '0000002A'X	!  Protocol not available 
	PARAMETER EPROTONOSUPPORT = '0000002B'X	!  Protocol not supported 
	PARAMETER ESOCKTNOSUPPORT = '0000002C'X	!  Socket type not supported 
	PARAMETER EOPNOTSUPP = '0000002D'X	!  Operation not supported on socket 
	PARAMETER EPFNOSUPPORT = '0000002E'X	!  Protocol family not supported 
	PARAMETER EAFNOSUPPORT = '0000002F'X	!  Address family not supported by protocol family 
	PARAMETER EADDRINUSE = '00000030'X	!  Address already in use 
	PARAMETER EADDRNOTAVAIL = '00000031'X	!  Can't assign requested address 
!  operational errors 
	PARAMETER ENETDOWN = '00000032'X	!  Network is down 
	PARAMETER ENETUNREACH = '00000033'X	!  Network is unreachable 
	PARAMETER ENETRESET = '00000034'X	!  Network dropped connection on reset 
	PARAMETER ECONNABORTED = '00000035'X	!  Software caused connection abort 
	PARAMETER ECONNRESET = '00000036'X	!  Connection reset by peer 
	PARAMETER ENOBUFS = '00000037'X		!  No buffer space available 
	PARAMETER EISCONN = '00000038'X		!  Socket is already connected 
	PARAMETER ENOTCONN = '00000039'X	!  Socket is not connected 
	PARAMETER ESHUTDOWN = '0000003A'X	!  Can't send after socket shutdown 
	PARAMETER ETOOMANYREFS = '0000003B'X	!  Too many references: can't splice 
	PARAMETER ETIMEDOUT = '0000003C'X	!  Connection timed out 
	PARAMETER ECONNREFUSED = '0000003D'X	!  Connection refused 
	PARAMETER ELOOP = '0000003E'X		!  Too many levels of symbolic links 
	PARAMETER ENAMETOOLONG = '0000003F'X	!  File name too long 
!  should be rearranged 
	PARAMETER EHOSTDOWN = '00000040'X	!  Host is down 
	PARAMETER EHOSTUNREACH = '00000041'X	!  No route to host 
	PARAMETER ENOTEMPTY = '00000042'X	!  Directory not empty 
!  quotas & mush 
	PARAMETER EPROCLIM = '00000043'X	!  Too many processes 
	PARAMETER EUSERS = '00000044'X		!  Too many users 
	PARAMETER EDQUOT = '00000045'X		!  Disc quota exceeded 
!  IPC errors
	PARAMETER ENOMSG = '00000046'X		!  No message of desired type 
	PARAMETER EIDRM = '00000047'X		!  Identifier removed 
!  Alignment error of some type (i.e., cluster, page, block ...) 
	PARAMETER EALIGN = '00000048'X		!  alignment error 
 
!*** MODULE $INETSYMDEF ***
	PARAMETER DVI$_ACP_TCP = '00000002'X
	PARAMETER INET$C_ICMP = '00000001'X
	PARAMETER INET$C_RAW_IP = '000000FF'X
	PARAMETER INET$C_TCP = '00000006'X
	PARAMETER INET$C_UDP = '00000011'X
	PARAMETER INET$C_AUXS = '0000007F'X
	PARAMETER INET$C_REXEC = '00000080'X
	PARAMETER IPPROTO$C_ICMP = '00000001'X
	PARAMETER IPPROTO$C_RAW_IP = '000000FF'X
	PARAMETER IPPROTO$C_TCP = '00000006'X
	PARAMETER IPPROTO$C_UDP = '00000011'X
	PARAMETER IPPROTO$C_AUXS = '0000007F'X
	PARAMETER IPPROTO$C_REXEC = '00000080'X
! 
	PARAMETER UCX$C_ICMP = '00000001'X
	PARAMETER UCX$C_RAW_IP = '000000FF'X
	PARAMETER UCX$C_TCP = '00000006'X
	PARAMETER UCX$C_UDP = '00000011'X
	PARAMETER UCX$C_AUXS = '0000007F'X
	PARAMETER UCX$C_REXEC = '00000080'X
! 
!  Ports < IP_PROTO$C_RESERVED are reserved for
!  privileged processes (e.g. root).
! 
	PARAMETER IP_PROTO$C_RESERVED = '00000400'X
	PARAMETER INET_PROTYP$C_STREAM = '00000001'X !  stream type
	PARAMETER INET_PROTYP$C_DGRAM = '00000002'X !  datagram type
	PARAMETER INET_PROTYP$C_RAW = '00000003'X !  raw type
! 
	PARAMETER UCX$C_STREAM = '00000001'X
	PARAMETER UCX$C_DGRAM = '00000002'X
	PARAMETER UCX$C_RAW = '00000003'X
	PARAMETER INET$C_IPOPT = '00000000'X	!  IP opt type parameter
	PARAMETER INET$C_SOCKOPT = '00000001'X	!  setsockopt type parameter
	PARAMETER INET$C_IOCTL = '00000002'X	!  ioctl type parameter
	PARAMETER INET$C_DATA = '00000003'X	!  data
	PARAMETER INET$C_SOCK_NAME = '00000004'X !  socket name
	PARAMETER INET$C_RESERVE_1 = '00000005'X
	PARAMETER INET$C_TCPOPT = '00000006'X	!  TCP option type
! 
	PARAMETER UCX$C_IPOPT = '00000000'X
	PARAMETER UCX$C_SOCKOPT = '00000001'X
	PARAMETER UCX$C_TCPOPT = '00000006'X
	PARAMETER UCX$C_IOCTL = '00000002'X
	PARAMETER UCX$C_DATA = '00000003'X
	PARAMETER INET$C_DSC_RCV = '00000000'X	!  discard received messages
	PARAMETER INET$C_DSC_SND = '00000001'X	!  discard sent messages
	PARAMETER INET$C_DSC_ALL = '00000002'X	!  discard all messages
	PARAMETER UCX$C_DSC_RCV = '00000000'X
	PARAMETER UCX$C_DSC_SND = '00000001'X
	PARAMETER UCX$C_DSC_ALL = '00000002'X
	PARAMETER UCX$C_SO_SNDBUF = '00001001'X
	PARAMETER UCX$C_SO_RCVBUF = '00001002'X
	PARAMETER UCX$C_SO_SNDLOWAT = '00001003'X
	PARAMETER UCX$C_SO_RCVLOWAT = '00001004'X
	PARAMETER UCX$C_SO_SNDTIMEO = '00001005'X
	PARAMETER UCX$C_SO_RCVTIMEO = '00001006'X
	PARAMETER UCX$C_SO_ERROR = '00001007'X
	PARAMETER UCX$C_SO_TYPE = '00001008'X
	PARAMETER UCX$C_SO_NO_RCV_CHKSUM = '00004000'X
	PARAMETER UCX$C_SO_NO_SND_CHKSUM = '00008000'X
	PARAMETER UCX$C_SO_NO_CHKSUM = '0000C000'X
! ;constant (
! ;	DEBUGGING 	
! ;	,ACCEPTCONN 
! ;	,REUSEADDR 
! ;	,KEEPALIVE 
! ;	,DONTROUTE 
! ;	,BROADCAST 
! ;	,USELOOPBACK 
! ;	,LINGER 
! ;	,OOBINLINE 
! ;	) equals 1 increment 1 prefix UCX$ tag C counter #types;
	PARAMETER INET$C_TCPOPT_EOL = '00000000'X
	PARAMETER INET$C_TCPOPT_NOP = '00000001'X
	PARAMETER INET$C_TCPOPT_MAXSEG = '00000002'X
	PARAMETER INET$C_TCP_NODELAY = '00000001'X !  don't delay send to coalesce packets 
	PARAMETER INET$C_TCP_MAXSEG = '00000002'X !  set maximum segment size 
	PARAMETER INET$C_TCP_PROBE_IDLE = '00000080'X !  probe idle timer
	PARAMETER INET$C_TCP_DROP_IDLE = '00000081'X !  drop idle timer
	PARAMETER UCX$C_TCPOPT_EOL = '00000000'X
	PARAMETER UCX$C_TCPOPT_NOP = '00000001'X
	PARAMETER UCX$C_TCPOPT_MAXSEG = '00000002'X
	PARAMETER UCX$C_TCP_NODELAY = '00000001'X
	PARAMETER UCX$C_TCP_MAXSEG = '00000002'X
	PARAMETER UCX$C_TCP_PROBE_IDLE = '00000080'X
	PARAMETER UCX$C_TCP_DROP_IDLE = '00000081'X
	PARAMETER INET$C_IP_TOS = '00000003'X
	PARAMETER INET$C_IP_TTL = '00000004'X
	PARAMETER UCX$C_IP_TOS = '00000003'X
	PARAMETER UCX$C_IP_TTL = '00000004'X
	PARAMETER INET$C_AF_UNSPEC = '00000000'X !  unspecified 
	PARAMETER INET$C_AF_UNIX = '00000001'X	!  local to host (pipes, portals) 
	PARAMETER INET$C_AF_INET = '00000002'X	!  internetwork: UDP, TCP, etc. 
	PARAMETER INET$C_AF_MAX = '00000003'X	!  maximum value 
	PARAMETER INET$C_INADDR_ANY = '00000000'X
	PARAMETER INET$C_INADDR_BROADCAST = 'FFFFFFFF'X
! 
	PARAMETER UCX$C_AF_UNSPEC = '00000000'X
	PARAMETER UCX$C_AF_UNIX = '00000001'X
	PARAMETER UCX$C_AF_INET = '00000002'X
	PARAMETER UCX$C_AF_MAX = '00000003'X
	PARAMETER UCX$C_INADDR_ANY = '00000000'X
	PARAMETER UCX$C_INADDR_BROADCAST = 'FFFFFFFF'X
! 
	PARAMETER INET$M_MSG_OOB = '00000001'X
	PARAMETER INET$M_MSG_PEEK = '00000002'X
	PARAMETER INET$M_MSG_DONTROUTE = '00000004'X
	PARAMETER INET$M_DUMMYN_4 = '00000008'X
	PARAMETER INET$M_DUMMYN_5 = '00000010'X
	PARAMETER INET$M_MSG_PURGE = '00000020'X
	PARAMETER INET$M_MSG_NBIO = '00000040'X
	PARAMETER INET$M_MSG_BLOCKALL = '00000080'X
	STRUCTURE /MSGBITS/
! 
	        PARAMETER INET$S_MSG_OOB = 1
	        PARAMETER INET$V_MSG_OOB = 0		!  turn on event logging, not used
	        PARAMETER INET$S_MSG_PEEK = 1
	        PARAMETER INET$V_MSG_PEEK = 1		!  socket has had LISTEN
	        PARAMETER INET$S_MSG_DONTROUTE = 1
	        PARAMETER INET$V_MSG_DONTROUTE = 2	!  use only the interface addr
! 
	        PARAMETER INET$S_DUMMYN_4 = 1
	        PARAMETER INET$V_DUMMYN_4 = 3		!  reserve space
! 
	        PARAMETER INET$S_DUMMYN_5 = 1
	        PARAMETER INET$V_DUMMYN_5 = 4		!  reserve space
! 
	        PARAMETER INET$S_MSG_PURGE = 1
	        PARAMETER INET$V_MSG_PURGE = 5		!  Purge I/O
	        PARAMETER INET$S_MSG_NBIO = 1
	        PARAMETER INET$V_MSG_NBIO = 6		!  NON-block I/O
	        PARAMETER INET$S_MSG_BLOCKALL = 1
	        PARAMETER INET$V_MSG_BLOCKALL = 7
	        BYTE %FILL (1)				!  record TCP I/O
	END STRUCTURE	! MSGBITS
	PARAMETER INET$C_MSG_OOB = '00000001'X	!  process out-of-band data 
	PARAMETER INET$C_MSG_PEEK = '00000002'X	!  peek at incoming message 
	PARAMETER INET$C_MSG_DONTROUTE = '00000004'X !  send without 
!  using routing tables 
	PARAMETER INET$C_MSG_PURGE = '00000020'X !  block read until fill buffer
	PARAMETER INET$C_MSG_NBIO = '00000040'X	!  block read until fill buffer
	PARAMETER INET$C_MSG_BLOCKALL = '00000080'X !  block read until fill buffer
	PARAMETER INET$C_MSG_MAXIOVLEN = '00000010'X
! 
	PARAMETER UCX$C_MSG_OOB = '00000001'X	!  process out-of-band data 
	PARAMETER UCX$C_MSG_PEEK = '00000002'X	!  peek at incoming message 
	PARAMETER UCX$C_MSG_DONTROUTE = '00000004'X !  send without 
!  using routing tables 
	PARAMETER UCX$C_MSG_PURGE = '00000020'X	!  block read until fill buffer
	PARAMETER UCX$C_MSG_NBIO = '00000040'X	!  block read until fill buffer
	PARAMETER UCX$C_MSG_BLOCKALL = '00000080'X !  block read until fill buffer
	PARAMETER UCX$C_MSG_MAXIOVLEN = '00000010'X
	PARAMETER UCX$M_MSG_OOB = '00000001'X
	PARAMETER UCX$M_MSG_PEEK = '00000002'X
	PARAMETER UCX$M_MSG_DONTROUTE = '00000004'X
	PARAMETER UCX$M_DUMMYX_4 = '00000008'X
	PARAMETER UCX$M_DUMMYX_5 = '00000010'X
	PARAMETER UCX$M_MSG_PURGE = '00000020'X
	PARAMETER UCX$M_MSG_NBIO = '00000040'X
	PARAMETER UCX$M_MSG_BLOCKALL = '00000080'X
	STRUCTURE /MSGBITS_1/
! 
	        PARAMETER UCX$S_MSG_OOB = 1
	        PARAMETER UCX$V_MSG_OOB = 0		!  turn on event logging, not used
	        PARAMETER UCX$S_MSG_PEEK = 1
	        PARAMETER UCX$V_MSG_PEEK = 1		!  socket has had LISTEN
	        PARAMETER UCX$S_MSG_DONTROUTE = 1
	        PARAMETER UCX$V_MSG_DONTROUTE = 2	!  use only the interface addr
! 
	        PARAMETER UCX$S_DUMMYX_4 = 1
	        PARAMETER UCX$V_DUMMYX_4 = 3		!  reserve space
! 
	        PARAMETER UCX$S_DUMMYX_5 = 1
	        PARAMETER UCX$V_DUMMYX_5 = 4		!  reserve space
! 
	        PARAMETER UCX$S_MSG_PURGE = 1
	        PARAMETER UCX$V_MSG_PURGE = 5		!  Purge I/O
	        PARAMETER UCX$S_MSG_NBIO = 1
	        PARAMETER UCX$V_MSG_NBIO = 6		!  NON-block I/O
	        PARAMETER UCX$S_MSG_BLOCKALL = 1
	        PARAMETER UCX$V_MSG_BLOCKALL = 7
	        BYTE %FILL (1)				!  record TCP I/O
	END STRUCTURE	! MSGBITS_1
	PARAMETER UCX$M_DEBUGGING = '00000001'X
	PARAMETER UCX$M_ACCEPTCONN = '00000002'X
	PARAMETER UCX$M_REUSEADDR = '00000004'X
	PARAMETER UCX$M_KEEPALIVE = '00000008'X
	PARAMETER UCX$M_DONTROUTE = '00000010'X
	PARAMETER UCX$M_BROADCAST = '00000020'X
	PARAMETER UCX$M_USELOOPBACK = '00000040'X
	PARAMETER UCX$M_LINGER = '00000080'X
	PARAMETER UCX$M_OOBINLINE = '00000100'X
	PARAMETER UCX$M_DUMMYM_2 = '00000200'X
	PARAMETER UCX$M_DUMMYM_3 = '00000400'X
	PARAMETER UCX$M_DUMMYM_4 = '00000800'X
	PARAMETER UCX$M_DUMMYM_5 = '00001000'X
	PARAMETER UCX$M_DUMMYM_6 = '00002000'X
	PARAMETER UCX$M_NO_RCV_CHKSUM = '00004000'X
	PARAMETER UCX$M_NO_SND_CHKSUM = '00008000'X
	PARAMETER UCX$C_DEBUG = '00000001'X	!  turn on event logging, not used
	PARAMETER UCX$C_ACCEPTCONN = '00000002'X !  socket has had LISTEN
	PARAMETER UCX$C_REUSEADDR = '00000004'X	!  allow local address reuse
	PARAMETER UCX$C_KEEPALIVE = '00000008'X	!  keep connection alive
	PARAMETER UCX$C_DONTROUTE = '00000010'X	!  use only the interface addr
	PARAMETER UCX$C_BROADCAST = '00000020'X	!  allow broadcasting
	PARAMETER UCX$C_USELOOPBACK = '00000040'X !  loopback interface, not used
	PARAMETER UCX$C_LINGER = '00000080'X	!  linger at close
	PARAMETER UCX$C_OOBINLINE = '00000100'X	!  leave received OOB data in line 
	PARAMETER UCX$C_NO_RCV_CHKSUM = '00004000'X !  no receive checksum calculation
	PARAMETER UCX$C_NO_SND_CHKSUM = '00008000'X !  no send checksum calculation
	PARAMETER UCX$M_NO_CHKSUM = '0000C000'X	!  no checksum calculation
	PARAMETER UCX$C_NO_CHKSUM = '0000C000'X	!  no checksum calculation
! 
	PARAMETER UCX$C_SNDBUF = '00001001'X	!  send buffer size 
	PARAMETER UCX$C_RCVBUF = '00001002'X	!  receive buffer size 
	PARAMETER UCX$C_SNDLOWAT = '00001003'X	!  send low-water mark 
	PARAMETER UCX$C_RCVLOWAT = '00001004'X	!  receive low-water mark
	PARAMETER UCX$C_SNDTIMEO = '00001005'X	!  send timeout 
	PARAMETER UCX$C_RCVTIMEO = '00001006'X	!  receive timeout 
	PARAMETER UCX$C_ERROR = '00001007'X	!  get error status and clear 
	PARAMETER UCX$C_TYPE = '00001008'X	!  get socket type 
! 
	PARAMETER UCX$M_SNDBUF = '00001001'X	!  send buffer size 
	PARAMETER UCX$M_RCVBUF = '00001002'X	!  receive buffer size 
	PARAMETER UCX$M_SNDLOWAT = '00001003'X	!  send low-water mark 
	PARAMETER UCX$M_RCVLOWAT = '00001004'X	!  receive low-water mark
	PARAMETER UCX$M_SNDTIMEO = '00001005'X	!  send timeout 
	PARAMETER UCX$M_RCVTIMEO = '00001006'X	!  receive timeout 
	PARAMETER UCX$M_ERROR = '00001007'X	!  get error status and clear 
	PARAMETER UCX$M_TYPE = '00001008'X	!  get socket type 
	STRUCTURE /SOCKOPTDEF/
	    UNION
	        MAP
	        INTEGER*2 UCX$W_OPTIONS			!  Socket options, see socket.h 
	        END MAP
	        MAP
! 
!  Socket options bits.
! 
	            PARAMETER UCX$S_DEBUGGING = 1
	            PARAMETER UCX$V_DEBUGGING = 0		!  turn on event logging, not used
	            PARAMETER UCX$S_ACCEPTCONN = 1
	            PARAMETER UCX$V_ACCEPTCONN = 1		!  socket has had LISTEN
	            PARAMETER UCX$S_REUSEADDR = 1
	            PARAMETER UCX$V_REUSEADDR = 2		!  allow local address reuse
	            PARAMETER UCX$S_KEEPALIVE = 1
	            PARAMETER UCX$V_KEEPALIVE = 3		!  keep connection alive
	            PARAMETER UCX$S_DONTROUTE = 1
	            PARAMETER UCX$V_DONTROUTE = 4		!  use only the interface addr
	            PARAMETER UCX$S_BROADCAST = 1
	            PARAMETER UCX$V_BROADCAST = 5		!  allow broadcasting
	            PARAMETER UCX$S_USELOOPBACK = 1
	            PARAMETER UCX$V_USELOOPBACK = 6		!  loopback interface, not used
	            PARAMETER UCX$S_LINGER = 1
	            PARAMETER UCX$V_LINGER = 7		!  linger at close
	            PARAMETER UCX$S_OOBINLINE = 1
	            PARAMETER UCX$V_OOBINLINE = 8		!  leave received OOB data in line 
! 
! 
	            PARAMETER UCX$S_DUMMYM_2 = 1
	            PARAMETER UCX$V_DUMMYM_2 = 9		!  reserve space
	            PARAMETER UCX$S_DUMMYM_3 = 1
	            PARAMETER UCX$V_DUMMYM_3 = 10		!  reserve space
	            PARAMETER UCX$S_DUMMYM_4 = 1
	            PARAMETER UCX$V_DUMMYM_4 = 11		!  reserve space
	            PARAMETER UCX$S_DUMMYM_5 = 1
	            PARAMETER UCX$V_DUMMYM_5 = 12		!  reserve space
	            PARAMETER UCX$S_DUMMYM_6 = 1
	            PARAMETER UCX$V_DUMMYM_6 = 13		!  reserve space
! 
	            PARAMETER UCX$S_NO_RCV_CHKSUM = 1
	            PARAMETER UCX$V_NO_RCV_CHKSUM = 14	!  no receive checksum calculation
	            PARAMETER UCX$S_NO_SND_CHKSUM = 1
	            PARAMETER UCX$V_NO_SND_CHKSUM = 15	!  no send checksum calculation
! 
!  Additional options, not kept in so_options.
! 
	        BYTE %FILL (2)
	        END MAP
	    END UNION
	END STRUCTURE	! SOCKOPTDEF
 
!*** MODULE $OPTDEF ***
	PARAMETER OPT$C_SET_LENGTH = '00000008'X
	PARAMETER OPT$K_SET_LENGTH = '00000008'X
	PARAMETER OPT$C_GET_LENGTH = '0000000C'X
	PARAMETER OPT$K_GET_LENGTH = '0000000C'X
	STRUCTURE /OPTDEF/
	    INTEGER*2 OPT$W_LENGTH			!  length
	    INTEGER*2 OPT$W_NAME			!  name
	    INTEGER*4 OPT$L_ADDRESS			!  address
	    INTEGER*4 OPT$L_RET_LENGTH		!  address
	END STRUCTURE	! OPTDEF
 
!*** MODULE $RTENTRYDEF ***
! 
!  We distinguish between routes to hosts and routes to networks,
!  preferring the former if available.  For each route we infer
!  the interface to use from the gateway address supplied when
!  the route was entered.  Routes that forward packets through
!  gateways are marked so that the output routines know to address the
!  gateway rather than the ultimate destination.
! 
	PARAMETER RT$M_RTF_UP = '00000001'X
	PARAMETER RT$M_RTF_GATEWAY = '00000002'X
	PARAMETER RT$M_RTF_HOST = '00000004'X
	PARAMETER RT$M_RTF_DYNAMIC = '00000008'X
	PARAMETER RT$M_RTF_MODIFIED = '00000010'X
	PARAMETER RT$C_LENGTH = '00000034'X
	PARAMETER RT$K_LENGTH = '00000034'X
	STRUCTURE /RTENTRYDEF/
	    INTEGER*4 RT$L_HASH			!  Hash link
	    UNION
	        MAP
	            INTEGER*2 RT$W_DST_SIN_FAMILY		!  Address type
	            INTEGER*2 RT$W_DST_SIN_PORT		!  Port number
	            INTEGER*4 RT$L_DST_SIN_ADDR		!  Internet address
	            CHARACTER*8 RT$T_DST_SIN_ZERO		!  Unused space
	        END MAP
	        MAP
	        CHARACTER*16 RT$T_DST			!  Destination SOCKADDR structure
	        END MAP
	    END UNION
	    UNION
	        MAP
	            INTEGER*2 RT$W_GATEWAY_SIN_FAMILY	!  Address type
	            INTEGER*2 RT$W_GATEWAY_SIN_PORT		!  Port number
	            INTEGER*4 RT$L_GATEWAY_SIN_ADDR		!  Internet address
	            CHARACTER*8 RT$T_GATEWAY_SIN_ZERO	!  Unused space
	        END MAP
	        MAP
	        CHARACTER*16 RT$T_GATEWAY		!  Gateway SOCKADDR structure
	        END MAP
	    END UNION
	    UNION
	        MAP
	        INTEGER*2 RT$W_FLAGS			!  up/down?, host/net 
	        END MAP
	        MAP
	            PARAMETER RT$S_RTF_UP = 1
	            PARAMETER RT$V_RTF_UP = 0		!  route useable 
	            PARAMETER RT$S_RTF_GATEWAY = 1
	            PARAMETER RT$V_RTF_GATEWAY = 1		!  destination is a gateway 
	            PARAMETER RT$S_RTF_HOST = 1
	            PARAMETER RT$V_RTF_HOST = 2		!  host entry (net otherwise) 
	            PARAMETER RT$S_RTF_DYNAMIC = 1
	            PARAMETER RT$V_RTF_DYNAMIC = 3		!  created dynamically (by redirect)
	            PARAMETER RT$S_RTF_MODIFIED = 1
	            PARAMETER RT$V_RTF_MODIFIED = 4		!  changed by redirect 
	        BYTE %FILL (1)
	        END MAP
	    END UNION
	    INTEGER*2 RT$W_REFCNT			!  # held references 
	    INTEGER*4 RT$L_USE			!  raw # packets forwarded 
	    INTEGER*4 RT$L_IFP			!  pointer to the IFNET interface to use
	    INTEGER*4 RT$L_NEXT			!  pointer to the next RTENTRY
	END STRUCTURE	! RTENTRYDEF
 
!*** MODULE $SIOCDEF ***
	PARAMETER FIONREAD = '8004667F'X	!  Get # bytes to read 
	PARAMETER FIONBIO = '8004667E'X		!  non block I/O
	PARAMETER FIOASYNC = '8004667D'X	!  asynch I/O
	PARAMETER SIOCSHIWAT = '80047300'X	!  high water mark
	PARAMETER SIOCGHIWAT = '40047301'X	!  high water mark
	PARAMETER SIOCSLOWAT = '80047302'X	!  low water mark
	PARAMETER SIOCGLOWAT = '40047303'X	!  low water mark
	PARAMETER SIOCATMARK = '40047307'X	!  at OOB mark
	PARAMETER SIOCSPGRP = '80047308'X	!  Process group
	PARAMETER SIOCGPGRP = '40047309'X	!  Process group
	PARAMETER SIOCADDRT = '8034720A'X	!  add RT
	PARAMETER SIOCDELRT = '8034720B'X	!  delete RT
	PARAMETER SIOCGETRT = 'C034722B'X	!  get RT
	PARAMETER SIOCSIFADDR = '8020690C'X	!  set IF address
	PARAMETER SIOCGIFADDR = 'C020690D'X	!  Get IF address
	PARAMETER SIOCSIFDSTADDR = '8020690E'X	!  Destination addr
	PARAMETER SIOCGIFDSTADDR = 'C020690F'X	!  BDestination addr
	PARAMETER SIOCSIFFLAGS = '80206910'X	!  IF flags
	PARAMETER SIOCGIFFLAGS = 'C0206911'X	!  IF flags
	PARAMETER SIOCGIFBRDADDR = 'C0206912'X	!  Broadcast addr
	PARAMETER SIOCSIFBRDADDR = '80206913'X	!  Broadcats addr
	PARAMETER SIOCGIFCONF = 'C0086914'X	!  IF configuration
	PARAMETER SIOCGIFNETMASK = 'C0206915'X	!  Network mask
	PARAMETER SIOCSIFNETMASK = '80206916'X	!  Network mask
	PARAMETER SIOCSARP = '8024691E'X	!  set ARP
	PARAMETER SIOCGARP = 'C024691F'X	!  get ARP
	PARAMETER SIOCDARP = '80246920'X	!  delete ARP
	PARAMETER SIOCARPREQ = 'C0246928'X	!  ARP request
	PARAMETER SIOCENABLBACK = '80206921'X	!  enable loopback
	PARAMETER SIOCDISABLBACK = '80206922'X	!  disable loopback
	PARAMETER SIOCSTATE = 'C0166923'X	!  state
 
!*** MODULE $SOCKETOPTDEF ***
! 
!  Socket options data structure. 
! 
	PARAMETER SOCKOPT$M_DEBUG = '00000001'X
	PARAMETER SOCKOPT$M_ACCEPTCONN = '00000002'X
	PARAMETER SOCKOPT$M_REUSEADDR = '00000004'X
	PARAMETER SOCKOPT$M_KEEPALIVE = '00000008'X
	PARAMETER SOCKOPT$M_DONTROUTE = '00000010'X
	PARAMETER SOCKOPT$M_BROADCAST = '00000020'X
	PARAMETER SOCKOPT$M_USELOOPBACK = '00000040'X
	PARAMETER SOCKOPT$M_LINGER = '00000080'X
	PARAMETER SOCKOPT$M_OOBINLINE = '00000100'X
	PARAMETER SOCKOPT$M_DUMMYB_2 = '00000200'X
	PARAMETER SOCKOPT$M_DUMMYB_3 = '00000400'X
	PARAMETER SOCKOPT$M_DUMMYB_4 = '00000800'X
	PARAMETER SOCKOPT$M_DUMMYB_5 = '00001000'X
	PARAMETER SOCKOPT$M_DUMMYB_6 = '00002000'X
	PARAMETER SOCKOPT$M_NO_RCV_CHKSUM = '00004000'X
	PARAMETER SOCKOPT$M_NO_SND_CHKSUM = '00008000'X
	PARAMETER SOCKOPT$M_NO_CHKSUM = '0000C000'X !  no checksum calculation
	PARAMETER SOCKOPT$C_NO_CHKSUM = '0000C000'X !  no checksum calculation
! 
	PARAMETER SOCKOPT$C_SNDBUF = '00001001'X !  send buffer size 
	PARAMETER SOCKOPT$C_RCVBUF = '00001002'X !  receive buffer size 
	PARAMETER SOCKOPT$C_SNDLOWAT = '00001003'X !  send low-water mark 
	PARAMETER SOCKOPT$C_RCVLOWAT = '00001004'X !  receive low-water mark
	PARAMETER SOCKOPT$C_SNDTIMEO = '00001005'X !  send timeout 
	PARAMETER SOCKOPT$C_RCVTIMEO = '00001006'X !  receive timeout 
	PARAMETER SOCKOPT$C_ERROR = '00001007'X	!  get error status and clear 
	PARAMETER SOCKOPT$C_TYPE = '00001008'X	!  get socket type 
	PARAMETER SOCKOPT$M_SNDBUF = '00001001'X !  send buffer size 
	PARAMETER SOCKOPT$M_RCVBUF = '00001002'X !  receive buffer size 
	PARAMETER SOCKOPT$M_SNDLOWAT = '00001003'X !  send low-water mark 
	PARAMETER SOCKOPT$M_RCVLOWAT = '00001004'X !  receive low-water mark
	PARAMETER SOCKOPT$M_SNDTIMEO = '00001005'X !  send timeout 
	PARAMETER SOCKOPT$M_RCVTIMEO = '00001006'X !  receive timeout 
	PARAMETER SOCKOPT$M_ERROR = '00001007'X	!  get error status and clear 
	PARAMETER SOCKOPT$M_TYPE = '00001008'X	!  get socket type 
	PARAMETER SOCKOPT$C_DEBUG = '00000001'X	!  turn on event logging, not used
	PARAMETER SOCKOPT$C_ACCEPTCONN = '00000002'X !  socket has had LISTEN
	PARAMETER SOCKOPT$C_REUSEADDR = '00000004'X !  allow local address reuse
	PARAMETER SOCKOPT$C_KEEPALIVE = '00000008'X !  keep connection alive
	PARAMETER SOCKOPT$C_DONTROUTE = '00000010'X !  use only the interface addr
	PARAMETER SOCKOPT$C_BROADCAST = '00000020'X !  allow broadcasting
	PARAMETER SOCKOPT$C_USELOOPBACK = '00000040'X !  loopback interface, not used
	PARAMETER SOCKOPT$C_LINGER = '00000080'X !  linger at close
	PARAMETER SOCKOPT$C_OOBINLINE = '00000100'X !  leave received OOB data in line 
	PARAMETER SOCKOPT$C_NO_RCV_CHKSUM = '00004000'X !  no receive checksum calculation
	PARAMETER SOCKOPT$C_NO_SND_CHKSUM = '00008000'X !  no send checksum calculation
	PARAMETER SOCKOPT$C_LENGTH = '00000002'X
	PARAMETER SOCKOPT$K_LENGTH = '00000002'X
	STRUCTURE /SOCKETOPTDEF/
	    UNION
	        MAP
	        INTEGER*2 SOCKOPT$W_OPTIONS		!  Socket options, see socket.h 
	        END MAP
	        MAP
! 
!  Socket options bits.
! 
	            PARAMETER SOCKOPT$S_DEBUG = 1
	            PARAMETER SOCKOPT$V_DEBUG = 0		!  turn on event logging, not used
	            PARAMETER SOCKOPT$S_ACCEPTCONN = 1
	            PARAMETER SOCKOPT$V_ACCEPTCONN = 1	!  socket has had LISTEN
	            PARAMETER SOCKOPT$S_REUSEADDR = 1
	            PARAMETER SOCKOPT$V_REUSEADDR = 2	!  allow local address reuse
	            PARAMETER SOCKOPT$S_KEEPALIVE = 1
	            PARAMETER SOCKOPT$V_KEEPALIVE = 3	!  keep connection alive
	            PARAMETER SOCKOPT$S_DONTROUTE = 1
	            PARAMETER SOCKOPT$V_DONTROUTE = 4	!  use only the interface addr
	            PARAMETER SOCKOPT$S_BROADCAST = 1
	            PARAMETER SOCKOPT$V_BROADCAST = 5	!  allow broadcasting
	            PARAMETER SOCKOPT$S_USELOOPBACK = 1
	            PARAMETER SOCKOPT$V_USELOOPBACK = 6	!  loopback interface, not used
	            PARAMETER SOCKOPT$S_LINGER = 1
	            PARAMETER SOCKOPT$V_LINGER = 7		!  linger at close
	            PARAMETER SOCKOPT$S_OOBINLINE = 1
	            PARAMETER SOCKOPT$V_OOBINLINE = 8	!  leave received OOB data in line 
! 
! 
	            PARAMETER SOCKOPT$S_DUMMYB_2 = 1
	            PARAMETER SOCKOPT$V_DUMMYB_2 = 9	!  reserve space
	            PARAMETER SOCKOPT$S_DUMMYB_3 = 1
	            PARAMETER SOCKOPT$V_DUMMYB_3 = 10	!  reserve space
	            PARAMETER SOCKOPT$S_DUMMYB_4 = 1
	            PARAMETER SOCKOPT$V_DUMMYB_4 = 11	!  reserve space
	            PARAMETER SOCKOPT$S_DUMMYB_5 = 1
	            PARAMETER SOCKOPT$V_DUMMYB_5 = 12	!  reserve space
	            PARAMETER SOCKOPT$S_DUMMYB_6 = 1
	            PARAMETER SOCKOPT$V_DUMMYB_6 = 13	!  reserve space
! 
	            PARAMETER SOCKOPT$S_NO_RCV_CHKSUM = 1
	            PARAMETER SOCKOPT$V_NO_RCV_CHKSUM = 14	!  no receive checksum calculation
	            PARAMETER SOCKOPT$S_NO_SND_CHKSUM = 1
	            PARAMETER SOCKOPT$V_NO_SND_CHKSUM = 15	!  no send checksum calculation
!  Additional options, not kept in so_options.
! 
	        BYTE %FILL (2)
	        END MAP
	    END UNION
	END STRUCTURE	! SOCKETOPTDEF
 
!*** MODULE $INETSOCKOPTDEF ***
! 
!  Socket options data structure. 
! 
	PARAMETER INET$M_DEBUG = '00000001'X
	PARAMETER INET$M_ACCEPTCONN = '00000002'X
	PARAMETER INET$M_REUSEADDR = '00000004'X
	PARAMETER INET$M_KEEPALIVE = '00000008'X
	PARAMETER INET$M_DONTROUTE = '00000010'X
	PARAMETER INET$M_BROADCAST = '00000020'X
	PARAMETER INET$M_USELOOPBACK = '00000040'X
	PARAMETER INET$M_LINGER = '00000080'X
	PARAMETER INET$M_OOBINLINE = '00000100'X
	PARAMETER INET$M_DUMMYB_2 = '00000200'X
	PARAMETER INET$M_DUMMYB_3 = '00000400'X
	PARAMETER INET$M_DUMMYB_4 = '00000800'X
	PARAMETER INET$M_DUMMYB_5 = '00001000'X
	PARAMETER INET$M_DUMMYB_6 = '00002000'X
	PARAMETER INET$M_NO_RCV_CHKSUM = '00004000'X
	PARAMETER INET$M_NO_SND_CHKSUM = '00008000'X
	PARAMETER INET$M_NO_CHKSUM = '0000C000'X !  no checksum calculation
	PARAMETER INET$C_NO_CHKSUM = '0000C000'X !  no checksum calculation
! 
	PARAMETER INET$C_SNDBUF = '00001001'X	!  send buffer size 
	PARAMETER INET$C_RCVBUF = '00001002'X	!  receive buffer size 
	PARAMETER INET$C_SNDLOWAT = '00001003'X	!  send low-water mark 
	PARAMETER INET$C_RCVLOWAT = '00001004'X	!  receive low-water mark
	PARAMETER INET$C_SNDTIMEO = '00001005'X	!  send timeout 
	PARAMETER INET$C_RCVTIMEO = '00001006'X	!  receive timeout 
	PARAMETER INET$C_ERROR = '00001007'X	!  get error status and clear 
	PARAMETER INET$C_TYPE = '00001008'X	!  get socket type 
! 
	PARAMETER INET$M_SNDBUF = '00001001'X	!  send buffer size 
	PARAMETER INET$M_RCVBUF = '00001002'X	!  receive buffer size 
	PARAMETER INET$M_SNDLOWAT = '00001003'X	!  send low-water mark 
	PARAMETER INET$M_RCVLOWAT = '00001004'X	!  receive low-water mark
	PARAMETER INET$M_SNDTIMEO = '00001005'X	!  send timeout 
	PARAMETER INET$M_RCVTIMEO = '00001006'X	!  receive timeout 
	PARAMETER INET$M_ERROR = '00001007'X	!  get error status and clear 
	PARAMETER INET$M_TYPE = '00001008'X	!  get socket type 
	PARAMETER INET$C_DEBUG = '00000001'X	!  turn on event logging, not used
	PARAMETER INET$C_ACCEPTCONN = '00000002'X !  socket has had LISTEN
	PARAMETER INET$C_REUSEADDR = '00000004'X !  allow local address reuse
	PARAMETER INET$C_KEEPALIVE = '00000008'X !  keep connection alive
	PARAMETER INET$C_DONTROUTE = '00000010'X !  use only the interface addr
	PARAMETER INET$C_BROADCAST = '00000020'X !  allow broadcasting
	PARAMETER INET$C_USELOOPBACK = '00000040'X !  loopback interface, not used
	PARAMETER INET$C_LINGER = '00000080'X	!  linger at close
	PARAMETER INET$C_OOBINLINE = '00000100'X !  leave received OOB data in line 
	PARAMETER INET$C_NO_RCV_CHKSUM = '00004000'X !  no receive checksum calculation
	PARAMETER INET$C_NO_SND_CHKSUM = '00008000'X !  no send checksum calculation
	PARAMETER INET$C_LENGTH = '00000002'X
	PARAMETER INET$K_LENGTH = '00000002'X
	STRUCTURE /INETSOCKOPTDEF/
	    UNION
	        MAP
	        INTEGER*2 INET$W_OPTIONS		!  Socket options, see socket.h 
	        END MAP
	        MAP
! 
!  Socket options bits.
! 
	            PARAMETER INET$S_DEBUG = 1
	            PARAMETER INET$V_DEBUG = 0		!  turn on event logging, not used
	            PARAMETER INET$S_ACCEPTCONN = 1
	            PARAMETER INET$V_ACCEPTCONN = 1		!  socket has had LISTEN
	            PARAMETER INET$S_REUSEADDR = 1
	            PARAMETER INET$V_REUSEADDR = 2		!  allow local address reuse
	            PARAMETER INET$S_KEEPALIVE = 1
	            PARAMETER INET$V_KEEPALIVE = 3		!  keep connection alive
	            PARAMETER INET$S_DONTROUTE = 1
	            PARAMETER INET$V_DONTROUTE = 4		!  use only the interface addr
	            PARAMETER INET$S_BROADCAST = 1
	            PARAMETER INET$V_BROADCAST = 5		!  allow broadcasting
	            PARAMETER INET$S_USELOOPBACK = 1
	            PARAMETER INET$V_USELOOPBACK = 6	!  loopback interface, not used
	            PARAMETER INET$S_LINGER = 1
	            PARAMETER INET$V_LINGER = 7		!  linger at close
	            PARAMETER INET$S_OOBINLINE = 1
	            PARAMETER INET$V_OOBINLINE = 8		!  leave received OOB data in line 
! 
! 
	            PARAMETER INET$S_DUMMYB_2 = 1
	            PARAMETER INET$V_DUMMYB_2 = 9		!  reserve space
	            PARAMETER INET$S_DUMMYB_3 = 1
	            PARAMETER INET$V_DUMMYB_3 = 10		!  reserve space
	            PARAMETER INET$S_DUMMYB_4 = 1
	            PARAMETER INET$V_DUMMYB_4 = 11		!  reserve space
	            PARAMETER INET$S_DUMMYB_5 = 1
	            PARAMETER INET$V_DUMMYB_5 = 12		!  reserve space
	            PARAMETER INET$S_DUMMYB_6 = 1
	            PARAMETER INET$V_DUMMYB_6 = 13		!  reserve space
! 
	            PARAMETER INET$S_NO_RCV_CHKSUM = 1
	            PARAMETER INET$V_NO_RCV_CHKSUM = 14	!  no receive checksum calculation
	            PARAMETER INET$S_NO_SND_CHKSUM = 1
	            PARAMETER INET$V_NO_SND_CHKSUM = 15	!  no send checksum calculation
!  Additional options, not kept in so_options.
! 
	        BYTE %FILL (2)
	        END MAP
	    END UNION
	END STRUCTURE	! INETSOCKOPTDEF
 
!*** MODULE $SOCKADDRDEF ***
	PARAMETER AF_UNSPEC = '00000000'X	!  unspecified socket family
	PARAMETER AF_INET = '00000002'X		!  INET socket family
	PARAMETER SA$C_LENGTH = '00000010'X
	PARAMETER SA$K_LENGTH = '00000010'X
	STRUCTURE /SOCKADDR/
	    INTEGER*2 SA$W_FAMILY			!  address family
	    CHARACTER*14 SA$T_DATA			!  up to 14 bytes of address
	END STRUCTURE	! SOCKADDR
 
!*** MODULE $SOCKADDRINDEF ***
	PARAMETER SIN$C_LENGTH = '00000010'X
	PARAMETER SIN$K_LENGTH = '00000010'X
	STRUCTURE /SOCKADDRIN/
	    INTEGER*2 SIN$W_FAMILY			!  address family
	    INTEGER*2 SIN$W_PORT			!  2 bytes specifying a port
	    INTEGER*4 SIN$L_ADDR			!  4 bytes specifying an IP address
	    CHARACTER*8 SIN$T_ZERO			!  8 bytes 
	END STRUCTURE	! SOCKADDRIN
 
!*** MODULE $INETACPSYMDEF ***
! +
!  Define ACP HOST/NET data base subroutine calls subfunction codes 
! 
! -
	PARAMETER INETACP$C_ALIASES = '00000001'X !  aliases
	PARAMETER INETACP$C_TRANS = '00000002'X	!  translate ASCII string in binary
	PARAMETER INETACP$C_HOSTENT = '00000003'X !  get back a HOSTENT
	PARAMETER INETACP$C_NETENT = '00000004'X !  get back a NETENT
	PARAMETER INETACP$C_HOSTENT_OFFSET = '00000005'X !  get back a HOSTENT
	PARAMETER INETACP$C_NETENT_OFFSET = '00000006'X !  get back a NETENT
	PARAMETER INETACPC$C_ALIASES = '00000001'X !  aliases
	PARAMETER INETACPC$C_TRANS = '00000002'X !  translate ASCII string in binary
	PARAMETER INETACPC$C_HOSTENT = '00000003'X !  get back a HOSTENT
	PARAMETER INETACPC$C_NETENT = '00000004'X !  get back a NETENT
	PARAMETER INETACPC$C_HOSTENT_OFFSET = '00000005'X !  get back a HOSTENT
	PARAMETER INETACPC$C_NETENT_OFFSET = '00000006'X !  get back a NETENT
 
!*** MODULE $INETACPFSYMDEF ***
! +
!  Define ACP control subfunction codes 
! 
! -
	PARAMETER INETACP_FUNC$C_GETHOSTBYNAME = '00000001'X !  Subroutine call of GET_HOST_BY_NAME
	PARAMETER INETACP_FUNC$C_GETHOSTBYADDR = '00000002'X !  Subroutine call of GET_HOST_BY_ADDR
	PARAMETER INETACP_FUNC$C_GETNETBYNAME = '00000003'X !  Subroutine call of GET_NET_BY_NAME
	PARAMETER INETACP_FUNC$C_GETNETBYADDR = '00000004'X !  Subroutine call of GET_NET_BY_ADDR 
! 
 
!*** MODULE $NETENTDEF ***
	PARAMETER NET$C_LENGTH = '00000010'X	! 
	PARAMETER NET$K_LENGTH = '00000010'X	! 
	STRUCTURE /NETENTDEF/
	    INTEGER*4 NET$L_N_NAME			!  pointer to the network name
	    INTEGER*4 NET$L_N_ALIASES		!  pointer to array of pointers to aliases
	    INTEGER*4 NET$L_N_ADDRTYPE		!  Network address type 
	    INTEGER*4 NET$L_N_NET			!  Network address 
	END STRUCTURE	! NETENTDEF
! 
!  Structures returned by network
!  data base library.  All addresses
!  are supplied in host order, and
!  returned in network order (suitable
!  for use in system calls).
! 
 
!*** MODULE $HOSTENTDEF ***
	PARAMETER HOST$L_H_ADDR = '00000010'X	! 
	PARAMETER HOST$C_LENGTH = '00000014'X	! 
	PARAMETER HOST$K_LENGTH = '00000014'X	! 
	STRUCTURE /HOSTENTDEF/
	    INTEGER*4 HOST$L_H_NAME			!  pointer to the host name
	    INTEGER*4 HOST$L_H_ALIASES		!  pointer to array of pointers to aliases
	    INTEGER*4 HOST$L_H_ADDRTYPE		!  Host address type 
	    INTEGER*4 HOST$L_H_LENGTH		!  Length of address 
	    INTEGER*4 HOST$L_H_ADDR_LIST		!  Pointer to array of pointers to addresses
	END STRUCTURE	! HOSTENTDEF
