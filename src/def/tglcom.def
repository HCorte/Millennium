C
C     FILE   : TGLCOM.DEF
C     AUTHOR : J.H.R
C     VERSION: 01            DATE: 28 / 11 / 2000
C
C
C V01 JHR NEW TOTOGOLO GAME DATA DEFINITION ( -- PORTURGAL PROJECT -- )
C
C
C RESULTS COMMON GAME RECORD DEFINITION
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rigth Reserved
C
C     **************************************************************************
C
C
C DESCRIPTION RESULTS COMMON PARAMETERS DEFINITION
C
C     TGLSTS(NUMTGL)                 ; STATUS
C     TGLCTM(NUMTGL)                 ; ACTUAL TIME WHEN CLOSED
C     TGLTIM(NUMTGL)                 ; TIME WHEN GAME SHOULD CLOSE
C     TGLDRW(NUMTGL)                 ; DRAW NUMBER
C     TGLBSD(NUMTGL)                 ; RESULTS BEGGINING DRAW DATE
C     TGLESD(NUMTGL)                 ; RESULTS ENDING DRAW DATE
C     TGLPUP(NUMTGL)                 ; LAST PURGE UPDATE
C     TGLUPD(NUMTGL)                 ; LAST FILE UPDATE
C     TGLDAT(DATLEN, NUMTGL)         ; DRAW DATES
C     TGLADV(NUMADV, NUMTGL)         ; ADVANCE DRAW DATES
C     TGLSAL(TGGENT, NUMTGL)         ; SALES DATA
C     TGLSHV(TGGDIV, NUMTGL)         ; SHARE VALUES
C     TGLSHR(TGGDIV, NUMTGL)         ; SHARES
C     TGLPOL(TGGDIV, NUMTGL)         ; POOL CARRIED OVER
C     TGLPAD(TGGDIV, NUMTGL)         ; AMOUNT PAID
C     TGLPRG(TGGDIV, NUMTGL)         ; AMOUNT PURGED
C     TGLAFD(TGGDIV, NUMTGL)         ; AMOUNTS FROM OTHERS DRAWS/GAMES (EXTRA)
C     TGLCSP(TGGDIV, NUMTGL)         ; CALCULATED SHARE CALCULATIONS POOLS
C     TGLOSV(TGGDIV, NUMTGL)         ; OFF LINE AMOUNT TO PRIZES BY DIVISION
C     TGLOSH(TGGDIV, NUMTGL)         ; OFF LINE SHARE
C     TGLWIN(2, TGGNBR, NUMTGL)      ; WINNING RESULTS
C     TGLHLD(2, TGGNBR, NUMTGL)      ; WINNING RESULTS HOLD
C     TGLPRP(NUMTGL)                 ; PERCENTAGE OF THE PROMISED AMOUNT
C     TGLPRN(NUMTGL)                 ; MAX. NUM OF WINNERS FOR PROMISED AMOUNT,
C                                    ; IF TGLPRN=-1 IT MEANS 'ERIKOISPOTTI'
C     TGLTAX(NUMTGL)                 ; LOTTERY TAX
C     TGLRES(2, NUMTGL)              ; RESERVE POOL
C     TGLAPL(NUMTGL)                 ; ADDITIONAL POOL
C     TGLMIN(NUMTGL)                 ; MINIMUM POOL
C     TGLSER(NUMTGL)                 ; LAST SERIAL NUMBER
C     TGLOPA(NUMTGL)                 ; OVER-RIDE POOL AMOUNT
C     TGLPRC(NUMTGL)                 ; PRICE/SINGLE COMBINATION
C     TGLMAX(NUMTGL)                 ; NUMBER OF EVENTS (ROWS)
C     TGLMLT(NUMTGL)                 ; MULTI-DRAW ENABLE FLAG
C     TGLMDS(MAXMLTD_AVL, NUMTGL)    ; MULTI-DRAW SELECTED TABLE (52/4 WORDS)
C     TGLDIV(NUMTGL)                 ; # OF DIVISIONS
C     TGLMAT(TGGDIV, NUMTGL)         ; DIVISION MATCH TABLE
C     TGLPER(TGGDIV, NUMTGL)         ; DIVISION PERCENTAGES
C     TGLSPR(NUMTGL)                 ; SALES PERCENTAGE
C     TGLTSR(TGGDIV, NUMTGL)         ; TOTAL SHARE COUNT
C     TGLREV(NUMTGL)                 ; RESULTS REVISION NUMBER
C
C     TGLNMS(TGNMS_LEN / 4, 2, TGGNBR, NUMTGL)    ; TEAM NAMES
C
C     TGLCLB(25, NUMTGL)             ; CLUB VOTING COUNTS
C     TGLASH(TGGDIV, NUMTGL)         ; ADDITIONAL POOL BY DIV.
C     TGLFRG(NUMTGL)                 ; FLAG FOR FREE GAME (PRICE = 0.00)
C     TGLWRF(POSTED, NUMTGL)         ; WIN RESERV FUND
C     TGLBST(NUMTGL)                 ; BEST MATCH FLAG (ADJUST DIVISIONS)
C     TGLBAL(MAXDRW,NUMTGL)          ; BALANCE SALES INFO. BY DRAW
C     TGLEVN(TGEVN_LEN / 4, NUMTGL)  ; EVENT NAME
C     TGLEXT(NUMTGL)                 ; EXTRAORDINARY DRAW
C     TGLRGT(2, NUMTGL)              : WHERE ROLLOVER GO TO (1:GAME, 2:DRW)
C     TGLROD(2, NUMTGL)              ; WHERE ROLLOVER CAME FROM (1=GIND, 2=DRW)
C     TGLFRE(CALCULATED)             ; FREE SPACE
C
C
C OFFSET PARAMETERS AND EQUIVALENCES
C
      INTEGER * 4 TGLSTS_OFF, TGLCTM_OFF, TGLTIM_OFF, TGLDRW_OFF
C
      PARAMETER(TGLSTS_OFF = 1)
      PARAMETER(TGLCTM_OFF = TGLSTS_OFF + NUMTGL)
      PARAMETER(TGLTIM_OFF = TGLCTM_OFF + NUMTGL)
      PARAMETER(TGLDRW_OFF = TGLTIM_OFF + NUMTGL)
C
      INTEGER * 4 TGLBSD_OFF, TGLESD_OFF, TGLPUP_OFF, TGLUPD_OFF
C        
      PARAMETER(TGLBSD_OFF = TGLDRW_OFF + NUMTGL)
      PARAMETER(TGLESD_OFF = TGLBSD_OFF + NUMTGL)
      PARAMETER(TGLPUP_OFF = TGLESD_OFF + NUMTGL)
      PARAMETER(TGLUPD_OFF = TGLPUP_OFF + NUMTGL)
C
      INTEGER * 4 TGLDAT_OFF, TGLADV_OFF, TGLSAL_OFF, TGLSHV_OFF
C        
      PARAMETER(TGLDAT_OFF = TGLUPD_OFF + NUMTGL)
      PARAMETER(TGLADV_OFF = TGLDAT_OFF + DATLEN * NUMTGL)
      PARAMETER(TGLSAL_OFF = TGLADV_OFF + NUMADV * NUMTGL)
      PARAMETER(TGLSHV_OFF = TGLSAL_OFF + TGGENT * NUMTGL)
C
      INTEGER * 4 TGLSHR_OFF, TGLPOL_OFF, TGLPAD_OFF, TGLPRG_OFF
C        
      PARAMETER(TGLSHR_OFF = TGLSHV_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLPOL_OFF = TGLSHR_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLPAD_OFF = TGLPOL_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLPRG_OFF = TGLPAD_OFF + TGGDIV * NUMTGL)
C
      INTEGER * 4 TGLAFD_OFF, TGLCSP_OFF, TGLOSV_OFF, TGLOSH_OFF
C
      PARAMETER(TGLAFD_OFF = TGLPRG_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLCSP_OFF = TGLAFD_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLOSV_OFF = TGLCSP_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLOSH_OFF = TGLOSV_OFF + TGGDIV * NUMTGL)
C
      INTEGER * 4 TGLWIN_OFF, TGLHLD_OFF, TGLPRP_OFF, TGLPRN_OFF
C
      PARAMETER(TGLWIN_OFF = TGLOSH_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLHLD_OFF = TGLWIN_OFF + 2 * TGGNBR * NUMTGL)
      PARAMETER(TGLPRP_OFF = TGLHLD_OFF + 2 * TGGNBR * NUMTGL)
      PARAMETER(TGLPRN_OFF = TGLPRP_OFF + NUMTGL)
C
      INTEGER * 4 TGLTAX_OFF, TGLRES_OFF, TGLAPL_OFF, TGLMIN_OFF
C
      PARAMETER(TGLTAX_OFF = TGLPRN_OFF + NUMTGL)
      PARAMETER(TGLRES_OFF = TGLTAX_OFF + NUMTGL)
      PARAMETER(TGLAPL_OFF = TGLRES_OFF + 2 * NUMTGL)
      PARAMETER(TGLMIN_OFF = TGLAPL_OFF + NUMTGL)
C
      INTEGER * 4 TGLSER_OFF, TGLOPA_OFF, TGLPRC_OFF, TGLMAX_OFF
C
      PARAMETER(TGLSER_OFF = TGLMIN_OFF + NUMTGL)
      PARAMETER(TGLOPA_OFF = TGLSER_OFF + NUMTGL)
      PARAMETER(TGLPRC_OFF = TGLOPA_OFF + NUMTGL)
      PARAMETER(TGLMAX_OFF = TGLPRC_OFF + NUMTGL)
C
      INTEGER * 4 TGLMLT_OFF, TGLDIV_OFF, TGLMAT_OFF, TGLPER_OFF, TGLMDS_OFF
C
      PARAMETER(TGLMLT_OFF = TGLMAX_OFF + NUMTGL)
      PARAMETER(TGLMDS_OFF = TGLMLT_OFF + NUMTGL)
      PARAMETER(TGLDIV_OFF = TGLMDS_OFF + (MAXMLTD_AVL / 4) * NUMTGL)
      PARAMETER(TGLMAT_OFF = TGLDIV_OFF + NUMTGL)
      PARAMETER(TGLPER_OFF = TGLMAT_OFF + TGGDIV * NUMTGL)
C
      INTEGER * 4 TGLSPR_OFF, TGLTSR_OFF, TGLREV_OFF, TGLNMS_OFF
C
      PARAMETER(TGLSPR_OFF = TGLPER_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLTSR_OFF = TGLSPR_OFF + NUMTGL)
      PARAMETER(TGLREV_OFF = TGLTSR_OFF + TGGDIV * NUMTGL)
      PARAMETER(TGLNMS_OFF = TGLREV_OFF + NUMTGL) 
C
      INTEGER * 4 TGLCLB_OFF, TGLASH_OFF, TGLFRG_OFF, TGLWRF_OFF
C
        PARAMETER(TGLCLB_OFF = TGLNMS_OFF + (TGNMS_LEN / 2) * TGGNBR * NUMTGL)
        PARAMETER(TGLASH_OFF = TGLCLB_OFF + 25 * NUMTGL)
        PARAMETER(TGLFRG_OFF = TGLASH_OFF + TGGDIV * NUMTGL)
        PARAMETER(TGLWRF_OFF = TGLFRG_OFF + NUMTGL)
C
      INTEGER * 4 TGLBST_OFF, TGLBAL_OFF, TGLEVN_OFF
C
      PARAMETER(TGLBST_OFF = TGLWRF_OFF + POSTED * NUMTGL)
      PARAMETER(TGLBAL_OFF = TGLBST_OFF + NUMTGL)
      PARAMETER(TGLEVN_OFF = TGLBAL_OFF + MAXDRW * NUMTGL)
C
      INTEGER * 4 TGLEXT_OFF
      INTEGER * 4 TGLRGT_OFF
      INTEGER * 4 TGLROD_OFF
C
      PARAMETER(TGLEXT_OFF = TGLEVN_OFF + (TGEVN_LEN / 4) * NUMTGL)
      PARAMETER(TGLRGT_OFF = TGLEXT_OFF + NUMTGL)
      PARAMETER(TGLROD_OFF = TGLRGT_OFF + 2 * NUMTGL)
C
      INTEGER * 4 TGLFRE_OFF
C
      PARAMETER(TGLFRE_OFF = TGLROD_OFF + 2 * NUMTGL)
C
C CALCULATE REGISTER LENGHT
C
      INTEGER * 4 TGLSEC_SIZE, TGLSEC_NUM, TGLLEN
C
      PARAMETER(TGLSEC_SIZE = 2048)
      PARAMETER(TGLSEC_NUM = NINT(FLOAT((TGLFRE_OFF - 2) / TGLSEC_SIZE) + .5))
      PARAMETER(TGLLEN = TGLSEC_SIZE * TGLSEC_NUM)
C
C DEFINE RESULTS COMMON DATA
C
      COMMON /TGLCOM/
     * TGLSTS(NUMTGL),
     * TGLCTM(NUMTGL),
     * TGLTIM(NUMTGL),
     * TGLDRW(NUMTGL),
     * TGLBSD(NUMTGL),
     * TGLESD(NUMTGL),
     * TGLPUP(NUMTGL),
     * TGLUPD(NUMTGL),
     * TGLDAT(DATLEN, NUMTGL),
     * TGLADV(NUMADV, NUMTGL),
     * TGLSAL(TGGENT, NUMTGL)
C
      COMMON /TGLCOM/
     * TGLSHV(TGGDIV, NUMTGL),
     * TGLSHR(TGGDIV, NUMTGL),
     * TGLPOL(TGGDIV, NUMTGL),
     * TGLPAD(TGGDIV, NUMTGL),
     * TGLPRG(TGGDIV, NUMTGL),
     * TGLAFD(TGGDIV, NUMTGL),
     * TGLCSP(TGGDIV, NUMTGL),
     * TGLOSV(TGGDIV, NUMTGL),
     * TGLOSH(TGGDIV, NUMTGL)
C
      COMMON /TGLCOM/
     * TGLWIN(2, TGGNBR, NUMTGL),
     * TGLHLD(2, TGGNBR, NUMTGL),
     * TGLPRP(NUMTGL),
     * TGLPRN(NUMTGL),
     * TGLTAX(NUMTGL),
     * TGLRES(2, NUMTGL),
     * TGLAPL(NUMTGL),
     * TGLMIN(NUMTGL)
C
      COMMON /TGLCOM/
     * TGLSER(NUMTGL),
     * TGLOPA(NUMTGL),
     * TGLPRC(NUMTGL),
     * TGLMAX(NUMTGL),
     * TGLMLT(NUMTGL),
     * TGLMDS(MAXMLTD_AVL, NUMTGL),
     * TGLDIV(NUMTGL),
     * TGLMAT(TGGDIV, NUMTGL),
     * TGLPER(TGGDIV, NUMTGL)
C
      COMMON /TGLCOM/
     * TGLSPR(NUMTGL),
     * TGLTSR(TGGDIV, NUMTGL),
     * TGLREV(NUMTGL),
     * TGLNMS(TGNMS_LEN / 4, 2, TGGNBR, NUMTGL),
     * TGLCLB(25, NUMTGL),
     * TGLASH(TGGDIV, NUMTGL),
     * TGLFRG(NUMTGL),
     * TGLWRF(POSTED, NUMTGL),
     * TGLBST(NUMTGL),
     * TGLBAL(MAXDRW, NUMTGL),
     * TGLEVN(TGEVN_LEN / 4, NUMTGL),
     * TGLEXT(NUMTGL),
     * TGLRGT(2, NUMTGL),
     * TGLROD(2, NUMTGL),
     * TGLFRE(TGLLEN - TGLFRE_OFF + 1)
C
C DEFINE VARIABLES RESULTS COMMON DATA
C
      INTEGER * 4 TGLSTS, TGLCTM, TGLTIM, TGLDRW, TGLBSD, TGLESD
      INTEGER * 4 TGLPUP, TGLUPD, TGLDAT, TGLADV, TGLSAL, TGLSHV
      INTEGER * 4 TGLSHR, TGLPOL, TGLPAD, TGLPRG, TGLAFD 
      INTEGER * 4 TGLCSP, TGLOSV, TGLOSH, TGLWIN, TGLHLD, TGLPRP
      INTEGER * 4 TGLTAX, TGLRES, TGLAPL, TGLMIN, TGLSER, TGLPRN
      INTEGER * 4 TGLOPA, TGLPRC, TGLMAX, TGLMLT, TGLDIV, TGLMAT
      INTEGER * 4 TGLPER, TGLSPR, TGLTSR, TGLREV, TGLNMS, TGLCLB
      INTEGER * 4 TGLASH, TGLFRG, TGLWRF, TGLBST, TGLFRE, TGLBAL
      INTEGER * 4 TGLEVN, TGLEXT, TGLRGT, TGLROD
C
      BYTE TGLMDS
C
C RESULTS SYSTEM BET TABLES
C
      INTEGER * 4 TGSFSF_OFF
      INTEGER * 4 TGSFRE_OFF
C
      PARAMETER(TGSFSF_OFF = 1)
      PARAMETER(TGSFRE_OFF = TGSFSF_OFF + 16*16*16*NUMTGL)
C
      INTEGER * 4 TGSSEC_SIZE, TGSSEC_NUM, TGSLEN
C
      PARAMETER(TGSSEC_SIZE = 2048)
      PARAMETER(TGSSEC_NUM = NINT(FLOAT(TGSFRE_OFF) / FLOAT(TGSSEC_SIZE) + .5))
      PARAMETER(TGSLEN = TGSSEC_SIZE * TGSSEC_NUM)
C
C COMMON DATA
C
      COMMON /TGLCOM/
     * TGSFSF(0:15,0:15,0:15,NUMTGL),        ! FULL SYSTEM FLAGS(DBL,TRI,QUA)
     * TGSFRE(TGSLEN - TGSFRE_OFF + 1)

      INTEGER * 4 TGSFSF, TGSFRE
C
C EQUIVALENCE FOR CHECKPOINT
C
      INTEGER * 4 TGLCSB
C
      PARAMETER(TGLCSB = TGLSEC_NUM + TGSSEC_NUM)
C
      INTEGER * 4 TGLBLK(2048, TGLCSB)
C
      EQUIVALENCE(TGLBLK(1, 1), TGLSTS(1))
C
      INTEGER * 4 FRST_TGLCOM(2)
C
      EQUIVALENCE(FRST_TGLCOM, TGLSTS)
C
      INTEGER * 4 LAST_TGLCOM
C
      EQUIVALENCE(LAST_TGLCOM, TGLBLK(2048, TGLCSB))
C
      VOLATILE /TGLCOM/
C
C END OF FILE
C
