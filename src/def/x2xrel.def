C
C X2XREL.DEF
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFIP:[GOLS]X2XREL.DEV                                   $
C  $Date::   29 Jan 1997 10:15:04                                         $
C  $Revision::   1.1                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C V07 15-MAR-11 RXK New X2RCSB calculated
C V06 06-SEO-95 DAS Added variables for background load
C V05 29-DEC-94 GPR Allow multiple MCPs per subnetwork
C V04 12-DEC-94 DAS Integrate UK changes into X2X Baseline
C V03 21-JUL-94 WS MULTINETWORK CHANGES
C V02 10-MAR-93 DAS CHANGED SIZE OF X2XRCSB & LAST_X2XREL DETERMINATION
C V01 01-DEC-91 DAS RELEASED FOR VAX (NETHERLANDS)
C
C
C     -------------------------------------------------------------------
C     IT IS IMPORTANT TO MAKE SURE THAT LAST_X2XREL IS CORRECT SINCE THIS
C     COMMON IS LOCKED INTO MEMORY. THIS IS ACCOMPLISHED WITH THE USE OF
C     THE FREE SPACE VARIABLES (X2XR_IFREE AND X2XR_FREE). BECAUSE THIS
C     COMMON BLOCK MAY MAKE USE OF CHARACTER VARIABLES, IT BECOMES EASIER
C     TO MANIPULATE A CHARACTER ARRAY TO ASSURE THE CORRECT SIZE. ANY
C     CHANGE TO VALUES SET IN X2XPRM.DEF OR ADDITIONS TO THIS COMMOM
C     CAN AND WILL AFFECT THESE VALUES.
C     -------------------------------------------------------------------
C 
C     X2XREL.DEF
C 
C     DATA INITIALIZED BY APPLICATION PROCESS IS MARKED WITH [
C     DATA INITIALIZED TO 0 IS MARKED WITH !, "QUEUE SETUP" !!
C 
C 
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
        CHARACTER*1 X2XR_FREE
        INTEGER*4 X2XR_IFREE
        INTEGER*4 X2XR_MAX_FREE
           PARAMETER (X2XR_MAX_FREE = 40000)
C
C 
	INTEGER*4 X2XR_WAIT_MAX(X2X_RELAY_APPS)  !MAX NO OF OUTSTANDING REQUESTS[ - V03
	INTEGER*4 X2XR_WAIT_BACK(X2X_RELAY_APPS) !CURRENT 1-ST IN QUEUE - V03
	INTEGER*4 X2XR_WAIT_FRONT(X2X_RELAY_APPS) !CURRENT LAST IN QUEUE - V03
C
	INTEGER*4 X2X_RELAY_WAIT         !LOOP WAIT TIME FOR X2XREL !
	INTEGER*4 X2XR_APP_STATUS(X2X_RELAY_APPS) !STATUS OF EACH [
C                                       ;RELAY PROCESS
	   INTEGER*4  X2XR_APPS_NOT_DEF, X2XR_APPS_IDLE
	   INTEGER*4  X2XR_APPS_ACTIVE
	   PARAMETER (X2XR_APPS_NOT_DEF=0) !NOT DEFINED
	   PARAMETER (X2XR_APPS_IDLE=1)    !IDLE NOT ACTIVE
	   PARAMETER (X2XR_APPS_ACTIVE=2)  !ACTIVE
C 
	INTEGER*4 X2XR_SAVE_STATION_DISCONNECT(X2X_RELAY_APPS) !!
	BYTE X2XR_SAVE_STATION_POLL_FLAG(X2X_STATIONS,X2X_RELAY_APPS)
	INTEGER*4 X2XR_SAVE_STATION_ATRIBUTES(X2X_RELAY_APPS)  !!
	INTEGER*4 X2XR_SAVE_STATS_TIME(X2X_RELAY_APPS)         !!
C 
	INTEGER*4 X2XR_APP_ATRIBUTE(X2X_RELAY_APPS) !RELAY TYPE  [
	   INTEGER*4  X2XR_APPA_CHAIN, X2XR_APPA_ALL_NO_FORMAT
	   INTEGER*4  X2XR_APPA_ALL, X2XR_APPA_ALL_STN_NO_FORMAT
	   PARAMETER (X2XR_APPA_CHAIN=1)   !CHAIN TYPE
	   PARAMETER (X2XR_APPA_ALL=2)     !UNSOLICITED TO ALL RELAY
C                                         FORMAT
	   PARAMETER (X2XR_APPA_ALL_NO_FORMAT=3) !UNSOLICITED TO ALL,
C                           NOT FORMATED, BRO TO ALL TERMS
	   PARAMETER (X2XR_APPA_ALL_STN_NO_FORMAT=4) !NOT FORMATED
C                              TO ALL STATIONS BROADCAST
	INTEGER*4 X2XR_NO_ACTIVE(X2X_RELAY_APPS) !NUMBER ACTIVE !
	INTEGER*4 X2XR_NO_REQUEST(X2X_RELAY_APPS) !NUMBER REQUESTED !
	INTEGER*4 X2XR_MAX_ACTIVE(X2X_RELAY_APPS) !MAXIMUM ACTIVE [
	INTEGER*2 X2XR_STATION_ACTIVE(X2X_STATIONS) !STATION STATUS-BITMAP!
	INTEGER*2 X2XR_STATION_REQUEST(X2X_STATIONS) !STATION STATUS-BITMAP!
	INTEGER*2 X2XR_GROUP_REQUEST(X2X_NUM_GROUPS,X2X_RELAY_APPS) !!
C                    ;REQUEST FLAG FOR EACH GROUP
	INTEGER*2 X2XR_GROUP_ACTIVE(X2X_NUM_GROUPS,X2X_RELAY_APPS) !!
C                    ;ACTIVE FLAG FOR EACH GROUP
	INTEGER*4 X2XR_STATION_TIMOUT(X2X_STATIONS,X2X_RELAY_APPS) !!
C                          ;TIMEOUT TO SEND DATA
	INTEGER*4 X2XR_SEND_TIMOUT(X2X_RELAY_APPS) !SEND TIMEOUT VALUE[
	INTEGER*4 X2XR_WAIT_TIMOUT(X2X_RELAY_APPS) !WAIT TIMEOUT VALUE[
	INTEGER*4 X2XR_SEND_STATION(X2X_NUM_GROUPS,X2X_RELAY_APPS) !!
C                    ;FIRST STATION IN CHAIN TO RECEIVE DATA
C 
	INTEGER*4 X2XR_ACTIVITY_CNT(X2X_RELAY_APPS)!TIMES MESSAGE SENT!
	INTEGER*4 X2XR_NON_ACTIVE_CNT(X2X_RELAY_APPS) !TIMES MESSAGE !
C                                      ;CAME TO NON ACTIVE PROCESS
	INTEGER*4 X2XR_TIMOUT_CNT(X2X_RELAY_APPS)   !TIMES TIMED OUT !
	INTEGER*2 X2XR_GROUP_TIMOUT_CNT(X2X_NUM_GROUPS,X2X_RELAY_APPS)
C                               ;TIMOUT COUNT FOR EACH GROUP !
	INTEGER*4 X2XR_APP_FLAGS(X2X_RELAY_APPS)!BROADCAST APPLICATION[
C                                              ;FLAGS,VALUES SAME
C                                              ;AS IN X2STMES.DEF
	INTEGER*4 X2XR_APP_QUEUE(NUMPRO+QHEDSZ,X2X_RELAY_APPS) !PROCESSING!!
C                                              ;BUFFERS
        INTEGER*4 X2XR_WAIT_QUEUE(NUMPRO+QHEDSZ)   !RELAY WAIT QUEUE
	INTEGER*4 X2XR_INPUT_QUEUE(NUMPRO+QHEDSZ)  !RELAY TASK INPUT QUEUE!!
	INTEGER*4 X2XR_APP_TASK(2,X2X_RELAY_APPS)!APPLICATION TSK NAME[
	INTEGER*4 X2XR_STATION_ID(2,X2X_STATIONS,X2X_RELAY_APPS) !ID !
C                                           ;OF LAST STATION MESSAGE
	INTEGER*4 X2XR_LAST_STATION_ID(2,X2X_STATIONS,X2X_RELAY_APPS)!!
C                            ;STATION_ID SAVED FOR TIMOUTS
	INTEGER*4 X2XR_MAX_RETRY(X2X_RELAY_APPS)!MAXIMUM NO OF RETRIES[
	CHARACTER*1 X2XR_RETRY_CNT(X2X_STATIONS,X2X_RELAY_APPS) !COUNT!
C                              OF RETRIES FOR EACH STATION / RELAY
	BYTE        BX2XR_RETRY_CNT(X2X_STATIONS*X2X_RELAY_APPS)
C 
C     TABLES BELOW ARE SET BY RELAY COMMAND START PROCESS (%)
C 
	INTEGER*4 X2XR_APP_DATA(X2XR_APP_DATA_MAX,X2X_RELAY_APPS) !%
	INTEGER*4 X2XR_APP_DATA_LEN(X2X_RELAY_APPS) !LENGTH OF DATA %
	INTEGER*4 X2XR_APP_DATA_MSGNUM(X2X_RELAY_APPS) !CORRESPONDING%
C                                                     ;MESSAGE NO
	INTEGER*4 X2XR_APP_DATA_DEST(X2X_RELAY_APPS) !DATA %
C                                                 ;DESTINATION
	INTEGER*4 X2XR_BRO_DELAY(X2X_STATIONS,X2X_RELAY_APPS) !DELAY
C                   IN SENDING UNSOLICITED BRO TO ALL MESSAGES
	INTEGER*4 X2XR_START_IN_A_SEC(X2X_RELAY_APPS)	   !SEND TO SO MANY
C							   !STATIONS IN SEC
	INTEGER*4 X2XR_CALL_IN_A_SEC(X2X_RELAY_APPS)	   !CALL SO MANY IN A SEC

        INTEGER*2 X2XR_STATION_STATE(X2X_STATIONS)    ! STN RELAY STATE       
        INTEGER*2 X2XR_NOT_IN_RELAY, X2XR_ONLINE_RELAY
        INTEGER*2 X2XR_RESTART_RELAY      
        INTEGER*2 X2XR_RESET_RELAY              
          PARAMETER(X2XR_NOT_IN_RELAY  = 1)       
          PARAMETER(X2XR_ONLINE_RELAY  = 2)       
          PARAMETER(X2XR_RESTART_RELAY = 3)       
          PARAMETER(X2XR_RESET_RELAY   = 4)       
C 
C
	INTEGER*4 X2XR_BCST_STATION_ENABLE(X2X_RELAY_APPS) !ENABLE BROADCASTING
C							   TO STATION LAYER
	INTEGER*4 X2XR_BCST_ENABLE(X2X_RELAY_APPS)  !BCST ENABLE FLAG - V03
	INTEGER*4 X2XR_BCST_ROUTE(X2X_RELAY_APPS)   !BCST ROUTE FLAG - V03
	INTEGER*4 X2XR_BCST_ACTIVE_CNT(2,X2X_RELAY_APPS) !# OF CONNECTED STNS!! - V03
C						    !TO EACH OF 2 SERVERS - V03
	INTEGER*4 X2XR_BCST_STATION1(X2X_RELAY_APPS) !BROADCAST STATION 1 - V03
	INTEGER*4 X2XR_BCST_STATION2(X2X_RELAY_APPS) !BROADCAST STATION 2 - V03
	INTEGER*4 X2XR_SUBNETWORK(X2X_RELAY_APPS)   !SUBNETWORK CONTROLLED - V03
C						    !255 IS ALL SUBNETWORKS - V03
	INTEGER*4 X2XR_ENABLE_STATION_BROADCAST(X2X_RELAY_APPS)!ENABLE
C				BROADCAST TO STATION (STILL OK TO TERMINALS)
C
C     DOWNLOAD (DLL) DEFINITION AREA
C 
	INTEGER*4 X2XR_POLL_LOGIC_ENABLE(X2X_RELAY_APPS)   !ENABLE ACTIVATION
C							   !POLL LOGIC
	INTEGER*4 X2XR_DLL_RESET_MESSAGE(X2X_RELAY_APPS)   !RESET MESSAGE SENT FOR DLL[
	INTEGER*4 X2XR_DLL_RESET_DELAY(X2X_RELAY_APPS)     !DELAY TERMINAL NEEDS AFTER[
C                                        ;RESET
	INTEGER*4 X2XR_DLL_BETWEEN_LOADS_DELAY(X2X_RELAY_APPS) !DELAY BETWEEN LOADS [
	INTEGER*4 X2XR_SNDREST(X2X_RELAY_APPS)		!TIMES TO SEND RESET
	INTEGER*4 X2DLL_TIMES_TO_SEND(0:X2_MAXLOADS) !TIMES TO SEND [
C                          EACH LOAD, OFFSET 0 FOR RESET MESSAGE
	INTEGER*4 X2XR_DLL_BETWEEN_SEGS_DELAY(X2X_RELAY_APPS) !DELAY BETWEEN SEGMENTS [
C...	INTEGER*4 X2XR_FIRST_MCP(X2X_RELAY_APPS)	!FIRST MCP NO USED !V05
C...	INTEGER*4 X2XR_LAST_MCP(X2X_RELAY_APPS)		!LAST MCP NO USED !V05
	INTEGER*4 X2XR_TIMES_SEND_MCP(X2X_RELAY_APPS)	!TIMES TO SEND MCP
	INTEGER*4 X2XR_TIMES_SEND_APP(X2X_RELAY_APPS)	!TIMES TO SEND FIRST APPLICATION LOAD
	INTEGER*4 X2XR_AUTOBAUD(X2X_RELAY_APPS)		!NO OF AUTOBAUD SEGS
C****	INTEGER*4 X2XR_DLL_AUTOBAUD_SEGS
	INTEGER*4 X2XR_BRDCST_TYPE(X2X_RELAY_APPS)	!BROADCAST TYPE IN
C							!PROGRESS, VALUES DEFINED
C							!IN X2RLOD.DEF
	INTEGER*4 X2XR_FIRSTLOAD(X2X_RELAY_APPS)	!FIRST LOAD TO LOAD
	INTEGER*4 X2XR_LASTLOAD(X2X_RELAY_APPS)		!LAST LOAD TO LOAD
C
        INTEGER*4 X2XR_APP_TO_SEND(X2X_RELAY_APPS)      !APPLICATION TO SEND
        INTEGER*4 X2XRF_FOREGROUND                      !SEND ONLY FOREGRND APP
        INTEGER*4 X2XRF_BACKGROUND                      !SEND ONLY BACKGRND APP
        INTEGER*4 X2XRF_BOTH                            !SEND FORE-BACKGRND APP
           PARAMETER (X2XRF_FOREGROUND = 1,
     *                X2XRF_BACKGROUND = 2,
     *                X2XRF_BOTH       = 3)
C
	COMMON /X2XCOM1/ X2XR_APP_STATUS,X2XR_APP_ATRIBUTE,
     *	      X2XR_NO_ACTIVE,X2XR_MAX_ACTIVE,X2XR_STATION_TIMOUT,
     *	      X2XR_SEND_TIMOUT,X2XR_STATION_REQUEST,X2XR_NO_REQUEST,
     *	      X2XR_SEND_STATION,X2XR_APP_FLAGS,X2XR_APP_QUEUE,
     *	      X2XR_STATION_ACTIVE,X2XR_APP_TASK,X2XR_INPUT_QUEUE,
     *	      X2XR_WAIT_TIMOUT,X2XR_TIMOUT_CNT,
     *	      X2XR_STATION_ID,X2XR_MAX_RETRY,X2XR_ACTIVITY_CNT,
     *	      X2XR_RETRY_CNT,X2XR_GROUP_ACTIVE,X2XR_GROUP_REQUEST,
     *	      X2XR_NON_ACTIVE_CNT,X2XR_APP_DATA,X2XR_APP_DATA_LEN,
     *	      X2XR_LAST_STATION_ID,X2XR_APP_DATA_MSGNUM,
     *	      X2XR_APP_DATA_DEST, 
     *	      X2XR_BRO_DELAY,X2X_RELAY_WAIT,
     *	      X2DLL_TIMES_TO_SEND,X2XR_GROUP_TIMOUT_CNT,
     *	      X2XR_SAVE_STATION_DISCONNECT,
     *        X2XR_SAVE_STATION_ATRIBUTES,X2XR_SAVE_STATS_TIME,
     *        X2XR_STATION_STATE,
     *        X2XR_WAIT_QUEUE, X2XR_BCST_ENABLE,		!V03
     *	      X2XR_BCST_ROUTE, X2XR_BCST_ACTIVE_CNT,		!V03
     *        X2XR_BCST_STATION1,X2XR_BCST_STATION2,		!V03
     *	      X2XR_SUBNETWORK, X2XR_WAIT_MAX, X2XR_WAIT_BACK, 	!V03
     *	      X2XR_WAIT_FRONT,
     *	      X2XR_BCST_STATION_ENABLE, X2XR_START_IN_A_SEC,
     *	      X2XR_CALL_IN_A_SEC,X2XR_ENABLE_STATION_BROADCAST,
     *	      X2XR_DLL_RESET_MESSAGE,X2XR_DLL_RESET_DELAY,
     *	      X2XR_DLL_BETWEEN_LOADS_DELAY,X2XR_DLL_BETWEEN_SEGS_DELAY,
     *        X2XR_SNDREST,X2XR_AUTOBAUD,	    !V05
     *	      X2XR_BRDCST_TYPE, X2XR_FIRSTLOAD, X2XR_LASTLOAD,
     *	      X2XR_TIMES_SEND_MCP, X2XR_TIMES_SEND_APP,
     *	      X2XR_POLL_LOGIC_ENABLE,X2XR_APP_TO_SEND,
C
C             PUT ANY NEW CHARACTER VARIABLES HERE
C
     *        X2XR_SAVE_STATION_POLL_FLAG,
     *	      X2XR_FREE(X2XR_MAX_FREE),X2XR_IFREE
C
	INTEGER*4 IX2XR_RETRY_CNT
	EQUIVALENCE (X2XR_RETRY_CNT,IX2XR_RETRY_CNT,BX2XR_RETRY_CNT)
C
	INTEGER*4 X2RCSB
	PARAMETER (X2RCSB=717)
	INTEGER*4 X2RBLK(2048,X2RCSB)
	EQUIVALENCE (X2RBLK,X2XR_APP_STATUS)
C
	INTEGER*4	 FRST_X2XREL(2)
	EQUIVALENCE	(FRST_X2XREL, X2XR_APP_STATUS)
	INTEGER*4	 LAST_X2XREL
	EQUIVALENCE	(LAST_X2XREL, X2XR_IFREE)
C
	VOLATILE /X2XCOM1/
C
