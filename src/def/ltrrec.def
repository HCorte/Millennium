C LTRREC.DEF
C
C V04 30-JUN-2000 UXN LTRLAT added.
C V03 28-MAY-1999 UXN LTRCMB ADDED. LTRWIN,LTRHLD RESTRUCTURED.
C V02 10-MAY-1999 UXN TRIPLE CHANGED TO TRIO
C V01 23-DEC-1997 RXK Initial release.  
C  
C LOGICAL TODAY'S TRIO GAME RECORD LAYOUT 
C
C     LTRSTS(NUMTRP)                         ; GAME STATUS
C     LTRWEK(NUMTRP)                         ; WEEK NUMBER
C     LTRDAT(NUMTRP)                         ; DRAW DATE
C     LTRDRW(NUMTRP)                         ; DRAW NUMBER
C     LTRBSD(NUMTRP)                         ; BEGINNING SALES DATE
C     LTRESD(NUMTRP)                         ; ENDING SALES DATE
C     LTRPUP(NUMTRP)                         ; LAST PRUGE UPDATE  (FILE ONLY)
C     LTRUPD(NUMTRP)                         ; LAST FILE UPDATE   (FILE ONLY)
C     LTRCTM(NUMTRP)                         ; ACTUAL TIME WHEN CLOSED
C     LTRTIM(NUMTRP)                         ; TIME WHEN GAME SHOULD CLOSE
C     LTRSER(NUMTRP)                         ; LAST SERIAL NUMBER
C     LTRSAL(NUMTOT,NUMTRP)                  ; TOTAL SALES (COUNT , AMOUNT)
C     LTRPAD(NUMTRP)                         ; PRIZES PAID + REFUNDS
C     LTRPRG(NUMTRP)                         ; PRIZES PURGED
C     LTRPRF(NUMTRP)                         ; PAID REFUNDS
C     LTRREF(NUMTRP)                         ; TOTAL REFUND AMOUNT
C     LTRERF(NUMTRP)                         ; EARLY REFUNDS PAID
C     LTRTER(NUMTRP)                         ; TOTAL EARLY REFUNDS (LIAB)
C     LTRWON(NUMTRP)                         ; PRIZES WON
C     LTRPOL(2,NUMTRP)                       ; ROLL POOL
C     LTRTPL(NUMTRP)                         ; TOTAL PRIZE POOL
C     LTRTBK(NUMTRP)                         ; TOTAL BREAKAGE
C     LTRBRK(2,NUMTRP)                       ; WINNING ROUNDING POT
C     LTRABW(NUMTRP)                         ; AMOUNT BET ON WINNING SCORE
C     LTRODS(MAXTRPTI,NUMTRP)                ; WINNING ODDS
C     LTRWIN(3,MAXTRPTI,NUMTRP)              ; WINNING RESULTS
C     LTRHLD(3,MAXTRPTI,NUMTRP)              ; WINNING RESULTS HOLD
C     LTRTAX(NUMTRP)                         ; WINNING TAXES
C     LTROTX(NUMTOT,NUMTRP)                  ; OVER TAX LIMIT
C     LTRMID(NUMTOT,NUMTRP)                  ; >REDMIN <REDMAX
C     LTRUTX(NUMTOT,NUMTRP)                  ; UNDER TAX LIMIT
C     LTRHST(MAXTRPTI,NUMTRP)                ; HIGHEST WINNER PER WINING COMB
C     LTRORM(NUMTOT,NUMTRP)                  ; OVER REDMAX
C     LTRMNM(TRPENM_LEN/4,NUMTRP)            ; MASTER EVENT NAME
C     LTRENM(TRPENM_LEN/4,3,NUMTRP)          ; EVENT NAME
C     LTRDES(TRPDES_LEN/4,3,NUMTRP)          ; EVENT DESCRIPTION
C     LTRNMS(TRPNMS_LEN/4,MAXTRPRW,3,NUMTRP) ; ROW NAMES
C     LTRSTA(MAXTRPRW,3,NUMTRP)              ; ROW STATUS'S
C     LTREST(3,NUMTRP)			     ; EVENT STATUS
C     LTREVD(3,NUMTRP)			     ; EVENT BEGIN DATE
C     LTREVT(3,NUMTRP)			     ; EVENT BEGIN TIME
C     LTRSBR(MAXTRPRW,3,NUMTRP)              ; SALES BY ROW TABLE
C     LTRREV(NUMTRP)                         ; REV #
C     LTRPFN(5,NUMTRP)                       ; POOL FILE NAME
C     LTRPRC(NUMTRP)                         ; BASE PRICE
C     LTRSPR(NUMTRP)                         ; POOL PERCENTAGE
C     LTRRWS(3,NUMTRP)			     ; ACTUAL # OF ROWS USED.
C     LTRWCP(MAXTRPTI,NUMTRP)		     ; # WINNING COUPONS PLAYED
C     LTRWBT(NUMTOT,MAXTRPTI,NUMTRP)	     ; CNT, AMT WINNERS PLAYED BY TIES
C     LTRWRO(NUMTOT,2,NUMTRP)                ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     LTRWRA(NUMTOT,2,NUMTRP)                ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     LTRWPO(NUMTOT,2,NUMTRP)                ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     LTRWPA(NUMTOT,2,NUMTRP)                ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     LTRWPR(NUMTOT,2,NUMTRP)                ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C					     ; (1=PRWON,2=PRPAD)
C     LTRCMB(NUMTRP)                         ; NUMBER OF WINNING COMBINATIONS
C     LTRLAT(NUMLAT,NUMTRP)           ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                     ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C
C
C LOGICAL GAME FILE VARIABLE OFFSETS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1997 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C
C OFFSET PARAMETERS AND EQUIVALENCES
C
	INTEGER*4 LTRSTS_OFF, LTRWEK_OFF, LTRDAT_OFF, LTRDRW_OFF
	INTEGER*4 LTRBSD_OFF, LTRESD_OFF, LTRPUP_OFF, LTRUPD_OFF
	INTEGER*4 LTRCTM_OFF, LTRTIM_OFF, LTRSER_OFF, LTRSAL_OFF
	PARAMETER(LTRSTS_OFF = 1)		
	PARAMETER(LTRWEK_OFF = LTRSTS_OFF + NUMTRP)
	PARAMETER(LTRDAT_OFF = LTRWEK_OFF + NUMTRP)
	PARAMETER(LTRDRW_OFF = LTRDAT_OFF + NUMTRP)
	PARAMETER(LTRBSD_OFF = LTRDRW_OFF + NUMTRP)
	PARAMETER(LTRESD_OFF = LTRBSD_OFF + NUMTRP)
	PARAMETER(LTRPUP_OFF = LTRESD_OFF + NUMTRP)
	PARAMETER(LTRUPD_OFF = LTRPUP_OFF + NUMTRP)
	PARAMETER(LTRCTM_OFF = LTRUPD_OFF + NUMTRP)
	PARAMETER(LTRTIM_OFF = LTRCTM_OFF + NUMTRP)
	PARAMETER(LTRSER_OFF = LTRTIM_OFF + NUMTRP)
	PARAMETER(LTRSAL_OFF = LTRSER_OFF + NUMTRP)

	INTEGER*4 LTRPAD_OFF, LTRPRG_OFF, LTRPRF_OFF, LTRREF_OFF
	INTEGER*4 LTRERF_OFF, LTRTER_OFF, LTRWON_OFF, LTRPOL_OFF
	INTEGER*4 LTRTPL_OFF, LTRTBK_OFF, LTRBRK_OFF, LTRABW_OFF
	PARAMETER(LTRPAD_OFF = LTRSAL_OFF + NUMTOT * NUMTRP)
	PARAMETER(LTRPRG_OFF = LTRPAD_OFF + NUMTRP)
	PARAMETER(LTRPRF_OFF = LTRPRG_OFF + NUMTRP)
	PARAMETER(LTRREF_OFF = LTRPRF_OFF + NUMTRP)
	PARAMETER(LTRERF_OFF = LTRREF_OFF + NUMTRP)
	PARAMETER(LTRTER_OFF = LTRERF_OFF + NUMTRP)
	PARAMETER(LTRWON_OFF = LTRTER_OFF + NUMTRP)
	PARAMETER(LTRPOL_OFF = LTRWON_OFF + NUMTRP)
	PARAMETER(LTRTPL_OFF = LTRPOL_OFF + 2 * NUMTRP)
	PARAMETER(LTRTBK_OFF = LTRTPL_OFF + NUMTRP)
	PARAMETER(LTRBRK_OFF = LTRTBK_OFF + NUMTRP)
	PARAMETER(LTRABW_OFF = LTRBRK_OFF + 2 * NUMTRP)

	INTEGER*4 LTRODS_OFF, LTRWIN_OFF, LTRHLD_OFF, LTRTAX_OFF
	INTEGER*4 LTROTX_OFF, LTRMID_OFF, LTRUTX_OFF, LTRHST_OFF
	INTEGER*4 LTRORM_OFF, LTRMNM_OFF, LTRENM_OFF, LTRDES_OFF
        INTEGER*4 LTRNMS_OFF
	PARAMETER(LTRODS_OFF = LTRABW_OFF + NUMTRP)
	PARAMETER(LTRWIN_OFF = LTRODS_OFF + MAXTRPTI * NUMTRP)
	PARAMETER(LTRHLD_OFF = LTRWIN_OFF + 3*MAXTRPTI*NUMTRP)
	PARAMETER(LTRTAX_OFF = LTRHLD_OFF + 3*MAXTRPTI*NUMTRP)
	PARAMETER(LTROTX_OFF = LTRTAX_OFF + NUMTRP)
	PARAMETER(LTRMID_OFF = LTROTX_OFF + NUMTOT * NUMTRP)
	PARAMETER(LTRUTX_OFF = LTRMID_OFF + NUMTOT * NUMTRP)
	PARAMETER(LTRHST_OFF = LTRUTX_OFF + NUMTOT * NUMTRP)
	PARAMETER(LTRORM_OFF = LTRHST_OFF + MAXTRPTI * NUMTRP)
	PARAMETER(LTRMNM_OFF = LTRORM_OFF + NUMTOT*NUMTRP)
	PARAMETER(LTRENM_OFF = LTRMNM_OFF + (TRPENM_LEN/4) * NUMTRP)
	PARAMETER(LTRDES_OFF = LTRENM_OFF + (TRPENM_LEN/4) * 3 * NUMTRP)
	PARAMETER(LTRNMS_OFF = LTRDES_OFF + (TRPDES_LEN/4) * 3 * NUMTRP)

	INTEGER*4 LTRSTA_OFF, LTREST_OFF,LTRSBR_OFF, LTRREV_OFF, LTRPFN_OFF
	INTEGER*4 LTRPRC_OFF, LTRSPR_OFF
	INTEGER*4 LTREVD_OFF, LTREVT_OFF
	PARAMETER(LTRSTA_OFF = LTRNMS_OFF + (TRPNMS_LEN/4)*MAXTRPRW*3*NUMTRP)
	PARAMETER(LTREST_OFF = LTRSTA_OFF + MAXTRPRW * 3 * NUMTRP)
	PARAMETER(LTREVD_OFF = LTREST_OFF + 3 * NUMTRP)
	PARAMETER(LTREVT_OFF = LTREVD_OFF + 3 * NUMTRP)
	PARAMETER(LTRSBR_OFF = LTREVT_OFF + 3 * NUMTRP)
	PARAMETER(LTRREV_OFF = LTRSBR_OFF + MAXTRPRW * 3 * NUMTRP)
	PARAMETER(LTRPFN_OFF = LTRREV_OFF + NUMTRP)
	PARAMETER(LTRPRC_OFF = LTRPFN_OFF + 5 * NUMTRP)
	PARAMETER(LTRSPR_OFF = LTRPRC_OFF + NUMTRP)

        INTEGER*4 LTRWRO_OFF, LTRWRA_OFF, LTRWPO_OFF, LTRWPA_OFF
        INTEGER*4 LTRWPR_OFF, LTRRWS_OFF, LTRWCP_OFF
	INTEGER*4 LTRWBT_OFF
	PARAMETER(LTRRWS_OFF = LTRSPR_OFF + NUMTRP)
	PARAMETER(LTRWCP_OFF = LTRRWS_OFF + 3 * NUMTRP)
	PARAMETER(LTRWBT_OFF = LTRWCP_OFF + MAXTRPTI * NUMTRP)
        PARAMETER(LTRWRO_OFF = LTRWBT_OFF + NUMTOT * MAXTRPTI * NUMTRP)
        PARAMETER(LTRWRA_OFF = LTRWRO_OFF + NUMTOT * 2 * NUMTRP)
        PARAMETER(LTRWPO_OFF = LTRWRA_OFF + NUMTOT * 2 * NUMTRP)
        PARAMETER(LTRWPA_OFF = LTRWPO_OFF + NUMTOT * 2 * NUMTRP)
        PARAMETER(LTRWPR_OFF = LTRWPA_OFF + NUMTOT * 2 * NUMTRP) 
C
	INTEGER*4 LTRCMB_OFF,LTRLAT_OFF
	PARAMETER(LTRCMB_OFF = LTRWPR_OFF + NUMTOT * 2 * NUMTRP)
	PARAMETER(LTRLAT_OFF = LTRCMB_OFF + NUMTRP)
C
	INTEGER*4 LTRFRE_OFF
        PARAMETER(LTRFRE_OFF = LTRLAT_OFF + NUMLAT*NUMTRP)


        INTEGER*4 LTRRECLEN
        PARAMETER(LTRRECLEN = LTRFRE_OFF -1)
C                                                                               
C LOGICAL RECORD DEFINITION                                                     
C                                                                               
        INTEGER*4 LTRREC(LTRRECLEN)

C CALCULATE FREE SPACE BASED ON MACHINE DEPENDENT SECTOR SIZES.
C SHOULD ALLWAYS ADD UP TO A EVEN SECTOR SIZE BYTES (VAX 512).
C NOTE! IN CALCULATIONS, FRE_OFF-2 IS DONE TO TAKE CARE OF WHEN THE DATA SIZE
C       ENDS ON A EVEN SECTOR SIZE.
C
C        INTEGER*4 LTRSEC_VAX, LTRSEC_NUM
C        PARAMETER (LTRSEC_VAX = SECSIZE/4)
C	PARAMETER (LTRSEC_NUM = NINT(FLOAT((LTRFRE_OFF-2)/LTRSEC_VAX)+.5))
C
C        INTEGER*4 LTRLEN, LTRSEC
C        PARAMETER(LTRLEN = LTRSEC_VAX * LTRSEC_NUM)        ! even sector size
C        PARAMETER(LTRSEC = LTRLEN/64)
C
C        INTEGER*4 LTRREC(LTRLEN)

	INTEGER*4 LTRSTS(NUMTRP),LTRWEK(NUMTRP)
        INTEGER*4 LTRDAT(NUMTRP),LTRBSD(NUMTRP)
	INTEGER*4 LTRESD(NUMTRP),LTRCTM(NUMTRP)
	INTEGER*4 LTRTIM(NUMTRP),LTRSAL(NUMTOT,NUMTRP)
	INTEGER*4 LTRPAD(NUMTRP),LTRPRG(NUMTRP)
	INTEGER*4 LTRREF(NUMTRP),LTRWON(NUMTRP)
	INTEGER*4 LTRPOL(2,NUMTRP),LTRTPL(NUMTRP)
	INTEGER*4 LTRTBK(NUMTRP),LTRBRK(2,NUMTRP)
	INTEGER*4 LTRABW(NUMTRP),LTRODS(MAXTRPTI,NUMTRP)
	INTEGER*4 LTRWIN(3,MAXTRPTI,NUMTRP),LTRTAX(NUMTRP)
	INTEGER*4 LTROTX(NUMTOT,NUMTRP),LTRHLD(3,MAXTRPTI,NUMTRP)
	INTEGER*4 LTRMID(NUMTOT,NUMTRP),LTRUTX(NUMTOT,NUMTRP)
	INTEGER*4 LTRHST(MAXTRPTI,NUMTRP),LTRORM(2,NUMTRP)
	INTEGER*4 LTRMNM(TRPENM_LEN/4,NUMTRP)
	INTEGER*4 LTRENM(TRPENM_LEN/4,3,NUMTRP)
	INTEGER*4 LTRDES(TRPDES_LEN/4,3,NUMTRP)
	INTEGER*4 LTRNMS(TRPNMS_LEN/4,MAXTRPRW,3,NUMTRP)
	INTEGER*4 LTRREV(NUMTRP),LTRPUP(NUMTRP)
	INTEGER*4 LTRUPD(NUMTRP),LTRSTA(MAXTRPRW,3,NUMTRP),LTREST(3,NUMTRP)
	INTEGER*4 LTREVD(3,NUMTRP),LTREVT(3,NUMTRP)
	INTEGER*4 LTRSBR(MAXTRPRW,3,NUMTRP),LTRPFN(5,NUMTRP)
	INTEGER*4 LTRERF(NUMTRP),LTRTER(NUMTRP)
	INTEGER*4 LTRDRW(NUMTRP)
	INTEGER*4 LTRSER(NUMTRP)
	INTEGER*4 LTRPRF(NUMTRP),LTRSPR(NUMTRP),LTRPRC(NUMTRP)
	INTEGER*4 LTRRWS(3,NUMTRP),LTRWCP(MAXTRPTI,NUMTRP)
	INTEGER*4 LTRWBT(NUMTOT,MAXTRPTI,NUMTRP)
        INTEGER*4 LTRWRO(NUMTOT,2,NUMTRP),LTRWRA(NUMTOT,2,NUMTRP)
	INTEGER*4 LTRWPO(NUMTOT,2,NUMTRP)
        INTEGER*4 LTRWPA(NUMTOT,2,NUMTRP),LTRWPR(NUMTOT,2,NUMTRP)
	INTEGER*4 LTRCMB(NUMTRP),LTRLAT(NUMLAT,NUMTRP)       


	EQUIVALENCE(LTRSTS,LTRREC(LTRSTS_OFF))
	EQUIVALENCE(LTRWEK,LTRREC(LTRWEK_OFF))
	EQUIVALENCE(LTRDAT,LTRREC(LTRDAT_OFF))
	EQUIVALENCE(LTRDRW,LTRREC(LTRDRW_OFF))
	EQUIVALENCE(LTRBSD,LTRREC(LTRBSD_OFF))
	EQUIVALENCE(LTRESD,LTRREC(LTRESD_OFF))
	EQUIVALENCE(LTRPUP,LTRREC(LTRPUP_OFF))
	EQUIVALENCE(LTRUPD,LTRREC(LTRUPD_OFF))
	EQUIVALENCE(LTRCTM,LTRREC(LTRCTM_OFF))
	EQUIVALENCE(LTRTIM,LTRREC(LTRTIM_OFF))
	EQUIVALENCE(LTRSER,LTRREC(LTRSER_OFF))
	EQUIVALENCE(LTRSAL,LTRREC(LTRSAL_OFF))
	EQUIVALENCE(LTRPAD,LTRREC(LTRPAD_OFF))
	EQUIVALENCE(LTRPRG,LTRREC(LTRPRG_OFF))
	EQUIVALENCE(LTRPRF,LTRREC(LTRPRF_OFF))
	EQUIVALENCE(LTRREF,LTRREC(LTRREF_OFF))
	EQUIVALENCE(LTRERF,LTRREC(LTRERF_OFF))
	EQUIVALENCE(LTRTER,LTRREC(LTRTER_OFF))
	EQUIVALENCE(LTRWON,LTRREC(LTRWON_OFF))
	EQUIVALENCE(LTRPOL,LTRREC(LTRPOL_OFF))
	EQUIVALENCE(LTRTPL,LTRREC(LTRTPL_OFF))
	EQUIVALENCE(LTRTBK,LTRREC(LTRTBK_OFF))
	EQUIVALENCE(LTRBRK,LTRREC(LTRBRK_OFF))
	EQUIVALENCE(LTRABW,LTRREC(LTRABW_OFF))
	EQUIVALENCE(LTRODS,LTRREC(LTRODS_OFF))
	EQUIVALENCE(LTRWIN,LTRREC(LTRWIN_OFF))
	EQUIVALENCE(LTRHLD,LTRREC(LTRHLD_OFF))
	EQUIVALENCE(LTRTAX,LTRREC(LTRTAX_OFF))
	EQUIVALENCE(LTROTX,LTRREC(LTROTX_OFF))
	EQUIVALENCE(LTRMID,LTRREC(LTRMID_OFF))
	EQUIVALENCE(LTRUTX,LTRREC(LTRUTX_OFF))
	EQUIVALENCE(LTRHST,LTRREC(LTRHST_OFF))
	EQUIVALENCE(LTRORM,LTRREC(LTRORM_OFF))
	EQUIVALENCE(LTRMNM,LTRREC(LTRMNM_OFF))
	EQUIVALENCE(LTRENM,LTRREC(LTRENM_OFF))
	EQUIVALENCE(LTRDES,LTRREC(LTRDES_OFF))
	EQUIVALENCE(LTRNMS,LTRREC(LTRNMS_OFF))
	EQUIVALENCE(LTRSTA,LTRREC(LTRSTA_OFF))
	EQUIVALENCE(LTREST,LTRREC(LTREST_OFF))
	EQUIVALENCE(LTREVD,LTRREC(LTREVD_OFF))
	EQUIVALENCE(LTREVT,LTRREC(LTREVT_OFF))
	EQUIVALENCE(LTRSBR,LTRREC(LTRSBR_OFF))
	EQUIVALENCE(LTRREV,LTRREC(LTRREV_OFF))
	EQUIVALENCE(LTRPFN,LTRREC(LTRPFN_OFF))
	EQUIVALENCE(LTRPRC,LTRREC(LTRPRC_OFF))
	EQUIVALENCE(LTRSPR,LTRREC(LTRSPR_OFF))
	EQUIVALENCE(LTRRWS,LTRREC(LTRRWS_OFF))
	EQUIVALENCE(LTRWCP,LTRREC(LTRWCP_OFF))
	EQUIVALENCE(LTRWBT,LTRREC(LTRWBT_OFF))
        EQUIVALENCE(LTRWRO,LTRREC(LTRWRO_OFF))
        EQUIVALENCE(LTRWRA,LTRREC(LTRWRA_OFF))
        EQUIVALENCE(LTRWPO,LTRREC(LTRWPO_OFF))
        EQUIVALENCE(LTRWPA,LTRREC(LTRWPA_OFF))
        EQUIVALENCE(LTRWPR,LTRREC(LTRWPR_OFF))
        EQUIVALENCE(LTRCMB,LTRREC(LTRCMB_OFF))
        EQUIVALENCE(LTRLAT,LTRREC(LTRLAT_OFF))
