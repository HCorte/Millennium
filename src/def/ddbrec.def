C DDBREC.DEF
C
C V06 30-JUN-2000 UXN DDBLAT added.
C V05 18-MAY-1999 UXN DDBCMB added.
C V04 28-NOV-1995 HXK Batch of changes for Double/Couple release
C V03 10-NOV-1995 HXK Further changes for Double, Couple
C V02 07-NOV-1995 HXK Changes for Double, Couple install
C V01 06-NOV-1995 PXB Initial revision.
C
C SUPER DOUBLE GAME DATA FILE RECORD LAYOUT (DISK)
C
C
C     DDBSTS                         ; GAME STATUS
C     DDBWEK                         ; WEEK NUMBER
C     DDBDAT                         ; DRAW DATE
C     DDBDRW                         ; DRAW NUMBER
C     DDBBSD                         ; BEGINNING SALES DATE
C     DDBESD                         ; ENDING SALES DATE
C     DDBPUP                         ; LAST PRUGE UPDATE  (FILE ONLY)
C     DDBUPD                         ; LAST FILE UPDATE   (FILE ONLY)
C     DDBCTM                         ; ACTUAL TIME WHEN CLOSED
C     DDBTIM                         ; TIME WHEN GAME SHOULD CLOSE
C     DDBSER                         ; LAST SERIAL NUMBER
C     DDBSAL(NUMTOT)                 ; TOTAL SALES (COUNT , AMOUNT)
C     DDBPAD                         ; PRIZES PAID + REFUNDS
C     DDBPRG                         ; PRIZES PURGED
C     DDBPRF                         ; PAID REFUNDS
C     DDBREF                         ; TOTAL REFUND AMOUNT
C     DDBERF                         ; EARLY REFUNDS PAID
C     DDBTER                         ; TOTAL EARLY REFUNDS (LIAB)
C     DDBWON                         ; PRIZES WON
C     DDBPOL(2)                      ; ROLL POOL
C     DDBTPL                         ; TOTAL PRIZE POOL
C     DDBTBK                         ; TOTAL BREAKAGE
C     DDBBRK(2)                      ; WINNING ROUNDING POT
C     DDBABW                         ; AMOUNT BET ON WINNING SCORE
C     DDBODS(MAXDBLTI)               ; WINNING ODDS
C     DDBWIN(2,MAXDBLTI)             ; WINNING RESULTS
C     DDBHLD(2,MAXDBLTI)             ; WINNING RESULTS HOLD
C     DDBTAX                         ; WINNING TAXES
C     DDBOTX(NUMTOT)                 ; OVER TAX LIMIT
C     DDBMID(NUMTOT)                 ; >REDMIN <REDMAX
C     DDBUTX(NUMTOT)                 ; UNDER TAX LIMIT
C     DDBHST(MAXDBLTI)               ; HIGHEST WINNER PER WINING COMB
C     DDBORM(NUMTOT)                 ; OVER REDMAX
C     DDBENM(DBLENM_LEN/4)           ; EVENT NAME
C     DDBDES(DBLDES_LEN/4)           ; GAME DESCRIPTION
C     DDBNMS(DBLNMS_LEN/4,MAXDBLRW)  ; ROW NAMES
C     DDBSTA(MAXDBLRW)               ; ROW STATUS 1 THROUGH MAXTRW
C     DDBSBR(MAXDBLRW)               ; SALES BY ROW TABLE
C     DDBREV                         ; REV #
C     DDBPFN(5)                      ; POOL FILE NAME
C     DDBRTM(MAXDBLRW)               ; ROW CLOSE TIMES
C     DDBPRC                         ; BASE PRICE
C     DDBSPR                         ; POOL PERCENTAGE
C     DDBTVC(DBLTVC_LEN/4)    	     ; TV-CHANEL NAME
C     DDBMDS(MAXMLTD_AVL)	     ; MULTI DRAW SELECTED TABLE
C                                      (52 BYTE / 4 = 13)
C     DDBRWS			     ; ACTUAL # OF ROWS USED.
C     DDBWCP(MAXDBLTI)		     ; # WINNING COUPONS PALYED.
C     DDBWBT(NUMTOT,MAXDBLTI)        ; CNT, AMT PLAYED.
C     DDBWRO(NUMTOT,2)               ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     DDBWRA(NUMTOT,2)               ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     DDBWPO(NUMTOT,2)               ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     DDBWPA(NUMTOT,2)               ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     DDBWPR(NUMTOT,2)               ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; (1=PRWON,2=PRPAD)
C     DDBODT(MAXDBLRW*MAXDBLRW)      ; TABLE FOR AMOUNTS ON COMBNS. FOR ODDS
C     DDBPCC			     ; Partially closed combination
C                                    ; IF combination 17/18 is not allowed
C                                    ; to play then DDBPCC is set to 1,
C                                    ; otherwise it is 0. 
C     DDBCMB                         ; NUMBER OF WINNING COMBINATIONS
C     DDBLAT(NUMLAT)                 ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C     DDBFRS(94)		     ; FREE SPACE.
C
C DOUBLE GAME FILE PARAMETERS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C
	INTEGER*4 DDBSTS,DDBWEK,DDBDAT,DDBBSD,DDBESD,DDBCTM,DDBTIM
	INTEGER*4 DDBSAL(NUMTOT),DDBPAD,DDBPRG,DDBREF,DDBWON,DDBPOL(2)
        INTEGER*4 DDBTPL
	INTEGER*4 DDBTBK,DDBBRK(2),DDBABW
	INTEGER*4 DDBODS(MAXDBLTI),DDBWIN(2,MAXDBLTI)
	INTEGER*4 DDBTAX,DDBOTX(NUMTOT),DDBHLD(2,MAXDBLTI)
	INTEGER*4 DDBMID(NUMTOT),DDBUTX(NUMTOT)
	INTEGER*4 DDBHST(MAXDBLTI),DDBORM(2)
	INTEGER*4 DDBENM(DBLENM_LEN/4)
	INTEGER*4 DDBDES(DBLDES_LEN/4)
	INTEGER*4 DDBNMS(DBLNMS_LEN/4,MAXDBLRW)
	INTEGER*4 DDBREV,DDBPUP,DDBUPD,DDBSTA(MAXDBLRW)
	INTEGER*4 DDBSBR(MAXDBLRW),DDBPFN(5),DDBERF,DDBTER,DDBDRW
	INTEGER*4 DDBRTM(MAXDBLRW),DDBSER,DDBPRF,DDBSPR,DDBPRC
	INTEGER*4 DDBTVC(DBLTVC_LEN/4)

	BYTE	  DDBMDS(MAXMLTD_AVL)

	INTEGER*4 DDBRWS,DDBWCP(MAXDBLTI),DDBWBT(NUMTOT,MAXDBLTI)
        INTEGER*4 DDBWRO(NUMTOT,2),DDBWRA(NUMTOT,2),DDBWPO(NUMTOT,2)
        INTEGER*4 DDBWPA(NUMTOT,2),DDBWPR(NUMTOT,2)
        INTEGER*4 DDBODT(MAXDBLRW*MAXDBLRW)
	INTEGER*4 DDBPCC,DDBCMB,DDBLAT(NUMLAT)
	INTEGER*4 DDBFRS(94)
C
C OFFSET PARAMETERS AND EQUIVALENCES
C
	INTEGER*4 DDBSTS_OFF, DDBWEK_OFF, DDBDAT_OFF, DDBDRW_OFF
	PARAMETER(DDBSTS_OFF = 1)					!001
	PARAMETER(DDBWEK_OFF = DDBSTS_OFF + 1)				!002
	PARAMETER(DDBDAT_OFF = DDBWEK_OFF + 1)				!003
	PARAMETER(DDBDRW_OFF = DDBDAT_OFF + 1)				!004

	INTEGER*4 DDBBSD_OFF, DDBESD_OFF, DDBPUP_OFF, DDBUPD_OFF
	PARAMETER(DDBBSD_OFF = DDBDRW_OFF + 1)				!005
	PARAMETER(DDBESD_OFF = DDBBSD_OFF + 1)				!006
	PARAMETER(DDBPUP_OFF = DDBESD_OFF + 1)				!007
	PARAMETER(DDBUPD_OFF = DDBPUP_OFF + 1)				!008

	INTEGER*4 DDBCTM_OFF, DDBTIM_OFF, DDBSER_OFF, DDBSAL_OFF
	PARAMETER(DDBCTM_OFF = DDBUPD_OFF + 1)				!009
	PARAMETER(DDBTIM_OFF = DDBCTM_OFF + 1)				!010
	PARAMETER(DDBSER_OFF = DDBTIM_OFF + 1)				!011
	PARAMETER(DDBSAL_OFF = DDBSER_OFF + 1)   			!012
C
	INTEGER*4 DDBPAD_OFF, DDBPRG_OFF, DDBPRF_OFF, DDBREF_OFF
	PARAMETER(DDBPAD_OFF = DDBSAL_OFF + NUMTOT)			!014
	PARAMETER(DDBPRG_OFF = DDBPAD_OFF + 1)				!015
	PARAMETER(DDBPRF_OFF = DDBPRG_OFF + 1)				!016
	PARAMETER(DDBREF_OFF = DDBPRF_OFF + 1)				!017
C
	INTEGER*4 DDBERF_OFF, DDBTER_OFF, DDBWON_OFF, DDBPOL_OFF
	PARAMETER(DDBERF_OFF = DDBREF_OFF + 1)				!018
	PARAMETER(DDBTER_OFF = DDBERF_OFF + 1)				!019
	PARAMETER(DDBWON_OFF = DDBTER_OFF + 1)				!020
	PARAMETER(DDBPOL_OFF = DDBWON_OFF + 1)				!021
C
	INTEGER*4 DDBTPL_OFF, DDBTBK_OFF, DDBBRK_OFF, DDBABW_OFF
	PARAMETER(DDBTPL_OFF = DDBPOL_OFF + 2)				!023
	PARAMETER(DDBTBK_OFF = DDBTPL_OFF + 1)				!024
	PARAMETER(DDBBRK_OFF = DDBTBK_OFF + 1)				!025
	PARAMETER(DDBABW_OFF = DDBBRK_OFF + 2)				!027
C
	INTEGER*4 DDBODS_OFF, DDBWIN_OFF, DDBHLD_OFF, DDBTAX_OFF
	PARAMETER(DDBODS_OFF = DDBABW_OFF + 1)				!028
	PARAMETER(DDBWIN_OFF = DDBODS_OFF + MAXDBLTI)				!040
	PARAMETER(DDBHLD_OFF = DDBWIN_OFF + 2*MAXDBLTI)			!052
	PARAMETER(DDBTAX_OFF = DDBHLD_OFF + 2*MAXDBLTI)			!076
C
	INTEGER*4 DDBOTX_OFF, DDBMID_OFF, DDBUTX_OFF, DDBHST_OFF
	PARAMETER(DDBOTX_OFF = DDBTAX_OFF + 1)				!077
	PARAMETER(DDBMID_OFF = DDBOTX_OFF + NUMTOT)			!079
	PARAMETER(DDBUTX_OFF = DDBMID_OFF + NUMTOT)			!081
	PARAMETER(DDBHST_OFF = DDBUTX_OFF + NUMTOT)			!083
C
	INTEGER*4 DDBORM_OFF, DDBENM_OFF, DDBDES_OFF, DDBNMS_OFF
	PARAMETER(DDBORM_OFF = DDBHST_OFF + MAXDBLTI)				!096
	PARAMETER(DDBENM_OFF = DDBORM_OFF + NUMTOT)			!098
	PARAMETER(DDBDES_OFF = DDBENM_OFF + (DBLENM_LEN/4))		!104
	PARAMETER(DDBNMS_OFF = DDBDES_OFF + (DBLDES_LEN/4))		!134
C
	INTEGER*4 DDBSTA_OFF, DDBSBR_OFF, DDBREV_OFF, DDBPFN_OFF
	PARAMETER(DDBSTA_OFF = DDBNMS_OFF + (DBLNMS_LEN/4)*MAXDBLRW)	!278
	PARAMETER(DDBSBR_OFF = DDBSTA_OFF + MAXDBLRW)			!314
	PARAMETER(DDBREV_OFF = DDBSBR_OFF + MAXDBLRW)			!350
	PARAMETER(DDBPFN_OFF = DDBREV_OFF + 1)				!351
C
	INTEGER*4 DDBRTM_OFF, DDBPRC_OFF, DDBSPR_OFF, DDBTVC_OFF
	PARAMETER(DDBRTM_OFF = DDBPFN_OFF + 5)				!356
	PARAMETER(DDBPRC_OFF = DDBRTM_OFF + MAXDBLRW)			!392
	PARAMETER(DDBSPR_OFF = DDBPRC_OFF + 1)				!393
	PARAMETER(DDBTVC_OFF = DDBSPR_OFF + 1)				!394 
C
	INTEGER*4 DDBMDS_OFF
	PARAMETER(DDBMDS_OFF = DDBTVC_OFF + (DBLTVC_LEN/4))		
C
        INTEGER*4 DDBWRO_OFF, DDBWRA_OFF, DDBWPO_OFF, DDBWPA_OFF
        INTEGER*4 DDBWPR_OFF, DDBRWS_OFF, DDBWCP_OFF, DDBODT_OFF
        INTEGER*4 DDBWBT_OFF
	PARAMETER(DDBRWS_OFF = DDBMDS_OFF + (MAXMLTD_AVL/4))
	PARAMETER(DDBWCP_OFF = DDBRWS_OFF + 1)
	PARAMETER(DDBWBT_OFF = DDBWCP_OFF + MAXDBLTI)
        PARAMETER(DDBWRO_OFF = DDBWBT_OFF + NUMTOT*MAXDBLTI)
        PARAMETER(DDBWRA_OFF = DDBWRO_OFF + 2*NUMTOT)
        PARAMETER(DDBWPO_OFF = DDBWRA_OFF + 2*NUMTOT)
        PARAMETER(DDBWPA_OFF = DDBWPO_OFF + 2*NUMTOT)
        PARAMETER(DDBWPR_OFF = DDBWPA_OFF + 2*NUMTOT) 
        PARAMETER(DDBODT_OFF = DDBWPR_OFF + 2*NUMTOT) 

	INTEGER*4 DDBPCC_OFF
	PARAMETER(DDBPCC_OFF = DDBODT_OFF + MAXDBLRW*MAXDBLRW)

	INTEGER*4 DDBCMB_OFF
	PARAMETER(DDBCMB_OFF = DDBPCC_OFF + 1)

	INTEGER*4 DDBLAT_OFF
	PARAMETER(DDBLAT_OFF = DDBCMB_OFF + 1)

	INTEGER*4 DDBFRS_OFF
	PARAMETER(DDBFRS_OFF = DDBLAT_OFF + NUMLAT)

	INTEGER*4 DDBFRE_OFF
	PARAMETER(DDBFRE_OFF = DDBFRS_OFF + 94)
C
C CALCULATE FREE SPACE BASED ON MACHINE DEPENDENT SECTOR SIZES.
C SHOULD ALLWAYS ADD UP TO A EVEN SECTOR SIZE BYTES (VAX 512).
C NOTE! IN CALCULATIONS, FRE_OFF-2 IS DONE TO TAKE CARE OF WHEN THE DATA SIZE
C       ENDS ON A EVEN SECTOR SIZE.
C
        INTEGER*4 DDBSEC_VAX, DDBSEC_NUM
        PARAMETER (DDBSEC_VAX = SECSIZE/4)
	PARAMETER (DDBSEC_NUM = NINT(FLOAT((DDBFRE_OFF-2)/DDBSEC_VAX)+.5))
C
        INTEGER*4 DDBLEN, DDBSEC
        PARAMETER(DDBLEN = DDBSEC_VAX * DDBSEC_NUM)        ! even sector size
        PARAMETER(DDBSEC = DDBLEN/64)
C
        INTEGER*4 DDBREC(DDBLEN)
C
	EQUIVALENCE(DDBSTS,DDBREC(DDBSTS_OFF))
	EQUIVALENCE(DDBWEK,DDBREC(DDBWEK_OFF))
	EQUIVALENCE(DDBDAT,DDBREC(DDBDAT_OFF))
	EQUIVALENCE(DDBDRW,DDBREC(DDBDRW_OFF))
	EQUIVALENCE(DDBBSD,DDBREC(DDBBSD_OFF))
	EQUIVALENCE(DDBESD,DDBREC(DDBESD_OFF))
	EQUIVALENCE(DDBPUP,DDBREC(DDBPUP_OFF))
	EQUIVALENCE(DDBUPD,DDBREC(DDBUPD_OFF))
	EQUIVALENCE(DDBCTM,DDBREC(DDBCTM_OFF))
	EQUIVALENCE(DDBTIM,DDBREC(DDBTIM_OFF))
	EQUIVALENCE(DDBSER,DDBREC(DDBSER_OFF))
	EQUIVALENCE(DDBSAL,DDBREC(DDBSAL_OFF))
	EQUIVALENCE(DDBPAD,DDBREC(DDBPAD_OFF))
	EQUIVALENCE(DDBPRG,DDBREC(DDBPRG_OFF))
	EQUIVALENCE(DDBPRF,DDBREC(DDBPRF_OFF))
	EQUIVALENCE(DDBREF,DDBREC(DDBREF_OFF))
	EQUIVALENCE(DDBERF,DDBREC(DDBERF_OFF))
	EQUIVALENCE(DDBTER,DDBREC(DDBTER_OFF))
	EQUIVALENCE(DDBWON,DDBREC(DDBWON_OFF))
	EQUIVALENCE(DDBPOL,DDBREC(DDBPOL_OFF))
	EQUIVALENCE(DDBTPL,DDBREC(DDBTPL_OFF))
	EQUIVALENCE(DDBTBK,DDBREC(DDBTBK_OFF))
	EQUIVALENCE(DDBBRK,DDBREC(DDBBRK_OFF))
	EQUIVALENCE(DDBABW,DDBREC(DDBABW_OFF))
	EQUIVALENCE(DDBODS,DDBREC(DDBODS_OFF))
	EQUIVALENCE(DDBWIN,DDBREC(DDBWIN_OFF))
	EQUIVALENCE(DDBHLD,DDBREC(DDBHLD_OFF))
	EQUIVALENCE(DDBTAX,DDBREC(DDBTAX_OFF))
	EQUIVALENCE(DDBOTX,DDBREC(DDBOTX_OFF))
	EQUIVALENCE(DDBMID,DDBREC(DDBMID_OFF))
	EQUIVALENCE(DDBUTX,DDBREC(DDBUTX_OFF))
	EQUIVALENCE(DDBHST,DDBREC(DDBHST_OFF))
	EQUIVALENCE(DDBORM,DDBREC(DDBORM_OFF))
	EQUIVALENCE(DDBENM,DDBREC(DDBENM_OFF))
	EQUIVALENCE(DDBDES,DDBREC(DDBDES_OFF))
	EQUIVALENCE(DDBNMS,DDBREC(DDBNMS_OFF))
	EQUIVALENCE(DDBSTA,DDBREC(DDBSTA_OFF))
	EQUIVALENCE(DDBSBR,DDBREC(DDBSBR_OFF))
	EQUIVALENCE(DDBREV,DDBREC(DDBREV_OFF))
	EQUIVALENCE(DDBPFN,DDBREC(DDBPFN_OFF))
	EQUIVALENCE(DDBRTM,DDBREC(DDBRTM_OFF))
	EQUIVALENCE(DDBPRC,DDBREC(DDBPRC_OFF))
	EQUIVALENCE(DDBSPR,DDBREC(DDBSPR_OFF))
	EQUIVALENCE(DDBTVC,DDBREC(DDBTVC_OFF))
	EQUIVALENCE(DDBMDS,DDBREC(DDBMDS_OFF))
	EQUIVALENCE(DDBRWS,DDBREC(DDBRWS_OFF))
	EQUIVALENCE(DDBWCP,DDBREC(DDBWCP_OFF))
	EQUIVALENCE(DDBWBT,DDBREC(DDBWBT_OFF))
        EQUIVALENCE(DDBWRO,DDBREC(DDBWRO_OFF))
        EQUIVALENCE(DDBWRA,DDBREC(DDBWRA_OFF))
        EQUIVALENCE(DDBWPO,DDBREC(DDBWPO_OFF))
        EQUIVALENCE(DDBWPA,DDBREC(DDBWPA_OFF))
        EQUIVALENCE(DDBWPR,DDBREC(DDBWPR_OFF))
        EQUIVALENCE(DDBODT,DDBREC(DDBODT_OFF))
        EQUIVALENCE(DDBPCC,DDBREC(DDBPCC_OFF))
        EQUIVALENCE(DDBCMB,DDBREC(DDBCMB_OFF))
        EQUIVALENCE(DDBLAT,DDBREC(DDBLAT_OFF))
        EQUIVALENCE(DDBFRS,DDBREC(DDBFRS_OFF))
