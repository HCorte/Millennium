C
C X2XCOM.DEF
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFIP:[GOLS]X2XCOM.DEV                                   $
C  $Date::   29 Jan 1997 10:13:46                                         $
C  $Revision::   1.1                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C X2XCOM.DEF
C
C V18 15-MAR-11 RXK NEW VALUE OF X2XCSB CALCULATED. 
C V17 14-JUN-00 UXN X2X_MAX_FREE changed from 200000 to 199998 because of 
C                   alignment.
C V16 06-NOV-94 SCD Add CONFIGURED_SAP for subnetwork GUI
C V15 06-SEP-95 DAS Added variables to support background load
C                   NOTE: THIS HAS BEEN REORGANIZED FOR THE ALPHA 
C                         ALL CHARACTER DATA IS LOCATED AT THE END
C                         FOR ALIGNMENT PURPOSES
C
C V14 10-MAR-94 SCD Add X2XC_DIAL_OV_OVERRIDE for X.28 GVTs
C V13 29-DEC-94 WJK MOVE UNSOLICITED STATION CONNECT AND DISCONNECT FROM GLOBAL
C                   TO STATION CLASS
C V12 12-DEC-94 DAS Integrate UK changes into X2X Baseline
C V11 27-OCT-94 GPR Use flow time for stop calls and clear stats
C V10 26-OCT-94 GPR Add Optimize port to common
C V09 20-OCT-94 GPR Add Frames msgs per frame value
C V08 20-OCT-94 GPR Add Unso msgs Station class value to common
C V07 19-AUG-94 GPR Add Station class values to common
C V06 25-JUL-94 SCD Allow configuration of new GVTs during an online game
C V05 19-JUL-94 WS MULTINETWORK CHANGES
C V04 28-APR-94 XXX ADD STATION CLASS INFO TO MEMORY
C V03  7-MAR-94 JWE Add Network type for multi-network support
C V02 16-FEB-94 JWE Add X.25 & broadcas server supoort
C V02 10-MAR-93 DAS CHANGED SIZE OF X2XCSB & WAY OF DETERMINING LAST_X2XCOM 
C V01 01-DEC-91 DAS RELEASED FOR VAX (NETHERLANDS)
C
C
C     X2XCOM.DEF
C
C     DEFINITION OF X25/X21 NETWORK COMMON
C
C  DATA STRUCTURE IS ORGANISED WITH X2X PREFIX, X2XS_ STATION
C  DEFINITION AREA, X2XG_ GROUP DEFINITION AREA,
C  X2XPN_ NETWORK PORTS DEFINITION AREA,X2XPL_ LOCAL PORTS DEFINITION
C  AREA, X2XT_ TERMINAL DEFINITION AREA,
C  X2XE_ - ETHRNET BUFFERS USAGE AREA, X2XA_ APPLICATION
C  X2XC_ - STATION CLASS
C  X2XSN_ - SUBNETWORKING AREA
C
C     -------------------------------------------------------------------
C     IT IS IMPORTANT TO MAKE SURE THAT LAST_X2XCOM IS CORRECT SINCE THIS
C     COMMON IS LOCKED INTO MEMORY. THIS IS ACCOMPLISHED WITH THE USE OF 
C     THE FREE SPACE VARIABLES (X2X_IFREE AND X2X_FREE). BECAUSE THIS
C     COMMON BLOCK MAKES USE OF CHARACTER VARIABLES, IT BECOMES EASIER
C     TO MANIPULATE A CHARACTER ARRAY TO ASSURE THE CORRECT SIZE. ANY
C     CHANGE TO VALUES SET IN X2XPRM.DEF OR ADDITIONS TO THIS COMMOM 
C     CAN AND WILL AFFECT THESE VALUES.
C     -------------------------------------------------------------------
C
C     THESE VARIABLES ARE INITIALISED BY DIFFERENT PROGRAMS
C     EACH IS MARKED WITH PROGRAMS THAT INITIALIZE AND MODIFY IT
C
C     ! - INITIALISED TO 0
C     @ - PRESET AND STORED IN DATA BASE
C     $ - PRESET (IN DATA BASE), MODIFIABLE DURING THE ACTIVITY
C     & - STATE SHOULD BE INQUIRED FROM MATRIX SWITCH IF POSSIBLE
C         AND APPLICABLE
C     % - CALCULATED
C
C     THIS PROGRAM INCLUDES X2XPTL.DEF !!!!
C     THIS PROGRAM INCLUDES X2XPRM.DEF !!!!
C
	INCLUDE 'INCLIB:X2XPRM.DEF'
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4 X2X_GAME_SAP              !SAP ASSIGNED TO GAME @
	INTEGER*4 X2X_GAME_QUE              !GAME SAP APPL QUE NUMBER @
        INTEGER*4 X2X_GAME_MODE             !APPL GAME MODE
        INTEGER*4  X2X_GAMEM_DAY, X2X_GAMEM_NIGHT
           PARAMETER (X2X_GAMEM_DAY=1)      !DAY MODE
           PARAMETER (X2X_GAMEM_NIGHT=2)    !NIGHT MODE
	INTEGER*4 X2X_GAME_STATE            !SAP STATE          !
        INTEGER*4  X2X_GAMES_IDLE, X2X_GAMES_REQUP, X2X_GAMES_UP
        INTEGER*4  X2X_GAMES_SHUTDOWN
	   PARAMETER (X2X_GAMES_IDLE=1)     !GAME IDLE
	   PARAMETER (X2X_GAMES_REQUP=2)    !REQUEST FOR X2XMGR: START
	   PARAMETER (X2X_GAMES_UP=3)       !X2X MGR IS UP AND KICKING
	   PARAMETER (X2X_GAMES_SHUTDOWN=4) !SHUTDOWN REQUESTED
	INTEGER*4 X2X_GAME_CHECK            !CHECK: X2XMGR IS WORKING!
        INTEGER*4  X2X_GAMEC_REQ, X2X_GAMEC_UP
	   PARAMETER (X2X_GAMEC_REQ=1)      !SET BY GAME
	   PARAMETER (X2X_GAMEC_UP=2)       !X2XMGR RESPONCE
	INTEGER*4 X2X_DEBUG                 !DEBUGGING FLAGS    !
        INTEGER*4  X2X_DEBUG_NO,        X2X_DEBUG_TRACE_IN
        INTEGER*4  X2X_DEBUG_TRACE_OUT, X2X_DEBUG_SUBS
        INTEGER*4  X2X_DEBUG_BENCH,     X2X_DEBUG_X2XREL
        INTEGER*4  X2X_DEBUG_X2XRAPP,   X2X_DEBUG_BAD_FE
        INTEGER*4  X2X_DEBUG_BAD_ADR
	   PARAMETER (X2X_DEBUG_NO=0)       !NO DEBUG FLAG SET
	   PARAMETER (X2X_DEBUG_TRACE_IN=1) !TRACE INCOMING BUFFS
	   PARAMETER (X2X_DEBUG_TRACE_OUT=2)!TRACE OUTCOMING BUFFS
	   PARAMETER (X2X_DEBUG_SUBS=4)     !TRACE SUBROUTINES
	   PARAMETER (X2X_DEBUG_BENCH=8)    !TRACE BENCH MARK VALUES
	   PARAMETER (X2X_DEBUG_X2XREL=16)  !TRACE X2XREL
	   PARAMETER (X2X_DEBUG_X2XRAPP=32) !TRACE X2XRAPP
	   PARAMETER (X2X_DEBUG_BAD_FE=64)  !TRACE XINVALID FE MESSAGE
	   PARAMETER (X2X_DEBUG_BAD_ADR=256)!TRACE INVALID ADDRESS MESSAGE
C
	INTEGER*4 X2X_TRACE_SAP             !SAP # TRACED (-1, ALL)
	INTEGER*4 X2X_TRACE_STATION         !TRACE THIS STATION !
	INTEGER*4 X2X_TRACE_BLOCK           !BLOCK # TRACED ! (SAP)
	INTEGER*4 X2X_TRACE_BLOCK1          !BLOCK # TRACED ! (STATION)
	INTEGER*4 X2X_TRACE_SIZE            !SIZE OF TRACED FILE ! (SAP
	INTEGER*4 X2X_TRACE_SIZE1           !(STATION)           !
	INTEGER*4 X2X_TRACE_FDB(7)          !FDB OF TRACE FILE ! (SAP)
	INTEGER*4 X2X_TRACE_FDB1(7)         !(STATION)         !
        INTEGER*4  X2X_TRACE_UNIT, X2X_TRACE_UNIT1
	   PARAMETER (X2X_TRACE_UNIT=7)     !LUN USED TO TRACE SAPS
	   PARAMETER (X2X_TRACE_UNIT1=8)    !LUN USED FOR STATION
	INTEGER*4 X2X_SYSTIM                !TIME!
C
C     SOME GLOBAL PARAMETERS
C
	INTEGER*4 X2XPRO_FLUSH              !X2XPRO CACHE FLUSH FLAG !
C                                           !IF NE 0 - DO IT
	INTEGER*4 X2XPRO_FLUSH_INT          !FLUSH INTERVAL IN MSEC @
	INTEGER*4 X2XPRO_ROUND_ROBIN        !X2X.FIL FILLED (0=NOT FILLED)!
C
	INTEGER*4 X2X_GLOBAL_FE_DISCONNECT    !GLOBAL DISCONNECT MODE$
	INTEGER*4 X2X_GLOBAL_STATION_DISCONNECT!GLOBAL DISCONNECT MODE$
C                          IF 0 STATION SPECIFIC IS USED
C                          IF .NON.0 USE THIS ONE
	INTEGER*4 X2X_DELIVERY_ACK         !IF NON 0 FORCE DA BIT ON $
C                              ;OTHERWISE USE STATION DEFAULT
	INTEGER*4 X2X_DELIVERY_ERR         !GLOBAL ERR REPORT BIT $
C                              ;IF NON 0 SET ERR BIT ON
C                              ;IF 0 USE STATION DEFAULT
C
	INTEGER*4 X2X_UNSOLICIT_FE_CONNECT !CONNECT MODE FOR FRONT END@
C                                        ;FOR UNSOLICIT MESSAGES
	INTEGER*4 X2X_UNSOLICIT_STATION_CONNECT !STATION MODE FOR@
C                                        ;FOR UNSOLICIT MESSAGES
	INTEGER*4 X2X_UNSOLICIT_FE_DISCONNECT !FE DISCONNECT MODE FOR@
C                                        ;UNSOLICITED MESSAGES
	INTEGER*4 X2X_UNSOLICIT_STATION_DISCONNEC  !STATION DISCONNECT@
C                                          !MODE FOR UNSOLICITED MSG
	INTEGER*4 X2X_UNSOLICIT_DELIVER    !DELIVERY FLAG FOR UNSOLICIT@
C                                          !MESSAGES
	INTEGER*4 X2X_STATION_ATRIBUTES    !GLOBAL STATION ATRIBUTES
C                     USED TO OVERRIDE X2XS_ATRIBUTE, (VALUES SAME) @
	INTEGER*4 X2X_MAXMES_CNT          !MAX # OF MESSAGES IN BUF $
	INTEGER*4 X2X_MAXMES_LEN          !MAX LENGTH OF TRANSPORT BUF$
	INTEGER*4 X2X_SEND_DELAY          !MAXIMUM DELAY TO SEND PACKET$
C                                         !ALWAYS SENT
	INTEGER*4 X2X_FE_SEND_DISCONNECT_FLAG   !FE SEND DISCONNECTION$
C                                               !ALARM MESS IF 0
	INTEGER*4 X2X_FE_DISCONNECT_TIMOUT    !TIME TO DISCONNECT
C                                             !STATION AFTER SAP DISCONNECT
	INTEGER*4 X2X_IN_WAIT_ADD         !COUNT OF BUFFS IN WAIT !
	INTEGER*4 X2X_IN_WAIT_REMOVE      !COUNT OF BUFFS IN WAIT !
C
	INTEGER*4 X2X_LOOP_TIME           !X2XMGR LOOP TIMER !
	INTEGER*4 X2X_LOOP_DELAY          !       LOOP DELAY $
	INTEGER*4 X2X_LOOP_SAP            !LOOP THROUGH SAPS TIMER !
	INTEGER*4 X2X_LOOP_SAP_DELAY      !       LOOP DELAY $
	INTEGER*4 X2X_LOOP_MAINTENANCE    !LOOP MAINTENANCE FOR SAPS !
	INTEGER*4 X2X_LOOP_MAINTENANCE_DELAY!     LOOP DELAY $
	INTEGER*4 X2X_AUTOBAUD		  !# OF SEGS TO SEND FOR AUTOBAUD
        INTEGER*4 X2X_STATS_LOOP          !STATION STATS TIMER
        INTEGER*4 X2X_REL_PRI             !RELAY PRIORITY
        INTEGER*4 X2X_REL_ALL,X2X_REL_STN,X2X_REL_GRP
           PARAMETER(X2X_REL_ALL=0)       !RELAY TO ALL STATIONS
           PARAMETER(X2X_REL_STN=1)       !RELAY BASED ON STN STATE
           PARAMETER(X2X_REL_GRP=2)       !RELAY BASED ON GRP STATE
C
C V02       CHANGES TO IMPLEMENT SWEDEN BROADCAST SERVICE (BCST)
C
        INTEGER*4 X2X_BCST_ROUTE        !DESTINATION FOR BROADCAST SERVICE@
	INTEGER*4   X2X_BCSTR_NO_BCST
         PARAMETER (X2X_BCSTR_NO_BCST=0) !SEND TO ALL EXCEPT BCST STATIONS
	INTEGER*4   X2X_BCSTR_BCST_ONLY
         PARAMETER (X2X_BCSTR_BCST_ONLY=1) !TO ALL BCTS STATIONS
	INTEGER*4   X2X_BCSTR_PLUS_NOT_CONF
         PARAMETER (X2X_BCSTR_PLUS_NOT_CONF=2) !TO ALL BCTS STATIONS PLUS
C                     STATIONS THAT DO NOT HAVE CONFIGURED BCST
	INTEGER*4   X2X_BCSTR_PLUS_NOT_ACTIVE
         PARAMETER (X2X_BCSTR_PLUS_NOT_ACTIVE=3) !TO ALL BCTS STATIONS PLUS
C                     STATIONS THAT DO NOT HAVE ACTIVE BCST
 
       INTEGER*4 X2X_BCST_ENABLE       !BCST GLOBAL ENABLE FLAG
       INTEGER*4 X2X_BCST_RETRY_INTERVAL !RETRY INTERVAL IN SECS @
       INTEGER*4 X2X_BCST_RETRY_LIMIT  !MAX NO OF TRIES (0 FOR EVER) @
       INTEGER*4 X2X_BCST_AUTO_REPORT  !STATION REPORTS BCST CONNECT
C                                   !STATUS                   @
C*****V05       INTEGER*4 X2XR_BCST_ACTIVE_CNT(2) !NUM of BCST CONNECTED MAX !
C                        REFLECTS BCST_PORT1 AND BCST_PORT2 IN X2XSTN
C END V02
C
C      ASSIGNMENT, GLOBAL, CAN BE OVERWRITTEN, USED BY X2GETSAP
	INTEGER*4 X2X_THRESHOLD(X2X_MAX_THRESHOLD) ! $
	INTEGER*4 X2X_COMTSK            !0 FOR NEW COMM,.NON.0 FOR OLD@
	INTEGER*4 X2X_NUM_NODES         !NUMBER OF NETWORK NODES
	INTEGER*4 X2X_DEF_CHKSUM        !CHECKSUM STN DEFAULT PARAMS
C
	INTEGER*4 X2X_LOG_ENABLE	!ENABLE LOGGING TO X2X FILE @
	INTEGER*4 X2X_RELAY_LOG_ENABLE  !ENABLE LOGGING RELAY MESSAGES TO
C					!X2X FILE
	INTEGER*4 X2X_BIN_SEARCH_FAIL   !count of fails x2binsrc call
	INTEGER*4 X2X_BIN_SVN_SEARCH_FAIL !times x2binsvn call fails
	INTEGER*4 X2X_BAD_ADR_CNT	!TIMES BAD ADDRESS CAME IN
	INTEGER*4 X2X_BAD_SVN_COUNT	!TIMES BAD SVN CAME IN
C
	INTEGER*4  X2X_CHK_NEW_STATIONS_CONNECT !ALLOW TO LOOK
C					!FOR THE STATIONS THAT ARE NOT IN BINARY
C					!SEARCH TABLE (OPTIMIZATION PARAMETER)
C					!WHEN DISABLED
C
C     STATIONS DEFINITION AREA - X2XS_
C
        INTEGER*2 X2XS_REVISION(X2X_STATIONS)! STATION CODE REV. #
	CHARACTER*1 X2XS_STATE(X2X_STATIONS) ! STATION STATE $
	BYTE	    BX2XS_STATE(X2X_STATIONS)
        INTEGER*4  X2XS_NOT_ACTIVE, X2XS_IDLE, X2XS_INIT
        INTEGER*4  X2XS_DISABLED
	   PARAMETER (X2XS_NOT_ACTIVE=0)   !NOT ACTIVE
	   PARAMETER (X2XS_IDLE=1)         !NOT INITIALISED
	   PARAMETER (X2XS_INIT=2)         !INITIALISED
	   PARAMETER (X2XS_DISABLED=3)     !STATION DISABLED
	INTEGER*4 X2XS_ADRESS(X2X_ADRESS_MAXLEN,X2X_STATIONS) !$
C                                    TABLE      OF STATION ADRESSES
	INTEGER*2 X2XS_ADRESS_LEN(X2X_STATIONS)  !LENGTH OF ADRESS $
	INTEGER*2 X2XS_NUM_TERMS(X2X_MAXPORT,X2X_STATIONS) !# $
C                                            ;OF TERMINALS DEFINED
C                                    ;0 - NONE (STATION INTEGRATED
C                                         WITH TERMINAL
C                                    ;"N" - "N" TERMS DEFINED
	INTEGER*4 X2XS_TERMS(X2X_MAXTERMS,X2X_MAXPORT,X2X_STATIONS)!$
C                                      ;TERMINALS DEFINED (CONTROLED)
C
	CHARACTER*1 X2XS_STATION_DISCONNECT(X2X_STATIONS)!DISCNECT MOD$
	BYTE        BX2XS_STATION_DISCONNECT(X2X_STATIONS)
C
	CHARACTER*1 X2XS_FE_DISCONNECT(X2X_STATIONS)!DISCNNECT MOD$
	BYTE        BX2XS_FE_DISCONNECT(X2X_STATIONS)
C
	INTEGER*4 X2XS_STATS_INDEX(X2X_STATIONS)!LAST STATS IN FILE !
	INTEGER*4 X2XS_CNT_ACTIVE(X2X_STATIONS) !COUNT STATION ACTV !
	INTEGER*4 X2XS_TIME(X2X_STATIONS)       !TIME ACTIVE LAST   !
C
	CHARACTER*1 X2XS_DOWNFLAG(X2X_STATIONS) !DOWNLINE FLAGS $
	BYTE        BX2XS_DOWNFLAG(X2X_STATIONS)
C              DELIVERY ACK AND ERROR REPORTING SET AS DOWNLINE MESS
C
	INTEGER*2 X2XS_CNT_ACTIVE_LAST(X2X_STATIONS,X2XS_INTRVLS)   !!
	INTEGER*4 X2XS_STATS_TIME             !STATISTICS INTERVAL @
C                               COUNT ACTIVE DURING LAST INTERVALS
        INTEGER*4 X2XS_STATS_PNT              !CURRENT POINTER USED
C
	CHARACTER*1 X2XS_SAP(X2X_STATIONS) !LAST SERVICE ACCESS PNT !?
	BYTE        BX2XS_SAP(X2X_STATIONS) 
C                                         $ IN CASE OF PVC
	INTEGER*4 X2XS_ALARM_INDEX(X2X_STATIONS)!LAST ALARM IN FILE !
	INTEGER*4 X2XS_ALARM_TIME(X2X_STATIONS)  !TIME LAST ALARM   !
	INTEGER*4 X2XS_ALARM_STATION             !LAST STTN TO ALARM!
	INTEGER*4 X2XS_ALARM_TOTAL               !TOTAL # OF ALARMS !
C                                                  ;IN THE FILE
	INTEGER*4 X2XS_BAD_ADRESS                !LAST BAD STN ADDRESS
C
	CHARACTER*1 X2XS_ATRIBUTE(X2X_STATIONS) !STATIONS ATRIBUTES @
	BYTE        BX2XS_ATRIBUTE(X2X_STATIONS)
        INTEGER*4  X2XSA_STATS, X2XSA_AUTO_STATS
           PARAMETER (X2XSA_STATS='80'X)        !REQUEST RESPONSE TIME
C                                                STATISTICS
	   PARAMETER (X2XSA_AUTO_STATS='40'X)   !AUTOMATIC UPDATE OF
C                                                POLLING STATS
        INTEGER*4 X2XS_ORIG_TYPE(X2X_STATIONS/4)    !AS SEEN FROM FILE
        BYTE      BX2XS_ORIG_TYPE(X2X_STATIONS)  !AS SEEN FROM FILE
        INTEGER*2 X2XS_TIMES_MESSAGE_FLUSHED(X2X_STATIONS)!
	INTEGER*4 X2XS_CONN_ID(X2X_STATIONS)    !FE CONNECTION ID  !
C                                                FOR UNSOLICITED MESS
        INTEGER*2 X2XS_DISC_CNT(X2X_STATIONS)   !# OF DISCONNECTS
	INTEGER*2 X2XS_ACK_CNT(X2X_STATIONS)    !COUNTER OF ALL ACKS !
	INTEGER*4 X2XS_ACK_CNT_LAST1(X2X_STATIONS/4)     !ACKS, LAST PERIOD
	INTEGER*4 X2XS_ACK_CNT_LAST2(X2X_STATIONS/4)     !ACKS, LAST PERIOD 
	INTEGER*2 X2XS_ERR_CNT(X2X_STATIONS)     !COUNTER OF ALL ERROR!
	INTEGER*4 X2XS_ERR_CNT_LAST1(X2X_STATIONS/4)     !ERROR, LAST PERIOD 
	INTEGER*4 X2XS_ERR_CNT_LAST2(X2X_STATIONS/4)     !ERROR, LAST PERIOD
C                                                     
	INTEGER*4   X2XS_LAST_ERR_CODE(X2X_STATIONS) !LAST ERROR CODE!
	CHARACTER*1 X2XS_CONF(X2X_STATIONS)  !CONFIGURATION ID     %
	BYTE        BX2XS_CONF(X2X_STATIONS)
C                            ;LOW 5 BITS CDC DATE
C                            ;HIGH 3 BITS TO CHANGE DURING THE DAY
	CHARACTER*1 X2XS_CONN_TYPE(X2X_STATIONS)  !@CONNECTION TYPE
	BYTE        BX2XS_CONN_TYPE(X2X_STATIONS) !@CONNECTION TYPE
	INTEGER*4 X2XS_PHYS(X2X_STATIONS)       !PHYS PORT ON FE @
C                                                USED FOR PVC
	INTEGER*4 X2XS_PVC(X2X_STATIONS)        !PVC CHANNEL NO @
	INTEGER*2 X2XS_PRO(X2X_STATIONS)        !PROCOM BUF USED !
	INTEGER*2 X2XS_GROUP(X2X_STATIONS)      !GROUP STATION IS IN @
	INTEGER*2 X2XS_RESET_CNT(X2X_STATIONS)  !# OF TIMES STATION WAS!
C                                             
	CHARACTER*1 X2XS_SALES_RANK(X2X_STATIONS)  !AGENT SALES RANKING @
	BYTE        BX2XS_SALES_RANK(X2X_STATIONS)
	CHARACTER*1 X2XS_PARAM(X2X_STATIONS)       !Misc. Protocol Parameters $
	BYTE        BX2XS_PARAM(X2X_STATIONS)
	   INTEGER*4 X2XS_NO_POLL
	   PARAMETER (X2XS_NO_POLL='80'X)
	INTEGER*2   X2XS_TTN1_CHKSUM(X2X_STATIONS) !TTN LINE 1 PARAM CHKSUM @
	INTEGER*2   X2XS_TTN2_CHKSUM(X2X_STATIONS) !TTN LINE 2 PARAM CHKSUM @
	INTEGER*2   X2XS_STN_CHKSUM(X2X_STATIONS)  !STN PARAM CHKSUM @
	INTEGER*2   X2XS_CALL_CHKSUM(X2X_STATIONS) !INIT CALL PARAM CHKSUM @
C
c V02       CHANGES TO IMPLEMENT SWEDEN BROADCAST SERVICE (BCST)
C
       INTEGER*2 X2XS_TYPE(X2X_STATIONS)        !STATION TYPE @
C****V05	INTEGER*4   X2XST_X25
C****V05          PARAMETER (X2XST_X25   =1)            ! X25 Term on PSDN
C****V05	INTEGER*4   X2XST_X21
C****V05          PARAMETER (X2XST_X21   =2)            ! X21 /Timecutter
	INTEGER*4   X2XST_BCST
          PARAMETER (X2XST_BCST  =			! BCST Type Station !V12
     *		     X2XST_BCST_TYPE)					    !V12
C****V05	INTEGER*4   X2XST_EMULEX
C****V05          PARAMETER (X2XST_EMULEX=4)            ! Asynch EMULEX
 
       CHARACTER*1 X2XS_BCST_ENABLE(X2X_STATIONS) !ENABLE BCST 
       INTEGER*2 X2XS_BCST_ACTIVE_BITMAP(X2X_STATIONS) !ACTIVE PORTS MASK !
       INTEGER*2 X2XS_BCST_NUM(X2X_STATIONS)    ! ACTUAL BCST/STATION  !
       INTEGER*2 X2XS_BCST_STATUS_CHANGES(X2X_STATIONS)  !NO CHANGED
C
	INTEGER*4   X2XA_TO_BE_FREE_BUF
C
C END V02
C
C
C
C     GROUP DEFINITIONS AREA
C
	INTEGER*4 X2XG_MAXSEG                    !MAX SEGS PER CALL @
	INTEGER*4 X2XG_RTYCNT                    !CALL RETRY COUNT @
	INTEGER*4 X2XG_RTYINT                    !CALL RETRY INTERVAL @
	INTEGER*4 X2XG_ACKTIM                    !ACKNOWLEDGMENT TIMEOUT @
	INTEGER*4 X2XG_FWDTIM                    !FORWARDING TIMEOUT @
C
	INTEGER*4 X2XG_STATE(X2X_NUM_GROUPS)     !STATE @
C                                              ;RELAY STATUS
	   INTEGER*4  X2XGS_DISABLED, X2XGS_ENABLED, X2XGS_ACTIVE
	   PARAMETER (X2XGS_DISABLED=0)          !GROUP DISABLED
	   PARAMETER (X2XGS_ENABLED=1)           !GROUP ENABLED
	   PARAMETER (X2XGS_ACTIVE=2)            !GROUP ACTIVE
	INTEGER*4 X2XG_SAP(X2X_NUM_GROUPS)       !SAP USED !
	INTEGER*4 X2XG_CONN_ID(X2X_NUM_GROUPS)   !FRONT-END CONN ID !
	INTEGER*4 X2XG_CNT(X2X_NUM_GROUPS)       !# OF TERMS IN CHAIN @
	INTEGER*4 X2XG_LIST(X2X_LIST_LEN,X2X_NUM_GROUPS)!GROUP LIST   @
C
C
C     TERMINAL DEFINITION AREA   - X2XT_
C
	CHARACTER*1 X2XT_STATE(X2X_TERMS)       !TERMINAL STATE $
	BYTE        BX2XT_STATE(X2X_TERMS)
	   INTEGER*4  X2XTS_NOT_DEF, X2XTS_DEFINED, X2XTS_ACTIVE
	   INTEGER*4  X2XTS_SLOW_POLL, X2XTS_DISABLED
	   PARAMETER (X2XTS_NOT_DEF=0)          !NOT DEFINED
	   PARAMETER (X2XTS_DEFINED=1)          !JUST DEFINED
	   PARAMETER (X2XTS_ACTIVE=2)           !ACTIVE
	   PARAMETER (X2XTS_SLOW_POLL=3)        !ON SLOW POLL
	   PARAMETER (X2XTS_DISABLED=4)         !DISABLED
        CHARACTER*1 X2XT_STATE_CHG(X2X_TERMS)   !TIMES STATE CHANGED
        BYTE        BX2XT_STATE_CHG(X2X_TERMS)
C
	INTEGER*4 X2XT_STATION_NO(X2X_TERMS)    !STATION # ASSIGNED $
	CHARACTER*2 X2XT_DROP_AD(X2X_TERMS)     !DROP ADRESS ASSIGNED$
	CHARACTER*1 X2XT_STATION_PORT(X2X_TERMS)!PORT USED $
	BYTE        BX2XT_STATION_PORT(X2X_TERMS)
C
	INTEGER*2 X2XT_PRO(X2X_TERMS)           !PROCOM BUF USED !
	INTEGER*2 X2XT_PRO_LINK(X2X_TERMS)      !LINK NEXT WAITING BUF!
	INTEGER*4 X2XT_TIME(X2X_TERMS)          !TIME LAST ACTIVE !
	INTEGER*4 X2XT_DELAY(X2X_TERMS)         !DELAY IN CENTRAL !
	INTEGER*4 X2XT_NETWORK_DELAY(X2X_TERMS) !DELAY IN NETWORK !
	INTEGER*4 X2XT_CONN_ID(X2X_TERMS)       !CONN ID, TO BE USED !
C                                               !ROUTE TRANS BACK
	INTEGER*4 X2XT_TRACE_INDEX(X2X_TERMS)   !TO TRACE TERM MESSAGES
C                                               !TO X2X.FIL
	CHARACTER*1 X2XT_TRACE_LIMIT(X2X_TERMS) !# BUFFERS TO TRACE
	BYTE        BX2XT_TRACE_LIMIT(X2X_TERMS)
C
C
C     APPLICATION (GAME) CONTROL AREA
C
	INTEGER*4  X2X_RESPONSE_LEN
	PARAMETER (X2X_RESPONSE_LEN=20)     !RESPONSE TIME TABLE LEN
	INTEGER*4 X2XA_RESPONSE(X2X_RESPONSE_LEN) !RESPONSE TABLE !
C
	INTEGER*4  X2X_NET_RESPONSE_LEN
	PARAMETER (X2X_NET_RESPONSE_LEN=20)    !RESPONSE TABLE LEN
	INTEGER*4 X2XA_NET_RESPONSE(X2X_NET_RESPONSE_LEN) !NETWORK
C                                                   ;RESPONSE TIME
	INTEGER*4 X2XA_CURRENT_COUNT        !CURRENT # OF TRANS IN APP!
	INTEGER*4 X2XA_TRANS_SEQ_ERROR      !# OF TRANS THAT CAME FROM!
C           ;TERMINAL WHEN TRANSACTION WAS IN PROGRESS (WILL WAIT)
C
	INTEGER*4  X2X_MAXDELAY
	PARAMETER (X2X_MAXDELAY=23)           !MAXIMUM # OF DELAY SLOTS
C                                             !IF YOU CHANGE THIS,
C                                             !CHANGE VISION X2DLYSNP
	INTEGER*4  X2X_DELAY_UNIT
	PARAMETER (X2X_DELAY_UNIT=1000)       !MSECS
C
C****	INTEGER*4 X2XA_MIXDELAY(0:X2X_MAXDELAY) !DELAY SLOTS FOR X.25 @
C****	INTEGER*4 X2XA_DIALDELAY(0:X2X_MAXDELAY)!DELAY SLOTS FOR DIALUP@
C
	INTEGER*4  X2XA_LASTDELAY_INTERVAL
	PARAMETER (X2XA_LASTDELAY_INTERVAL=10000) !REFRESH INTERVAL
C                                           ;FOR X2XA_LASTDELAY
	INTEGER*4 X2XA_LASTDELAY_TIME         !CURRENT TIME       !
	INTEGER*4 X2XA_LASTDELAY_INDEX        !INDEX OF LAST INTERVAL@
C                                           ;STATS DELAY
	INTEGER*4 X2XA_DELAY(0:X2X_MAXDELAY,0:X2X_MAX_DELAY_SUBNET-1)
	INTEGER*4 X2XA_LASTDELAY
     *				(0:X2X_MAXDELAY,0:X2X_MAX_DELAY_SUBNET-1,2)
C                               NETWORK DELAYS FOR LAST INTERVAL
C       LOCAL PORTS DEFINITION AREA X2XPL_
C
C     WE ASSUME THAT NETWORK PORTS MAY BE SWITCHED BY MATRIX SWITCH
C     TO ANY OF THE PORTS ON FRONT ENDS (SAPS). IN CASE IF THIS IS
C     NOT THE CASE ONE TO ONE CORRESPONDENCE IS KEPT BETWEEN
C     NETWORK AND LOCAL PORTS
C
	INTEGER*4 X2XPL_SAP(X2X_LOCAL_PORTS)     !SAP ASSIGNMENT @
	INTEGER*4 X2XPL_SAP_PORT(X2X_LOCAL_PORTS) !SAP LINE ASSN  @
	INTEGER*4 X2XPL_LOCAL_TO_NETWORK(X2X_LOCAL_PORTS)!LOCAL TO NET&
	INTEGER*4 X2XPL_STATE(X2X_LOCAL_PORTS)  !LOCAL PORT STATE @
C                                              ;HOPE WE CAN GET IT
	   INTEGER*4  X2XPS_NOT_DEFINED, X2XPS_IDLE, X2XPS_ON_LINE
	   INTEGER*4  X2XPS_DOWN, X2XPS_SWITCH_IN_PROG
	   PARAMETER (X2XPS_NOT_DEFINED=0)       !PORT NOT DEFINED
	   PARAMETER (X2XPS_IDLE=1)              !PORT NOT ACTIVE
	   PARAMETER (X2XPS_ON_LINE=2)           !ONLINE AND KICKING
	   PARAMETER (X2XPS_DOWN=3)              !DOWN
	   PARAMETER (X2XPS_SWITCH_IN_PROG=4)    !PORT SWITCH PENDING
	INTEGER*4 X2XPL_SITE(X2X_LOCAL_PORTS)    !SITE NUMBER
C
C
C     NETWORK PORTS DEFINITION AREA  X2XPN_
C
	INTEGER*4 X2XPN_CAPACITY(X2X_NETWORK_PORTS) !CAPACITY OF PORTS@
	INTEGER*4 X2XPN_DAYMAX_CAPACITY(X2X_NETWORK_PORTS) !CAPACITY OF PORTS@
	INTEGER*4 X2XPN_TIME(X2X_NETWORK_PORTS)   !TIME LAST ACTIVE!
	INTEGER*4 X2XPN_ADRESS(X2X_ADRESS_MAXLEN,0:X2X_NETWORK_PORTS) !@
C                                             ;EACH PORT ADRESS
	INTEGER*4 X2XPN_HUNT_ADR(X2X_ADRESS_MAXLEN,0:X2X_NETWORK_PORTS) !@
C                                             ;HUNT ADDR WITH EACH PORT
	INTEGER*4 X2XPN_NETWORK_TO_LOCAL(X2X_NETWORK_PORTS)  !&
C                                    ;NETWORK TO LOCAL PORTS ASSIGN
	INTEGER*4 X2XPN_NUMPVC(X2X_NETWORK_PORTS)  !NUMBER OF PVCS' PER PORT@
	INTEGER*4 X2XPN_PVC_TO_STATION(X2X_NETWORK_PORTS,    !@
     *                                 0:X2X_MAXPVC_ASSIGN)  !PVC TO STATION
        INTEGER*4 X2XPN_PVC_INDEX(X2X_NETWORK_PORTS)       ! POINTS TO USAT CKTS
        INTEGER*4 X2XPN_PVC_CKTS_TO_STN(0:X2X_MAXPVC_CKTS, ! CKT TO STN
     *                                  X2X_MAXPVC_LINES)  ! SWITCHED TO PORTS
	INTEGER*4 X2XPN_STATE(X2X_NETWORK_PORTS)!NET PORT STATE &
	INTEGER*4 X2XPN_OUTCALL(0:X2X_NETWORK_PORTS)!PORT - OUTCALL ONLY@
C
	INTEGER*4 X2XPN_OUT_RETRY_LIMIT          !OUTCALL RETRY LIMIT @
	INTEGER*4 X2XPN_OUT_RETRY_INTERVAL       !OUTCALL RETRY INTRVL@
	INTEGER*4 X2XPN_OUT_DURATION_TIMOUT        !OUTCALL XTIMOUT @
	INTEGER*4 X2XPN_IN_DURATION_TIMOUT         !INCALL XTIMOUT  @
	INTEGER*4 X2XPN_HUNT(X2X_MAX_HUNT)         !@ HUNT INDEX
	INTEGER*4 X2XPN_TYPE(0:X2X_NETWORK_PORTS)    !TYPE OF PORT @
C*
C* V05
	INTEGER*4 X2XPN_BCST_STATUS_CHANGES(X2X_NETWORK_PORTS) !TIME CONNECTION
C							       !STATUSES CHANGED
	INTEGER*4 X2XPN_BCST_ACTIVE_CNT(X2X_NETWORK_PORTS) !NUM of BCST 
C							CONNECTED MAX !
C                        REFLECTS BCST_PORT1 AND BCST_PORT2 IN X2XSTN

C**** END V02
C
C       DEFINITION OF SAP CONTROL AREA
C
	INTEGER*4 X2XE_ACTIVE              !TOT # OF SAPS ACTIVE!
	INTEGER*4 X2XE_MAX_SIZE            !MAXIMUM SIZE OF XPORT BLOK@
	INTEGER*4 X2XE_MAX_CNT             !MAXIMUM CNT OF XPORT BLOCK@
	INTEGER*4 X2XE_SEND_INTERVAL       !SEND INTERVAL FOR REMOTES @
	INTEGER*4 X2XE_MAINT_OPTIONS       !MAINTENANCE OPTIONS FIELD !V11
	   INTEGER*4 X2XEM_OPTIONS_STATS_MASK   !CLEAR STATS MASK
	   INTEGER*4 X2XEM_OPTIONS_STOP_MASK	!STOP CALLS MASK
	   PARAMETER (X2XEM_OPTIONS_STOP_MASK=1)
	   PARAMETER (X2XEM_OPTIONS_STATS_MASK=2)
	INTEGER*4 X2XE_RESEND_BEGIN        !SEND BEGIN, INSTEAD OF @
C                                         MAINTENANCE PACKET, COUNT
	INTEGER*4 X2XE_BUF(X2X_SAP)        !OUTPUT BUFFER ASSIGNED!
	INTEGER*4 X2XE_INDEX(X2X_SAP)      !LAST INDEX IN BUFFER!
	INTEGER*4 X2XE_CNT(X2X_SAP)        !COUNT RECORDS IN BUFFER!
	INTEGER*4 X2XE_ACT_STATUS(X2X_SAP)     !CURRENT STATUS!
	   INTEGER*4  X2XES_NOTUP, X2XES_ONLINE, X2XES_IDLE
	   PARAMETER (X2XES_NOTUP=0)       !SAP IS NOT UP
	   PARAMETER (X2XES_ONLINE=1)      !SAP ACTIVE
	   PARAMETER (X2XES_IDLE=2)        !SAP IDLE
	INTEGER*4 X2XE_ACT_STATE(X2X_SAP)      !STATE SAP IS IN!
C                        ;IN/OUT CALLS ENABLED, SAME AS TDBH HEADER
	INTEGER*4 X2XE_DEF_STATUS(X2X_SAP)     !STATUS SHOULD BE IN!
	INTEGER*4 X2XE_DEF_STATE(X2X_SAP)      !STATE SHOULD BE IN!
	INTEGER*4 X2XE_FE_TYPE(X2X_SAP)        !FRONT END TYPE !
C                         ;VALUES AS IN MAINTENANCE MESSAGE (X2TDBH)
	INTEGER*4 X2XE_FE_ID(X2X_SAP)       !FRONT END ID!
	INTEGER*4 X2XE_CONF(X2X_SAP)       !CONFIGURATION CHECKSUM
	INTEGER*4 X2XE_SEQ_RECV(X2X_SAP)   !SEQUENCE # RECEIVED!
	INTEGER*4 X2XE_SEQ_XMIT(X2X_SAP)   !SEQUENCE # SENT!
	INTEGER*4 X2XE_CAPACITY(X2X_SAP)   !CAPACITY!
	INTEGER*4 X2XE_MAX_CAPACITY(X2X_SAP)!TOTAL FE_CAPACITY
	INTEGER*4 X2XE_TIME(X2X_SAP)       !TIME LAST ACTIVE!
	INTEGER*4 X2XE_CNT_BLK(X2X_SAP)    !COUNT OF BLOKS SENT  !
	INTEGER*4 X2XE_CNT_RCV_BLK(X2X_SAP) !COUNT RECEIVED BLOCKS
	INTEGER*4 X2XE_CNT_ERR(X2X_SAP)    !COUNT OF SEQUENCE ERRORS !
	INTEGER*4 X2XE_SERIAL(X2X_SAP)     !LAST SERIAL # SENT
	INTEGER*4 X2XE_FORMAT_TIME(X2X_SAP)!TIME FORMATTING OF BUFFER!
C                                        ;STARTED
	INTEGER*4 X2XE_TOT_MSG_CNT(X2X_SAP)!TOTAL MESSAGES SENT!
	INTEGER*4 X2XE_TOT_RCV_CNT(X2X_SAP)!TOTAL MESSAGES RECEIVED!
	INTEGER*4 X2XE_STATION_MSG_CNT(X2X_SAP)!TOTAL SENT TO STATIONS!
C
	INTEGER*4 X2XE_LOCAL_PORT(X2X_SAP_PORTS,X2X_SAP) !LOCAL PORTS@
C                                                       ASSIGNMENT
	INTEGER*4 X2XE_LOCAL_PORT_STATE(X2X_SAP_PORTS,X2X_SAP) !STATE!
C                     ;OF EACH PORT, VALUE SAME AS LOCAL/NET STATES
C                      MAINTENANCE DATA RECEIVED
C
        INTEGER*4 X2XE_REQ_MAINTENANCE(
     *             0:X2X_MAX_MAINTENANCE_TYPE,X2X_SAP)
	INTEGER*4 X2XE_LOCAL_PORT_MAINTENANCE(
     *	           4,X2X_MAX_MAINTENANCE_TYPE,X2X_SAP_PORTS,X2X_SAP)
        INTEGER*4 X2XE_MAINTENANCE_START(X2X_SAP)
	INTEGER*4 X2XE_DELAY(X2X_SAP)
	INTEGER*4 X2XE_DAYMAX_CAPACITY(X2X_SAP_PORTS,X2X_SAP)
C
        INTEGER*4 X2XE_NETWORK_TYPE(X2X_SAP)   !FRONT END/NETWORK TYPE - V05
	INTEGER*4 X2XE_SUBNETWORK(X2X_SAP)     !SUBNETWORK NUMBER - V05
	INTEGER*4 X2X_MAX_MSGS_PER_FRAME_INTERVAL			!V09
	PARAMETER (X2X_MAX_MSGS_PER_FRAME_INTERVAL=50)
	INTEGER*4 X2XE_MSGS_PER_FRAME(	       !Range of Msgs per frame - V09
     *		  1:X2X_MAX_MSGS_PER_FRAME_INTERVAL,X2X_SAP)
C
C     ADRESS AREA, ALL ADRESSES ARE SORTED
C
	INTEGER*4 X2X_LOCK_ADR              !TABLE LOCK
	INTEGER*4 X2X_SORTED_UPDATE         !TABLE HAS BEEN UPDATED
	INTEGER*4 X2X_SORTED_ADR(0:X2X_ADRESS_MAXLEN,X2X_STATIONS) !%
C                                  ;OFFSET 0 CORRESPONDS TO STATION #
        INTEGER*4 X2X_LOCK_EVSN             !TABLE LOCK
        INTEGER*4 X2X_SORTED_EVSN_UPDATE    !TABLE HAS BEEN UPDATED
        INTEGER*4 X2X_SORTED_EVSN(0:X2X_EVSN_MAXLEN, X2X_STATIONS
     *                                              +X2X_EVSN_MAXADD)
        INTEGER*4 X2X_ADDED_EVSN            !COUNT ADDED ONLINE
C
C DEFAULT TTN CHECKSUM AREA.
C
	INTEGER*2   X2XD_CHKSUM(X2X_MAXTTN)     !CHECKSUM OF EACH TTN RECORD
	INTEGER*4   X2XD_TTN_RECORD_BACKUP(128,X2X_MAXTTN) !MEMORY SAME AS FILE
C
C
C       USE BACKGROUND DOWNLOAD MODE FLAGS
C
        INTEGER*4 X2X_DLL_USE_ENVELOPE          !Use "envelope" for downloading
        INTEGER*4 X2X_REQ_BACKGROUND_DELAY      !Delay before next request
        INTEGER*4 X2X_DLL_ENABLE_BACKGROUND     !Stop bAckground download
        INTEGER*4 X2X_DLL_BACKGROUND_FLAG       !Use background download mode
        INTEGER*4 X2X_ENABLE_TEST_DLL           !Enable test download
        INTEGER*4 X2X_REQ_FORGROUND_DELAY       !Delay before next request
        INTEGER*4 X2X_DLL_ENABLE_FORGROUND      !Stop forground download
C
C     INCLUDE ALL ERROR CODES
C
	INCLUDE 'INCLIB:X2XPTL.DEF'
C
C THE DEFINITION OF X2X PRINT (TO CONSOLE) FLAG TABLES
C AND STATISCTICS
C
	INTEGER*2 X2X_SAP_PRINT(X2X_SAP)        !SAP PRINT TABLE !
	INTEGER*2 X2X_STN_PRINT(X2X_STATIONS)   !STA PRINT TABLE !
	INTEGER*2 X2X_MSG_PRINT(X2ERR_MAX_ERR)  !MSG PRINT TABLE !
	INTEGER*4 X2X_GLO_PRINT                 !GLOBAL PRINT FLAG !
C
C PRINT MODE DEFINITION
C
	INTEGER*4 X2X_NONE_PRINT, X2X_PART_PRINT, X2X_ALL_PRINT
	PARAMETER(X2X_NONE_PRINT=1)
	PARAMETER(X2X_PART_PRINT=2)
	PARAMETER(X2X_ALL_PRINT=3)
C
C ONLINE GVT CONFIGURATION - V06
C
	INTEGER*4 X2X_GVT_CFG_ENABLE		!GVT CONFIGURATION FLAG
	INTEGER*4 X2X_GVT_CFG_ENABLE_ON,X2X_GVT_CFG_ENABLE_OFF
	PARAMETER(X2X_GVT_CFG_ENABLE_ON=1)
	PARAMETER(X2X_GVT_CFG_ENABLE_OFF=0)
        INTEGER*4 X2XC_MAX_DUMMY_STNS   !MAX # OF DUMMY STNS ALLOWED FOR
                                        !EACH CLASS
        PARAMETER (X2XC_MAX_DUMMY_STNS = 100)
        INTEGER*4 X2XC_DUMMY_FREE_LIST(X2XC_MAX_DUMMY_STNS,X2XC_CLASSES)
        INTEGER*4 X2XC_DUMMY_AVAILABLE
        PARAMETER (X2XC_DUMMY_AVAILABLE = 1)
        INTEGER*4 X2XC_DUMMY_IN_USE
        PARAMETER (X2XC_DUMMY_IN_USE = -1)
        INTEGER*4 X2XC_DUMMY_END_STN(X2XC_CLASSES)
        INTEGER*4 X2XC_DUMMY_START_STN(X2XC_CLASSES)
        INTEGER*4 X2XC_DUMMY_STN_COUNT(X2XC_CLASSES)
C
C
        INTEGER*4 X2XC_DLL_USE_ENVELOPE(X2XC_CLASSES)
C                                               !Use "envelope" for downloading
        INTEGER*4 X2XC_REQ_BACKGROUND_DELAY(X2XC_CLASSES)
C                                               !Delay before next request
        INTEGER*4 X2XC_DLL_ENABLE_BACKGROUND(X2XC_CLASSES)
C                                               !Stop bAckground download
        INTEGER*4 X2XC_DLL_BACKGROUND_FLAG(X2XC_CLASSES)
C                                               !Use background download mode
        INTEGER*4 X2XC_ENABLE_TEST_DLL(X2XC_CLASSES) !ALLOW FOR TEST DLL
        INTEGER*4 X2XC_REQ_FORGROUND_DELAY(X2XC_CLASSES)
C                                               !Delay before next request
        INTEGER*4 X2XC_DLL_ENABLE_FORGROUND(X2XC_CLASSES)
C                                               !Stop bAckground download
C
        INTEGER*4   X2XC_ROMREV1(X2XC_CLASSES)  !ROM REV 1 (ASCII)
        INTEGER*4   X2XC_ROMREV2(X2XC_CLASSES)  !ROM REV 2 (ASCII)
        INTEGER*4   X2XC_ROMREV3(X2XC_CLASSES)  !ROM REV 3 (ASCII)
        BYTE   BX2XC_ROMREV1(4,X2XC_CLASSES)    !ROM REV 1 (ASCII)
        BYTE   BX2XC_ROMREV2(4,X2XC_CLASSES)    !ROM REV 2 (ASCII)
        BYTE   BX2XC_ROMREV3(4,X2XC_CLASSES)    !ROM REV 3 (ASCII)
        EQUIVALENCE (X2XC_ROMREV1,BX2XC_ROMREV1)
        EQUIVALENCE (X2XC_ROMREV2,BX2XC_ROMREV2)
        EQUIVALENCE (X2XC_ROMREV3,BX2XC_ROMREV3)
C
        INTEGER*4   X2X_SECS_VOLUME_MEASUREMENT    !NO CONSECUTIVE SECS TO
C                                                  !MEASURE THE VOLUME
        PARAMETER (X2X_SECS_VOLUME_MEASUREMENT=2)  !0 BASED TABLE
C
        INTEGER*4 X2XC_DIAL_TYPE(X2XC_CLASSES)		!Support USAT Dial
	INTEGER*4 X2XC_GTX_DIAL				!with GTX
	INTEGER*4 X2XC_X28_DIAL				!and X28
	PARAMETER (X2XC_GTX_DIAL=0)
	PARAMETER (X2XC_X28_DIAL=1)
C
C	***** Start V08 changes *****
C
        INTEGER*4 X2XC_UNSO_MSGS(X2XC_CLASSES)		!Unso Msgs?
	INTEGER*4 X2XC_ENABLE_UNSO_MSGS			!Enabled
	INTEGER*4 X2XC_DISABLE_UNSO_MSGS		!Disabled
	INTEGER*4 X2XC_ENABLE_PLUS_UNSO_MSGS		!Enable, Config ID
	PARAMETER (X2XC_ENABLE_UNSO_MSGS=0)
	PARAMETER (X2XC_DISABLE_UNSO_MSGS=1)
	PARAMETER (X2XC_ENABLE_PLUS_UNSO_MSGS=2)
C
C	***** End V08 changes *****
C
C	***** Start V10 changes *****
C
        INTEGER*4 X2XC_OPTIMIZE_SITES(X2XC_CLASSES)	!Optimize ports?
	INTEGER*4 X2XC_ENABLE_OPTIMIZE_SITES		!Enabled
	INTEGER*4 X2XC_DISABLE_OPTIMIZE_SITES		!Disabled
	PARAMETER (X2XC_ENABLE_OPTIMIZE_SITES=0)
	PARAMETER (X2XC_DISABLE_OPTIMIZE_SITES=1)
C
C	***** End V10 changes *****
C
C       FREE SPACE
C       
C
C       ----- IN BYTES -----
	INTEGER*4 X2X_MAX_FREE
	PARAMETER (X2X_MAX_FREE = 199998)
C
	INTEGER*4 X2X_NOT_USED
C
        INTEGER*4    X2X_IFREE
	CHARACTER*1  X2X_FREE(X2X_MAX_FREE)
C
C     COMMONS AREA
C
	COMMON /X2XCOM/
     *	 X2X_GAME_SAP,X2X_GAME_MODE,X2X_GAME_STATE,X2X_DEBUG,X2X_SYSTIM,
     *	 X2X_GLOBAL_FE_DISCONNECT,X2X_DELIVERY_ACK,X2X_DELIVERY_ERR,
     *	 X2X_MAXMES_CNT,X2X_MAXMES_LEN,X2X_SEND_DELAY,
     *	 X2X_GLOBAL_STATION_DISCONNECT,X2X_IN_WAIT_ADD,
     *	 X2X_IN_WAIT_REMOVE,X2X_GAME_CHECK,X2X_LOOP_TIME,
     *	 X2X_LOOP_DELAY,X2X_LOOP_SAP,X2X_LOOP_SAP_DELAY,X2X_REL_PRI,
     *	 X2X_LOOP_MAINTENANCE,X2X_LOOP_MAINTENANCE_DELAY,X2X_STATS_LOOP,
     *	 X2X_THRESHOLD,X2X_COMTSK,X2X_TRACE_STATION,X2X_TRACE_BLOCK,
     *	 X2X_TRACE_SIZE,X2X_TRACE_FDB,X2X_TRACE_SAP,X2X_TRACE_BLOCK1,
     *	 X2X_TRACE_SIZE1,X2X_TRACE_FDB1,X2XS_ERR_CNT,X2XS_ACK_CNT,
     *	 X2XS_DISC_CNT,X2XS_ACK_CNT_LAST1,X2XS_ACK_CNT_LAST2,     
     *	 X2XS_ERR_CNT_LAST1,X2XS_ERR_CNT_LAST2     
	COMMON /X2XCOM/
     *	 X2XS_ADRESS,X2XS_ADRESS_LEN,X2XS_NUM_TERMS,
     *	 X2XS_STATS_INDEX,X2XS_CNT_ACTIVE,
     *	 X2XS_TIME,X2XS_CNT_ACTIVE_LAST,
     *	 X2XS_ALARM_INDEX,X2XS_ALARM_TIME,X2XS_ALARM_STATION,
     *	 X2XS_ALARM_TOTAL,X2XS_RESET_CNT,
     *	 X2XS_CONN_ID,X2XS_PHYS,X2XS_STATS_PNT,
     *	 X2XS_PVC,X2XS_PRO,X2XS_TERMS,X2XS_GROUP,
     *	 X2XS_LAST_ERR_CODE,X2XS_STATS_TIME,
     *	 X2XG_STATE,X2XG_SAP,X2XG_CONN_ID,X2XG_CNT,X2XG_LIST
	COMMON /X2XCOM/
     *	 X2XT_STATION_NO,
     *	 X2XT_PRO,X2XT_PRO_LINK,X2XT_TIME,
     *	 X2XT_DELAY,X2XT_CONN_ID,X2XT_NETWORK_DELAY,X2XT_TRACE_INDEX,
     *	 X2XA_RESPONSE,X2XA_CURRENT_COUNT,X2XA_TRANS_SEQ_ERROR,
     *	 X2XPL_SAP,X2XPL_SAP_PORT,X2XPL_LOCAL_TO_NETWORK,X2XPL_STATE,
     *	 X2XPN_CAPACITY,X2XPN_TIME,X2XPN_ADRESS,X2XPN_NETWORK_TO_LOCAL,
     *	 X2XPN_STATE,X2XPN_OUTCALL,X2XPN_OUT_RETRY_LIMIT,
     *	 X2XPN_OUT_RETRY_INTERVAL,X2XPN_OUT_DURATION_TIMOUT,
     *	 X2XPN_IN_DURATION_TIMOUT,X2XPN_HUNT_ADR,X2XPN_HUNT,
     *   X2XPN_NUMPVC,X2XPN_PVC_TO_STATION
C
       COMMON /X2XCOM/
     *   X2XPN_PVC_INDEX, X2XPN_PVC_CKTS_TO_STN,X2XS_ORIG_TYPE,
     *   X2XS_TIMES_MESSAGE_FLUSHED
C
	COMMON /X2XCOM/
     *	 X2XE_ACTIVE,X2XE_BUF,X2XE_INDEX,X2XE_CNT,X2XE_ACT_STATUS,
     *	 X2XE_FE_ID,X2XE_CONF,X2XE_SEQ_RECV,X2XE_SEQ_XMIT,
     *	 X2XE_CAPACITY,X2XE_TIME,X2XE_CNT_BLK,X2XE_CNT_ERR,
     *	 X2XE_SERIAL,X2XE_FORMAT_TIME,X2XE_TOT_MSG_CNT,
     *	 X2XE_STATION_MSG_CNT,X2XE_DEF_STATE,X2XE_DEF_STATUS,
     *	 X2XE_ACT_STATE,X2XE_LOCAL_PORT,X2XE_LOCAL_PORT_STATE,
     *	 X2XE_MAX_SIZE,X2XE_MAX_CNT,X2XE_SEND_INTERVAL,
     *	 X2X_NOT_USED,X2XE_RESEND_BEGIN,X2XE_REQ_MAINTENANCE,	!V11
     *	 X2X_SORTED_ADR,X2X_LOCK_ADR,X2X_SAP_PRINT,
     *   X2X_SORTED_EVSN,X2X_LOCK_EVSN,X2X_ADDED_EVSN,
     *	 X2X_STN_PRINT,X2X_MSG_PRINT, X2X_GLO_PRINT,
     *	 X2XPRO_FLUSH,X2XPRO_FLUSH_INT,
     *	 X2X_UNSOLICIT_FE_CONNECT,X2X_UNSOLICIT_STATION_CONNECT,
     *	 X2X_UNSOLICIT_FE_DISCONNECT,X2X_UNSOLICIT_STATION_DISCONNEC ,
     *	 X2X_UNSOLICIT_DELIVER
C
	COMMON /X2XCOM/
     *	 X2X_GAME_QUE,X2X_STATION_ATRIBUTES,
     *	 X2X_SORTED_UPDATE,X2XPRO_ROUND_ROBIN,X2XE_DELAY,
     *	 X2X_SORTED_EVSN_UPDATE,X2XE_MAINTENANCE_START,
     *	 X2XG_MAXSEG, X2XG_RTYCNT, X2XG_RTYINT,
     *	 X2XG_ACKTIM, X2XG_FWDTIM,
     *	 X2XS_BAD_ADRESS,X2XE_LOCAL_PORT_MAINTENANCE,
     *	 X2XPN_DAYMAX_CAPACITY, X2XE_DAYMAX_CAPACITY, X2XE_NETWORK_TYPE,
     *   X2XPL_SITE
C
	COMMON /X2XCOM/
C... *	 X2X_GNOS_SAP_CNFMAX,X2X_GNOS_SAP_DAYMAX,X2X_GNOS_SAP_CURCAP,
CV12 *	 X2X_GNOS_LAN_UPDATE,X2X_GNOS_FED_UPDATE,X2X_GNOS_INTERVAL,
     *	 X2XE_CNT_RCV_BLK,X2XE_TOT_RCV_CNT,
     *	 X2XPN_TYPE,X2XA_NET_RESPONSE,X2XE_MAX_CAPACITY,
     *	 X2X_NUM_NODES,X2XE_FE_TYPE,
     *	 X2XS_TTN1_CHKSUM, X2XS_TTN2_CHKSUM,
     *	 X2XS_STN_CHKSUM, X2XS_CALL_CHKSUM,      	!V05
     *	 X2X_DEF_CHKSUM, X2XD_CHKSUM,
     *	 X2X_FE_SEND_DISCONNECT_FLAG,
     *   X2XA_DELAY,
     *	 X2XA_LASTDELAY_TIME,X2XA_LASTDELAY_INDEX,
     *	 X2X_FE_DISCONNECT_TIMOUT
C
	COMMON /X2XCOM/
     *  X2X_BCST_ROUTE,X2X_BCST_RETRY_INTERVAL, X2X_BCST_RETRY_LIMIT,
     *  X2X_BCST_AUTO_REPORT, X2X_BCST_ENABLE,   X2XPN_BCST_ACTIVE_CNT,	!V05
     *  X2XS_BCST_NUM,X2XC_BCST_RETRY_INTERVAL,X2XC_BCST_RETRY_LIMIT,	!V05
     *  X2XC_BCST_AUTO_REPORT, X2XS_BCST_ACTIVE_BITMAP,			!V05
     *  X2XC_BCST_NET_PORT1, X2XC_BCST_NET_PORT2,			!V05
     *  X2XC_BCST_ENABLE1,   X2XC_BCST_ENABLE2, X2XS_TYPE,		!V05
     *  X2XA_TO_BE_FREE_BUF,X2XS_BCST_STATUS_CHANGES
C
C ------- MEMORY-RESIDENT SUBSET OF X2XSTN                             
C  X2X_NET_PORTS_ACT = x2xstn_maxnet, defined as 7 in x2xstn.def       
C
        INTEGER*4   X2XS_NETPORT(X2XS_MAXNET,X2X_STATIONS)
        INTEGER*2   X2XS_STNCLS(X2X_STATIONS)      ! Station class
        INTEGER*2   X2XS_DIAL_PORT(X2XS_MAXDIAL,X2X_STATIONS)
        INTEGER*2   X2XS_DEF_PORT(X2XS_MAXDEF,X2X_STATIONS)
        INTEGER*4   X2XS_X32PORT(X2XS_MAXX32,X2X_STATIONS)
        INTEGER*4   X2XS_VSP(X2X_STATIONS)
        INTEGER*4   X2XS_EVSN(X2X_EVSN_MAXLEN,X2X_STATIONS)
        INTEGER*4   X2XS_EVSN_LEN(X2X_STATIONS)
C
C ------- MEMORY-RESIDENT SUBSET OF X2XSCL                             
C
	INTEGER*4   X2XC_ADDLEN(X2XC_CLASSES)	   !STATION ADDRESS LENGTH
	INTEGER*4   X2XC_AUTOUPD(X2XC_CLASSES)	   !AUTO UPDATE
	INTEGER*4   X2XC_BAUD(X2XC_CLASSES)	   !BAUD RATE 
	INTEGER*4   X2XC_CLASS(X2XC_CLASSES)	   !CLASS
	INTEGER*4   X2XC_DELACK(X2XC_CLASSES)	   !DELIVERY ACK
	INTEGER*4   X2XC_DIAL_PORT(X2XS_MAXDIAL,   !DIAL PORTS
     *			X2XC_CLASSES)
	INTEGER*4   X2XC_ERRREP(X2XC_CLASSES)	   !ERROR REPORT
	INTEGER*4   X2XC_EVSN_LEN(X2XC_CLASSES)	   !EXT. VER. SEQ. NO. LENGTH
	INTEGER*4   X2XC_FEDIS(X2XC_CLASSES)	   !FRONT END DISC
	INTEGER*4   X2XC_NETSTAT(X2XC_CLASSES)	   !NETWORK STATISTICS
	INTEGER*4   X2XC_PRTCNT(X2XC_CLASSES)	   !PORT COUNT 
	INTEGER*4   X2XC_STNDIS(X2XC_CLASSES)	   !STATION DISCONNECT
	INTEGER*4   X2XC_TYPE(X2XC_CLASSES)	   !STATION TYPE
        CHARACTER*1 X2XC_STATE(X2XC_CLASSES)       ! state: DEFINED/UNDEFINED
	BYTE        BX2XC_STATE(X2XC_CLASSES)
        INTEGER*4   X2XC_DEFINED, X2XC_UNDEFINED
        PARAMETER   (X2XC_UNDEFINED = 0)
        PARAMETER   (X2XC_DEFINED = 1)
        CHARACTER*1 X2XC_MSTENA(X2XC_CLASSES)      ! Master enable flag
	BYTE        BX2XC_MSTENA(X2XC_CLASSES)
        CHARACTER*1 X2XC_DIAL_ENABLE(X2XC_CLASSES) ! CLASS dial enable
	BYTE        BX2XC_DIAL_ENABLE(X2XC_CLASSES)
        CHARACTER*1 X2XC_SYNC(X2XC_CLASSES)
        BYTE        BX2XC_SYNC(X2XC_CLASSES)
        CHARACTER*1 X2XC_CLOCK(X2XC_CLASSES)
        BYTE        BX2XC_CLOCK(X2XC_CLASSES)
C                                                     
        INTEGER*4   X2XC_INTIM(X2XC_CLASSES)       ! Incall duration timer
        INTEGER*4   X2XC_OUTTIM(X2XC_CLASSES)      ! Outcall duration timer
        INTEGER*4   X2XC_RESTIM(X2XC_CLASSES)      ! Response timer
        INTEGER*4   X2XC_INTTIM(X2XC_CLASSES)      ! Inter-trans. timer
        INTEGER*4   X2XC_STSTIM(X2XC_CLASSES)      ! Statistics timer
        INTEGER*4   X2XC_RETRY(X2XC_CLASSES)       ! Station retry limits
        INTEGER*4   X2XC_ABS_TIM(X2XC_CLASSES)     ! Absolute disconnect timer
        INTEGER*4   X2XC_SITE(X2XS_MAX_ALLNET,X2XC_CLASSES)
C                                                  ! Site for net port assgn
	INTEGER*4   X2XC_NETPORT(X2X_MAXPRT_ASSIGN,X2XC_CLASSES)
C						   !net ports defined @
	INTEGER*4   X2XC_DEF_PORT_OVERRIDE(X2XC_CLASSES) !default port no
        INTEGER*4   X2XC_DISX25ROM(X2XC_CLASSES)   !disconnect x25 rom
        INTEGER*4   X2XC_DISDUPROM(X2XC_CLASSES)   !disconnect  dup rom
        INTEGER*4   X2XC_DISX25RAM(X2XC_CLASSES)   !disconnect x25 ram
        INTEGER*4   X2XC_DISDUPRAM(X2XC_CLASSES)   !disconnect dup ram
        INTEGER*4   X2XC_SLPTIME(X2XC_CLASSES)     !sleep time
        INTEGER*4   X2XC_AFTMAX(X2XC_CLASSES)      !after hours
        INTEGER*4   X2XC_NAAS_LENGTH(X2XC_CLASSES) !NAAS message length
        INTEGER*4   X2XC_DIAL_OV_OVERRIDE(X2XC_CLASSES)! DO NOT SET OV - V14
C                                                        IF ENABLED FOR DIAL
        CHARACTER*1 X2XC_NAAS_TEXT(X2XC_CLASSES,16)!NAAS text
	INTEGER*4   X2XC_SUBNETWORK(X2XC_CLASSES)  !Subnet no
	INTEGER*4   X2XC_TTN_PORT1(X2XC_CLASSES)   !titn record 1 used
	INTEGER*4   X2XC_TTN_PORT2(X2XC_CLASSES)   !titn record 2 used
	INTEGER*4   X2XC_L2TOUT(X2XC_CLASSES)	   ! level 2 timeout
	INTEGER*4   X2XC_POLTIM(X2XC_CLASSES)	   ! poll timout
	INTEGER*4   X2XC_PROTO(X2XC_CLASSES)	   !protocol ID
	CHARACTER   X2XC_DESC(X2XC_CLASSES)*12	   !Description of Class
        INTEGER*4   X2XC_MAX_THRUPUT(X2XC_CLASSES) !Maximum thruput allowed
C               (trans/sec) before starting dropping incoming messages
        INTEGER*4   X2XC_UNSO_STN_CON(X2XC_CLASSES) ! V13 UNSOLICITED CONNECT
        INTEGER*4   X2XC_UNSO_STN_DIS(X2XC_CLASSES) ! V13 UNSOLICITED DISCONNECT
        INTEGER*4 X2XSN_MAX_THRUPUT(0:X2X_MAX_SUBNETWORK) !sam as above @
        INTEGER*4 X2XSN_CURRENT_VOLUME
     *		(0:X2X_SECS_VOLUME_MEASUREMENT,
     *                  0:X2X_MAX_SUBNETWORK)      !CURRENT VOLUME FOR SUBNETS!
        INTEGER*4 X2XSN_CURRENT_UPDATE_POINTER   !SECONDS POINTER (TO
C                                       X2XSN_CURRENT_VOLUME TABLE !
        INTEGER*4 X2XSN_FLUSH_RATIO(0:X2X_MAX_SUBNETWORK) !FLUSHING RATIO !
C                                               OF MESSAGES, EVERY N-TH FLUSHED
        INTEGER*4 X2XSN_CURRENT_FLUSH(0:X2X_MAX_SUBNETWORK) !COUNTER FOR !
C                                                X2XSN_FLUSH_RATIO (WORK TAB)
        INTEGER*4 X2XSN_TOTAL_FLUSHED(0:X2X_MAX_SUBNETWORK)!TOTAL NO FLUSHED!

        INTEGER*4 X2XC_MAX_THRUPUT_SEND(X2XC_CLASSES) !Maximum thruput allowed
C               (trans/sec) before starting dropping incoming messages
        INTEGER*4 X2XSN_MAX_THRUPUT_SEND(0:X2X_MAX_SUBNETWORK) !sam as above @
        INTEGER*4 X2XSN_CURRENT_VOLUME_SEND
     *			(0:X2X_SECS_VOLUME_MEASUREMENT,
     *                  0:X2X_MAX_SUBNETWORK)      !CURRENT VOLUME FOR SUBNETS!
        INTEGER*4 X2XSN_FLUSH_RATIO_SEND(0:X2X_MAX_SUBNETWORK) !FLUSHING RATIO !
C                                               OF MESSAGES, EVERY N-TH FLUSHED
        INTEGER*4 X2XSN_CURRENT_FLUSH_SEND(0:X2X_MAX_SUBNETWORK) !COUNTER FOR !
C                                                X2XSN_FLUSH_RATIO (WORK TAB)
        INTEGER*4 X2XSN_TOTAL_FLUSHED_SEND(0:X2X_MAX_SUBNETWORK)!TOTAL NO FLUSHED!
C
C	START OF BCST CHANGES - V05
C
	INTEGER*2 X2XC_BCST_RETRY_INTERVAL(X2XC_CLASSES) !RETRY
C                            INTERVAL IN SECS @
	INTEGER*2 X2XC_BCST_RETRY_LIMIT(X2XC_CLASSES)  !MAX NO OF TRIES
C                                                 !(0 FOR EVER) @
	INTEGER*2 X2XC_BCST_AUTO_REPORT(X2XC_CLASSES)  !STATION REPORTS
C                            BCST CONNECT STATUS                   @
	INTEGER*2 X2XC_BCST_ENABLE1(X2XC_CLASSES) !ENABLE BCST 1
C                            ADDRESS GIVEN TO STATIONS $
	INTEGER*2 X2XC_BCST_NET_PORT1(X2XC_CLASSES)
C                            !BCST "NETWORK" PORTS ASSIGNED TO STATION@
	INTEGER*4 X2XC_BCST_ENABLE2(X2XC_CLASSES) !ENABLE BCST 2
C                            ADDRESS GIVEN TO STATIONS $
	INTEGER*2 X2XC_BCST_NET_PORT2(X2XC_CLASSES)
C                            !BCST "NETWORK" PORTS ASSIGNED TO STATION@
	INTEGER*4 X2XC_REPCLS(X2XC_CLASSES)     !REPORT CLASS
C	END OF BCST CHANGES - V05

C	START OF SUBNETWORK GUI CHANGES - V16
	LOGICAL*2  CONFIGURED_SAP(X2X_SAP)          ! A configured SAP is one 
                                                    ! having local ports in the
                                                    ! LPC file
C	END OF SUBNETWORK GUI CHANGES - V16
C -------                 
C
C ------- MEMORY-RESIDENT SUBSET OF X2XNPC                              
C
        CHARACTER*1 X2XPN_FAST(0:X2X_NETWORK_PORTS)    ! Fast select flag
	BYTE        BX2XPN_FAST(0:X2X_NETWORK_PORTS)
        CHARACTER*1 X2XPN_REVCHRG(0:X2X_NETWORK_PORTS) ! Reverse charge
	BYTE	    BX2XPN_REVCHRG(0:X2X_NETWORK_PORTS)
C
        INTEGER*4   X2XPN_DDIS(0:X2X_NETWORK_PORTS)    ! Defaualt disc.
        INTEGER*4   X2XPN_RETCNT(0:X2X_NETWORK_PORTS)  ! Retry count
        INTEGER*4   X2XPN_RETTIM(0:X2X_NETWORK_PORTS)  ! Retry interval
        INTEGER*4   X2XPN_ADDLEN(0:X2X_NETWORK_PORTS)  ! Actual addr. len.
C
        INTEGER*4   X2XSC_REC_LEN                  ! REC LEN FOR STATION CLASS
        PARAMETER   (X2XSC_REC_LEN=128)            ! MUST AGREE WITH X2XSCL.DEF

        INTEGER*4   X2XSC_MEM_STORE(X2XSC_REC_LEN,X2XC_CLASSES)
C
C -------                                                               
C -- Expanded common: X2XSTN, X2XSCL AND X2XNPC data                    
C
        COMMON /X2XCOM/
     *  X2XS_NETPORT,X2XS_DIAL_PORT,
     *  X2XS_STNCLS, X2XS_VSP, X2XS_X32PORT,
     *  X2XS_EVSN, X2XS_EVSN_LEN,
     *  X2XC_SLPTIME,X2XC_AFTMAX,
     *  X2XC_INTIM, X2XC_OUTTIM,X2XC_RESTIM, X2XC_INTTIM,X2XC_STSTIM,
     *  X2XC_RETRY,X2XC_DISX25ROM,X2XC_DISDUPROM,X2XC_DISX25RAM,
     *  X2XC_DISDUPRAM,X2XC_NAAS_LENGTH,X2XC_SITE,
     *  X2XPN_RETTIM,
     *  X2XPN_RETCNT,
     *  X2XPN_ADDLEN,
     *  X2XPN_DDIS, X2X_AUTOBAUD,
     *  X2XC_ABS_TIM,X2XSC_MEM_STORE,X2X_GVT_CFG_ENABLE,		!V06
     *	X2XC_DIAL_OV_OVERRIDE,						!v14
     *  X2XE_SUBNETWORK, X2XC_SUBNETWORK, X2XPN_BCST_STATUS_CHANGES,	!V05
     *  X2XC_TTN_PORT1, X2XC_TTN_PORT2, X2XC_L2TOUT,
     *  X2XS_DEF_PORT, X2XC_PROTO, X2XC_POLTIM,
     *  X2XD_TTN_RECORD_BACKUP, X2XC_REPCLS, X2X_LOG_ENABLE,
     *  X2X_RELAY_LOG_ENABLE, X2XC_NETPORT, X2XC_DEF_PORT_OVERRIDE,
     *  X2X_BIN_SEARCH_FAIL, X2XC_ADDLEN, X2XC_AUTOUPD, X2XC_BAUD, 
     *	X2XC_CLASS, X2XC_DELACK, X2XC_DIAL_PORT,
     *  X2XC_ERRREP, X2XC_EVSN_LEN, X2XC_FEDIS, X2XC_NETSTAT,
     *  X2XC_PRTCNT, X2XC_STNDIS, X2XC_TYPE, 
     *	X2XA_LASTDELAY,X2XC_MAX_THRUPUT,
     *  X2XSN_MAX_THRUPUT,
     *  X2XSN_CURRENT_VOLUME,  X2XSN_CURRENT_UPDATE_POINTER,
     *  X2XSN_FLUSH_RATIO, X2XSN_CURRENT_FLUSH, X2XSN_TOTAL_FLUSHED,
     *  X2XC_DUMMY_END_STN,X2XC_DUMMY_START_STN,
     *	X2XC_DUMMY_STN_COUNT,X2XC_DUMMY_FREE_LIST,			!V06
     *	X2X_BIN_SVN_SEARCH_FAIL, X2X_BAD_ADR_CNT, X2X_BAD_SVN_COUNT,
     *  X2X_CHK_NEW_STATIONS_CONNECT, X2XE_MAINT_OPTIONS, 
     *	X2XC_DIAL_TYPE,X2XC_UNSO_MSGS,X2XE_MSGS_PER_FRAME,		!V09
     *  X2XC_OPTIMIZE_SITES,
     *  X2XC_MAX_THRUPUT_SEND, X2XSN_MAX_THRUPUT_SEND,
     *  X2XC_UNSO_STN_CON, X2XC_UNSO_STN_DIS,                           ! V13
     *  X2XSN_CURRENT_VOLUME_SEND,  
     *  X2XSN_FLUSH_RATIO_SEND,  X2XSN_CURRENT_FLUSH_SEND,
     *  X2XSN_TOTAL_FLUSHED_SEND, CONFIGURED_SAP                        ! V16
C
        COMMON /X2XCOM/
     *  X2X_DLL_USE_ENVELOPE, X2X_REQ_BACKGROUND_DELAY,
     *  X2X_DLL_ENABLE_BACKGROUND, X2X_DLL_BACKGROUND_FLAG,
     *  X2XC_DLL_USE_ENVELOPE, X2XC_REQ_BACKGROUND_DELAY,
     *  X2XC_DLL_ENABLE_BACKGROUND, X2XC_DLL_BACKGROUND_FLAG,
     *  X2X_ENABLE_TEST_DLL, X2XC_ENABLE_TEST_DLL,
     *  X2X_REQ_FORGROUND_DELAY,
     *  X2X_DLL_ENABLE_FORGROUND,X2XC_REQ_FORGROUND_DELAY,
     *  X2XC_DLL_ENABLE_FORGROUND,
     *  X2XC_ROMREV1,X2XC_ROMREV2,X2XC_ROMREV3   
C
C - jfh - alpha moved char*1 and Bytes to end so data would be aligned 
C
        COMMON /X2XCOM/
     *  X2XS_REVISION,X2XS_STATE,X2XS_STATION_DISCONNECT,
     *  X2XS_FE_DISCONNECT,
     *  X2XS_DOWNFLAG,X2XS_SAP,X2XS_ATRIBUTE,X2XS_CONF,X2XS_CONN_TYPE,
     *  X2XS_SALES_RANK,X2XS_PARAM,X2XS_BCST_ENABLE,
     *  X2XT_DROP_AD,X2XT_STATE,X2XT_STATE_CHG,X2XT_STATION_PORT,
     *	X2XT_TRACE_LIMIT,
     *  X2XC_STATE,X2XC_CLOCK,X2XC_SYNC,X2XC_MSTENA,
     *  X2XC_DIAL_ENABLE,X2XPN_FAST, X2XC_NAAS_TEXT,
     *  X2XPN_REVCHRG,
     *  X2XC_DESC,
C
C These next two ALWAY, ALWAY, ALWAYS need to be last in the common.
C used to figure out size of common area.
C
     *  X2X_FREE,X2X_IFREE				!V10

C----                      
C
C DECLARE STRUCTURE FOR CLEARING OF MEMORY.
C
	INTEGER*4 X2XCSB	!VALUE OF X2XCSB NOT USED/IMPORTANT ANY MORE
	PARAMETER (X2XCSB=1259)
	INTEGER*4 X2XBLK(2048,X2XCSB)
	EQUIVALENCE (X2XBLK,X2X_GAME_SAP)
C
C     EQUIVALENCE FOR CHARACTER TABLE
C     SO ILBYTE AND ISBYTE MAY USE IT
C
C     The character*1 tables are also equivalenced to BYTE arrays
C     so you can directly access the data without using ILBYTE & ISBYTE.
C
	INTEGER*4 IX2XS_STATE, IX2XS_DOWNFLAG, IX2XS_CONF
	INTEGER*4 IX2XS_CONN_TYPE, IX2XS_FE_DISCONNECT,IX2XS_PVC
	INTEGER*4 IX2XS_STATION_DISCONNECT, IX2XS_SAP,IX2XT_STATE_CHG
	INTEGER*4 IX2XS_ATRIBUTE
	INTEGER*4 IX2XS_SALES_RANK, IX2XS_PARAM, IX2XT_STATE
	INTEGER*4 IX2XT_DROP_AD, IX2XT_STATION_PORT, IX2XT_TRACE_LIMIT
C
	EQUIVALENCE (X2XS_STATE,IX2XS_STATE,BX2XS_STATE)
	EQUIVALENCE (X2XT_STATE_CHG,IX2XT_STATE_CHG,BX2XT_STATE_CHG)
	EQUIVALENCE (X2XS_STATION_DISCONNECT,IX2XS_STATION_DISCONNECT,
     *					     BX2XS_STATION_DISCONNECT)
	EQUIVALENCE (X2XS_FE_DISCONNECT,IX2XS_FE_DISCONNECT,
     *				        BX2XS_FE_DISCONNECT)
	EQUIVALENCE (X2XS_DOWNFLAG,IX2XS_DOWNFLAG,BX2XS_DOWNFLAG)
	EQUIVALENCE (X2XS_SAP,IX2XS_SAP,BX2XS_SAP)
        EQUIVALENCE (X2XS_PVC,IX2XS_PVC)
	EQUIVALENCE (X2XS_ATRIBUTE,IX2XS_ATRIBUTE,BX2XS_ATRIBUTE)
	EQUIVALENCE (X2XS_CONF,IX2XS_CONF,BX2XS_CONF)
	EQUIVALENCE (X2XS_CONN_TYPE,IX2XS_CONN_TYPE,BX2XS_CONN_TYPE)
	EQUIVALENCE (X2XS_SALES_RANK,IX2XS_SALES_RANK,
     *                               BX2XS_SALES_RANK)
        EQUIVALENCE (X2XS_PARAM, IX2XS_PARAM, BX2XS_PARAM)
	EQUIVALENCE (X2XT_STATE,IX2XT_STATE,BX2XT_STATE)
	EQUIVALENCE (X2XT_DROP_AD,IX2XT_DROP_AD)
	EQUIVALENCE (X2XT_STATION_PORT,IX2XT_STATION_PORT,
     *				       BX2XT_STATION_PORT)
	EQUIVALENCE (X2XT_TRACE_LIMIT,IX2XT_TRACE_LIMIT,
     *				      BX2XT_TRACE_LIMIT)
        EQUIVALENCE (X2XC_STATE, BX2XC_STATE)
	EQUIVALENCE (X2XC_MSTENA, BX2XC_MSTENA)
	EQUIVALENCE (X2XC_DIAL_ENABLE, BX2XC_DIAL_ENABLE)
        EQUIVALENCE (X2XC_CLOCK,BX2XC_CLOCK)
        EQUIVALENCE (X2XC_SYNC,BX2XC_SYNC)
	EQUIVALENCE (X2XPN_FAST, BX2XPN_FAST)
	EQUIVALENCE (X2XPN_REVCHRG, BX2XPN_REVCHRG)
C
	INTEGER*4   IX2XS_BCST_ENABLE				!V05
	EQUIVALENCE (X2XS_BCST_ENABLE,IX2XS_BCST_ENABLE)		!V05
        EQUIVALENCE (X2XS_ORIG_TYPE,BX2XS_ORIG_TYPE)
C
	INTEGER*4	 FRST_X2XCOM(2)
	EQUIVALENCE	(FRST_X2XCOM, X2X_GAME_SAP)
        INTEGER*4	 LAST_X2XCOM
        EQUIVALENCE	(LAST_X2XCOM, X2X_IFREE)
C
	VOLATILE /X2XCOM/
C
