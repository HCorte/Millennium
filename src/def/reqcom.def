C REQCOM.DEF
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]REQCOM.DEV                                   $
C  $Date::   17 Apr 1996 14:42:48                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C REQCOM.DEF
C
C V05 15-sep-95 das Added varialbels for background load
C V04 03-FEB-94 HHN CORRECTED DLL_REQ_FREE(7428) TO (1137),
C                   ACCORDING TO NUMAGT=5504 (INSTEAD OF 5120).
C V03 04-APR-1993 WS
C V02 15-DEC-91 KWP INITIAL RELEASE FOR BELGIUM
C V01 20-JUN-91 DCA INITIAL RELEASE FOR DENMARK
C
C **** ALL ROUTINES THAT USE THIS MUST ALSO INCLUDE PRMAGT.DEF/G
C
C
C DLLREQ_LAST (2,NUMAGT)
C DLLREQ_HIGH (2,NUMAGT)
C DLLREQ_TIME (NUMAGT)  
C DLLREQ_BAD_ORDER (NUMAGT)
C DLLREQ_BAD_SAME  (NUMAGT)
C DLLREQ_BAD_SAME_MCP (NUMAGT)
C DLLREQ_SAME_DIF_TIME        
C DLLREQ_RESET_ENABLE         
C DLLREQ_MCP_RESET_ENABLE     
C DLLREQ_TOTAL (NUMAGT)       
C RE_MAX_LOAD(MAX_SUBNET)     
C RE_TOT_SENT                 
C RE_TERM_DELAY               
C RE_MAX_TERMINALS_STARTED    
C RE_BUFFER_USAGE             
C RE_TARGET_VOLUME            
C RE_CURRENT_VOLUME           
C RE_CURRENT_LOAD             
C RE_CURRENT_TERMINAL         
C RE_CURRENT_USAGE            
C RE_CURRENT_START            
C RE_TIME_INTERVAL            
C DLLREQ_FREE (20000)          
C                             
C NOTE: REQCOM SIZE SHOULD BE A MULTIPLE OF 2048 I4.
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4  LOADNBR,SEGNBR, APPLICATION_NBR
	PARAMETER (LOADNBR=1)
	PARAMETER (SEGNBR=2)
	PARAMETER (APPLICATION_NBR=3)
C
C
C
	INTEGER*2 DLLREQ_LAST(3,NUMAGT)		!LAST DLL LOAD/SEG
	INTEGER*2 DLLREQ_HIGH(3,NUMAGT)		!HIGH REQUEST FOR LAST NON 0
C						;SEGMENT
        INTEGER*2 DLLREQ_ACTIVE(NUMAGT)         !REV OF ACTIVE LOAD
        INTEGER*2 DLLREQ_BACKGRND(NUMAGT)       !REV OF 1ST INACTIVE LOAD
C
	INTEGER*4 DLLREQ_TIME(NUMAGT)		!LAST TIME TERMINAL REQUESTED
	INTEGER*4 DLLREQ_TIME_STATION(NUMAGT)   !LAST TIME STATION REQUESTED
	INTEGER*2 DLLREQ_BAD_ORDER(NUMAGT)      !TIMES REQUEST IN WRONG ORDER
	INTEGER*2 DLLREQ_BAD_SAME(NUMAGT)	!TIMES SAME REQUEST - APPLICATION
	INTEGER*2 DLLREQ_BAD_SAME_MCP(NUMAGT)	!TIMES SAME REQUEST - MCP
	INTEGER*4 DLLREQ_SAME_DIF_TIME		!INCREMENT
C                       DLLREQ_BAD_ORDER IF NEXT REQ IN BAD ORDER
	INTEGER*4 DLLREQ_RESET_ENABLE		!NO OF TIMES TERMINAL RESET
C                                   ;ENABLED FOR BAD REQUEST SEQUENCE
	INTEGER*4 DLLREQ_MCP_RESET_ENABLE	!NO OF SEG 0 REQUESTS BEFORE
C						;ULTIMATE RESET SENT
	INTEGER*2 DLLREQ_TOTAL(NUMAGT)		!TOTAL NO OF DLL REQUESTS

	INTEGER*4 RE_MAX_SUBNET			!HIGHEST SUBNET NO USED
	PARAMETER (RE_MAX_SUBNET=13)
	INTEGER*4 RE_GRAPH_MAX_TIME		!MAX ENTRIES IN LOOPBACK
	PARAMETER (RE_GRAPH_MAX_TIME=19)	!DELAY GRAPHS
	INTEGER*4 RE_TOTAL_REQUESTS_GRAPH_UNIT
	PARAMETER (RE_TOTAL_REQUESTS_GRAPH_UNIT=100)   !SCALE EVERY 100 REQUESTS
	INTEGER*4 RE_MAX_TOT_GRAPH
	PARAMETER (RE_MAX_TOT_GRAPH=30)		       !SO MANY ENTRIES
	INTEGER*4 DLLREQ_FREE(50000-16*(RE_MAX_SUBNET+1)-
     *				2*(RE_MAX_SUBNET+1))
C
C
	INTEGER*4 RE_LAST_REFRESH_TIME(0:RE_MAX_SUBNET) !LAST REFRESH TIME
	INTEGER*4 RE_LOADS_TOTAL(MAXLOADS,MAXAPP,0:RE_MAX_SUBNET) !ACCUMULATIVE
C							   !LOADS
	INTEGER*4 RE_SEG0_TOTAL(MAXLOADS,MAXAPP,0:RE_MAX_SUBNET)  !ACCUMULATIVE
C							   !LOADS
	INTEGER*4 RE_LOADS_PER_INTERVAL(MAXLOADS,
     *					MAXAPP,0:RE_MAX_SUBNET,2) !DOWNLOADS
C			PER MINUTE, (*,*,1) TO DISPLAY, (*,*,1) COUNTER
	INTEGER*4 RE_TERMINALS_PER_INTERVAL(MAXLOADS,
     *					MAXAPP,0:RE_MAX_SUBNET,2) !LOADING
C		TERMINALS PER MINUTE, (*,*,1) TO DISPLAY, (*,*,1) COUNTER
	INTEGER*4 RE_STATIONS_PER_INTERVAL(MAXLOADS,MAXAPP,
     *					0:RE_MAX_SUBNET,2) !LOADING
C		STATIONS PER MINUTE, (*,*,1) TO DISPLAY, (*,*,1) COUNTER
	INTEGER*4 RE_TOTAL_REQUESTS(0:RE_MAX_SUBNET)   !TOTAL NO OF REQUESTS
	INTEGER*4 RE_CURRENT_REQUESTS(0:RE_MAX_SUBNET) !CURRENT NO OF REQUESTS
	INTEGER*4 RE_MAX_LOAD(0:RE_MAX_SUBNET)         !MAX_NO OF TERMS LOADING
	INTEGER*4 RE_TOT_SENT(0:RE_MAX_SUBNET)         !TOTAL MESSAGES SENT
	INTEGER*4 RE_TERM_DELAY(0:RE_MAX_SUBNET)       !MESSAGES DELAY IN MSECS
	INTEGER*4 RE_MAX_TERMINALS_STARTED(0:RE_MAX_SUBNET) !TERMINALS STARTED/MIN
	INTEGER*4 RE_BUFFER_USAGE(0:RE_MAX_SUBNET)     !BUFFERS TO BE AVAILABLE
	INTEGER*4 RE_TARGET_VOLUME(0:RE_MAX_SUBNET)    !TARGET VOLUME
	INTEGER*4 RE_CURRENT_VOLUME(0:RE_MAX_SUBNET)   !CURRENT VOULME
	INTEGER*4 RE_CURRENT_LOAD(0:RE_MAX_SUBNET)     !CURRENT_LOAD
	INTEGER*4 RE_CURRENT_TERMINAL(0:RE_MAX_SUBNET) !CURRENT_TERMINAL
	INTEGER*4 RE_CURRENT_CONCENTR(0:RE_MAX_SUBNET) !CURRENT_CONCENTRATOR
	INTEGER*4 RE_CURRENT_USAGE(0:RE_MAX_SUBNET)    !BUFFER USAGE
	INTEGER*4 RE_CURRENT_START(0:RE_MAX_SUBNET)    !STARTED IN THE LAST INTERVAL
	INTEGER*4 RE_TIME_INTERVAL(0:RE_MAX_SUBNET)    !TARGETS FOR THIS INTERVAL
	INTEGER*4 RE_TIME_INIT(0:RE_MAX_SUBNET)	       !TIME INITIALIZED
	INTEGER*4 RE_MAX_ACTIVE_STATION(0:RE_MAX_SUBNET)      !MAX STATIONS STARTED
C						       !IT FORCES SENDING SOFT
C						       !STATION RESET IF NON 0
	INTEGER*4 RE_MAX_CONCENTR(0:RE_MAX_SUBNET)	!MAX CONCENTRATORS TO
							!BE LOADED ON SUBNET
	INTEGER*4 RE_NUM_TERMS_PER_THRUPUT(16,0:RE_MAX_SUBNET)
						      !TERMS PER THRUPUT CLASS
						      !PER SUBNET
	INTEGER*4 RE_TOTAL_REQUESTS_GRAPH(0:RE_MAX_TOT_GRAPH,
     *					0:RE_MAX_SUBNET)!
	INTEGER*4 RE_LOAD_DONE_CNT(0:RE_MAX_SUBNET)
C
C	LOOPBACK DATA
C
	INTEGER*4 RE_LOOP_RETRY_CNT(0:RE_MAX_SUBNET)   !NO OF RETRIES
C
	INTEGER*4 RE_LOOP_GRAPH(RE_GRAPH_MAX_TIME,0:RE_MAX_SUBNET) !LOOPBACK
C						       !APPLICATION DELAYS
C						       !AS A GRAPH
C
	COMMON /REQCOM/
     *	       DLLREQ_LAST,DLLREQ_ACTIVE, DLLREQ_BACKGRND,
     *         DLLREQ_HIGH, DLLREQ_TIME, 
     *	       DLLREQ_BAD_ORDER,DLLREQ_BAD_SAME, DLLREQ_RESET_ENABLE,
     *	       DLLREQ_MCP_RESET_ENABLE,DLLREQ_TOTAL,
     *	       RE_MAX_LOAD,RE_TOT_SENT, RE_TERM_DELAY, RE_BUFFER_USAGE,
     *	       RE_MAX_TERMINALS_STARTED, RE_TARGET_VOLUME,
     *	       RE_CURRENT_VOLUME,RE_CURRENT_LOAD,
     *	       RE_CURRENT_TERMINAL,RE_CURRENT_USAGE,RE_TIME_INTERVAL,
     *	       RE_CURRENT_START, DLLREQ_BAD_SAME_MCP,
     *	       RE_TOTAL_REQUESTS, RE_CURRENT_REQUESTS,
     *	       DLLREQ_SAME_DIF_TIME,RE_LOADS_PER_INTERVAL,
     *	       RE_TERMINALS_PER_INTERVAL, RE_LAST_REFRESH_TIME,
     *	       RE_LOOP_RETRY_CNT, RE_LOOP_GRAPH, RE_TIME_INIT,
     *         RE_MAX_ACTIVE_STATION, DLLREQ_TIME_STATION,
     *	       RE_STATIONS_PER_INTERVAL,RE_TOTAL_REQUESTS_GRAPH,
     *	       RE_LOADS_TOTAL,RE_SEG0_TOTAL,RE_LOAD_DONE_CNT,
     *	       RE_MAX_CONCENTR,RE_NUM_TERMS_PER_THRUPUT,
     *	       RE_CURRENT_CONCENTR,
     *	       DLLREQ_FREE
	VOLATILE /REQCOM/
C END OF REQCOM.DEF
