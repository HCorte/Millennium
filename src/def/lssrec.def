C LSSREC.DEF
C  
C V02 30-JUN-2000 UXN LSSLAT ADDED.
C V01 ??-???-???? RXK INITIAL RELEASE.
C
C LOGICAL SUPERSCORE GAME RECORD
C
C
C GAME VARIABLE ARRAYS
C
C     LSSSTS(NUMSSC)                 ; GAME STATUS
C     LSSWEK(NUMSSC)                 ; WEEK NUMBER
C     LSSDAT(NUMSSC)                 ; DRAW DATE
C     LSSDRW(NUMSSC)                 ; DRAW NUMBER
C     LSSBSD(NUMSSC)                 ; BEGINNING SALES DATE
C     LSSESD(NUMSSC)                 ; ENDING SALES DATE
C     LSSPUP(NUMSSC)                 ; LAST PURGE UPDATE   (FILE ONLY)
C     LSSUPD(NUMSSC)                 ; LAST FILE UPDATE    (FILE ONLY)
C     LSSCTM(NUMSSC)                 ; ACTUAL TIME WHEN CLOSED
C     LSSTIM(NUMSSC)                 ; TIME WHEN GAME SHOULD CLOSE
C     LSSSER(NUMSSC)                 ; LAST SERIAL NUMBER
C     LSSSAL(NUMSSC)                 ; TOTAL SALES
C     LSSPAD(NUMSSC)                 ; PRIZES PAID + REFUNDS
C     LSSPRG(NUMSSC)                 ; PRIZES PURGED
C     LSSPRF(NUMSSC)                 ; PAID REFUNDS
C     LSSREF(NUMSSC)                 ; TOTAL REFUND AMOUNT
C     LSSWON(NUMSSC)                 ; PRIZES WON
C     LSSPOL(2,NUMSSC)               ; ROLL POOL
C     LSSTPL(NUMSSC)                 ; TOTAL PRIZE POOL
C     LSSTBK(NUMSSC)                 ; TOTAL BREAKAGE
C     LSSBRK(2,NUMSSC)               ; WINNING ROUNDING POT
C     LSSABW(NUMSSC)                 ; AMOUNT BET ON WINNING SCORE
C     LSSODS(NUMSSC)                 ; WINNING ODDS
C     LSSWIN(2,3,NUMSSC)             ; WINNING RESULTS
C     LSSHLD(2,3,NUMSSC)             ; WINNING RESULTS HOLD
C     LSSTAX(NUMSSC)                 ; WINNING TAXES
C     LSSOTX(NUMTOT,NUMSSC)          ; OVER TAX LIMIT
C     LSSMID(NUMTOT,NUMSSC)          ; >REDMIN <REDMAX
C     LSSUTX(NUMTOT,NUMSSC)          ; UNDER TAX LIMIT
C     LSSHST(NUMSSC)                 ; HIGHEST WINNER FOR THIS GAME
C     LSSORM(NUMTOT,NUMSSC)          ; OVER REDMAX
C     LSSMNM(SSNMS_LEN/4,NUMSSC)     ; MASTER EVENT NAME
C     LSSDES(SSDES_LEN/4,NUMSSC)     ; EVENT DESCRIPTION
C     LSSSNM(SSNMS_LEN/4,3,NUMSSC)   ; EVENT NAMES
C     LSSEST(3,NUMSSC)               ; EVENT STATUS'S
C     LSSREV(NUMSSC)                 ; REV #
C     LSSTYP(NUMSSC)                 ; GAME TYPE 1=SOC. 2=HOCK.
C     LSSPFN(5,NUMSSC)               ; POOL FILE NAME
C     LSSPOF(5,NUMSSC)               ; POOL OVERFLOW FILE NAME
C     LSSPRC(NUMSSC)                 ; BASE PRICE (MINIMUM STAKE)
C     LSSSPR(NUMSSC)                 ; POOL PERCENTAGE
C     LSSWRO(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     LSSWRA(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     LSSWPO(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     LSSWPA(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     LSSWPR(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; (1=PRWON,2=PRPAD)
C     LSSECD(3,NUMSSC)               ; EVENT CLOSE DATE
C     LSSECT(3,NUMSSC)               ; EVENT CLOSE TIME
C     LSSLAT(NUMLAT,NUMSSC)          ; EVENT STARTED BEFORE GAME WAS CLOSED 
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C
C LOGICAL GAME FILE VARIABLE OFFSETS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1997 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4 LSSSTS_OFF, LSSWEK_OFF, LSSDAT_OFF, LSSDRW_OFF
	INTEGER*4 LSSBSD_OFF, LSSESD_OFF, LSSPUP_OFF, LSSUPD_OFF
	INTEGER*4 LSSTIM_OFF, LSSCTM_OFF, LSSSER_OFF, LSSSAL_OFF
	PARAMETER(LSSSTS_OFF=1)
	PARAMETER(LSSWEK_OFF=LSSSTS_OFF+NUMSSC)
	PARAMETER(LSSDAT_OFF=LSSWEK_OFF+NUMSSC)
	PARAMETER(LSSDRW_OFF=LSSDAT_OFF+NUMSSC)
	PARAMETER(LSSBSD_OFF=LSSDRW_OFF+NUMSSC)
	PARAMETER(LSSESD_OFF=LSSBSD_OFF+NUMSSC)
	PARAMETER(LSSPUP_OFF=LSSESD_OFF+NUMSSC)
	PARAMETER(LSSUPD_OFF=LSSPUP_OFF+NUMSSC)
	PARAMETER(LSSCTM_OFF=LSSUPD_OFF+NUMSSC)
	PARAMETER(LSSTIM_OFF=LSSCTM_OFF+NUMSSC)
	PARAMETER(LSSSER_OFF=LSSTIM_OFF+NUMSSC)
	PARAMETER(LSSSAL_OFF=LSSSER_OFF+NUMSSC)
C
	INTEGER*4 LSSPAD_OFF, LSSPRG_OFF, LSSPRF_OFF, LSSREF_OFF
	INTEGER*4 LSSWON_OFF, LSSPOL_OFF, LSSTPL_OFF, LSSTBK_OFF
	INTEGER*4 LSSBRK_OFF, LSSABW_OFF, LSSODS_OFF, LSSWIN_OFF
	PARAMETER(LSSPAD_OFF = LSSSAL_OFF+NUMSSC)
	PARAMETER(LSSPRG_OFF = LSSPAD_OFF+NUMSSC)
	PARAMETER(LSSPRF_OFF = LSSPRG_OFF+NUMSSC)
	PARAMETER(LSSREF_OFF = LSSPRF_OFF+NUMSSC)
	PARAMETER(LSSWON_OFF = LSSREF_OFF+NUMSSC)
	PARAMETER(LSSPOL_OFF = LSSWON_OFF+NUMSSC)
	PARAMETER(LSSTPL_OFF = LSSPOL_OFF+(2*NUMSSC))
	PARAMETER(LSSTBK_OFF = LSSTPL_OFF+NUMSSC)
	PARAMETER(LSSBRK_OFF = LSSTBK_OFF+NUMSSC)
	PARAMETER(LSSABW_OFF = LSSBRK_OFF+(2*NUMSSC))
	PARAMETER(LSSODS_OFF = LSSABW_OFF+NUMSSC)
	PARAMETER(LSSWIN_OFF = LSSODS_OFF+NUMSSC)
C
	INTEGER*4 LSSHLD_OFF, LSSTAX_OFF, LSSOTX_OFF
	INTEGER*4 LSSMID_OFF, LSSUTX_OFF, LSSHST_OFF, LSSORM_OFF
	INTEGER*4 LSSMNM_OFF, LSSSNM_OFF, LSSDES_OFF 
        INTEGER*4 LSSREV_OFF, LSSTYP_OFF, LSSEST_OFF
	PARAMETER(LSSHLD_OFF = LSSWIN_OFF+(6*NUMSSC))
	PARAMETER(LSSTAX_OFF = LSSHLD_OFF+(6*NUMSSC))
	PARAMETER(LSSOTX_OFF = LSSTAX_OFF+NUMSSC)
	PARAMETER(LSSMID_OFF = LSSOTX_OFF+(NUMTOT*NUMSSC))
	PARAMETER(LSSUTX_OFF = LSSMID_OFF+(NUMTOT*NUMSSC))
	PARAMETER(LSSHST_OFF = LSSUTX_OFF+(NUMTOT*NUMSSC))
	PARAMETER(LSSORM_OFF = LSSHST_OFF+NUMSSC)
	PARAMETER(LSSMNM_OFF = LSSORM_OFF+(NUMTOT*NUMSSC))
	PARAMETER(LSSDES_OFF = LSSMNM_OFF+(SSNMS_LEN/4)*NUMSSC)
	PARAMETER(LSSSNM_OFF = LSSDES_OFF+(SSDES_LEN/4)*NUMSSC)
	PARAMETER(LSSEST_OFF = LSSSNM_OFF+(SSNMS_LEN/4)*3*NUMSSC)
	PARAMETER(LSSREV_OFF = LSSEST_OFF+3*NUMSSC)
	PARAMETER(LSSTYP_OFF = LSSREV_OFF+NUMSSC)
C
	INTEGER*4 LSSPFN_OFF, LSSPOF_OFF, LSSPRC_OFF, LSSSPR_OFF
	PARAMETER(LSSPFN_OFF = LSSTYP_OFF+NUMSSC)
	PARAMETER(LSSPOF_OFF = LSSPFN_OFF+(5*NUMSSC))
	PARAMETER(LSSPRC_OFF = LSSPOF_OFF+(5*NUMSSC))
	PARAMETER(LSSSPR_OFF = LSSPRC_OFF+NUMSSC)
C
        INTEGER*4 LSSWRO_OFF, LSSWRA_OFF, LSSWPO_OFF, LSSWPA_OFF
        INTEGER*4 LSSWPR_OFF, LSSECD_OFF, LSSECT_OFF
        PARAMETER(LSSWRO_OFF = LSSSPR_OFF + NUMSSC)
        PARAMETER(LSSWRA_OFF = LSSWRO_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(LSSWPO_OFF = LSSWRA_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(LSSWPA_OFF = LSSWPO_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(LSSWPR_OFF = LSSWPA_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(LSSECD_OFF = LSSWPR_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(LSSECT_OFF = LSSECD_OFF + 3*NUMSSC)
	INTEGER*4 LSSLAT_OFF
	PARAMETER(LSSLAT_OFF = LSSECT_OFF + 3*NUMSSC)

	INTEGER*4 LSSRECLEN
	PARAMETER(LSSRECLEN = LSSLAT_OFF + NUMLAT*NUMSSC -1 )
C
C LOGICAL RECORD DEFINITION
C
	INTEGER*4 LSSREC(LSSRECLEN)
C
C GAME FILE VARIABLE DEFINITIONS
C
	INTEGER*4 LSSSTS(NUMSSC),LSSWEK(NUMSSC)
	INTEGER*4 LSSDAT(NUMSSC),LSSBSD(NUMSSC)
	INTEGER*4 LSSESD(NUMSSC),LSSPUP(NUMSSC)
	INTEGER*4 LSSUPD(NUMSSC),LSSDRW(NUMSSC)
	INTEGER*4 LSSCTM(NUMSSC),LSSTIM(NUMSSC)
	INTEGER*4 LSSSER(NUMSSC),LSSSAL(NUMSSC)
	INTEGER*4 LSSPAD(NUMSSC),LSSPRG(NUMSSC)
	INTEGER*4 LSSPRF(NUMSSC),LSSREF(NUMSSC)
	INTEGER*4 LSSWON(NUMSSC),LSSPOL(2,NUMSSC)
	INTEGER*4 LSSTPL(NUMSSC),LSSTBK(NUMSSC)
	INTEGER*4 LSSBRK(2,NUMSSC),LSSABW(NUMSSC)
	INTEGER*4 LSSODS(NUMSSC),LSSWIN(2,3,NUMSSC)
	INTEGER*4 LSSHLD(2,3,NUMSSC),LSSTAX(NUMSSC)
	INTEGER*4 LSSOTX(NUMTOT,NUMSSC)
	INTEGER*4 LSSMID(NUMTOT,NUMSSC)
	INTEGER*4 LSSUTX(NUMTOT,NUMSSC)
	INTEGER*4 LSSHST(NUMSSC),LSSORM(NUMTOT,NUMSSC)
	INTEGER*4 LSSMNM(SSNMS_LEN/4,NUMSSC)
	INTEGER*4 LSSDES(SSDES_LEN/4,NUMSSC)
	INTEGER*4 LSSSNM(SSNMS_LEN/4,3,NUMSSC)
	INTEGER*4 LSSEST(3,NUMSSC)
	INTEGER*4 LSSREV(NUMSSC),LSSTYP(NUMSSC)
	INTEGER*4 LSSPFN(5,NUMSSC), LSSPOF(5,NUMSSC)
	INTEGER*4 LSSPRC(NUMSSC),LSSSPR(NUMSSC)
        INTEGER*4 LSSWRO(NUMTOT,2,NUMSSC),LSSWRA(NUMTOT,2,NUMSSC)
        INTEGER*4 LSSWPO(NUMTOT,2,NUMSSC),LSSWPA(NUMTOT,2,NUMSSC)
        INTEGER*4 LSSWPR(NUMTOT,2,NUMSSC)
        INTEGER*4 LSSECD(3,NUMSSC),LSSECT(3,NUMSSC)
	INTEGER*4 LSSLAT(NUMLAT,NUMSSC)
C
C
	EQUIVALENCE(LSSSTS,LSSREC(LSSSTS_OFF))
	EQUIVALENCE(LSSWEK,LSSREC(LSSWEK_OFF))
	EQUIVALENCE(LSSDAT,LSSREC(LSSDAT_OFF))
	EQUIVALENCE(LSSDRW,LSSREC(LSSDRW_OFF))
	EQUIVALENCE(LSSBSD,LSSREC(LSSBSD_OFF))
	EQUIVALENCE(LSSESD,LSSREC(LSSESD_OFF))
	EQUIVALENCE(LSSPUP,LSSREC(LSSPUP_OFF))
	EQUIVALENCE(LSSUPD,LSSREC(LSSUPD_OFF))
	EQUIVALENCE(LSSCTM,LSSREC(LSSCTM_OFF))
	EQUIVALENCE(LSSTIM,LSSREC(LSSTIM_OFF))
	EQUIVALENCE(LSSSER,LSSREC(LSSSER_OFF))
	EQUIVALENCE(LSSSAL,LSSREC(LSSSAL_OFF))
	EQUIVALENCE(LSSPAD,LSSREC(LSSPAD_OFF))
	EQUIVALENCE(LSSPRG,LSSREC(LSSPRG_OFF))
	EQUIVALENCE(LSSPRF,LSSREC(LSSPRF_OFF))
	EQUIVALENCE(LSSREF,LSSREC(LSSREF_OFF))
	EQUIVALENCE(LSSWON,LSSREC(LSSWON_OFF))
	EQUIVALENCE(LSSPOL,LSSREC(LSSPOL_OFF))
	EQUIVALENCE(LSSTPL,LSSREC(LSSTPL_OFF))
	EQUIVALENCE(LSSTBK,LSSREC(LSSTBK_OFF))
	EQUIVALENCE(LSSBRK,LSSREC(LSSBRK_OFF))
	EQUIVALENCE(LSSABW,LSSREC(LSSABW_OFF))
	EQUIVALENCE(LSSODS,LSSREC(LSSODS_OFF))
	EQUIVALENCE(LSSWIN,LSSREC(LSSWIN_OFF))
	EQUIVALENCE(LSSHLD,LSSREC(LSSHLD_OFF))
	EQUIVALENCE(LSSTAX,LSSREC(LSSTAX_OFF))
	EQUIVALENCE(LSSOTX,LSSREC(LSSOTX_OFF))
	EQUIVALENCE(LSSMID,LSSREC(LSSMID_OFF))
	EQUIVALENCE(LSSUTX,LSSREC(LSSUTX_OFF))
	EQUIVALENCE(LSSHST,LSSREC(LSSHST_OFF))
	EQUIVALENCE(LSSORM,LSSREC(LSSORM_OFF))
	EQUIVALENCE(LSSMNM,LSSREC(LSSMNM_OFF))
	EQUIVALENCE(LSSDES,LSSREC(LSSDES_OFF))
	EQUIVALENCE(LSSSNM,LSSREC(LSSSNM_OFF))
	EQUIVALENCE(LSSEST,LSSREC(LSSEST_OFF))
	EQUIVALENCE(LSSREV,LSSREC(LSSREV_OFF))
	EQUIVALENCE(LSSTYP,LSSREC(LSSTYP_OFF))
	EQUIVALENCE(LSSPRC,LSSREC(LSSPRC_OFF))
        EQUIVALENCE(LSSPFN,LSSREC(LSSPFN_OFF))
        EQUIVALENCE(LSSPOF,LSSREC(LSSPOF_OFF))
	EQUIVALENCE(LSSSPR,LSSREC(LSSSPR_OFF))
        EQUIVALENCE(LSSWRO,LSSREC(LSSWRO_OFF))
        EQUIVALENCE(LSSWRA,LSSREC(LSSWRA_OFF))
        EQUIVALENCE(LSSWPO,LSSREC(LSSWPO_OFF))
        EQUIVALENCE(LSSWPA,LSSREC(LSSWPA_OFF))
        EQUIVALENCE(LSSWPR,LSSREC(LSSWPR_OFF))
        EQUIVALENCE(LSSECD,LSSREC(LSSECD_OFF))
        EQUIVALENCE(LSSECT,LSSREC(LSSECT_OFF))
        EQUIVALENCE(LSSLAT,LSSREC(LSSLAT_OFF))
