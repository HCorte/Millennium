C *** DEFINITION_FILE MSCCOM ***
C
C V09 13-JUN-2000 OXK Cleanup w/ WARNINGS=ALL (look for CV09)
C V08 22-NOV-1995 WJK Put MSC_AUTO_SWITCH in common
C V07 12-JUN-1995 SCD Modify NUMSYS for Colorado
C V06 07-MAR-1995 SCD DIMENSION LAT_NAME BASED UPON MAX_LAT_PORTS, NOT
C		       NUMSYS (DC).
C V05 13-JAN-1994 PJS MODIFIED MSC_SEND_MAX FROM 2 -> 1 (DISABLES RETRIES).
C V04 06-JAN-1994 PJS MODIFIED TO HANDLE MULTIPLE SWITCHES & CLEANED UP.
C V03 04-DEC-1993 RRB REMOVED COMMAND TIME OUT EVENT AND COMMAND 
C                      RESPONSE PENDING FLAG. BAD HABIT.
C V02 07-JAN-1993 RRB ADD EXEC QUEUE FOR ALL BUFFER PROCESSING.
C                      (NO MORE READ/WRITE). ADDED TIMEOUTPARAMETERS FOR
C                      WRITE TIMOUT AND SETUP COMMAND RESPONSES.
C V01 11-FEB-1991 RRB VAX INITIAL RELEASE
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode Island,
C and contains confidential and trade secret information. It may not be
C transferred from the custody or control of GTECH except as authorized in
C writing by an officer of GTECH. Neither this item nor the information it
C contains may be used, transferred, reproduced, published, or disclosed,
C in whole or in part, and directly or indirectly, except as expressly
C authorized by an officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C Purpose:
C	TELENEX MATRIX SWITCH MANAGEMENT. COMMON DEFINITION.
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C LAT AND MSC CONFIGURATION INFO
C
	INTEGER*4	MAX_CONNECTION_WAIT,		! MAX INTERVAL TO WAIT
     *			MAX_LAT_PORTS,			! MAX # OF LAT PORTS
     *			MAX_SWITCHES,			! MAX # OF SWITCHES
     *			MSC_CTRL_PARMS,			! # OF CONFIG PARAMS
     *			NUMSYS				! # OF SYSTEMS (A-E)
C
	PARAMETER	(MAX_CONNECTION_WAIT = 900)
	PARAMETER	(MAX_LAT_PORTS       =   5)	! SAME AS "MAX_SYSTEMS"
C							! IN DESNET.DEF
	PARAMETER	(MAX_SWITCHES        =   9)
	PARAMETER	(MSC_CTRL_PARMS      =   8 + MAX_LAT_PORTS
     *                                             + MAX_SWITCHES)
	PARAMETER	(NUMSYS              =   3)	! V07
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C CONFIGURATION INFORMATION VECTOR OFFSETS
C
	INTEGER*4	SWITCH_CNT,			! NUMBER OF SWITCHES
     *			SWITCH_NAME,			! MSC 1ST SWITCH NAME
     *			USER_ID,			! LOGON USER ID
     *			PASSWORD,			! LOGON PASSWORD
     *			NET_PORT_ID,			! NETWORK PORT PREFIX
     *			LOC_PORT_ID,			! LOCAL PORT PREFIX
     *			AUX_PORT_CNT,			! # OF ACTIVE AUX PORTS
     *			CONF_WAIT_LIMIT,		! MAX TO WAIT FOR CONFIG
     *			PAGE_LENGTH,			! RESPONSE PAGE LENGTH
     *			LAT_NAME_OFF			! BEG OFF OF LAT PORTS
C
	PARAMETER	(SWITCH_CNT      = 1)
	PARAMETER	(SWITCH_NAME     = SWITCH_CNT      + 1)
	PARAMETER	(USER_ID         = SWITCH_NAME     + MAX_SWITCHES)
	PARAMETER	(PASSWORD        = USER_ID         + 1)
	PARAMETER	(NET_PORT_ID     = PASSWORD        + 1)
	PARAMETER	(LOC_PORT_ID     = NET_PORT_ID     + 1)
	PARAMETER	(AUX_PORT_CNT    = LOC_PORT_ID     + 1)
	PARAMETER	(CONF_WAIT_LIMIT = AUX_PORT_CNT    + 1)
	PARAMETER	(PAGE_LENGTH     = CONF_WAIT_LIMIT + 1)
	PARAMETER	(LAT_NAME_OFF    = PAGE_LENGTH     + 1)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C CONFIGURATION INFORMATION VECTORS
C
	REAL*8		MSC_CONF_INFO(MSC_CTRL_PARMS)
C
	CHARACTER*8	CMSC_CONF_INFO(MSC_CTRL_PARMS),
     *			LAT_NAME(MAX_LAT_PORTS)			! V06
C
	EQUIVALENCE	(CMSC_CONF_INFO(1),            MSC_CONF_INFO(1))
	EQUIVALENCE	(CMSC_CONF_INFO(LAT_NAME_OFF), LAT_NAME(1))
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C AUXILIARY PORT NAMES ALLOW NON-COMMUNICATIONS PORTS TO BE RECOGNIZED
C (AND IGNORED) BY MSCMGR WHEN CHECKING MSC CONFIGURATION.
C (DIALUP, VISION, ETC.)
C
	INTEGER*4	MAX_AUX_PORTS			! MAX # OF AUX PORTS
	PARAMETER	(MAX_AUX_PORTS = 100)
C
	CHARACTER*8	AUX_PORT_ID(MAX_AUX_PORTS)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4	MSC_AUTO_SWITCH,		! AUTO-SWITCHING ?
     *			  AUTO_SWITCH_DISABLED,		! VALUE FOR DISABLED
     *			  AUTO_SWITCH_ENABLED		! VALUE FOR ENABLED
	PARAMETER	  (AUTO_SWITCH_DISABLED = 0)
	PARAMETER	  (AUTO_SWITCH_ENABLED  = 1)
C
	INTEGER*4	MSC_NUM_MSGS			! # OF VALID REPONSES
	PARAMETER	(MSC_NUM_MSGS = 11)
C
	INTEGER*4	MSC_MAX_PORTS			! MAX # OF PORTS
	PARAMETER	(MSC_MAX_PORTS = 193)		! SAME AS "X2X_STATIONS"
C							! IN X2XPRM.DEF
C
	INTEGER*4	MSC_PORT_STATUS(MSC_MAX_PORTS),	! PORT STATUS
     *			  MSCPS_ALARMED,		! VALUE FOR ALARMED
     *			  MSCPS_NORMAL			! VALUE FOR NORMAL
	PARAMETER	  (MSCPS_ALARMED = 1)
	PARAMETER	  (MSCPS_NORMAL  = 0)

	INTEGER*4	MSC_ALARM_STATUS(MSC_MAX_PORTS),! PORT ALARM STATUS
     *			  MSCPA_DISABLED,		! VALUE FOR DISABLED
     *			  MSCPA_ENABLED			! VALUE FOR ENABLED
	PARAMETER	  (MSCPA_DISABLED = 0)
	PARAMETER	  (MSCPA_ENABLED  = 1)

	INTEGER*4	MSC_PORT_SWITCH_STATE(MSC_MAX_PORTS),! ALLOW SWITCHING ?
     *			  PORT_SWITCH_DISABLED,		! VALUE FOR DISABLED
     *			  PORT_SWITCH_ENABLED		! VALUE FOR ENABLED
	PARAMETER	  (PORT_SWITCH_DISABLED = 1)
	PARAMETER	  (PORT_SWITCH_ENABLED  = 0)
C
	INTEGER*4	MSC_CONF_FLAG,			! CONFIGURATION STATUS
     *			  CONF_CHECK_PENDING,		! TIME TO CHECK
     *			  CONF_REC_IN_PROG,		! RECEIVE IN PROGRESS
     *			  CONF_RECEIVED,		! RECEIVE COMPLETE
     *			  CONF_VERIFIED			! CONFIGURATION VERIFIED
	PARAMETER	  (CONF_CHECK_PENDING = 1)
	PARAMETER	  (CONF_REC_IN_PROG   = 2)
	PARAMETER	  (CONF_RECEIVED      = 3)
	PARAMETER	  (CONF_VERIFIED      = 4)
C
	INTEGER*4	MSC_RECONNECT_LIMIT,		! MAX TIMES TO RECONNECT
     *			MSC_SWITCH_LIMIT		! MAX TIMES TO SWITCH
	PARAMETER	(MSC_RECONNECT_LIMIT = 3)
	PARAMETER	(MSC_SWITCH_LIMIT    = 1)
C
	INTEGER*4	MSC_INIT_FLAG,			! MSC INIT STATUS
     *			  MSC_INITIALIZED		! VALUE FOR INITIALIZED
	PARAMETER	  (MSC_INITIALIZED = 1)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C TIMER PARAMETERS
C
	INTEGER*4	MSC_NUM_TIMTRAPS		! TIMETRAPS HANDLED
	PARAMETER	(MSC_NUM_TIMTRAPS = 3)		! BY MSC_TIMTRAP AST
C
	INTEGER*4	MSC_TIMER_FLAGS(MSC_NUM_TIMTRAPS),
     *			  MSC_POLL_EVENT,		! POLL THE SWITCH (MSC)
     *			    MSC_POLLTIME,		! TIME IN MILLISECONDS
     *			  MSC_CONF_EVENT,		! CHECK MSC CONFIG
     *			    MSC_CONF_INTVL,		! TIME IN SECONDS
     *			  MSC_STAT_EVENT,		! CHECK FE STATISTICS
     *			    MSC_STAT_INTVL		! TIME IN SECONDS
C
	PARAMETER	  (MSC_POLL_EVENT = 1)
	PARAMETER	    (MSC_POLLTIME   = 1000)
C
	PARAMETER	  (MSC_CONF_EVENT = 2)
	PARAMETER	    (MSC_CONF_INTVL =    5)
C
	PARAMETER	  (MSC_STAT_EVENT = 3)
	PARAMETER	    (MSC_STAT_INTVL =   10)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C MSC TIMEOUT PARAMETERS
C
	INTEGER*4	MSC_SEND_MAX,			! WRITE RE-ISSUE MAX
     *			MSC_TIMEOUT_MAX			! TIMEOUTS B4 OFFLINE
	PARAMETER	(MSC_SEND_MAX    = 1)
	PARAMETER	(MSC_TIMEOUT_MAX = 3)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C SETUP COMMAND COUNTER AND RETRY LIMIT
C
	INTEGER*4	MSC_SETUP_REQ_CNT,
     *			  MSC_SETUP_REQ_LIMIT		! POLLTIME MILLISECONDS
	PARAMETER	  (MSC_SETUP_REQ_LIMIT = 20)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C PROCESSING BUFFERS
C
	INTEGER*4	MSCBNUM,			! # OF BUFFERS
     *			MSCBLEN,			! BUF LEN IN LONG WORDS
     *			MSCBYTLEN			! BUF LEN IN BYTES
C
	PARAMETER	(MSCBNUM   =  40)
	PARAMETER	(MSCBLEN   = 250)
	PARAMETER	(MSCBYTLEN =   4 * MSCBLEN)
C
	INTEGER*4	MSCBUF(MSCBLEN, MSCBNUM)	! MSC FULLWORD BUFFERS
C
	BYTE		BMSCBUF(MSCBYTLEN, MSCBNUM)	! MSC BYTE BUFFER
C
	CHARACTER*(MSCBYTLEN) CMSCBUF(MSCBNUM)		! MSC CHARACTER BUFFER
C
	EQUIVALENCE	(MSCBUF, BMSCBUF, CMSCBUF)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C QUEUES
C
	INTEGER*4	MSCEXEC(MSCBNUM + QHEDSZ),	! EXEC  BUFFER LIST
     *			MSCFREE(MSCBNUM + QHEDSZ)	! FREE  BUFFER LIST
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C DATA STRUCTURES
C
	INTEGER*4	MSCHDRLEN			! BUF HEAD LEN IN BYTES
	PARAMETER	(MSCHDRLEN = 4)
C
CV09 Moved to MSCREAD.FOR (only used in there)
CV09	INTEGER*4	MSC_PACKET_TYPE			! PACKET TYPE
	BYTE		  ACK,				! ACKNOWLEDGEMENT
     *			  NAK,				! NEG. ACKNOWLEDGEMENT
     *			  SOH				! START OF DATA PACKET
C
	PARAMETER	  (ACK = '06'X)
	PARAMETER	  (NAK = '15'X)
	PARAMETER	  (SOH = '01'X)
C
CV09 Moved to MSCREAD.FOR (only used in there)
CV09	BYTE		BYTE_CNT(2)			! # OF DATA BYTES
C
CV09 Removed, not used anywhere
CV09	BYTE		BLOCK_TYPE			! DATA BLOCK TYPE
	INTEGER*4	  LAST_BLOCK,			! LAST OR ONLY BLOCK
     *			  MULTI_BLOCK			! NOT LAST BLOCK
C
	PARAMETER	  (LAST_BLOCK  = '00'X)
	PARAMETER	  (MULTI_BLOCK = '01'X)
C
	INTEGER*4	RESP_TYPE			! RESPONSE TYPE INDEX
	PARAMETER	(RESP_TYPE = 2)              
C
	INTEGER*4	  ALARM_RESP,			! ALARM RESPONSE
     *			  STATUS_RESP			! STATUS RESPONSE
	PARAMETER	  (ALARM_RESP  = '01'X)
	PARAMETER	  (STATUS_RESP = '02'X)
C
C NOTE: A COMMAND RESPONSE IS ANYTHING OTHER THAN "ALARM" AND "STATUS"
C
	INTEGER*4	ALARM_NUM,			! ALARM NUMBER INDEX
     *			MSC_STATUS			! STATUS INDEX
C
	PARAMETER	(ALARM_NUM  = 3)
	PARAMETER	(MSC_STATUS = 3)
C
	INTEGER*4	  MSC_OFF,			! MSC IS OFFLINE
     *			  MSC_ON			! MSC IS ONLINE
	PARAMETER	  (MSC_OFF  = 0)
	PARAMETER	  (MSC_ON   = 1)
C
	INTEGER*4	MSCBTYP				! BUFFER TYPE
	PARAMETER	(MSCBTYP = MSCBLEN)
C
	INTEGER*4	  MSCBTYPIN,			! INPUT BUFFER
     *			  MSCBTYPOUT			! OUTPUT BUFFER
	PARAMETER	  (MSCBTYPIN  = 1)
	PARAMETER	  (MSCBTYPOUT = 2)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C I/O STATUS BLOCK STRUCTURE
C
	STRUCTURE	/MSC_IOSSTRUCT/
	  INTEGER*2	STAT				! VMS STATUS
	  INTEGER*2	XSIZE				! TRANSFER SIZE
	  INTEGER*4	PARM				! PARAMETER/BUFFER ADDR
	END STRUCTURE
C
	RECORD	/MSC_IOSSTRUCT/	MSC_READIOSB
	RECORD	/MSC_IOSSTRUCT/	MSC_WRITEIOSB
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C DYNAMIC STATISTICS
C
	INTEGER*4	MSCSTS,				! MSC CONNECTION STATUS
     *			  MSC_DOWN,			! NO CONNECTION
     *			  MSC_REQ_ONLINE,		! REQUESTED ON-LINE 
     *			  MSC_ONLINE,			! CONNECTION ESTABLISHED
     *			  MSC_REQ_LOGON,		! REQUESTED LOG ON
     *			  MSC_LOGGED_ON,		! LOGGED ON
     *			  MSC_REQ_PAGE_SET,		! REQ PAGE LENGTH SET
     *			  MSC_PAGE_SET,			! PAGE LENGTH SET
     *			  MSC_REQ_SWITCH,		! REQUESTED SWITCH
     *			  MSC_SWITCH_SELECTED,		! MATRIX SWITCH SELECTED
     *			  MSC_REQ_STARTUP,		! REQUESTED SWITCH START
     *			  MSC_ACTIVE			! ALIVE AND KICKIN'
C
	PARAMETER	  (MSC_DOWN            =  0)
	PARAMETER	  (MSC_REQ_ONLINE      =  1)
	PARAMETER	  (MSC_ONLINE          =  2)
	PARAMETER	  (MSC_REQ_LOGON       =  3)
	PARAMETER	  (MSC_LOGGED_ON       =  4)
	PARAMETER	  (MSC_REQ_PAGE_SET    =  5)
	PARAMETER	  (MSC_PAGE_SET        =  6)
	PARAMETER	  (MSC_REQ_SWITCH      =  7)
	PARAMETER	  (MSC_SWITCH_SELECTED =  8)
	PARAMETER	  (MSC_REQ_STARTUP     =  9)
	PARAMETER	  (MSC_ACTIVE          = 10)
C
	INTEGER*4	MSC_LAST_CONF_TIME,		! LAST CONFIG. TIME
     *			MSC_LAST_RECV_TIME,		! LAST RECEIVE TIME
     *			MSC_LAST_SENT_TIME,		! LAST COMMAND TIME
     *			MSC_MESCNT,			! COUNT OF MESSAGE TRAPS
     *			MSC_RECONNECT_CNT(MSC_MAX_PORTS),! RECONNECT COUNT   
     *			MSC_READCNT,			! TIMES READ
     *			MSC_RESPONSES(0:MSC_NUM_MSGS),	! COUNT OF MSG TYPES
     *			MSC_SEND_CNT,			! TIMES WRITTEN
     *			MSC_SWITCH_CNT(MSC_MAX_PORTS),	! SWITCH COUNT
     *			MSC_TEST,			! TEST MODE
     *			MSC_TIMCNT(MSC_NUM_TIMTRAPS),	! COUNT OF TIMER EVENTS
     *			MSC_WRITECNT			! COUNT OF WRITES
CV09 Moved to MSC_SNDBUF.FOR (only used in there)
CV09     *			MSC_TIMEOUTS,	
		! CONNECTION TIMEOUTS
C
	LOGICAL*4	MSC_READ_IN_PROG,		! READ IN PROGRESS ?
     *			MSC_WRITE_IN_PROG		! WRITE IN PROGRESS ?
C
	INTEGER*4	MSC_CONNECT_FLAG,		! SRVR CONNECTION STATUS
     *			  MSC_CLOSED,			! SERVER CLOSED
     *			  MSC_OPENED			! SERVER OPENED
	PARAMETER	(MSC_CLOSED = 0)
	PARAMETER	(MSC_OPENED = 1)
C
	INTEGER*4	MSC_XTRA			! EXTRA STUFF
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C OTHER STUFF
C
	INTEGER*4 LAT_CHANNEL,				! LAT DEVICE CHANNEL #
     *		  MSC_LOCAL_TO_NETWORK(MSC_MAX_PORTS),	! LOC->NET RELATIONSHIP
     *		  MSC_NETWORK_TO_LOCAL(MSC_MAX_PORTS),	! NET->LOC RELATIONSHIP
     *		  MSC_SAVE_PORT_STATE(MSC_MAX_PORTS)	! X2X LOCAL PORT STATES
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C COMMON DEFINTION
C
	COMMON	/MSCCOM/
     *			LAT_CHANNEL, 
     *			MSCBUF, 
     *			MSCEXEC, 
     *			MSCFREE, 
     *			MSCSTS, 
     *			MSC_ALARM_STATUS, 
     *			MSC_CONF_FLAG, 
     *			MSC_CONF_INFO, 
     *			MSC_CONNECT_FLAG, 
     *			MSC_INIT_FLAG, 
     *			MSC_LAST_CONF_TIME, 
     *			MSC_LAST_RECV_TIME, 
     *			MSC_LAST_SENT_TIME, 
     *			MSC_LOCAL_TO_NETWORK, 
     *			MSC_MESCNT, 
     *			MSC_NETWORK_TO_LOCAL, 
     *			MSC_PORT_STATUS, 
     *			MSC_PORT_SWITCH_STATE, 
     *			MSC_READCNT, 
     *			MSC_READIOSB, 
     *			MSC_READ_IN_PROG, 
     *			MSC_RECONNECT_CNT, 
     *			MSC_RESPONSES, 
     *			MSC_SAVE_PORT_STATE, 
     *			MSC_SEND_CNT, 
     *			MSC_SETUP_REQ_CNT,
     *			MSC_SWITCH_CNT, 
     *			MSC_TIMCNT, 
     *			MSC_TIMER_FLAGS, 
     *			MSC_WRITECNT, 
     *			MSC_WRITEIOSB, 
     *			MSC_WRITE_IN_PROG, 
     *			AUX_PORT_ID, 
     *			MSC_XTRA,
     *			MSC_TEST ,
     *			MSC_AUTO_SWITCH 		! V08
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C EQUIVALANCE FOR CLEAR OF MSCCOM
C
	INTEGER*4	MSC_FIRST,
     *			MSC_LAST
C
	EQUIVALENCE	(MSC_FIRST, LAT_CHANNEL)
	EQUIVALENCE	(MSC_LAST,  MSC_TEST)
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	VOLATILE	/MSCCOM/
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
