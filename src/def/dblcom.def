C DBLCOM.DEF
C
C V09 30-JUN-2000 UXN DBLLAT added.
C V08 08-JUN-2000 UXN DBLFUL, DBL2ND_OFF removed.
C V07 18-MAY-1999 UXN DBLCMB added.
C V06 20-DEC-1995 HXK Change in xxPSORT array structure
C V05 28-NOV-1995 HXK Batch of changes for Double/Couple release
C V04 10-NOV-1995 HXK Further changes for Double, Couple
C V03 08-NOV-1995 HXK Fixed statement line that was too long  > 72 chars 
C V02 07-NOV-1995 HXK Changes for Double, Couple install
C V01 06-NOV-1995 PXB Initial revision.
C
C SUPER DOUBLE GAME AND POOL COMMONS.
C
C GAME VARIABLE ARAYS.
C
C     DBLSTS(NUMDBL)                 ; GAME STATUS
C     DBLWEK(NUMDBL)                 ; WEEK NUMBER
C     DBLDAT(NUMDBL)                 ; DRAW DATE
C     DBLDRW(NUMDBL)                 ; DRAW NUMBER
C     DBLBSD(NUMDBL)                 ; BEGINNING SALES DATE
C     DBLESD(NUMDBL)                 ; ENDING SALES DATE
C     DBLPUP(NUMDBL)                 ; LAST PRUGE UPDATE  (FILE ONLY)
C     DBLUPD(NUMDBL)                 ; LAST FILE UPDATE   (FILE ONLY)
C     DBLCTM(NUMDBL)                 ; ACTUAL TIME WHEN CLOSED
C     DBLTIM(NUMDBL)                 ; TIME WHEN GAME SHOULD CLOSE
C     DBLSER(NUMDBL)                 ; LAST SERIAL NUMBER
C     DBLSAL(NUMTOT,NUMDBL)          ; TOTAL SALES (COUNT , AMOUNT)
C     DBLPAD(NUMDBL)                 ; PRIZES PAID + REFUNDS
C     DBLPRG(NUMDBL)                 ; PRIZES PURGED
C     DBLPRF(NUMDBL)                 ; PAID REFUNDS
C     DBLREF(NUMDBL)                 ; TOTAL REFUND AMOUNT
C     DBLERF(NUMDBL)                 ; EARLY REFUNDS PAID
C     DBLTER(NUMDBL)                 ; TOTAL EARLY REFUNDS (LIAB)
C     DBLWON(NUMDBL)                 ; PRIZES WON
C     DBLPOL(2,NUMDBL)               ; ROLL POOL
C     DBLTPL(NUMDBL)                 ; TOTAL PRIZE POOL
C     DBLTBK(NUMDBL)                 ; TOTAL BREAKAGE
C     DBLBRK(2,NUMDBL)		     ; WINNING ROUNDING POT
C     DBLABW(NUMDBL)                 ; AMOUNT BET ON WINNING SCORE
C     DBLODS(MAXDBLTI,NUMDBL)        ; WINNING ODDS
C     DBLWIN(2,MAXDBLTI,NUMDBL)      ; WINNING RESULTS
C     DBLHLD(2,MAXDBLTI,NUMDBL)      ; WINNING RESULTS HOLD
C     DBLTAX(NUMDBL)                 ; WINNING TAXES
C     DBLOTX(NUMTOT,NUMDBL)          ; OVER TAX LIMIT
C     DBLMID(NUMTOT,NUMDBL)          ; >REDMIN <REDMAX
C     DBLUTX(NUMTOT,NUMDBL)          ; UNDER TAX LIMIT
C     DBLHST(MAXDBLTI,NUMDBL)        ; HIGHEST WINNER PER WINING COMB
C     DBLORM(NUMTOT,NUMDBL)          ; OVER REDMAX
C     DBLENM(DBLENM_LEN/4,NUMDBL)    ; EVENT NAME
C     DBLDES(DBLDES_LEN/4,NUMDBL)    ; GAME DESCRIPTION
C     DBLNMS(DBLNMS_LEN/4,MAXDBLRW,NUMDBL)    ; ROW NAMES
C     DBLSTA(MAXDBLRW,NUMDBL)        ; ROW STATUS 1 THROUGH MAXTRW
C     DBLSBR(MAXDBLRW,NUMDBL)        ; SALES BY ROW TABLE
C     DBLREV(NUMDBL)                 ; REV #
C     DBLPFN(5,NUMDBL)               ; POOL FILE NAME
C     DBLRTM(MAXDBLRW,NUMDBL)        ; ROW CLOSE TIMES
C     DBLPRC(NUMDBL)                 ; BASE PRICE
C     DBLSPR(NUMDBL)                 ; POOL PERCENTAGE
C     DBLTVC(DBLTVC_LEN/4,NUMDBL)    ; TV-CHANEL NAME
C     DBLMDS(MAXMLTD_AVL,NUMDBL)     ; MULTI DRAW SELECTED TABLE
C                                      (52 BYTE / 4 = 13)
C     DBLRWS(NUMDBL)		     ; ACTUAL # OF ROWS USED.
C     DBLWCP(MAXDBLTI,NUMDBL)        ; # WINNING COUPONS PALYED.
C     DBLWBT(NUMTOT,MAXDBLTI,NUMDBL) ; CNT, AMT WINNING BETS PLAYED
C     DBLWRO(NUMTOT,2,NUMDBL)        ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     DBLWRA(NUMTOT,2,NUMDBL)        ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     DBLWPO(NUMTOT,2,NUMDBL)        ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     DBLWPA(NUMTOT,2,NUMDBL)        ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     DBLWPR(NUMTOT,2,NUMDBL)        ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; (1=PRWON,2=PRPAD)
C     DBLODT(MAXDBLRW*MAXDBLRW,NUMDBL) ; TABLE OF AMOUNT BET ON COMBINATIONS
C                                      ; USED FOR RESTORING ODDS
C     DBLPCC(NUMDBL)		     ; Partially Closed Combination
C                                    ; IF combination 17/18 is not allowed
C                                    ; to play then DDBPCC is set to 1,
C                                    ; otherwise it is 0. 
C     DBLCMB(NUMDBL)                 ; NUMBER OF WINNING COMBINATIONS
C     DBLLAT(NUMLAT,NUMDBL)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C     DBLFRS(94,NUMDBL)		     ; ACTUAL FREE SPACE
C
C     DBLFRE(CALCULATED)             ; FREE SPACE
C
C
C DOUBLE POOL ARRAYS
C
C     DBPOOL(MAXDBLRW*MAXDBLRW,VALDBL,TYPDBL,NUMDBL) ; POOL ODDS ARRAY
C     DBPSORT(2,MAXDBLRW*MAXDBLRW,NUMDBL)            ; POOL ODDS SORT ARRAY
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C
      INTEGER*4 DBLSTS_OFF, DBLWEK_OFF, DBLDAT_OFF, DBLDRW_OFF
      INTEGER*4 DBLBSD_OFF, DBLESD_OFF, DBLPUP_OFF, DBLUPD_OFF
      INTEGER*4 DBLCTM_OFF, DBLTIM_OFF, DBLSER_OFF, DBLSAL_OFF
      PARAMETER(DBLSTS_OFF=1)
      PARAMETER(DBLWEK_OFF=DBLSTS_OFF+NUMDBL)
      PARAMETER(DBLDAT_OFF=DBLWEK_OFF+NUMDBL)
      PARAMETER(DBLDRW_OFF=DBLDAT_OFF+NUMDBL)
      PARAMETER(DBLBSD_OFF=DBLDRW_OFF+NUMDBL)
      PARAMETER(DBLESD_OFF=DBLBSD_OFF+NUMDBL)
      PARAMETER(DBLPUP_OFF=DBLESD_OFF+NUMDBL)
      PARAMETER(DBLUPD_OFF=DBLPUP_OFF+NUMDBL)
      PARAMETER(DBLCTM_OFF=DBLUPD_OFF+NUMDBL)
      PARAMETER(DBLTIM_OFF=DBLCTM_OFF+NUMDBL)
      PARAMETER(DBLSER_OFF=DBLTIM_OFF+NUMDBL)
      PARAMETER(DBLSAL_OFF=DBLSER_OFF+NUMDBL)

      INTEGER*4 DBLPAD_OFF, DBLPRG_OFF, DBLPRF_OFF, DBLREF_OFF
      INTEGER*4 DBLERF_OFF, DBLTER_OFF, DBLWON_OFF, DBLPOL_OFF
      INTEGER*4 DBLTPL_OFF, DBLTBK_OFF, DBLBRK_OFF, DBLABW_OFF
      PARAMETER(DBLPAD_OFF=DBLSAL_OFF+NUMTOT*NUMDBL)
      PARAMETER(DBLPRG_OFF=DBLPAD_OFF+NUMDBL)
      PARAMETER(DBLPRF_OFF=DBLPRG_OFF+NUMDBL)
      PARAMETER(DBLREF_OFF=DBLPRF_OFF+NUMDBL)
      PARAMETER(DBLERF_OFF=DBLREF_OFF+NUMDBL)
      PARAMETER(DBLTER_OFF=DBLERF_OFF+NUMDBL)
      PARAMETER(DBLWON_OFF=DBLTER_OFF+NUMDBL)
      PARAMETER(DBLPOL_OFF=DBLWON_OFF+NUMDBL)
      PARAMETER(DBLTPL_OFF=DBLPOL_OFF+2*NUMDBL)
      PARAMETER(DBLTBK_OFF=DBLTPL_OFF+NUMDBL)
      PARAMETER(DBLBRK_OFF=DBLTBK_OFF+NUMDBL)
      PARAMETER(DBLABW_OFF=DBLBRK_OFF+2*NUMDBL)

      INTEGER*4 DBLODS_OFF, DBLWIN_OFF, DBLHLD_OFF
      INTEGER*4 DBLTAX_OFF, DBLOTX_OFF, DBLMID_OFF, DBLUTX_OFF 
      INTEGER*4 DBLHST_OFF, DBLORM_OFF, DBLENM_OFF, DBLDES_OFF 
      INTEGER*4 DBLNMS_OFF, DBLPRC_OFF
      PARAMETER(DBLODS_OFF=DBLABW_OFF+NUMDBL)
      PARAMETER(DBLWIN_OFF=DBLODS_OFF+MAXDBLTI*NUMDBL)
      PARAMETER(DBLHLD_OFF=DBLWIN_OFF+2*MAXDBLTI*NUMDBL)
      PARAMETER(DBLTAX_OFF=DBLHLD_OFF+2*MAXDBLTI*NUMDBL)
      PARAMETER(DBLOTX_OFF=DBLTAX_OFF+NUMDBL)
      PARAMETER(DBLMID_OFF=DBLOTX_OFF+NUMTOT*NUMDBL)
      PARAMETER(DBLUTX_OFF=DBLMID_OFF+NUMTOT*NUMDBL)
      PARAMETER(DBLHST_OFF=DBLUTX_OFF+NUMTOT*NUMDBL)
      PARAMETER(DBLORM_OFF=DBLHST_OFF+MAXDBLTI*NUMDBL)
      PARAMETER(DBLENM_OFF=DBLORM_OFF+NUMTOT*NUMDBL)
      PARAMETER(DBLDES_OFF=DBLENM_OFF + (DBLENM_LEN/4)*NUMDBL)
      PARAMETER(DBLNMS_OFF=DBLDES_OFF + (DBLDES_LEN/4)*NUMDBL)

      INTEGER*4 DBLSTA_OFF, DBLSBR_OFF, DBLREV_OFF, DBLPFN_OFF
      INTEGER*4 DBLRTM_OFF, DBLSPR_OFF, DBLTVC_OFF
      PARAMETER(DBLSTA_OFF=DBLNMS_OFF + 
     *			   ((DBLNMS_LEN/4)*MAXDBLRW*NUMDBL))
      PARAMETER(DBLSBR_OFF=DBLSTA_OFF+MAXDBLRW*NUMDBL)
      PARAMETER(DBLREV_OFF=DBLSBR_OFF+MAXDBLRW*NUMDBL)
      PARAMETER(DBLPFN_OFF=DBLREV_OFF+NUMDBL)
      PARAMETER(DBLRTM_OFF=DBLPFN_OFF+5*NUMDBL)
      PARAMETER(DBLPRC_OFF=DBLRTM_OFF+MAXDBLRW*NUMDBL)
      PARAMETER(DBLSPR_OFF=DBLPRC_OFF+NUMDBL)
      PARAMETER(DBLTVC_OFF=DBLSPR_OFF + NUMDBL)

      INTEGER*4 DBLMDS_OFF
      PARAMETER(DBLMDS_OFF = DBLTVC_OFF + (DBLTVC_LEN/4)*NUMDBL)

      INTEGER*4 DBLRWS_OFF, DBLWCP_OFF, DBLWBT_OFF
      PARAMETER(DBLRWS_OFF = DBLMDS_OFF + (MAXMLTD_AVL/4)*NUMDBL)
      PARAMETER(DBLWCP_OFF = DBLRWS_OFF + NUMDBL)
      PARAMETER(DBLWBT_OFF = DBLWCP_OFF + MAXDBLTI*NUMDBL)

      INTEGER*4 DBLWRO_OFF, DBLWRA_OFF, DBLWPO_OFF, DBLWPA_OFF
      INTEGER*4 DBLWPR_OFF, DBLODT_OFF
      PARAMETER(DBLWRO_OFF = DBLWBT_OFF + NUMTOT*MAXDBLTI*NUMDBL)
      PARAMETER(DBLWRA_OFF = DBLWRO_OFF + NUMTOT*2*NUMDBL)
      PARAMETER(DBLWPO_OFF = DBLWRA_OFF + NUMTOT*2*NUMDBL)
      PARAMETER(DBLWPA_OFF = DBLWPO_OFF + NUMTOT*2*NUMDBL)
      PARAMETER(DBLWPR_OFF = DBLWPA_OFF + NUMTOT*2*NUMDBL)
      PARAMETER(DBLODT_OFF = DBLWPR_OFF + NUMTOT*2*NUMDBL)

      INTEGER*4 DBLPCC_OFF
      PARAMETER(DBLPCC_OFF = DBLODT_OFF + MAXDBLRW*MAXDBLRW*NUMDBL)

      INTEGER*4 DBLCMB_OFF
      PARAMETER(DBLCMB_OFF = DBLPCC_OFF + NUMDBL)

      INTEGER*4 DBLLAT_OFF
      PARAMETER(DBLLAT_OFF = DBLCMB_OFF + NUMDBL)

      INTEGER*4 DBLFRS_OFF
      PARAMETER(DBLFRS_OFF = DBLLAT_OFF + NUMLAT*NUMDBL)

      INTEGER*4 DBLFRE_OFF
      PARAMETER(DBLFRE_OFF = DBLFRS_OFF + 94 * NUMDBL)

      INTEGER*4 DBLSEC_SIZE, DBLSEC_NUM, DBLLEN
      PARAMETER(DBLSEC_SIZE = 2048)
      PARAMETER(DBLSEC_NUM = NINT(FLOAT((DBLFRE_OFF-2)/
     *                       DBLSEC_SIZE)+.5))
      PARAMETER(DBLLEN = DBLSEC_SIZE * DBLSEC_NUM)

        COMMON /DBLCOM/
     *   DBLSTS(NUMDBL),
     *   DBLWEK(NUMDBL),
     *   DBLDAT(NUMDBL),
     *   DBLDRW(NUMDBL),
     *   DBLBSD(NUMDBL),
     *   DBLESD(NUMDBL),
     *   DBLPUP(NUMDBL),
     *   DBLUPD(NUMDBL),
     *   DBLCTM(NUMDBL),
     *   DBLTIM(NUMDBL),
     *   DBLSER(NUMDBL),
     *   DBLSAL(NUMTOT,NUMDBL),
     *   DBLPAD(NUMDBL),
     *   DBLPRG(NUMDBL),
     *   DBLPRF(NUMDBL),
     *   DBLREF(NUMDBL)
  
      COMMON /DBLCOM/
     *   DBLERF(NUMDBL),
     *   DBLTER(NUMDBL),
     *   DBLWON(NUMDBL),
     *   DBLPOL(2,NUMDBL),
     *   DBLTPL(NUMDBL),
     *   DBLTBK(NUMDBL),
     *   DBLBRK(2,NUMDBL),
     *   DBLABW(NUMDBL),
     *   DBLODS(MAXDBLTI,NUMDBL),
     *   DBLWIN(2,MAXDBLTI,NUMDBL),
     *   DBLHLD(2,MAXDBLTI,NUMDBL),
     *   DBLTAX(NUMDBL)

        COMMON /DBLCOM/
     *   DBLOTX(NUMTOT,NUMDBL),
     *   DBLMID(NUMTOT,NUMDBL),
     *   DBLUTX(NUMTOT,NUMDBL),
     *   DBLHST(MAXDBLTI,NUMDBL),
     *   DBLORM(NUMTOT,NUMDBL),
     *   DBLENM(DBLENM_LEN/4,NUMDBL),
     *   DBLDES(DBLDES_LEN/4,NUMDBL),
     *   DBLNMS(DBLNMS_LEN/4,MAXDBLRW,NUMDBL),
     *   DBLSTA(MAXDBLRW,NUMDBL),
     *   DBLSBR(MAXDBLRW,NUMDBL)

        COMMON /DBLCOM/
     *   DBLREV(NUMDBL),
     *   DBLPFN(5,NUMDBL),
     *   DBLRTM(MAXDBLRW,NUMDBL),
     *   DBLPRC(NUMDBL),
     *   DBLSPR(NUMDBL),
     *   DBLTVC(DBLTVC_LEN/4,NUMDBL),
     *   DBLMDS(MAXMLTD_AVL,NUMDBL)

       COMMON /DBLCOM/
     *   DBLRWS(NUMDBL),
     *   DBLWCP(MAXDBLTI,NUMDBL),
     *   DBLWBT(NUMTOT,MAXDBLTI,NUMDBL),
     *   DBLWRO(NUMTOT,2,NUMDBL),
     *   DBLWRA(NUMTOT,2,NUMDBL),
     *   DBLWPO(NUMTOT,2,NUMDBL),
     *   DBLWPA(NUMTOT,2,NUMDBL),
     *   DBLWPR(NUMTOT,2,NUMDBL),
     *   DBLODT(MAXDBLRW*MAXDBLRW,NUMDBL),
     *   DBLPCC(NUMDBL),
     *   DBLCMB(NUMDBL),
     *   DBLLAT(NUMLAT,NUMDBL),
     *   DBLFRS(94,NUMDBL),
     *   DBLFRE(DBLLEN - DBLFRE_OFF + 1)

        COMMON /DBLCOM/
     *   DBPOOL(MAXDBLRW*MAXDBLRW,VALDBL,TYPDBL,NUMDBL),
     *   DBPSORT(2,MAXDBLRW*MAXDBLRW,NUMDBL)

        INTEGER*4 DBLSTS,DBLWEK,DBLDAT,DBLBSD,DBLESD,DBLCTM,DBLTIM
        INTEGER*4 DBLSAL,DBLPAD,DBLPRG,DBLREF,DBLWON,DBLPOL,DBLTPL
        INTEGER*4 DBLTBK,DBLBRK,DBLABW,DBLODS,DBLWIN,DBLHLD,DBLTAX
        INTEGER*4 DBLOTX,DBLMID,DBLUTX,DBLHST,DBLORM,DBLENM
        INTEGER*4 DBLDES,DBLNMS,DBLREV,DBLFRE,DBLPUP,DBLUPD,DBLSTA
        INTEGER*4 DBLSBR,DBLPFN,DBLDRW,DBLRTM,DBLSER,DBLPRF,DBLERF
        INTEGER*4 DBLTER,DBLSPR,DBLPRC,DBLTVC,DBLPCC,DBLFRS,DBLCMB
	INTEGER*4 DBLLAT

        BYTE      DBLMDS

	INTEGER*4 DBLRWS,DBLWCP,DBLWBT
        INTEGER*4 DBLWRO,DBLWRA,DBLWPO,DBLWPA,DBLWPR,DBLODT

        INTEGER*4 DBPOOL,DBPSORT
        INTEGER*4 DBLPOOL_LEN, DBLPSEC_NUM
        PARAMETER (DBLPOOL_LEN = MAXDBLRW*MAXDBLRW*VALDBL*
     *                           TYPDBL*NUMDBL +
     *                           2*MAXDBLRW*MAXDBLRW*NUMDBL)
        PARAMETER (DBLPSEC_NUM = NINT(FLOAT((DBLPOOL_LEN-1)/
     *                          DBLSEC_SIZE)+.5))

C EQUIVALENCE FOR CHECKPOINT

        INTEGER*4 DBLCSB,DBLBLK
        PARAMETER(DBLCSB = DBLSEC_NUM + DBLPSEC_NUM) !NUMBER OF DBLCOM 2048 BLKS
        DIMENSION DBLBLK(2048,DBLCSB)
        EQUIVALENCE(DBLBLK(1,1),DBLSTS(1))

        VOLATILE /DBLCOM/

        INTEGER*4        FRST_DBLCOM(2)
        EQUIVALENCE     (FRST_DBLCOM, DBLBLK(1,1))
        INTEGER*4        LAST_DBLCOM
        EQUIVALENCE     (LAST_DBLCOM, DBLBLK(2048,DBLCSB))


