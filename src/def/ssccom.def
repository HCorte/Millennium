C SSCCOM.DEF
C
C V02 30-JUN-2000 UXN SSCLAT ADDED.
C V01 ??-???-???? RXK INITIAL RELEASE.
C
C SUPERSCORE GAME COMMON
C
C
C     SSCSTS(NUMSSC)                 ; GAME STATUS
C     SSCWEK(NUMSSC)                 ; WEEK NUMBER
C     SSCDAT(NUMSSC)                 ; DRAW DATE
C     SSCDRW(NUMSSC)                 ; DRAW NUMBER
C     SSCBSD(NUMSSC)                 ; BEGINNING SALES DATE
C     SSCESD(NUMSSC)                 ; ENDING SALES DATE
C     SSCPUP(NUMSSC)                 ; LAST PURGE UPDATE   (FILE ONLY)
C     SSCUPD(NUMSSC)                 ; LAST FILE UPDATE    (FILE ONLY)
C     SSCCTM(NUMSSC)                 ; ACTUAL TIME WHEN CLOSED
C     SSCTIM(NUMSSC)                 ; TIME WHEN GAME SHOULD CLOSE
C     SSCSER(NUMSSC)                 ; LAST SERIAL NUMBER
C     SSCSAL(NUMSSC)                 ; TOTAL SALES
C     SSCPAD(NUMSSC)                 ; PRIZES PAID + REFUNDS
C     SSCPRG(NUMSSC)                 ; PRIZES PURGED
C     SSCPRF(NUMSSC)                 ; PAID REFUNDS
C     SSCREF(NUMSSC)                 ; TOTAL REFUND AMOUNT
C     SSCWON(NUMSSC)                 ; PRIZES WON
C     SSCPOL(2,NUMSSC)               ; ROLL POOL
C     SSCTPL(NUMSSC)                 ; TOTAL PRIZE POOL
C     SSCTBK(NUMSSC)                 ; TOTAL BREAKAGE
C     SSCBRK(2,NUMSSC)               ; WINNING ROUNDING POT
C     SSCABW(NUMSSC)                 ; AMOUNT BET ON WINNING SCORE
C     SSCODS(NUMSSC)                 ; WINNING ODDS
C     SSCWIN(2,3,NUMSSC)             ; WINNING RESULTS
C     SSCHLD(2,3,NUMSSC)             ; WINNING RESULTS HOLD
C     SSCTAX(NUMSSC)                 ; WINNING TAXES
C     SSCOTX(NUMTOT,NUMSSC)          ; OVER TAX LIMIT
C     SSCMID(NUMTOT,NUMSSC)          ; >REDMIN <REDMAX
C     SSCUTX(NUMTOT,NUMSSC)          ; UNDER TAX LIMIT
C     SSCHST(NUMSSC)                 ; HIGHEST WINNER FOR THIS GAME
C     SSCORM(NUMTOT,NUMSSC)          ; OVER REDMAX
C     SSCMNM(SSNMS_LEN/4,NUMSSC)     ; MASTER EVENT NAME
C     SSCDES(SSDES_LEN/4,NUMSSC)     ; EVENT DESCRIPTION
C     SSCSNM(SSNMS_LEN/4,3,NUMSSC)   ; EVENT NAMES
C     SSCEST(3,NUMSSC)               ; EVENT STATUS'S
C     SSCREV(NUMSSC)                 ; REV #
C     SSCTYP(NUMSSC)                 ; GAME TYPE 1=SOC. 2=HOCK.
C     SSCPFN(5,NUMSSC)               ; POOL FILE NAME
C     SSCPOF(5,NUMSSC)               ; POOL OVERFLOW FILE NAME
C     SSCPRC(NUMSSC)                 ; BASE PRICE
C     SSCSPR(NUMSSC)                 ; POOL PERCENTAGE
C     SSCWRO(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     SSCWRA(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     SSCWPO(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     SSCWPA(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     SSCWPR(NUMTOT,2,NUMSSC)        ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; 1=PRIZES/REFUNDS WON  (PRWON)
C                                    ; 2=PRIZES/REFUNDS PAID (PRPAD)
C     SSCECD(3,NUMSSC)               ; EVENT CLOSE DATE
C     SSCECT(3,NUMSSC)               ; EVENT CLOSE TIME
C     SSCLAT(NUMLAT,NUMSSC)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C
C     SSCFRE(CALCULATED)             ; FREE SPACE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1997 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4 SSCSTS_OFF, SSCWEK_OFF, SSCDAT_OFF, SSCDRW_OFF
	INTEGER*4 SSCBSD_OFF, SSCESD_OFF, SSCPUP_OFF, SSCUPD_OFF
	INTEGER*4 SSCTIM_OFF, SSCCTM_OFF, SSCSER_OFF, SSCSAL_OFF
	PARAMETER(SSCSTS_OFF=1)
	PARAMETER(SSCWEK_OFF=SSCSTS_OFF+NUMSSC)
	PARAMETER(SSCDAT_OFF=SSCWEK_OFF+NUMSSC)
	PARAMETER(SSCDRW_OFF=SSCDAT_OFF+NUMSSC)
	PARAMETER(SSCBSD_OFF=SSCDRW_OFF+NUMSSC)
	PARAMETER(SSCESD_OFF=SSCBSD_OFF+NUMSSC)
	PARAMETER(SSCPUP_OFF=SSCESD_OFF+NUMSSC)
	PARAMETER(SSCUPD_OFF=SSCPUP_OFF+NUMSSC)
	PARAMETER(SSCCTM_OFF=SSCUPD_OFF+NUMSSC)
	PARAMETER(SSCTIM_OFF=SSCCTM_OFF+NUMSSC)
	PARAMETER(SSCSER_OFF=SSCTIM_OFF+NUMSSC)
	PARAMETER(SSCSAL_OFF=SSCSER_OFF+NUMSSC)
C
	INTEGER*4 SSCPAD_OFF, SSCPRG_OFF, SSCPRF_OFF, SSCREF_OFF
	INTEGER*4 SSCWON_OFF, SSCPOL_OFF, SSCTPL_OFF, SSCTBK_OFF
	INTEGER*4 SSCBRK_OFF, SSCABW_OFF, SSCODS_OFF, SSCWIN_OFF
	PARAMETER(SSCPAD_OFF = SSCSAL_OFF+NUMSSC)
	PARAMETER(SSCPRG_OFF = SSCPAD_OFF+NUMSSC)
	PARAMETER(SSCPRF_OFF = SSCPRG_OFF+NUMSSC)
	PARAMETER(SSCREF_OFF = SSCPRF_OFF+NUMSSC)
	PARAMETER(SSCWON_OFF = SSCREF_OFF+NUMSSC)
	PARAMETER(SSCPOL_OFF = SSCWON_OFF+NUMSSC)
	PARAMETER(SSCTPL_OFF = SSCPOL_OFF+(2*NUMSSC))
	PARAMETER(SSCTBK_OFF = SSCTPL_OFF+NUMSSC)
	PARAMETER(SSCBRK_OFF = SSCTBK_OFF+NUMSSC)
	PARAMETER(SSCABW_OFF = SSCBRK_OFF+(2*NUMSSC))
	PARAMETER(SSCODS_OFF = SSCABW_OFF+NUMSSC)
	PARAMETER(SSCWIN_OFF = SSCODS_OFF+NUMSSC)
C
	INTEGER*4 SSCHLD_OFF, SSCTAX_OFF, SSCOTX_OFF
	INTEGER*4 SSCMID_OFF, SSCUTX_OFF, SSCHST_OFF, SSCORM_OFF
	INTEGER*4 SSCMNM_OFF, SSCSNM_OFF, SSCREV_OFF, SSCTYP_OFF
	INTEGER*4 SSCDES_OFF, SSCEST_OFF
	PARAMETER(SSCHLD_OFF = SSCWIN_OFF+(6*NUMSSC))
	PARAMETER(SSCTAX_OFF = SSCHLD_OFF+(6*NUMSSC))
	PARAMETER(SSCOTX_OFF = SSCTAX_OFF+NUMSSC)
	PARAMETER(SSCMID_OFF = SSCOTX_OFF+(NUMTOT*NUMSSC))
	PARAMETER(SSCUTX_OFF = SSCMID_OFF+(NUMTOT*NUMSSC))
	PARAMETER(SSCHST_OFF = SSCUTX_OFF+(NUMTOT*NUMSSC))
	PARAMETER(SSCORM_OFF = SSCHST_OFF+NUMSSC)
	PARAMETER(SSCMNM_OFF = SSCORM_OFF+(NUMTOT*NUMSSC))
	PARAMETER(SSCDES_OFF = SSCMNM_OFF+(SSNMS_LEN/4)*NUMSSC)
	PARAMETER(SSCSNM_OFF = SSCDES_OFF+(SSDES_LEN/4)*NUMSSC)
	PARAMETER(SSCEST_OFF = SSCSNM_OFF+(SSNMS_LEN/4)*3*NUMSSC)
	PARAMETER(SSCREV_OFF = SSCEST_OFF+3*NUMSSC)
	PARAMETER(SSCTYP_OFF = SSCREV_OFF+NUMSSC)
C
	INTEGER*4 SSCPFN_OFF, SSCPRC_OFF, SSCSPR_OFF, SSCPOF_OFF
	PARAMETER(SSCPFN_OFF = SSCTYP_OFF+NUMSSC)
	PARAMETER(SSCPOF_OFF = SSCPFN_OFF+(5*NUMSSC))
	PARAMETER(SSCPRC_OFF = SSCPOF_OFF+(5*NUMSSC))
	PARAMETER(SSCSPR_OFF = SSCPRC_OFF+NUMSSC)
C
        INTEGER*4 SSCWRO_OFF, SSCWRA_OFF, SSCWPO_OFF, SSCWPA_OFF
        INTEGER*4 SSCWPR_OFF, SSCECD_OFF, SSCECT_OFF
        PARAMETER(SSCWRO_OFF = SSCSPR_OFF+NUMSSC)
        PARAMETER(SSCWRA_OFF = SSCWRO_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(SSCWPO_OFF = SSCWRA_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(SSCWPA_OFF = SSCWPO_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(SSCWPR_OFF = SSCWPA_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(SSCECD_OFF = SSCWPR_OFF + NUMTOT*2*NUMSSC)
        PARAMETER(SSCECT_OFF = SSCECD_OFF + 3*NUMSSC)
	INTEGER*4 SSCLAT_OFF
	PARAMETER(SSCLAT_OFF = SSCECT_OFF + 3*NUMSSC)

	INTEGER*4 SSCFRE_OFF
	PARAMETER(SSCFRE_OFF = SSCLAT_OFF + NUMLAT*NUMSSC)
C
        INTEGER*4 SSCSEC_SIZE, SSCSEC_NUM, SSCLEN
        PARAMETER(SSCSEC_SIZE = 2048)
        PARAMETER(SSCSEC_NUM = NINT(FLOAT((SSCFRE_OFF-2)/
     *                         SSCSEC_SIZE)+.5))
        PARAMETER(SSCLEN = SSCSEC_SIZE * SSCSEC_NUM)

	COMMON /SSCCOM/
     *	 SSCSTS(NUMSSC),
     *	 SSCWEK(NUMSSC),
     *	 SSCDAT(NUMSSC),
     *	 SSCDRW(NUMSSC),
     *	 SSCBSD(NUMSSC),
     *	 SSCESD(NUMSSC),
     *	 SSCPUP(NUMSSC),
     *	 SSCUPD(NUMSSC),
     *	 SSCCTM(NUMSSC),
     *	 SSCTIM(NUMSSC),
     *	 SSCSER(NUMSSC),
     *	 SSCSAL(NUMSSC),
     *	 SSCPAD(NUMSSC),
     *	 SSCPRG(NUMSSC),
     *	 SSCPRF(NUMSSC),
     *	 SSCREF(NUMSSC)
	COMMON /SSCCOM/
     *	 SSCWON(NUMSSC),
     *	 SSCPOL(2,NUMSSC),
     *	 SSCTPL(NUMSSC),
     *	 SSCTBK(NUMSSC),
     *	 SSCBRK(2,NUMSSC),
     *	 SSCABW(NUMSSC),
     *	 SSCODS(NUMSSC),
     *	 SSCWIN(2,3,NUMSSC),
     *	 SSCHLD(2,3,NUMSSC),
     *	 SSCTAX(NUMSSC)
	COMMON /SSCCOM/
     *	 SSCOTX(NUMTOT,NUMSSC),
     *	 SSCMID(NUMTOT,NUMSSC),
     *	 SSCUTX(NUMTOT,NUMSSC),
     *	 SSCHST(NUMSSC),
     *	 SSCORM(NUMTOT,NUMSSC),
     *	 SSCMNM(SSNMS_LEN/4,NUMSSC),
     *	 SSCDES(SSDES_LEN/4,NUMSSC),
     *	 SSCSNM(SSNMS_LEN/4,3,NUMSSC)
	COMMON /SSCCOM/
     *	 SSCEST(3,NUMSSC),
     *	 SSCREV(NUMSSC),
     *	 SSCTYP(NUMSSC),
     *	 SSCPFN(5,NUMSSC),
     *	 SSCPOF(5,NUMSSC),
     *   SSCPRC(NUMSSC),
     *   SSCSPR(NUMSSC)
       COMMON /SSCCOM/
     *   SSCWRO(NUMTOT,2,NUMSSC),
     *   SSCWRA(NUMTOT,2,NUMSSC),
     *   SSCWPO(NUMTOT,2,NUMSSC),
     *   SSCWPA(NUMTOT,2,NUMSSC),
     *   SSCWPR(NUMTOT,2,NUMSSC),
     *   SSCECD(3,NUMSSC),
     *   SSCECT(3,NUMSSC),
     *   SSCLAT(NUMLAT,NUMSSC),
     *	 SSCFRE(SSCLEN - SSCFRE_OFF + 1)
C
	INTEGER*4 SSCSTS,SSCWEK,SSCDAT,SSCBSD,SSCESD,SSCCTM,SSCTIM
	INTEGER*4 SSCSAL,SSCPAD,SSCPRG,SSCREF,SSCWON,SSCPOL,SSCTPL
	INTEGER*4 SSCTBK,SSCBRK,SSCABW,SSCODS,SSCWIN,SSCHLD,SSCTAX
	INTEGER*4 SSCOTX,SSCMID,SSCUTX,SSCHST,SSCORM,SSCMNM,SSCSNM
	INTEGER*4 SSCREV,SSCTYP,SSCFRE,SSCPUP,SSCUPD,SSCPFN,SSCDRW
	INTEGER*4 SSCSER,SSCPRF,SSCPRC,SSCSPR,SSCDES,SSCPOF,SSCEST
        INTEGER*4 SSCWRO,SSCWRA,SSCWPO,SSCWPA,SSCWPR,SSCECD,SSCECT
	INTEGER*4 SSCLAT
C
C
C EQUIVALENCE FOR CHECKPOINT
C
	INTEGER*4 SSCBLK,SSCCSB
	PARAMETER(SSCCSB = SSCSEC_NUM)   
	DIMENSION SSCBLK(2048,SSCCSB)
	EQUIVALENCE(SSCBLK(1,1),SSCSTS(1))
C
	VOLATILE /SSCCOM/
C
        INTEGER*4        FRST_SSCCOM(2)
        EQUIVALENCE     (FRST_SSCCOM, SSCBLK(1,1))
        INTEGER*4        LAST_SSCCOM
        EQUIVALENCE     (LAST_SSCCOM, SSCBLK(2048,SSCCSB))

