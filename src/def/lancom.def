C LANCOM.DEF
C
C V08 07-FEB-2011 RXK TRAP_DATA,WRITE_DATA ADDED TO COMMON.
C V07 13-JUN-2000 OXK LANREAD moved to GOREAD.FOR & READCONF.FOR
C V06 28-FEB-1996 wsm Made LANBNUM=300 for Finland.
C V05 12-DEC-1994 DAS Integrate UK changes into X2X Baseline
C V04 20-oct-1994 GPR MAKE MAXWRITE EQUAL LANBNUM, BUMP UP LANBNUM
C V03 28-JUN-1994 XXX CHANGED MAXWRITE AND LANBNUM FOR LANPRO
C V02 30-MAR-1992 DAS ADDED READTIM(MAXLAN,MAXSAP) / PREADTIM FOR TIMER TRAP
C V01 26-NOV-1990 MRM RELEASED FOR VAX
C
C  LANCOM.DEF DEFINES THE DATA STRUCTURES AND PARAMETERS USED IN THE
C  ETHERNET-LAN ACCESS SUBSYSTEM.
C  CURRENTLY THE SUBSYSTEM IMPLEMENTS 802.2 MODE=1 IEEE LIKE PROTOCOL
C  (OR AT LEAST IS VERY CLOSE TO IT). THERE ARE NO PROVISIONS IN THE SYSTEM
C  FOR A SLIDING WINDOW AND PIGGYBACK ACKNOWLEDGEMENTS. THE BUFFER LAYOUT
C  CONFORMS TO THE IEEE 802 STANDARS AND MODE=2 MAY BE IMPLEMENTED
C  IN THE FUTURE.
C  SYSTEM MAINTAINS SAP-TO-SAP CONNECTION STATUS AND ITS OWN
C  STATION STATUS
C
C SIZE PARAMETERS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4 MAXREAD	     !V04
	INTEGER*4 MAXSTA, MAXLAN, MAXLUN, MAXSAP
	PARAMETER(MAXREAD=10)	     !MAX NUMBER OF OUTSTANDING READS
	PARAMETER(MAXSTA=10)         !MAX NUMBER OF STATIONS IN CONFIGURATION
	PARAMETER(MAXLAN=2)          !MAX NUMBER OF ETHERNETS IN CONFIGURATION
	PARAMETER(MAXLUN=MAXLAN*2)   !MAX NUMBER OF LOGICAL UNITS (2 PER LAN)
	PARAMETER(MAXSAP=64)         !MAX NUMBER OF SERVICE ACCESS POINTS (LAN)
C                                  ;SAP =0 -> LOCAL DLL
C                                  ;NO CONNECTION LOGIC FOR SAP=0
C                                  ;SAP=0 WILL ACCEPT DATA ANY TIME
C     MAXSAP IS USED               ;MAXSAP HAS TO BE GE 2 !!!!
C     IN LIMTAB!!!!!               ;AND LE 127
C
	INTEGER*4 MAXCON
	PARAMETER(MAXCON=(MAXSAP*MAXSAP-MAXSAP)/2) !((1+X)/2)*X , X=MAX-1
C                                                ;NUMBER OF DIFF CONNECTIONS
C                                                ;CON(1,2)=CON(2,1)=1 !!!!!
	INTEGER*4 LANBLEN, LANBTOT, LANDRVHD, ETHLENMX, ETHLENMF
	INTEGER*4 ETHLENDT, ETHMINDT, ETHLENMN, LANBNUM, NUMEXTRA
	INTEGER*4 LANMAXTSK
	PARAMETER(LANBLEN=500)          !BUFFER LENGTH IN FWORDS
	PARAMETER(LANBTOT=(LANBLEN+2)*4)!BUF TOTAL LEN IN BYTES (-1,0,1..400)
	PARAMETER(LANDRVHD=8)           !DRIVER HEADER (LINK + LENGTHS)
	PARAMETER(ETHLENMX=1518)        !MAX ETHR LENGTH IN BYTES (DA->FCS)
	PARAMETER(ETHLENMF=1514)        !MAX WRITE FRAME LEN (W/O FCS)
	PARAMETER(ETHLENDT=1497)        !MAX LENGTH OF INFO FIELD
	PARAMETER(ETHMINDT=23)          !MIN DATA FIELD LENGTH
	PARAMETER(ETHLENMN=64)          !MIN ETHR FRAME LENGTH BYTES W/O FCS
	PARAMETER(LANBNUM=300)          !TOTAL NUMBER OF BUFFERS	! V04
	PARAMETER(NUMEXTRA=7)		!EXTRA BUFFERS
	PARAMETER(LANMAXTSK=4)          !NUMBER OF APPL TASKS

	INTEGER*4 MAXWRITE		!V04
	PARAMETER(MAXWRITE=LANBNUM)	!MAX NUMBER OF WRITES	! V06
C
C VARIABLE PARAMETERS
C
	INTEGER*4 NUMLAN             !CURRENTLY, HOW MANY ETHERNETS
	INTEGER*4 NUMSAP             !HOW MANY SERVICE ACCESS POINTS (SIGNEDUP)
	INTEGER*4 QUESAP(0:MAXSAP)   !STATION'S SAPS LISTED (OFFSET GIVES QUEUE)
C                                  ;IF ZERO -> NOT IN THIS STATION
C                                  ;QUESAP(MYAPPSAP)=MYQUE
C
C DATA STRUCTURES
C
	INTEGER*4 LANBUF(-1:LANBLEN,LANBNUM)        ! BUFFERS
	INTEGER*2 HLANBUF(-3:2*LANBLEN,LANBNUM)     !     HWORDS
	BYTE        BLANBUF(-7:4*LANBLEN,LANBNUM)   !     BYTES
	CHARACTER*1 CLANBUF(-7:4*LANBLEN,LANBNUM)   !     CHARS
	CHARACTER*4 C4LANBUF(-1:LANBLEN,LANBNUM)
	EQUIVALENCE(LANBUF,HLANBUF,BLANBUF,CLANBUF,C4LANBUF) ! ALL SAME THING
C
C     FIRST 8 BYTES OF A BUFFER IS RESERVED FOR THE DRIVER.
C     OFFSETS FOLLOW:
C
	INTEGER*4 DABEG, DAEND, SABEG, SAEND, TYPEBEG, TYPEEND
	INTEGER*4 MACHDLEN, DSAPBEG, DSAPEND, SSAPBEG, SSAPEND
	PARAMETER(DABEG=1)                    !BEGINNING OF DEST ADDR
	PARAMETER(DAEND=6)                    !END OF DEST ADDR
	PARAMETER(SABEG=7)                    !BEGINNING OF SOURCE ADDR
	PARAMETER(SAEND=12)                   !END OF SOURCE ADDR
	PARAMETER(TYPEBEG=13)                 !TYPE/LENGTN BEGINNING ;LEN OF
	PARAMETER(TYPEEND=14)                 !TYPE/LENGTH END       ;DATA FLD!
	PARAMETER(MACHDLEN=(DAEND-DABEG+1) +
     1	                   (SAEND-SABEG+1) +
     2	                   (TYPEEND-TYPEBEG+1))   !MAC HEADER LENGTH
C
	PARAMETER(DSAPBEG=15)                 !DSAP BEGINNING
	PARAMETER(DSAPEND=15)                 !DSAP END
	PARAMETER(SSAPBEG=16)                 !SSAP BEGINNIHG
	PARAMETER(SSAPEND=16)                 !SSAP END
C
	INTEGER*4 CTRLBEG, CTRLEND, FRTYPBEG, FRTYPEND
	INTEGER*4 TLANBEG, TLANEND, DLLHDLEN
	PARAMETER(CTRLBEG=17)                 !CONTROL BEG
	PARAMETER(CTRLEND=17)                 !CONTROL END
	PARAMETER(FRTYPBEG=18)                !FRAME TYPE BEGINNING
	PARAMETER(FRTYPEND=18)                !FRAME TYPE END
	PARAMETER(TLANBEG=19)                 !THIS LAN BEG
	PARAMETER(TLANEND=19)                 !THIS LAN END
C
	PARAMETER(DLLHDLEN=(DSAPEND-DSAPBEG+1) +
     1	                   (SSAPEND-SSAPBEG+1) +
     2	                   (CTRLEND-CTRLBEG+1) +
     3	                 (FRTYPEND-FRTYPBEG+1) +
     4	                   (TLANEND-TLANBEG+1)   )!DLL HEADER LENGTH IN BYTES
C
	INTEGER*4 HDRTOT, DLLHDALL
	PARAMETER(HDRTOT=((MACHDLEN+DLLHDLEN+3)/4)*4) !TOT HEADER (B)
	PARAMETER(DLLHDALL=HDRTOT-MACHDLEN)   !LAYER 2 HDR LEN +FILLER
C
	INTEGER*4 LANDATAF, LANDATAH, LANDATAB
	PARAMETER(LANDATAF=HDRTOT/4+1)        !BEGINNING OF DATA (INT *4)
	PARAMETER(LANDATAH=HDRTOT/2+1)        !BEGINNING OF DATA (INT *2)
	PARAMETER(LANDATAB=HDRTOT+1)          !BEGINNING OF DATA (LOG *1)
C
	INTEGER*4 LANBTYP, LTYPDATA, LTYPCMD
	PARAMETER(LANBTYP=LANBLEN)            !BUFFER TYPE
	        PARAMETER(LTYPDATA=1)              !   DATA TO GO OUT
	        PARAMETER(LTYPCMD=2)               !   CMD TO/FROM LANPRO
C
	INTEGER*4 LANDLEN, LANDORG, LANDDES
	PARAMETER(LANDLEN=LANBLEN-1)          !WHEN RECEIVED DATA LEN
	PARAMETER(LANDORG=LANBLEN-2)          !FROM WHOM..?
	PARAMETER(LANDDES=LANBLEN-3)          !FOR WHOM..?
C
	INTEGER*4 LANOWN, OWNFREE, OWNFDONE, OWNEXEC, OWNFEXEC
	INTEGER*4 OWNWRITE, OWNAPPL, OWNFAPPL, OWNFFREE
	INTEGER*4 OWNFX, OWNFRAP, OWNFFRAP
	PARAMETER(LANOWN=LANBLEN-4)           !OWNER
	   PARAMETER(OWNFREE=0)               !ON THE FREE LIST
	   PARAMETER(OWNFDONE=1)              !TAKEN FROM DONE (R OR W)
	   PARAMETER(OWNEXEC=2)               !ON THE EXEC LIST
	   PARAMETER(OWNFEXEC=3)              !TAKEN FROM EXEC LIST
	   PARAMETER(OWNWRITE=4)              !ON THE WRITE LIST
	   PARAMETER(OWNAPPL=5)               !ON THE APPL LIST
	   PARAMETER(OWNFAPPL=6)              !TAKEN FROM THE APPL LIST
	   PARAMETER(OWNFFREE=7)              !TAKEN FROM THE FREE
	   PARAMETER(OWNFX=8)                 !TAKEN FROM X LIST
	   PARAMETER(OWNFRAP=9)               !ON FRAP QUE
	   PARAMETER(OWNFFRAP=10)             !FROM FRAP QUE
C
	INTEGER*4 LANLIST, LISTFREE, LISTXTRA
	PARAMETER(LANLIST=LANBLEN-5)          !BUFFER'S DESIGNATED FREE LIST
	   PARAMETER(LISTFREE=0)              !BELONGS TO FREE LIST
	   PARAMETER(LISTXTRA=-1)             !BELONGS TO XTRA LIST
C        IF GT 0  AND = QUE                 ;BELONGS TO FRAP(QUE) LIST
C
	INTEGER*4  LANTIME, LAN_SAP_DEF_STATE, LAN_SAP_ACT_STATE
	INTEGER*4  LAN_SAP_DEF_STATUS, LAN_SAP_ACT_STATUS
	PARAMETER (LANTIME=LANBLEN-6)            !CURRENT TIME (TRACE)
	PARAMETER (LAN_SAP_DEF_STATE=LANBLEN-7)  !SAP_DEF_STATE (TRACE)
	PARAMETER (LAN_SAP_ACT_STATE=LANBLEN-8)  !SAP_ACT_STATE (TRACE)
	PARAMETER (LAN_SAP_DEF_STATUS=LANBLEN-9) !SAP_DEF_STATUS(TRACE)
	PARAMETER (LAN_SAP_ACT_STATUS=LANBLEN-10)!SAP_ACT_STATUS(TRACE)
C
C LANDATAF   = COMMAND:
C
	        INTEGER*4 CCONREQ, CDISREQ, CCONNIND, CDISIND
	        INTEGER*4 CACTETH, CDISETH, COPEN, CCLOSE
	        INTEGER*4 CACTSTA, CDISSTA, CGOLAN, CSTOPLAN
	        PARAMETER(CCONREQ=1)           !       ACTIVATE CONNECTION
	        PARAMETER(CDISREQ=2)           !       DISACTIVATE CONNECTION
	        PARAMETER(CCONNIND=3)          !       ACTIVATE CONNECTION IND
	        PARAMETER(CDISIND=4)           !       DISACTIVATE CONNECTION IN
	        PARAMETER(CACTETH=5)           !       ACTIVATE ETHR ON/OFF
	        PARAMETER(CDISETH=6)           !       DISACTIVATE ETHR  ON/OFF
	        PARAMETER(COPEN=7)             !       OPEN SAP FOR HERE
	        PARAMETER(CCLOSE=8)            !       CLOSE SAP FOR HERE
	        PARAMETER(CACTSTA=9)           !       ACTIVATE STATION
	        PARAMETER(CDISSTA=10)          !       DISACTIVATE STATION
	        PARAMETER(CGOLAN=11)           !       ACTIVATE LAN RUN/STOP
	        PARAMETER(CSTOPLAN=12)         !       DISACTIVATE LAN RUN/STOP
C
C LANDATAF+1 = REPLY CODE :
C
	        INTEGER*4 CCOMMAND, CREPLYOK, CREPLYBAD
	        PARAMETER(CCOMMAND=1)          ! THIS IS A COMMAND
	        PARAMETER(CREPLYOK=0)          ! THIS IS AN OK REPLY
	        PARAMETER(CREPLYBAD=-1)        ! THIS IS A BAD RESPONSE
C
C TIMER PARAMETERS
C
	INTEGER*4 PTIMTICK, PTIMSTATS, PREADTIMR
          PARAMETER(PTIMTICK=1)                 !TIMER TICK 
	  PARAMETER(PTIMSTATS=2)                !DO STATISTICS
          PARAMETER(PREADTIMR=3)                !POST A READ 
C
C QUEUES
C
	INTEGER*4 LANFREE(LANBNUM+QHEDSZ)          !FREE BUFFER LIST
	INTEGER*4 LANFRAP(LANBNUM+QHEDSZ,0:LANMAXTSK)!APL FREE LISTS
	INTEGER*4 LANEXTRA(LANBNUM+QHEDSZ)         !EXTRA FREE BUFFER LIST
	INTEGER*4 LANWRITE(LANBNUM+QHEDSZ,MAXLAN)  !WRITE BUFEFR LIST
	INTEGER*4 LANDONER(LANBNUM+QHEDSZ,MAXLAN)  !DONE BUFFER LIST FOR READ
	INTEGER*4 LANDONEW(LANBNUM+QHEDSZ,MAXLAN)  !DONE BUFFER LIST FOR WRITE
	INTEGER*4 LANEXEC(LANBNUM+QHEDSZ)          !LANPRO EXEC LIST
	INTEGER*4 LANAPP(LANBNUM+QHEDSZ,0:LANMAXTSK)!IN-QUEUES FOR APP TASKS, 0=MAC
	REAL*8    LANTASKS(0:LANMAXTSK)       !ALL APPL TASKS
C                                             !0=DLL
	INTEGER*4 LANTRPTSK(0:LANMAXTSK)      !TO GIVE OR NOT TO GIVE A TRAP
	   INTEGER*4  TRAPNO, TRAPYES
	   PARAMETER (TRAPNO=0)               !NO TRAP
	   PARAMETER (TRAPYES=1)              !TRAP
C
	INTEGER*4 LANLADDR(MAXLAN)            !LOAD/NO LAOD ADDR FLAG
	   INTEGER*4  LADDRNO, LADDRYES
	   PARAMETER (LADDRNO=0)              !DONT LOAD ADDRESS
	   PARAMETER (LADDRYES=1)             !LOAD ADDR
C
	INTEGER*4 LANPOOL(0:LANMAXTSK)        !PRESET SIZES OF FRAP QUEUES
C
	INTEGER*4 THISSTA                     !STATION'S STATUS
	   INTEGER*4 STADOWN, STAUP
	   PARAMETER(STADOWN=0)               !STATION DOWN
	   PARAMETER(STAUP=1)                 !STATION UP
C
	INTEGER*4 CURLAN(0:MAXCON)            !CURRENT ETHER NUMBER BY CONNECTIO
C
	INTEGER*4 LANCONN(0:MAXCON)           !CONNECTION STATUS
C                                           ;(FROMSAP,TOSAP)=CONN NUMBER
C                                           ;LANCONN(CONN)=STATE
	INTEGER*4 LANSAPSTS(0:MAXSAP)         !SAP STATUS
	   INTEGER*4 SAPDOWN, SAPUP, SAPQSCED
	   PARAMETER(SAPDOWN=0)               !   SAP NOT OPENED YET
	   PARAMETER(SAPUP=1)                 !   SAP WAS OPENED
	   PARAMETER(SAPQSCED=2)              !   SAP QUIESCED
C
C TRANSALATION TABLE FOR CONNECTIONS
C
	INTEGER*4 CONNECTION(0:MAXSAP,0:MAXSAP)!GIVES CONNECTION NUMBER
C                                           ;STATIC !!!
C                                           ;SIMPLE TRANSLATION TABLE
C STATES  OF THE CONNECTIONS
C
	INTEGER*4 CSAPCLO, CSAPFPENG, CSAPCPENG, CSAPOPN
	INTEGER*4 CSAPIDLE, CSAPDPENG
	PARAMETER(CSAPCLO=1)                   !CONNECTION TO SAP CLOSED
	PARAMETER(CSAPFPENG=2)                 !FIND ADDRESS PENDING
	PARAMETER(CSAPCPENG=3)                 !CONNECTION PENDING
	PARAMETER(CSAPOPN=4)                   !CONNECTION TO SAP OPENED
	PARAMETER(CSAPIDLE=5)                  !CONNECTION IDLE
	PARAMETER(CSAPDPENG=6)                 !DISCONNECT PENDING
C
	INTEGER*4 MAXSTATE
	PARAMETER(MAXSTATE=6)                  !NUMBER OF STATES
C
C EVENTS  CHANGING CONNECTIONS STATES
C
	INTEGER*4 EVNCREQ, EVNCIND, EVNCCONF, EVNDREQ, EVNDIND
	INTEGER*4 EVNDCONF, EVNFIND, EVNFCONF, EVNTOUT, EVNDTAIND
	INTEGER*4 EVNTICK, EVNCLEAR, EVNPIND, EVNPCONF, EVNDTAREQ
	INTEGER*4 EVNDOVF
	PARAMETER(EVNCREQ=1)              !CONNECT REQUEST (NET/APP -> DLL)
	PARAMETER(EVNCIND=2)              !CONNECT INDICATION ARRIVED
	PARAMETER(EVNCCONF=3)             !CONNECT CONFIRMATION ARRIVED
	PARAMETER(EVNDREQ=4)              !DISCON REQUEST
	PARAMETER(EVNDIND=5)              !DIS INDICATION ARRIVED
	PARAMETER(EVNDCONF=6)             !DIS CONFIRMATION ARRIVED
	PARAMETER(EVNFIND=7)              !FIND INDICATION ARRIVED
	PARAMETER(EVNFCONF=8)             !FIND RESPONSE ARRIVED
	PARAMETER(EVNTOUT=9)              !TIMEOUT TYPE 1 (NO TRAFIC)
C                                       ;        TYPE 2 (NO RESPONSE)
	PARAMETER(EVNDTAIND=10)           !NORMAL TRAFIC
	PARAMETER(EVNTICK=11)             !CLOCK TICK
	PARAMETER(EVNCLEAR=12)            !CLEAR ARRIVED
	PARAMETER(EVNPIND=13)             !POLL ARRIVED
	PARAMETER(EVNPCONF=14)            !POLL ACKED
	PARAMETER(EVNDTAREQ=15)           !DATA REQUEST
	PARAMETER(EVNDOVF=16)             !DATA OVERFLOW
C
	INTEGER*4 MAXEVENT
	PARAMETER(MAXEVENT=16)            !NUMBER OF EVENTS
C
C IF YOU CHANGE THIS PARAMETER YOU HAVE TO MODIFY ALSO:
C LIMTAB.DEF AND LOCTABLE.DEF
C
C CONENCTION STATE TABLE
C
	INTEGER*4 LANSTATES(MAXEVENT,MAXSTATE)  !ENTRY GIVES NEXT STATE
C                                             ;NEWSATE=LANSTATES(EVENT,OLD)
C
	INTEGER*4 LANTARR(0:MAXCON)             !TIME OF LAST BUFF (ANY) ARRIVAL
	INTEGER*4 LANTOUT(0:MAXCON)             !TIMEOUT TABLE (0 = DO NOTHING)
	INTEGER*4 LANTIMER                      !TIME
	INTEGER*4 LANSTEP                     !GRANUALITY OF TIME
	INTEGER*4 LANDEL1                     !IF THAT MUCH DELAYED SEND POLL
	INTEGER*4 LANDEL2                     !IF THAT MUCH DELAYED CHANGE LAN
CV07        INTEGER*4 LANREAD                     !LAN BUFS EXHAUSTED,TRY AGAIN
C
	LOGICAL*1 LANDEV(8,2,MAXLAN)          !DEVICE MNEMONICS FOR R/W ALL LANS
	CHARACTER*1 CLANDEV(8,2,MAXLAN)       !CHARS
	INTEGER*4 FLANDEV(2,2,MAXLAN)
	EQUIVALENCE(LANDEV,CLANDEV,FLANDEV)
C
	LOGICAL*1 LANADR(8,MAXLAN,0:MAXSAP)   !HOME ADDR OF ALL SAPS
	CHARACTER*1 CLANADR(8,MAXLAN,0:MAXSAP)!CHARS
	INTEGER*4 FLANADR(2,MAXLAN,0:MAXSAP)
	EQUIVALENCE(CLANADR,LANADR,FLANADR)   !THEY WILL COME IN FIND RESPONSES
C                                           ;THEN SET LANLAN(SSAP,LAN)=LANUP
C
	LOGICAL*1 LANHOME(8,MAXLAN)           !LOCAL ADDRESSES (STATION! NOT SAP
	CHARACTER*1 CLANHOME(8,MAXLAN)        !CHARS
	INTEGER*4 FLANHOME(2,MAXLAN)
	EQUIVALENCE(LANHOME,CLANHOME,FLANHOME)!OUR ADDRESSES
C
	INTEGER*4 LANLAN(0:MAXSAP,MAXLAN)     !REMOTE ETHER STATUS
C
	INTEGER*4 LOCLAN(0:MAXSAP,MAXLAN)     !LOCAL ETHER STATUS
C
	   INTEGER*4 LANDOWN, LANUP
	   PARAMETER(LANDOWN=0)               !LAN DOWN
	   PARAMETER(LANUP=1)                 !LAN UP
C
	INTEGER*4 LANMODE(0:MAXSAP)             !SAP MODE
	    INTEGER*4 LANMPRI, LANMBKP, LANMSPR
	    PARAMETER(LANMPRI=1)                 !PRIMARY
	    PARAMETER(LANMBKP=2)                 !BACKUP
	    PARAMETER(LANMSPR=3)                 !SPARE
C
	INTEGER*4 LANTYPE(0:MAXSAP)             !STATION APPL TYPE
	    INTEGER*4 LANTBEND, LANTFEND, LANTAUXL
	    PARAMETER(LANTBEND=1)                    !BACKEND
	    PARAMETER(LANTFEND=2)                    !FRONTEND
	    PARAMETER(LANTAUXL=3)                    !AUX
C
C FRAME TYPES
C
	INTEGER*4 FRFREQ, FRFCONF, FRCREQ, FRCCONF, FRDREQ
	INTEGER*4 FRDCONF, FRCLEAR, FRDATA, FRPREQ, FRPCONF
	PARAMETER(FRFREQ=1)                   !FIND SAP REQUEST
	PARAMETER(FRFCONF=2)                  !RESPONSE FOR FIND
	PARAMETER(FRCREQ=3)                   !CONNECT REQUSET
	PARAMETER(FRCCONF=4)                  !RESPONSE FOR CONNECT (CONFIRM)
	PARAMETER(FRDREQ=5)                   !DISCONNECT REQUEST
	PARAMETER(FRDCONF=6)                  !RESPONSE FOR DISCONN (CONFIRM)
	PARAMETER(FRCLEAR=7)                  !CANT DO IT
	PARAMETER(FRDATA=8)                   !INFORMATION
	PARAMETER(FRPREQ=9)                   !POLL IND
	PARAMETER(FRPCONF=10)                 !POLL RESPONSE
C
	INTEGER*4 MAXFRAME
	PARAMETER(MAXFRAME=10)                !NUMBER OF DIFF FRAMES
C
	INTEGER*4 LANFRAMES(MAXFRAME,2,0:MAXCON)!FRAME COUNTER BY CONNECTION
	   INTEGER*4 FRAMESIN, FRAMESOUT
	   PARAMETER(FRAMESIN=1)              !IN_FRAMES COUNTER
	   PARAMETER(FRAMESOUT=2)             !OUT_FRAMES COUNTER
C
C AS A GENERAL RULE ALL DEVICE LUNS ARE 11 AND HIGHER
C
	INTEGER*4 LANLUN(0:MAXSAP,MAXLAN)     !LAN=LANLUN(LU)
	INTEGER*4 LUNLAN(0:MAXSAP,MAXLAN)     !RLU=LUNLAN(1,LAN) WLU=LUNLAN(
C                                             !1 - WRITE, 2 - READ
C
C                                           ;IO STARTED OR NOT:
	INTEGER*4 LANOPN(0:MAXSAP,MAXLAN)     !OPEN/CLOSE STATE OF LUNS
	   INTEGER*4 LSCLO, LSOPN
	   PARAMETER(LSCLO=0)                 !CLOSED
	   PARAMETER(LSOPN=1)                 !OPEN
C
	INTEGER*4 RETLUN(11:10+MAXLUN)        !RETRY COUNT SINCE LAST GOOD XFER
	INTEGER*4 GLOLUN(11:10+MAXLUN)        !RETRY COUNT SINCE STARTUP
C
	INTEGER*4 MAXRET
	PARAMETER(MAXRET=10)                  !MAX RETRY COUNT
C
	INTEGER*4 WRITECNT(MAXLAN,MAXSAP)     !WRITE COUNT
	INTEGER*4 READCNT(MAXLAN,MAXSAP)      !READ COUNT
        INTEGER*4 READTIM(MAXLAN,MAXSAP)      !READ STATUS(0:READ POSTED)
C                                              (1:READ NOT POSTED/TRY AGAIN)
C
	INTEGER*4 CTRLUI,POLFIN,POLFILM
	INTEGER*4 CTRLXID1,CTRLXID0,CTRLTST1,CTRLTST0
C
	PARAMETER(CTRLUI='00000003'X)         !UNNUMBERED INFO FRAME
        PARAMETER(POLFIN='00000008'X)         !TO EXTRACT POL/FIN BIT
        PARAMETER(POLFILM='FFFFFFF7'X)        !TO MASK POL/FIN BIT
        PARAMETER(CTRLXID1='000000FD'X)       !XID P=1 FRAME
        PARAMETER(CTRLXID0='000000F5'X)       !XID P=0 FRAME
        PARAMETER(CTRLTST1='000000CF'X)       !TEST P=1 FRAME
        PARAMETER(CTRLTST0='000000C7'X)       !TEST P=0 FRAME
C
C SOME ERROR TYPES  (CCUR DRIVER TERMINATION CODES)
C
	INTEGER*4 ERROK, ERRDVA, ERROVR, ERRTKQ
	INTEGER*4 ERRCOL, ERRHLT, ERRLUN, ERRFRA, ERRQUE
	PARAMETER(ERROK ='00000000'X)            !NO ERR
	PARAMETER(ERRDVA='0000800D'X)            !DEV UNAVAIL
	PARAMETER(ERROVR='00008010'X)            !OVERRUN
	PARAMETER(ERRTKQ='00008012'X)            !TASK QUEUE
	PARAMETER(ERRCOL='00009014'X)            !EXCESSIVE COLLISIONS
	PARAMETER(ERRHLT='00008015'X)            !HALT IO
	PARAMETER(ERRLUN='0000801B'X)            !ILLEGAL LUN
	PARAMETER(ERRFRA='00008022'X)            !ILLEGAL FRAME (CRC,ALIG)
	PARAMETER(ERRQUE='00008024'X)            !DONE QUEUE OVF
C
	INTEGER*4 MAXERROR
	PARAMETER(MAXERROR=10)                   !DIFF ERRORS
C                                              ;0 - NO ERROR
C                                              ;1-9 SEE ABOVE
C                                              ;10 OTHER
	INTEGER*4 LANERRORS(MAXERROR,MAXLAN)     !ERROR COUNTERS
	INTEGER*4 LANERRFLG(MAXERROR)            !ERROR REPORT FLAG
	   INTEGER*4 LANERRNO, LANERRYES
	   PARAMETER(LANERRNO=0)                 !DONT REPORT
	   PARAMETER(LANERRYES=1)                !REPORT
C
C THERE ARE OTHER ERRORS BUT QUITE UNLIKELY (JUST REPORT THEM)
C
	INTEGER*4 WORKLU
	PARAMETER(WORKLU=7)                      !WORK LUN (ALWAYS CLOSE IT)
C
C DEFINE STRUCTURES TO PASS DATA IN QIO READS.
C
	INTEGER*4 TRAP_DATA_EQV(MAXREAD,MAXSAP,MAXLAN)
	INTEGER*2 TRAP_DATA(2,MAXREAD,MAXSAP,MAXLAN)
	INTEGER*4 WRITE_DATA_EQV(MAXWRITE,MAXSAP,MAXLAN)
	INTEGER*2 WRITE_DATA(2,MAXWRITE,MAXSAP,MAXLAN)
	EQUIVALENCE (TRAP_DATA,TRAP_DATA_EQV)
	EQUIVALENCE (WRITE_DATA,WRITE_DATA_EQV)
C
	INTEGER*4 TRPDTA_SLOT
	PARAMETER (TRPDTA_SLOT=1)
	INTEGER*4 TRPDTA_BUFFER
	PARAMETER (TRPDTA_BUFFER=2)
C
C STRUCTURE TO PASS INFORMATION TO TRAP HANDLING ROUTINES.
C
	INTEGER*4 TRAP_INFO(2,LANBNUM)
	INTEGER*4 TRPINF_SAP
	PARAMETER (TRPINF_SAP = 1)
	INTEGER*4 TRPINF_LAN
	PARAMETER (TRPINF_LAN = 2)
C
C DEFINE STRUCTURES TO MAINTAIN IO STATUS BLOCKS AND BUFFER
C NUMBERS.
C
	STRUCTURE /LN_IOSSTRUCT/
          INTEGER*2 STAT                          !VMS STATUS
          INTEGER*2 XSIZE                         !TRANSFER SIZE
          INTEGER*4 PARM                          !PARAMETER/BUFFER ADDRESS
        END STRUCTURE
        RECORD /LN_IOSSTRUCT/ READ_IOSB(MAXREAD,MAXSAP,MAXLAN)
        RECORD /LN_IOSSTRUCT/ WRITE_IOSB(MAXWRITE,MAXSAP,MAXLAN)
C
        INTEGER*4 READ_SLOT(MAXSAP,MAXLAN)        !READ POINTER INTO IOSB
        INTEGER*4 WRITE_SLOT(MAXSAP,MAXLAN)       !WRITE POINTER INTO IOSB
C
C DEFINE STRUCTURE FOR P4 PARAMETERS.
C
        STRUCTURE /P4_STRUCT/
          BYTE      DSAP                          !DESTINATION SAP
          BYTE      CTL                           !CONTROL ID
          BYTE      FILLER                        !FILLER SPACE
        END STRUCTURE
C
C DEFINE STRUCTURES FOR P5 PARAMETERS.
C
        STRUCTURE /P5_STRUCT/
          BYTE      DEST(6)                       !DESTINATION ADDRESS
          BYTE      SOURCE(6)                     !SOURCE ADDRESS
          BYTE      SSAP                          !SOURCE SAP
          BYTE      DSAP                          !DESTINATION SAP
          INTEGER*2 CTL                           !CONTROL FRAME DATA
        END STRUCTURE
C
        RECORD /P5_STRUCT/ READ_DATA(MAXREAD,MAXSAP,MAXLAN) !802.2 PACKET HEADER
C
C DEFINE THE COMMON
C
	INTEGER*4 LANGO                           !GO FLAG
	   INTEGER*4 LANPRODIS, LANPRODOWN, LANPROSTART, LANPROUP
	   PARAMETER(LANPRODIS=-1)                !LANPRO DISABLED
	   PARAMETER(LANPRODOWN=0)                !DONT GO YET
	   PARAMETER(LANPROSTART=1)               !GO NOW
	   PARAMETER(LANPROUP=2)                  !APPLS GO NOW
C
	INTEGER*4 LANTEST                         !TEST MODE IF .NE. 0
C
	INTEGER*4 TLISTSIZ
	PARAMETER(TLISTSIZ=50)
	INTEGER*4 LANTLIST(TLISTSIZ+QHEDSZ)       !TRACE LIST
	INTEGER*4 LAN_MAXREAD			  !MAXIMUM NUM OF READS
C						  !CANNOT BE BIGGER THEN MAXREAD
	INTEGER*4 LAN_FREE_SPACE(10000-1)		  !FREE SPACE		!V04
	INTEGER*4 FREESPACE(1)                    !FOR EQUIVALENCE ONLY
C
	COMMON /LANCOM/  NUMLAN,
     *	                 NUMSAP,
     *	                 LANTASKS,
     *	                 LOCLAN,
     *	                 LANLAN,
     *	                 LANBUF,
     *	                 LANFREE,
     *	                 LANFRAP,
     *	                 LANEXTRA,
     *	                 LANWRITE,
     *	                 LANDONER,
     *	                 LANDONEW,
     *	                 LANEXEC,
     *	                 LANAPP,
     *	                 THISSTA,
     *	                 LANCONN,
     *	                 LANTARR,
     *	                 LANTIMER,
     *	                 LANSTEP,
     *	                 LANDEL1,
     *	                 LANDEL2
C
	COMMON /LANCOM/  LANDEV,
     *	                 LANHOME,
     *	                 LANADR,
     *	                 LANMODE,
     *	                 LANTYPE,
     *	                 LANLUN,
     *	                 LUNLAN,
     *	                 LANTOUT,
     *	                 QUESAP,
     *	                 RETLUN
C
	COMMON /LANCOM/  LANOPN,
     *	                 WRITECNT,
     *	                 READCNT,
     *                   READTIM,
     *	                 LANTRPTSK,
     *	                 LANPOOL,
     *	                 LANSTATES,
     *	                 LANERRORS,
     *	                 LANERRFLG,
     *	                 LANFRAMES,
     *	                 CONNECTION,
     *	                 GLOLUN,
     *	                 CURLAN,
     *	                 LANSAPSTS,
     *	                 LANGO,
     *	                 LANTEST,
     *	                 LANTLIST,
     *	                 LANLADDR,
     *                   READ_IOSB, WRITE_IOSB,
     *                   READ_SLOT, WRITE_SLOT,
     *                   READ_DATA,
     *                   TRAP_INFO,
     *			 LAN_MAXREAD,
     *			 LAN_FREE_SPACE,
     *                   TRAP_DATA_EQV,
     *                   WRITE_DATA_EQV,
     *	                 FREESPACE
C
C
	INTEGER*4	 FRST_LANCOM(2)
	EQUIVALENCE	(FRST_LANCOM, NUMLAN)
	INTEGER*4	 LAST_LANCOM
	EQUIVALENCE	(LAST_LANCOM, FREESPACE)
C
	VOLATILE /LANCOM/
C
