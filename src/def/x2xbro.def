C
C X2XBRO.DEF
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]X2XBRO.DEV                                   $
C  $Date::   17 Apr 1996 16:41:48                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C V05 15-JUN-00 UXN COMMON/X2XBRO_NAME/ X2XBRO_NAME added.
C V04 15-sep-95 das Added stuff for background loads
C V03 29-DEC-94 GPR Allow multiple MCPs per subnetwork
C V02 21-JUL-94 WS MULTINETWORK CHANGES - Integrate UK changes 
C		   into X2X Baseline
C V01 01-DEC-91 DAS RELEASED FOR VAX (NETHERLANDS)
C
C The DEF describes the variables which are used to define
C the broadcast configuration parameters for each relay application.
C
C NOTE:  If you add a field to this file remember to update
C        the X2XBRO_ENTRIES counter, the X2XBRO_FIELD, and
C        the X2XBRO_RANGE tables.
C
C DECLARE THE RECORD VARIABLES.
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4   X2XBRO_REC(128)     !Record buffer
	CHARACTER   X2XBRO_CREC(512)    !Record buffer
	EQUIVALENCE (X2XBRO_REC, X2XBRO_CREC)
C
	INTEGER*4   X2XBRO_SECT         !Number of sectors per rec
	PARAMETER  (X2XBRO_SECT=2)
C
	CHARACTER   X2XBRO_NAME*10      !Global Setup file name
	DATA        X2XBRO_NAME /'X2XBRO.FIL'/
	COMMON/X2XBRO_NAME/ X2XBRO_NAME
	INTEGER*4   X2XBRO_FDB(7)       !File descriptor block
	DATA        X2XBRO_FDB /7*0/
C
C DECLARE VARIABLES.
C
	INTEGER*4   X2XBRO_APPNUM       !Application number
	INTEGER*4   X2XBRO_SNDTIM       !Send timeout
	INTEGER*4   X2XBRO_MAXRET       !Maximum retries
	INTEGER*4   X2XBRO_WAITTIM      !Wait timeout
	INTEGER*4   X2XBRO_RELSTAT      !Relay status
	INTEGER*4   X2XBRO_MAXACT       !Maximum active
	INTEGER*4   X2XBRO_ATTRIB       !Attribute
	INTEGER*4   X2XBRO_APPFLG       !Application flags

C 	***** Start V02 changes *****
	INTEGER*4   X2XBRO_BCST_ENABLE	!global enable flag - 
	INTEGER*4   X2XBRO_BCST_ROUTE	!destination for broadcast service - 
	INTEGER*4   X2XBRO_BCST_STATION1 !station no serving as a broadcast server - 
	INTEGER*4   X2XBRO_BCST_STATION2 !station no serving as a broadcast server - 
	INTEGER*4   X2XBRO_SUBNETWORK	!subnetwork serviced - 
	INTEGER*4   X2XBRO_WAIT_MAX	!max no of outstanding broadcasts updates - 
	INTEGER*4   X2XBRO_START_IN_A_SEC!may start to so many stations in a sec
	INTEGER*4   X2XBRO_CALL_IN_A_SEC!may start so many not connected station
	INTEGER*4   X2XBRO_ENABLE_STATION_BROADCAST!will force broadcast mode
C					!to all if disabled
	INTEGER*4   X2XBRO_RESMES	!Reset message to send
	INTEGER*4   X2XBRO_RESDEL       !Reset delay
	INTEGER*4   X2XBRO_LODDEL       !Between load delay
	INTEGER*4   X2XBRO_SEGDEL       !Between segments delay
	INTEGER*4   X2XBRO_SNDREST      !Times to send reset
C.....	INTEGER*4   X2XBRO_FIRST_MCP	!First MCP no used		!V03
C.....	INTEGER*4   X2XBRO_LAST_MCP	!Last MCP no used		!V03
	INTEGER*4   X2XBRO_AUTOBAUD	!no of autobaud segments to send
	INTEGER*4   X2XBRO_TIMES_SEND_MCP !no of times to send MCP
	INTEGER*4   X2XBRO_TIMES_SEND_APP !no of times to send FIRST APP
	INTEGER*4   X2XBRO_POLL_LOGIC_ENABLE !enable activation of poll logic
C 	***** End V02 changes *****
        INTEGER*4   X2XBRO_APP_TO_SEND  !FOREGROUND OR BACKGROUND APP TO SEND
	INTEGER*4   X2XBRO_UPDATE       !Last data updated
	INTEGER*4   X2XBRO_FREE(96)     !Free space - V03
	INTEGER*4   X2XBRO_BITMAP       !Modified fields
	INTEGER*4   X2XBRO_BITMAP2      !Modified fields
	INTEGER*4   X2XBRO_BITMAP3      !Modified fields
	INTEGER*4   X2XBRO_BITMAP4      !Modified fields
C
C EQUIVALENCE FIELD VARIABLES INTO RECORD.
C
	EQUIVALENCE (X2XBRO_REC(1),  X2XBRO_APPNUM)
	EQUIVALENCE (X2XBRO_REC(2),  X2XBRO_SNDTIM)
	EQUIVALENCE (X2XBRO_REC(3),  X2XBRO_MAXRET)
	EQUIVALENCE (X2XBRO_REC(4),  X2XBRO_WAITTIM)
	EQUIVALENCE (X2XBRO_REC(5),  X2XBRO_RELSTAT)
	EQUIVALENCE (X2XBRO_REC(6),  X2XBRO_MAXACT)
	EQUIVALENCE (X2XBRO_REC(7),  X2XBRO_ATTRIB)
	EQUIVALENCE (X2XBRO_REC(8),  X2XBRO_APPFLG)
CV02	EQUIVALENCE (X2XBRO_REC(9),  X2XBRO_UPDATE)
CV02	EQUIVALENCE (X2XBRO_REC(10), X2XBRO_FREE)

C 	***** End V02 changes *****
	EQUIVALENCE (X2XBRO_REC(9),  X2XBRO_BCST_ENABLE)	
	EQUIVALENCE (X2XBRO_REC(10),  X2XBRO_BCST_ROUTE)	
	EQUIVALENCE (X2XBRO_REC(11),  X2XBRO_BCST_STATION1)	
	EQUIVALENCE (X2XBRO_REC(12),  X2XBRO_BCST_STATION2)	
	EQUIVALENCE (X2XBRO_REC(13),  X2XBRO_SUBNETWORK)	
	EQUIVALENCE (X2XBRO_REC(14),  X2XBRO_WAIT_MAX)		
	EQUIVALENCE (X2XBRO_REC(15),  X2XBRO_START_IN_A_SEC)	
	EQUIVALENCE (X2XBRO_REC(16),  X2XBRO_CALL_IN_A_SEC)	
	EQUIVALENCE (X2XBRO_REC(17),  X2XBRO_ENABLE_STATION_BROADCAST)
	EQUIVALENCE (X2XBRO_REC(18),  X2XBRO_RESMES)
	EQUIVALENCE (X2XBRO_REC(19),  X2XBRO_RESDEL)
	EQUIVALENCE (X2XBRO_REC(20),  X2XBRO_LODDEL)
	EQUIVALENCE (X2XBRO_REC(21),  X2XBRO_SEGDEL)
	EQUIVALENCE (X2XBRO_REC(22),  X2XBRO_SNDREST)
C......	EQUIVALENCE (X2XBRO_REC(23),  X2XBRO_FIRST_MCP)			!V03
C......	EQUIVALENCE (X2XBRO_REC(24),  X2XBRO_LAST_MCP)			!V03
	EQUIVALENCE (X2XBRO_REC(23),  X2XBRO_AUTOBAUD)		
	EQUIVALENCE (X2XBRO_REC(24),  X2XBRO_TIMES_SEND_MCP)	
	EQUIVALENCE (X2XBRO_REC(25),  X2XBRO_TIMES_SEND_APP)	
	EQUIVALENCE (X2XBRO_REC(26),  X2XBRO_POLL_LOGIC_ENABLE)		
        EQUIVALENCE (X2XBRO_REC(27),  X2XBRO_APP_TO_SEND)
	EQUIVALENCE (X2XBRO_REC(28),  X2XBRO_UPDATE)		
	EQUIVALENCE (X2XBRO_REC(29),  X2XBRO_FREE)		
C 	***** Start V03 changes *****

	EQUIVALENCE (X2XBRO_REC(125),X2XBRO_BITMAP)
	EQUIVALENCE (X2XBRO_REC(126),X2XBRO_BITMAP2)
	EQUIVALENCE (X2XBRO_REC(127),X2XBRO_BITMAP3)
	EQUIVALENCE (X2XBRO_REC(128),X2XBRO_BITMAP4)
C
C STORE FIELD NAMES FOR VISION/SETUP.
C NOTE:!!!! LAST ENTRY IN THE X2XBRO_ENTRIES TABLE
C SHOULD ALWAYS BE USED FOR LAST UPDATED DATE TO PREVENT
C THE USER FROM CHANGING ITS VALUE.
C
	INTEGER*4 X2XBRO_ENTRIES
CV02	PARAMETER (X2XBRO_ENTRIES=9)
	PARAMETER (X2XBRO_ENTRIES=28)				!V03
C
	CHARACTER X2XBRO_FIELD(X2XBRO_ENTRIES)*15
	DATA      X2XBRO_FIELD
     *      /'Application    ','Send timeout   ','Max retries    ',
     *       'Wait timeout   ','Relay status   ','Max active  %  ',
     *       'Attribute      ','Applictn flags ','BCST enable    ',
     *       'BCST route     ','BCST station 1 ','BCST station 2 ',
     *       'subnetwork     ','Outstanding Req','Max start/sec  ',
     *       'max call/sec   ','enable stn bcst','Reset mess num ',
     *       'Reset delay    ','Load delay     ','Segment delay  ',
     *       'Send reset cnt ','Autobaud segs  ',
     *       'Times MCP sent ','Times FCL sent ','Auto poll enabl',
     *       'Fgnd/Bckgnd App','Last updated   '/
C
C STORE THE VALID INPUT RANGE FOR EACH VARIABLE.
C NOTE: A -1 IN THE FIRST RANGE DESIGNATES A CHARACTER
C       VARIABLE, -2 INPUT REAL.
C
	INTEGER*4 X2XBRO_RANGE(2,X2XBRO_ENTRIES)
	DATA      X2XBRO_RANGE
     *      / 1,X2X_RELAY_APPS, 0,120000, 0,20,
     *        0,6000000, 0,3,       1,80,
     *        0,4,       1,3,       0,1,
     *        0,3,       0,X2X_STATIONS, 0,X2X_STATIONS,
     *        0,254,     0,10000,   0,X2X_STATIONS,
     *        0,X2X_STATIONS, 0,1,  0,5,
     *        0,100000,  0,100000,  0,100000,
     *        0,10,      0,50,
     *        -1,3,      0,5,       0,1,
     *        1,3,       0,0/
C
C THIS ARRAY STORES THE INDEX INTO THE RECORD FOR EACH
C FIELD.  THIS IS NECESSARY BECAUSE NOT ALL FIELDS ARE INT*4.
C
	INTEGER*4 X2XBRO_INDEX(X2XBRO_ENTRIES)
	DATA      X2XBRO_INDEX
     *	    /1,   2,   3,
     *	     4,   5,   6,
     *	     7,   8,   9,						!V02
     *	    10,  11,  12,						!V02
     *      13,  14,  15,						!V02
     *      16,  17,  18,						!V02
     *      19,  20,  21,						!V02
     *      22,  23,  24,						!V02
     *      25,	 26,  27,						!V02
     *      28/								!V03
C
C THIS ARRAY STORES THE POSSIBLE SPECIFIC VALUES FOR EACH
C OF THE FIELDS. A MAX OF 15 SPECIFIC VALUES IS PERMITTED.
C -1 INDICATES NO SPECIFIC VALUES.
C
	INTEGER*4 X2XBRO_VALUE(15,X2XBRO_ENTRIES)
	DATA      X2XBRO_VALUE
     *      /15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1, 15*-1, 15*-1,
     *       15*-1/
C
C COMMON THE RECORD BUFFER.
C
	VOLATILE /X2XBRO_COMMON/
	COMMON /X2XBRO_COMMON/ X2XBRO_REC,   X2XBRO_FDB,
     *	                       X2XBRO_RANGE, X2XBRO_INDEX,
     *	                       X2XBRO_VALUE, X2XBRO_FIELD
C
C
