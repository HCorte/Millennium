C LSCREC.DEF
C
C V06 30-JUN-2000 UXN LSCLAT added.
C V05 18-DEC-1993 HXK ADDED FIELDS FOR COUNTS AND AMOUNTS FOR 
C                     PRIZES/REFUNDS WON AND PAID.
C V04 17-JUN-1993 GXA Released for Finland Dec Conversion / Oddset.
C V03 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V02 07-OCT-1991 MTK INITAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C
C LOGICAL SCORE GAME RECORD
C
C
C GAME VARIABLE ARRAYS
C
C     LSCSTS(NUMSCR)                 ; GAME STATUS
C     LSCWEK(NUMSCR)                 ; WEEK NUMBER
C     LSCDAT(NUMSCR)                 ; DRAW DATE
C     LSCDRW(NUMSCR)                 ; DRAW NUMBER
C     LSCBSD(NUMSCR)                 ; BEGINNING SALES DATE
C     LSCESD(NUMSCR)                 ; ENDING SALES DATE
C     LSCPUP(NUMSCR)                 ; LAST PURGE UPDATE   (FILE ONLY)
C     LSCUPD(NUMSCR)                 ; LAST FILE UPDATE    (FILE ONLY)
C     LSCCTM(NUMSCR)                 ; ACTUAL TIME WHEN CLOSED
C     LSCTIM(NUMSCR)                 ; TIME WHEN GAME SHOULD CLOSE
C     LSCSER(NUMSCR)                 ; LAST SERIAL NUMBER
C     LSCSAL(NUMSCR)                 ; TOTAL SALES
C     LSCPAD(NUMSCR)                 ; PRIZES PAID + REFUNDS
C     LSCPRG(NUMSCR)                 ; PRIZES PURGED
C     LSCPRF(NUMSCR)                 ; PAID REFUNDS
C     LSCREF(NUMSCR)                 ; TOTAL REFUND AMOUNT
C     LSCWON(NUMSCR)                 ; PRIZES WON
C     LSCPOL(2,NUMSCR)               ; ROLL POOL
C     LSCTPL(NUMSCR)                 ; TOTAL PRIZE POOL
C     LSCTBK(NUMSCR)                 ; TOTAL BREAKAGE
C     LSCBRK(2,NUMSCR)               ; WINNING ROUNDING POT
C     LSCABW(NUMSCR)                 ; AMOUNT BET ON WINNING SCORE
C     LSCODS(NUMSCR)                 ; WINNING ODDS
C     LSCWIN(2,NUMSCR)               ; WINNING RESULTS
C     LSCHLD(2,NUMSCR)               ; WINNING RESULTS HOLD
C     LSCTAX(NUMSCR)                 ; WINNING TAXES
C     LSCFUL(NUMTOT,MAXFUL,NUMSCR)   ; FULL SYS SALES CNT AMT
C     LSCOTX(NUMTOT,NUMSCR)          ; OVER TAX LIMIT
C     LSCMID(NUMTOT,NUMSCR)          ; >REDMIN <REDMAX
C     LSCUTX(NUMTOT,NUMSCR)          ; UNDER TAX LIMIT
C     LSCHST(NUMSCR)                 ; HIGHEST WINNER FOR THIS GAME
C     LSCORM(NUMTOT,NUMSCR)          ; OVER REDMAX
C     LSCNM1(SNMS_LEN/4,NUMSCR)      ; TEAM 1 NAME
C     LSCNM2(SNMS_LEN/4,NUMSCR)      ; TEAM 2 NAME
C     LSCREV(NUMSCR)                 ; REV #
C     LSCTYP(NUMSCR)                 ; GAME TYPE 1=SOC. 2=HOCK.
C     LSCPFN(5,NUMSCR)               ; POOL FILE NAME
C     LSCPRC(NUMSCR)                 ; BASE PRICE
C     LSCSPR(NUMSCR)                 ; POOL PERCENTAGE
C     LSCDES(SDES_LEN/4,NUMSCR)      ; GAME DESCRIPTION
C     LSCTVC(STVC_LEN/4,NUMSCR)      ; TV-CHANEL NAME
C     LSCMDS(MAXMLTD_AVL,NUMSCR)     ; MULTI DRAW SELECTED TABLE
C                                      (52 BYTE / 4 = 13)
C     LSCWRO(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     LSCWRA(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     LSCWPO(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     LSCWPA(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     LSCWPR(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; (1=PRWON,2=PRPAD)
C     LSCLAT(NUMLAT,NUMSCR)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C
C LOGICAL GAME FILE VARIABLE OFFSETS
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1990 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4 LSCSTS_OFF, LSCWEK_OFF, LSCDAT_OFF, LSCDRW_OFF
	INTEGER*4 LSCBSD_OFF, LSCESD_OFF, LSCPUP_OFF, LSCUPD_OFF
	INTEGER*4 LSCTIM_OFF, LSCCTM_OFF, LSCSER_OFF, LSCSAL_OFF
	PARAMETER(LSCSTS_OFF=1)
	PARAMETER(LSCWEK_OFF=LSCSTS_OFF+NUMSCR)
	PARAMETER(LSCDAT_OFF=LSCWEK_OFF+NUMSCR)
	PARAMETER(LSCDRW_OFF=LSCDAT_OFF+NUMSCR)
	PARAMETER(LSCBSD_OFF=LSCDRW_OFF+NUMSCR)
	PARAMETER(LSCESD_OFF=LSCBSD_OFF+NUMSCR)
	PARAMETER(LSCPUP_OFF=LSCESD_OFF+NUMSCR)
	PARAMETER(LSCUPD_OFF=LSCPUP_OFF+NUMSCR)
	PARAMETER(LSCCTM_OFF=LSCUPD_OFF+NUMSCR)
	PARAMETER(LSCTIM_OFF=LSCCTM_OFF+NUMSCR)
	PARAMETER(LSCSER_OFF=LSCTIM_OFF+NUMSCR)
	PARAMETER(LSCSAL_OFF=LSCSER_OFF+NUMSCR)
C
	INTEGER*4 LSCPAD_OFF, LSCPRG_OFF, LSCPRF_OFF, LSCREF_OFF
	INTEGER*4 LSCWON_OFF, LSCPOL_OFF, LSCTPL_OFF, LSCTBK_OFF
	INTEGER*4 LSCBRK_OFF, LSCABW_OFF, LSCODS_OFF, LSCWIN_OFF
	PARAMETER(LSCPAD_OFF = LSCSAL_OFF+NUMSCR)
	PARAMETER(LSCPRG_OFF = LSCPAD_OFF+NUMSCR)
	PARAMETER(LSCPRF_OFF = LSCPRG_OFF+NUMSCR)
	PARAMETER(LSCREF_OFF = LSCPRF_OFF+NUMSCR)
	PARAMETER(LSCWON_OFF = LSCREF_OFF+NUMSCR)
	PARAMETER(LSCPOL_OFF = LSCWON_OFF+NUMSCR)
	PARAMETER(LSCTPL_OFF = LSCPOL_OFF+(2*NUMSCR))
	PARAMETER(LSCTBK_OFF = LSCTPL_OFF+NUMSCR)
	PARAMETER(LSCBRK_OFF = LSCTBK_OFF+NUMSCR)
	PARAMETER(LSCABW_OFF = LSCBRK_OFF+(2*NUMSCR))
	PARAMETER(LSCODS_OFF = LSCABW_OFF+NUMSCR)
	PARAMETER(LSCWIN_OFF = LSCODS_OFF+NUMSCR)
C
	INTEGER*4 LSCHLD_OFF, LSCTAX_OFF, LSCFUL_OFF, LSCOTX_OFF
	INTEGER*4 LSCMID_OFF, LSCUTX_OFF, LSCHST_OFF, LSCORM_OFF
	INTEGER*4 LSCNM1_OFF, LSCNM2_OFF, LSCREV_OFF, LSCTYP_OFF
	PARAMETER(LSCHLD_OFF = LSCWIN_OFF+(2*NUMSCR))
	PARAMETER(LSCTAX_OFF = LSCHLD_OFF+(2*NUMSCR))
	PARAMETER(LSCFUL_OFF = LSCTAX_OFF+NUMSCR)
	PARAMETER(LSCOTX_OFF = LSCFUL_OFF+(NUMTOT*MAXFUL*NUMSCR))
	PARAMETER(LSCMID_OFF = LSCOTX_OFF+(NUMTOT*NUMSCR))
	PARAMETER(LSCUTX_OFF = LSCMID_OFF+(NUMTOT*NUMSCR))
	PARAMETER(LSCHST_OFF = LSCUTX_OFF+(NUMTOT*NUMSCR))
	PARAMETER(LSCORM_OFF = LSCHST_OFF+NUMSCR)
	PARAMETER(LSCNM1_OFF = LSCORM_OFF+(NUMTOT*NUMSCR))
	PARAMETER(LSCNM2_OFF = LSCNM1_OFF+(SNMS_LEN/4)*NUMSCR)
	PARAMETER(LSCREV_OFF = LSCNM2_OFF+(SNMS_LEN/4)*NUMSCR)
	PARAMETER(LSCTYP_OFF = LSCREV_OFF+NUMSCR)
C
	INTEGER*4 LSCPFN_OFF, LSCPRC_OFF, LSCSPR_OFF, LSCDES_OFF 
	PARAMETER(LSCPFN_OFF = LSCTYP_OFF+NUMSCR)
	PARAMETER(LSCPRC_OFF = LSCPFN_OFF+(5*NUMSCR))
	PARAMETER(LSCSPR_OFF = LSCPRC_OFF+NUMSCR)
	PARAMETER(LSCDES_OFF = LSCSPR_OFF+NUMSCR)
C
	INTEGER*4 LSCTVC_OFF, LSCMDS_OFF
	PARAMETER(LSCTVC_OFF = LSCDES_OFF + (SDES_LEN/4)*NUMSCR)
	PARAMETER(LSCMDS_OFF = LSCTVC_OFF + (STVC_LEN/4)*NUMSCR)
C
        INTEGER*4 LSCWRO_OFF, LSCWRA_OFF, LSCWPO_OFF, LSCWPA_OFF
        INTEGER*4 LSCWPR_OFF
        PARAMETER(LSCWRO_OFF = LSCMDS_OFF + (MAXMLTD_AVL/4)*NUMSCR)
        PARAMETER(LSCWRA_OFF = LSCWRO_OFF + NUMTOT*2*NUMSCR)
        PARAMETER(LSCWPO_OFF = LSCWRA_OFF + NUMTOT*2*NUMSCR)
        PARAMETER(LSCWPA_OFF = LSCWPO_OFF + NUMTOT*2*NUMSCR)
        PARAMETER(LSCWPR_OFF = LSCWPA_OFF + NUMTOT*2*NUMSCR)

	INTEGER*4 LSCLAT_OFF
	PARAMETER(LSCLAT_OFF = LSCWPR_OFF + NUMTOT*2*NUMSCR)

	INTEGER*4 LSCRECLEN
	PARAMETER(LSCRECLEN = LSCLAT_OFF + NUMLAT*NUMSCR - 1)
C
C LOGICAL RECORD DEFINITION
C
	INTEGER*4 LSCREC(LSCRECLEN)
C
C GAME FILE VARIABLE DEFINITIONS
C
	INTEGER*4 LSCSTS(NUMSCR),LSCWEK(NUMSCR)
	INTEGER*4 LSCDAT(NUMSCR),LSCBSD(NUMSCR)
	INTEGER*4 LSCESD(NUMSCR),LSCPUP(NUMSCR)
	INTEGER*4 LSCUPD(NUMSCR),LSCDRW(NUMSCR)
	INTEGER*4 LSCCTM(NUMSCR),LSCTIM(NUMSCR)
	INTEGER*4 LSCSER(NUMSCR),LSCSAL(NUMSCR)
	INTEGER*4 LSCPAD(NUMSCR),LSCPRG(NUMSCR)
	INTEGER*4 LSCPRF(NUMSCR),LSCREF(NUMSCR)
	INTEGER*4 LSCWON(NUMSCR),LSCPOL(2,NUMSCR)
	INTEGER*4 LSCTPL(NUMSCR),LSCTBK(NUMSCR)
	INTEGER*4 LSCBRK(2,NUMSCR),LSCABW(NUMSCR)
	INTEGER*4 LSCODS(NUMSCR),LSCWIN(2,NUMSCR)
	INTEGER*4 LSCHLD(2,NUMSCR),LSCTAX(NUMSCR)
	INTEGER*4 LSCFUL(NUMTOT,MAXFUL,NUMSCR)
	INTEGER*4 LSCOTX(NUMTOT,NUMSCR)
	INTEGER*4 LSCMID(NUMTOT,NUMSCR)
	INTEGER*4 LSCUTX(NUMTOT,NUMSCR)
	INTEGER*4 LSCHST(NUMSCR),LSCORM(NUMTOT,NUMSCR)
	INTEGER*4 LSCNM1(SNMS_LEN/4,NUMSCR)
	INTEGER*4 LSCNM2(SNMS_LEN/4,NUMSCR)
	INTEGER*4 LSCREV(NUMSCR),LSCTYP(NUMSCR)
	INTEGER*4 LSCPFN(5,NUMSCR),LSCPRC(NUMSCR)
	INTEGER*4 LSCSPR(NUMSCR)
	INTEGER*4 LSCDES(SDES_LEN/4,NUMSCR)
	INTEGER*4 LSCTVC(STVC_LEN/4,NUMSCR)
C
	BYTE	  LSCMDS(MAXMLTD_AVL,NUMSCR)
        INTEGER*4 LSCWRO(NUMTOT,2,NUMSCR),LSCWRA(NUMTOT,2,NUMSCR)
        INTEGER*4 LSCWPO(NUMTOT,2,NUMSCR),LSCWPA(NUMTOT,2,NUMSCR)
        INTEGER*4 LSCWPR(NUMTOT,2,NUMSCR)
        INTEGER*4 LSCLAT(NUMLAT,NUMSCR)
C
C
	EQUIVALENCE(LSCSTS,LSCREC(LSCSTS_OFF))
	EQUIVALENCE(LSCWEK,LSCREC(LSCWEK_OFF))
	EQUIVALENCE(LSCDAT,LSCREC(LSCDAT_OFF))
	EQUIVALENCE(LSCDRW,LSCREC(LSCDRW_OFF))
	EQUIVALENCE(LSCBSD,LSCREC(LSCBSD_OFF))
	EQUIVALENCE(LSCESD,LSCREC(LSCESD_OFF))
	EQUIVALENCE(LSCPUP,LSCREC(LSCPUP_OFF))
	EQUIVALENCE(LSCUPD,LSCREC(LSCUPD_OFF))
	EQUIVALENCE(LSCCTM,LSCREC(LSCCTM_OFF))
	EQUIVALENCE(LSCTIM,LSCREC(LSCTIM_OFF))
	EQUIVALENCE(LSCSER,LSCREC(LSCSER_OFF))
	EQUIVALENCE(LSCSAL,LSCREC(LSCSAL_OFF))
	EQUIVALENCE(LSCPAD,LSCREC(LSCPAD_OFF))
	EQUIVALENCE(LSCPRG,LSCREC(LSCPRG_OFF))
	EQUIVALENCE(LSCPRF,LSCREC(LSCPRF_OFF))
	EQUIVALENCE(LSCREF,LSCREC(LSCREF_OFF))
	EQUIVALENCE(LSCWON,LSCREC(LSCWON_OFF))
	EQUIVALENCE(LSCPOL,LSCREC(LSCPOL_OFF))
	EQUIVALENCE(LSCTPL,LSCREC(LSCTPL_OFF))
	EQUIVALENCE(LSCTBK,LSCREC(LSCTBK_OFF))
	EQUIVALENCE(LSCBRK,LSCREC(LSCBRK_OFF))
	EQUIVALENCE(LSCABW,LSCREC(LSCABW_OFF))
	EQUIVALENCE(LSCODS,LSCREC(LSCODS_OFF))
	EQUIVALENCE(LSCWIN,LSCREC(LSCWIN_OFF))
	EQUIVALENCE(LSCHLD,LSCREC(LSCHLD_OFF))
	EQUIVALENCE(LSCTAX,LSCREC(LSCTAX_OFF))
	EQUIVALENCE(LSCFUL,LSCREC(LSCFUL_OFF))
	EQUIVALENCE(LSCOTX,LSCREC(LSCOTX_OFF))
	EQUIVALENCE(LSCMID,LSCREC(LSCMID_OFF))
	EQUIVALENCE(LSCUTX,LSCREC(LSCUTX_OFF))
	EQUIVALENCE(LSCHST,LSCREC(LSCHST_OFF))
	EQUIVALENCE(LSCORM,LSCREC(LSCORM_OFF))
	EQUIVALENCE(LSCNM1,LSCREC(LSCNM1_OFF))
	EQUIVALENCE(LSCNM2,LSCREC(LSCNM2_OFF))
	EQUIVALENCE(LSCREV,LSCREC(LSCREV_OFF))
	EQUIVALENCE(LSCTYP,LSCREC(LSCTYP_OFF))
	EQUIVALENCE(LSCPRC,LSCREC(LSCPRC_OFF))
        EQUIVALENCE(LSCPFN,LSCREC(LSCPFN_OFF))
	EQUIVALENCE(LSCSPR,LSCREC(LSCSPR_OFF))
	EQUIVALENCE(LSCDES,LSCREC(LSCDES_OFF))
	EQUIVALENCE(LSCTVC,LSCREC(LSCTVC_OFF))
	EQUIVALENCE(LSCMDS,LSCREC(LSCMDS_OFF))
        EQUIVALENCE(LSCWRO,LSCREC(LSCWRO_OFF))
        EQUIVALENCE(LSCWRA,LSCREC(LSCWRA_OFF))
        EQUIVALENCE(LSCWPO,LSCREC(LSCWPO_OFF))
        EQUIVALENCE(LSCWPA,LSCREC(LSCWPA_OFF))
        EQUIVALENCE(LSCWPR,LSCREC(LSCWPR_OFF))
        EQUIVALENCE(LSCLAT,LSCREC(LSCLAT_OFF))
