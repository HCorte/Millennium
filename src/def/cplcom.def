C CPLCOM.DEF
C
C V11 30-JUN-2000 UXN CPLLAT added.
C V10 08-JUN-2000 UXN CPLFUL, CPL2ND_OFF removed
C V09 18-MAY-1999 UXN CPLCMB added.
C V08 20-DEC-1995 HXK Change in xxPSORT array structure
C V07 28-NOV-1995 HXK CPLEVD_OFF was defined twice
C V06 28-NOV-1995 HXK Batch of changes for Double/Couple release
C V05 23-NOV-1995 PXB adde event status
C V04 10-NOV-1995 HXK Further changes for Double, Couple
C V03 08-NOV-1995 HXK Fixed statement line that was too long  > 72 chars  
C V02 07-NOV-1995 HXK Changes for Double, Couple install
C V01 06-NOV-1995 PXB Initial revision.
C
C SUPER COUPLE GAME AND POOL COMMONS.
C
C GAME VARIABLE ARAYS.
C
C     CPLSTS(NUMCPL)                 ; GAME STATUS
C     CPLWEK(NUMCPL)                 ; WEEK NUMBER
C     CPLDAT(NUMCPL)                 ; DRAW DATE
C     CPLDRW(NUMCPL)                 ; DRAW NUMBER
C     CPLBSD(NUMCPL)                 ; BEGINNING SALES DATE
C     CPLESD(NUMCPL)                 ; ENDING SALES DATE
C     CPLPUP(NUMCPL)                 ; LAST PRUGE UPDATE  (FILE ONLY)
C     CPLUPD(NUMCPL)                 ; LAST FILE UPDATE   (FILE ONLY)
C     CPLCTM(NUMCPL)                 ; ACTUAL TIME WHEN CLOSED
C     CPLTIM(NUMCPL)                 ; TIME WHEN GAME SHOULD CLOSE
C     CPLSER(NUMCPL)                 ; LAST SERIAL NUMBER
C     CPLSAL(NUMTOT,NUMCPL)          ; TOTAL SALES (COUNT , AMOUNT)
C     CPLPAD(NUMCPL)                 ; PRIZES PAID + REFUNDS
C     CPLPRG(NUMCPL)                 ; PRIZES PURGED
C     CPLPRF(NUMCPL)                 ; PAID REFUNDS
C     CPLREF(NUMCPL)                 ; TOTAL REFUND AMOUNT
C     CPLERF(NUMCPL)                 ; EARLY REFUNDS PAID
C     CPLTER(NUMCPL)                 ; TOTAL EARLY REFUNDS (LIAB)
C     CPLWON(NUMCPL)                 ; PRIZES WON
C     CPLPOL(2,NUMCPL)               ; ROLL POOL
C     CPLTPL(NUMCPL)                 ; TOTAL PRIZE POOL
C     CPLTBK(NUMCPL)                 ; TOTAL BREAKAGE
C     CPLBRK(2,NUMCPL)		     ; WINNING ROUNDING POT
C     CPLABW(NUMCPL)                 ; AMOUNT BET ON WINNING SCORE
C     CPLODS(MAXCPLTI,NUMCPL)        ; WINNING ODDS
C     CPLWIN(2,MAXCPLTI,NUMCPL)      ; WINNING RESULTS
C     CPLHLD(2,MAXCPLTI,NUMCPL)      ; WINNING RESULTS HOLD
C     CPLTAX(NUMCPL)                 ; WINNING TAXES
C     CPLOTX(NUMTOT,NUMCPL)          ; OVER TAX LIMIT
C     CPLMID(NUMTOT,NUMCPL)          ; >REDMIN <REDMAX
C     CPLUTX(NUMTOT,NUMCPL)          ; UNDER TAX LIMIT
C     CPLHST(MAXCPLTI,NUMCPL)        ; HIGHEST WINNER PER WINING COMB
C     CPLORM(NUMTOT,NUMCPL)          ; OVER REDMAX
C     CPLENM(CPLENM_LEN/4,2,NUMCPL)           ; EVENT NAME
C     CPLDES(CPLDES_LEN/4,2,NUMCPL)           ; GAME DESCRIPTION
C     CPLNMS(CPLNMS_LEN/4,MAXCPLRW,NUMCPL)    ; ROW NAMES
C     CPLSTA(MAXCPLRW,NUMCPL)                 ; ROW STATUS 1 THROUGH MAXTRW
C     CPLEST(2,NUMCPL)			      ; Event Status.
C     CPLEVD(2,NUMCPL)			      ; Event DATE
C     CPLEVT(2,NUMCPL)			      ; Event TIME
C     CPLSBR(MAXCPLRW,NUMCPL)                 ; SALES BY ROW TABLE
C     CPLREV(NUMCPL)                 ; REV #
C     CPLPFN(5,NUMCPL)               ; POOL FILE NAME
C     CPLRTM(MAXCPLRW,NUMCPL)        ; ROW CLOSE TIMES
C     CPLPRC(NUMCPL)                 ; BASE PRICE
C     CPLSPR(NUMCPL)                 ; POOL PERCENTAGE
C     CPLTVC(CPLTVC_LEN/4,NUMCPL)      ; TV-CHANEL NAME
C     CPLMDS(MAXMLTD_AVL,NUMCPL)     ; MULTI DRAW SELECTED TABLE
C                                      (52 BYTE / 4 = 13)
C     CPLRWS(NUMCPL)		     ; ACTUAL # OF ROWS USED.
C     CPLWCP(MAXCPLTI,NUMCPL)        ; # WINNING COUPONS PLAYED
C     CPLWBT(NUMTOT,MAXCPLTI,NUMCPL) ; CNT, AMT WINNERS PLAYED BY TIES
C     CPLWRO(NUMTOT,2,NUMCPL)        ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     CPLWRA(NUMTOT,2,NUMCPL)        ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     CPLWPO(NUMTOT,2,NUMCPL)        ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     CPLWPA(NUMTOT,2,NUMCPL)        ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     CPLWPR(NUMTOT,2,NUMCPL)        ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; (1=PRWON,2=PRPAD)
C     CPLODT(MAXCPLRW/2*MAXCPLRW/2,NUMCPL) ; TABLE OF AMTS ON COMBNS FOR ODDS
C     CPLCMB(NUMCPL,NUMCPL)          ; NUMBER OF WINNING COMBINATIONS
C     CPLLAT(NUMLAT,NUMCPL)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C     CPLFRS(95,NUMCPL)	             ; ACTUAL FREE SPACE IN RECORD.
C
C     CPLFRE(CALCULATED)             ; FREE SPACE
C
C
C COUPLE POOL ARRAYS
C
C     CPPOOL(MAXCPLRW/2*MAXCPLRW/2,VALCPL,TYPCPL,NUMCPL) ; POOL ODDS ARRAY
C     CPPSORT(2,MAXCPLRW/2*MAXCPLRW/2,NUMCPL)            ; POOL ODDS SORT ARRAY
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C
      INTEGER*4 CPLSTS_OFF, CPLWEK_OFF, CPLDAT_OFF, CPLDRW_OFF
      INTEGER*4 CPLBSD_OFF, CPLESD_OFF, CPLPUP_OFF, CPLUPD_OFF
      INTEGER*4 CPLCTM_OFF, CPLTIM_OFF, CPLSER_OFF, CPLSAL_OFF
      PARAMETER(CPLSTS_OFF=1)
      PARAMETER(CPLWEK_OFF=CPLSTS_OFF+NUMCPL)
      PARAMETER(CPLDAT_OFF=CPLWEK_OFF+NUMCPL)
      PARAMETER(CPLDRW_OFF=CPLDAT_OFF+NUMCPL)
      PARAMETER(CPLBSD_OFF=CPLDRW_OFF+NUMCPL)
      PARAMETER(CPLESD_OFF=CPLBSD_OFF+NUMCPL)
      PARAMETER(CPLPUP_OFF=CPLESD_OFF+NUMCPL)
      PARAMETER(CPLUPD_OFF=CPLPUP_OFF+NUMCPL)
      PARAMETER(CPLCTM_OFF=CPLUPD_OFF+NUMCPL)
      PARAMETER(CPLTIM_OFF=CPLCTM_OFF+NUMCPL)
      PARAMETER(CPLSER_OFF=CPLTIM_OFF+NUMCPL)
      PARAMETER(CPLSAL_OFF=CPLSER_OFF+NUMCPL)

      INTEGER*4 CPLPAD_OFF, CPLPRG_OFF, CPLPRF_OFF, CPLREF_OFF
      INTEGER*4 CPLERF_OFF, CPLTER_OFF, CPLWON_OFF, CPLPOL_OFF
      INTEGER*4 CPLTPL_OFF, CPLTBK_OFF, CPLBRK_OFF, CPLABW_OFF
      PARAMETER(CPLPAD_OFF=CPLSAL_OFF+NUMTOT*NUMCPL)
      PARAMETER(CPLPRG_OFF=CPLPAD_OFF+NUMCPL)
      PARAMETER(CPLPRF_OFF=CPLPRG_OFF+NUMCPL)
      PARAMETER(CPLREF_OFF=CPLPRF_OFF+NUMCPL)
      PARAMETER(CPLERF_OFF=CPLREF_OFF+NUMCPL)
      PARAMETER(CPLTER_OFF=CPLERF_OFF+NUMCPL)
      PARAMETER(CPLWON_OFF=CPLTER_OFF+NUMCPL)
      PARAMETER(CPLPOL_OFF=CPLWON_OFF+NUMCPL)
      PARAMETER(CPLTPL_OFF=CPLPOL_OFF+2*NUMCPL)
      PARAMETER(CPLTBK_OFF=CPLTPL_OFF+NUMCPL)
      PARAMETER(CPLBRK_OFF=CPLTBK_OFF+NUMCPL)
      PARAMETER(CPLABW_OFF=CPLBRK_OFF+2*NUMCPL)

      INTEGER*4 CPLODS_OFF, CPLWIN_OFF, CPLHLD_OFF
      INTEGER*4 CPLTAX_OFF, CPLOTX_OFF, CPLMID_OFF, CPLUTX_OFF 
      INTEGER*4 CPLHST_OFF, CPLORM_OFF, CPLENM_OFF, CPLDES_OFF 
      INTEGER*4 CPLNMS_OFF, CPLPRC_OFF
      PARAMETER(CPLODS_OFF=CPLABW_OFF+NUMCPL)
      PARAMETER(CPLWIN_OFF=CPLODS_OFF+MAXCPLTI*NUMCPL)
      PARAMETER(CPLHLD_OFF=CPLWIN_OFF+2*MAXCPLTI*NUMCPL)
      PARAMETER(CPLTAX_OFF=CPLHLD_OFF+2*MAXCPLTI*NUMCPL)
      PARAMETER(CPLOTX_OFF=CPLTAX_OFF+NUMCPL)
      PARAMETER(CPLMID_OFF=CPLOTX_OFF+NUMTOT*NUMCPL)
      PARAMETER(CPLUTX_OFF=CPLMID_OFF+NUMTOT*NUMCPL)
      PARAMETER(CPLHST_OFF=CPLUTX_OFF+NUMTOT*NUMCPL)
      PARAMETER(CPLORM_OFF=CPLHST_OFF+MAXCPLTI*NUMCPL)
      PARAMETER(CPLENM_OFF=CPLORM_OFF+NUMTOT*NUMCPL)
      PARAMETER(CPLDES_OFF=CPLENM_OFF + (CPLENM_LEN/4)*2*NUMCPL)
      PARAMETER(CPLNMS_OFF=CPLDES_OFF + (CPLDES_LEN/4)*2*NUMCPL)

      INTEGER*4 CPLSTA_OFF, CPLEST_OFF, CPLSBR_OFF, CPLREV_OFF
      INTEGER*4 CPLPFN_OFF, CPLRTM_OFF, CPLSPR_OFF, CPLTVC_OFF
      INTEGER*4 CPLEVD_OFF, CPLEVT_OFF
      PARAMETER(CPLSTA_OFF=CPLNMS_OFF + 
     *			   ((CPLNMS_LEN/4)*MAXCPLRW*NUMCPL))
      PARAMETER(CPLEST_OFF=CPLSTA_OFF+MAXCPLRW*NUMCPL)
      PARAMETER(CPLEVD_OFF=CPLEST_OFF+2*NUMCPL)
      PARAMETER(CPLEVT_OFF=CPLEVD_OFF+2*NUMCPL)
      PARAMETER(CPLSBR_OFF=CPLEVT_OFF+2*NUMCPL)
      PARAMETER(CPLREV_OFF=CPLSBR_OFF+MAXCPLRW*NUMCPL)
      PARAMETER(CPLPFN_OFF=CPLREV_OFF+NUMCPL)
      PARAMETER(CPLRTM_OFF=CPLPFN_OFF+5*NUMCPL)
      PARAMETER(CPLPRC_OFF=CPLRTM_OFF+MAXCPLRW*NUMCPL)
      PARAMETER(CPLSPR_OFF=CPLPRC_OFF+NUMCPL)
      PARAMETER(CPLTVC_OFF=CPLSPR_OFF + NUMCPL)

      INTEGER*4 CPLMDS_OFF
      PARAMETER(CPLMDS_OFF = CPLTVC_OFF + (CPLTVC_LEN/4)*NUMCPL)

      INTEGER*4 CPLRWS_OFF, CPLWCP_OFF, CPLWBT_OFF
      PARAMETER(CPLRWS_OFF = CPLMDS_OFF + (MAXMLTD_AVL/4)*NUMCPL)
      PARAMETER(CPLWCP_OFF = CPLRWS_OFF + NUMCPL)
      PARAMETER(CPLWBT_OFF = CPLWCP_OFF + MAXCPLTI*NUMCPL)


      INTEGER*4 CPLWRO_OFF, CPLWRA_OFF, CPLWPO_OFF, CPLWPA_OFF
      INTEGER*4 CPLWPR_OFF, CPLODT_OFF
      PARAMETER(CPLWRO_OFF = CPLWBT_OFF + NUMTOT*MAXCPLTI*NUMCPL)
      PARAMETER(CPLWRA_OFF = CPLWRO_OFF + NUMTOT*2*NUMCPL)
      PARAMETER(CPLWPO_OFF = CPLWRA_OFF + NUMTOT*2*NUMCPL)
      PARAMETER(CPLWPA_OFF = CPLWPO_OFF + NUMTOT*2*NUMCPL)
      PARAMETER(CPLWPR_OFF = CPLWPA_OFF + NUMTOT*2*NUMCPL)
      PARAMETER(CPLODT_OFF = CPLWPR_OFF + NUMTOT*2*NUMCPL)

      INTEGER*4 CPLCMB_OFF
      PARAMETER(CPLCMB_OFF = CPLODT_OFF + MAXCPLRW/2*MAXCPLRW/2*NUMCPL)

      INTEGER*4 CPLLAT_OFF
      PARAMETER(CPLLAT_OFF = CPLCMB_OFF + NUMCPL)

      INTEGER*4 CPLFRS_OFF
      PARAMETER(CPLFRS_OFF = CPLLAT_OFF + NUMLAT*NUMCPL)

      INTEGER*4 CPLFRE_OFF
      PARAMETER(CPLFRE_OFF = CPLFRS_OFF + 95*NUMCPL)

      INTEGER*4 CPLSEC_SIZE, CPLSEC_NUM, CPLLEN
      PARAMETER(CPLSEC_SIZE = 2048)
      PARAMETER(CPLSEC_NUM = NINT(FLOAT((CPLFRE_OFF-2)/
     *                       CPLSEC_SIZE)+.5))
      PARAMETER(CPLLEN = CPLSEC_SIZE * CPLSEC_NUM)

        COMMON /CPLCOM/
     *   CPLSTS(NUMCPL),
     *   CPLWEK(NUMCPL),
     *   CPLDAT(NUMCPL),
     *   CPLDRW(NUMCPL),
     *   CPLBSD(NUMCPL),
     *   CPLESD(NUMCPL),
     *   CPLPUP(NUMCPL),
     *   CPLUPD(NUMCPL),
     *   CPLCTM(NUMCPL),
     *   CPLTIM(NUMCPL),
     *   CPLSER(NUMCPL),
     *   CPLSAL(NUMTOT,NUMCPL),
     *   CPLPAD(NUMCPL),
     *   CPLPRG(NUMCPL),
     *   CPLPRF(NUMCPL),
     *   CPLREF(NUMCPL)
  
      COMMON /CPLCOM/
     *   CPLERF(NUMCPL),
     *   CPLTER(NUMCPL),
     *   CPLWON(NUMCPL),
     *   CPLPOL(2,NUMCPL),
     *   CPLTPL(NUMCPL),
     *   CPLTBK(NUMCPL),
     *   CPLBRK(2,NUMCPL),
     *   CPLABW(NUMCPL),
     *   CPLODS(MAXCPLTI,NUMCPL),
     *   CPLWIN(2,MAXCPLTI,NUMCPL),
     *   CPLHLD(2,MAXCPLTI,NUMCPL),
     *   CPLTAX(NUMCPL)

        COMMON /CPLCOM/
     *   CPLOTX(NUMTOT,NUMCPL),
     *   CPLMID(NUMTOT,NUMCPL),
     *   CPLUTX(NUMTOT,NUMCPL),
     *   CPLHST(MAXCPLTI,NUMCPL),
     *   CPLORM(NUMTOT,NUMCPL),
     *   CPLENM(CPLENM_LEN/4,2,NUMCPL),
     *   CPLDES(CPLDES_LEN/4,2,NUMCPL),
     *   CPLNMS(CPLNMS_LEN/4,MAXCPLRW,NUMCPL),
     *   CPLSTA(MAXCPLRW,NUMCPL),
     *   CPLEST(2,NUMCPL),
     *   CPLEVD(2,NUMCPL),
     *   CPLEVT(2,NUMCPL),
     *   CPLSBR(MAXCPLRW,NUMCPL)

        COMMON /CPLCOM/
     *   CPLREV(NUMCPL),
     *   CPLPFN(5,NUMCPL),
     *   CPLRTM(MAXCPLRW,NUMCPL),
     *   CPLPRC(NUMCPL),
     *   CPLSPR(NUMCPL),
     *   CPLTVC(CPLTVC_LEN/4,NUMCPL),
     *   CPLMDS(MAXMLTD_AVL,NUMCPL)

       COMMON /CPLCOM/
     *   CPLRWS(NUMCPL),
     *   CPLWCP(MAXCPLTI,NUMCPL),
     *   CPLWBT(NUMTOT,MAXCPLTI,NUMCPL),
     *   CPLWRO(NUMTOT,2,NUMCPL),
     *   CPLWRA(NUMTOT,2,NUMCPL),
     *   CPLWPO(NUMTOT,2,NUMCPL),
     *   CPLWPA(NUMTOT,2,NUMCPL),
     *   CPLWPR(NUMTOT,2,NUMCPL),
     *   CPLODT(MAXCPLRW/2*MAXCPLRW/2,NUMCPL),
     *   CPLCMB(NUMCPL),
     *   CPLLAT(NUMLAT,NUMCPL),
     *	 CPLFRS(95,NUMCPL),
     *   CPLFRE(CPLLEN - CPLFRE_OFF + 1)

        COMMON /CPLCOM/
     *   CPPOOL(MAXCPLRW/2*MAXCPLRW/2,VALCPL,TYPCPL,NUMCPL),
     *   CPPSORT(2,MAXCPLRW/2*MAXCPLRW/2,NUMCPL)

        INTEGER*4 CPLSTS,CPLWEK,CPLDAT,CPLBSD,CPLESD,CPLCTM,CPLTIM
        INTEGER*4 CPLSAL,CPLPAD,CPLPRG,CPLREF,CPLWON,CPLPOL,CPLTPL
        INTEGER*4 CPLTBK,CPLBRK,CPLABW,CPLODS,CPLWIN,CPLHLD,CPLTAX
        INTEGER*4 CPLOTX,CPLMID,CPLUTX,CPLHST,CPLORM,CPLENM
        INTEGER*4 CPLDES,CPLNMS,CPLREV,CPLFRE,CPLPUP,CPLUPD,CPLSTA
        INTEGER*4 CPLSBR,CPLPFN,CPLDRW,CPLRTM,CPLSER,CPLPRF,CPLERF
        INTEGER*4 CPLTER,CPLSPR,CPLPRC,CPLTVC,CPLFRS,CPLEST
	INTEGER*4 CPLEVD,CPLEVT,CPLCMB,CPLLAT

        BYTE      CPLMDS

	INTEGER*4 CPLRWS,CPLWCP,CPLWBT
        INTEGER*4 CPLWRO,CPLWRA,CPLWPO,CPLWPA,CPLWPR,CPLODT

        INTEGER*4 CPPOOL,CPPSORT
        INTEGER*4 CPLPOOL_LEN, CPLPSEC_NUM
        PARAMETER (CPLPOOL_LEN = MAXCPLRW/2*MAXCPLRW/2*
     *                           VALCPL*TYPCPL*NUMCPL +
     *                           2*MAXCPLRW/2*MAXCPLRW/2*NUMCPL)
        PARAMETER (CPLPSEC_NUM = NINT(FLOAT((CPLPOOL_LEN-1)/
     *                           CPLSEC_SIZE)+.5))

C EQUIVALENCE FOR CHECKPOINT

        INTEGER*4 CPLCSB,CPLBLK
        PARAMETER(CPLCSB = CPLSEC_NUM + CPLPSEC_NUM)  !NUM CPLCOM 2048 BLOCKS
        DIMENSION CPLBLK(2048,CPLCSB)
        EQUIVALENCE(CPLBLK(1,1),CPLSTS(1))

        VOLATILE /CPLCOM/

        INTEGER*4        FRST_CPLCOM(2)
        EQUIVALENCE     (FRST_CPLCOM, CPLBLK(1,1))
        INTEGER*4        LAST_CPLCOM
        EQUIVALENCE     (LAST_CPLCOM, CPLBLK(2048,CPLCSB))


