C LSTREC.DEF
C
C V02 30-JUN-2000 UXN LSTLAT ADDED.
C V01 13-MAY-1999 UXN INITIAL RELEASE.
C  
C LOGICAL SUPER TRIPLE GAME RECORD LAYOUT 
C
C     LSTSTS(NUMSTR)                         ; GAME STATUS
C     LSTWEK(NUMSTR)                         ; WEEK NUMBER
C     LSTDAT(NUMSTR)                         ; DRAW DATE
C     LSTDRW(NUMSTR)                         ; DRAW NUMBER
C     LSTBSD(NUMSTR)                         ; BEGINNING SALES DATE
C     LSTESD(NUMSTR)                         ; ENDING SALES DATE
C     LSTPUP(NUMSTR)                         ; LAST PRUGE UPDATE  (FILE ONLY)
C     LSTUPD(NUMSTR)                         ; LAST FILE UPDATE   (FILE ONLY)
C     LSTCTM(NUMSTR)                         ; ACTUAL TIME WHEN CLOSED
C     LSTTIM(NUMSTR)                         ; TIME WHEN GAME SHOULD CLOSE
C     LSTSER(NUMSTR)                         ; LAST SERIAL NUMBER
C     LSTSAL(NUMTOT,NUMSTR)                  ; TOTAL SALES (COUNT , AMOUNT)
C     LSTPAD(NUMSTR)                         ; PRIZES PAID + REFUNDS
C     LSTPRG(NUMSTR)                         ; PRIZES PURGED
C     LSTPRF(NUMSTR)                         ; PAID REFUNDS
C     LSTREF(NUMSTR)                         ; TOTAL REFUND AMOUNT
C     LSTERF(NUMSTR)                         ; EARLY REFUNDS PAID
C     LSTTER(NUMSTR)                         ; TOTAL EARLY REFUNDS (LIAB)
C     LSTWON(NUMSTR)                         ; PRIZES WON
C     LSTPOL(2,NUMSTR)                       ; ROLL POOL
C     LSTTPL(NUMSTR)                         ; TOTAL PRIZE POOL
C     LSTTBK(NUMSTR)                         ; TOTAL BREAKAGE
C     LSTBRK(2,NUMSTR)                       ; WINNING ROUNDING POT
C     LSTABW(NUMSTR)                         ; AMOUNT BET ON WINNING SCORE
C     LSTODS(MAXSTRTI,NUMSTR)                ; WINNING ODDS
C     LSTWIN(3,MAXSTRTI,NUMSTR)              ; WINNING RESULTS
C     LSTHLD(3,MAXSTRTI,NUMSTR)              ; WINNING RESULTS HOLD
C     LSTTAX(NUMSTR)                         ; WINNING TAXES
C     LSTOTX(NUMTOT,NUMSTR)                  ; OVER TAX LIMIT
C     LSTMID(NUMTOT,NUMSTR)                  ; >REDMIN <REDMAX
C     LSTUTX(NUMTOT,NUMSTR)                  ; UNDER TAX LIMIT
C     LSTHST(MAXSTRTI,NUMSTR)                ; HIGHEST WINNER PER WINING COMB
C     LSTORM(NUMTOT,NUMSTR)                  ; OVER REDMAX
C     LSTENM(STRENM_LEN/4,NUMSTR)            ; EVENT NAME
C     LSTDES(STRDES_LEN/4,NUMSTR)            ; GAME DESCRIPTION
C     LSTNMS(STRNMS_LEN/4,MAXSTRRW,NUMSTR)   ; ROW NAMES
C     LSTSTA(MAXSTRRW,NUMSTR)                ; ROW STATUS 1 THROUGH MAXTRW
C     LSTSBR(MAXSTRRW,NUMSTR)                ; SALES BY ROW TABLE
C     LSTREV(NUMSTR)                         ; REV #
C     LSTPFN(5,NUMSTR)                       ; POOL FILE NAME
C     LSTRTM(MAXSTRRW,NUMSTR)                ; ROW CLOSE TIMES
C     LSTPRC(NUMSTR)                         ; BASE PRICE
C     LSTSPR(NUMSTR)                         ; POOL PERCENTAGE
C     LSTTVC(STRTVC_LEN/4,NUMSTR)    	     ; TV-CHANEL NAME
C     LSTMDS(MAXMLTD_AVL,NUMSTR)	     ; MULTI DRAW SELECTED TABLE
C						(52 BYTE / 4 = 13)
C     LSTRWS(NUMSTR)			     ; ACTUAL # OF ROWS USED.
C     LSTWCP(MAXSTRTI,NUMSTR)	             ; # WINNING COUPONS PALYED.
C     LSTWBT(NUMTOT,MAXSTRTI,NUMSTR)	     ; CNT, AMT WINNERS PLAYED.
C     LSTWRO(NUMTOT,2,NUMSTR)                ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     LSTWRA(NUMTOT,2,NUMSTR)                ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     LSTWPO(NUMTOT,2,NUMSTR)                ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     LSTWPA(NUMTOT,2,NUMSTR)                ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     LSTWPR(NUMTOT,2,NUMSTR)                ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C					     ; (1=PRWON,2=PRPAD)
C     LSTPCC(NUMSTR)		             ; Partially closed combinations. If this
C                                            ; field is set to 1 then combinations
C                                            ; xx-16-xx, xx-xx-16, 17-xx-xx, xx-xx-17,
C                                            ; 18-xx-xx, xx-18-xx cannot be played.
C     LSTCMB(NUMSTR)                         ; NUMBER OF WINNING COMBINATIONS
C     LSSLAT(NUMLAT,NUMSTR)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C
C LOGICAL GAME FILE VARIABLE OFFSETS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1990 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C
C OFFSET PARAMETERS AND EQUIVALENCES
C
	INTEGER*4 LSTSTS_OFF, LSTWEK_OFF, LSTDAT_OFF, LSTDRW_OFF
	INTEGER*4 LSTBSD_OFF, LSTESD_OFF, LSTPUP_OFF, LSTUPD_OFF
	INTEGER*4 LSTCTM_OFF, LSTTIM_OFF, LSTSER_OFF, LSTSAL_OFF
	PARAMETER(LSTSTS_OFF = 1)		
	PARAMETER(LSTWEK_OFF = LSTSTS_OFF + NUMSTR)
	PARAMETER(LSTDAT_OFF = LSTWEK_OFF + NUMSTR)
	PARAMETER(LSTDRW_OFF = LSTDAT_OFF + NUMSTR)
	PARAMETER(LSTBSD_OFF = LSTDRW_OFF + NUMSTR)
	PARAMETER(LSTESD_OFF = LSTBSD_OFF + NUMSTR)
	PARAMETER(LSTPUP_OFF = LSTESD_OFF + NUMSTR)
	PARAMETER(LSTUPD_OFF = LSTPUP_OFF + NUMSTR)
	PARAMETER(LSTCTM_OFF = LSTUPD_OFF + NUMSTR)
	PARAMETER(LSTTIM_OFF = LSTCTM_OFF + NUMSTR)
	PARAMETER(LSTSER_OFF = LSTTIM_OFF + NUMSTR)
	PARAMETER(LSTSAL_OFF = LSTSER_OFF + NUMSTR)

	INTEGER*4 LSTPAD_OFF, LSTPRG_OFF, LSTPRF_OFF, LSTREF_OFF
	INTEGER*4 LSTERF_OFF, LSTTER_OFF, LSTWON_OFF, LSTPOL_OFF
	INTEGER*4 LSTTPL_OFF, LSTTBK_OFF, LSTBRK_OFF, LSTABW_OFF
	PARAMETER(LSTPAD_OFF = LSTSAL_OFF + NUMTOT * NUMSTR)
	PARAMETER(LSTPRG_OFF = LSTPAD_OFF + NUMSTR)
	PARAMETER(LSTPRF_OFF = LSTPRG_OFF + NUMSTR)
	PARAMETER(LSTREF_OFF = LSTPRF_OFF + NUMSTR)
	PARAMETER(LSTERF_OFF = LSTREF_OFF + NUMSTR)
	PARAMETER(LSTTER_OFF = LSTERF_OFF + NUMSTR)
	PARAMETER(LSTWON_OFF = LSTTER_OFF + NUMSTR)
	PARAMETER(LSTPOL_OFF = LSTWON_OFF + NUMSTR)
	PARAMETER(LSTTPL_OFF = LSTPOL_OFF + 2 * NUMSTR)
	PARAMETER(LSTTBK_OFF = LSTTPL_OFF + NUMSTR)
	PARAMETER(LSTBRK_OFF = LSTTBK_OFF + NUMSTR)
	PARAMETER(LSTABW_OFF = LSTBRK_OFF + 2 * NUMSTR)

	INTEGER*4 LSTODS_OFF, LSTWIN_OFF, LSTHLD_OFF, LSTTAX_OFF
	INTEGER*4 LSTOTX_OFF, LSTMID_OFF, LSTUTX_OFF, LSTHST_OFF
	INTEGER*4 LSTORM_OFF, LSTENM_OFF, LSTDES_OFF, LSTNMS_OFF
	PARAMETER(LSTODS_OFF = LSTABW_OFF + NUMSTR)
	PARAMETER(LSTWIN_OFF = LSTODS_OFF + MAXSTRTI * NUMSTR)
	PARAMETER(LSTHLD_OFF = LSTWIN_OFF + 3 * MAXSTRTI * NUMSTR)
	PARAMETER(LSTTAX_OFF = LSTHLD_OFF + 3 * MAXSTRTI * NUMSTR)
	PARAMETER(LSTOTX_OFF = LSTTAX_OFF + NUMSTR)
	PARAMETER(LSTMID_OFF = LSTOTX_OFF + NUMTOT * NUMSTR)
	PARAMETER(LSTUTX_OFF = LSTMID_OFF + NUMTOT * NUMSTR)
	PARAMETER(LSTHST_OFF = LSTUTX_OFF + NUMTOT * NUMSTR)
	PARAMETER(LSTORM_OFF = LSTHST_OFF + MAXSTRTI * NUMSTR)
	PARAMETER(LSTENM_OFF = LSTORM_OFF + NUMTOT*NUMSTR)
	PARAMETER(LSTDES_OFF = LSTENM_OFF + (STRENM_LEN/4) * NUMSTR)
	PARAMETER(LSTNMS_OFF = LSTDES_OFF + (STRDES_LEN/4) * NUMSTR)

	INTEGER*4 LSTSTA_OFF, LSTSBR_OFF, LSTREV_OFF, LSTPFN_OFF
	INTEGER*4 LSTRTM_OFF, LSTPRC_OFF, LSTSPR_OFF, LSTTVC_OFF
	INTEGER*4 LSTMDS_OFF
	PARAMETER(LSTSTA_OFF = LSTNMS_OFF + (STRNMS_LEN/4)*MAXSTRRW*NUMSTR)
	PARAMETER(LSTSBR_OFF = LSTSTA_OFF + MAXSTRRW * NUMSTR)
	PARAMETER(LSTREV_OFF = LSTSBR_OFF + MAXSTRRW * NUMSTR)
	PARAMETER(LSTPFN_OFF = LSTREV_OFF + NUMSTR)
	PARAMETER(LSTRTM_OFF = LSTPFN_OFF + 5 * NUMSTR)
	PARAMETER(LSTPRC_OFF = LSTRTM_OFF + MAXSTRRW * NUMSTR)
	PARAMETER(LSTSPR_OFF = LSTPRC_OFF + NUMSTR)
	PARAMETER(LSTTVC_OFF = LSTSPR_OFF + NUMSTR)
	PARAMETER(LSTMDS_OFF = LSTTVC_OFF + (STRTVC_LEN/4) * NUMSTR)		

        INTEGER*4 LSTWRO_OFF, LSTWRA_OFF, LSTWPO_OFF, LSTWPA_OFF
        INTEGER*4 LSTWPR_OFF, LSTRWS_OFF, LSTWCP_OFF
	INTEGER*4 LSTWBT_OFF
	PARAMETER(LSTRWS_OFF = LSTMDS_OFF + (MAXMLTD_AVL/4) * NUMSTR)
	PARAMETER(LSTWCP_OFF = LSTRWS_OFF + NUMSTR)
	PARAMETER(LSTWBT_OFF = LSTWCP_OFF + MAXSTRTI * NUMSTR)
        PARAMETER(LSTWRO_OFF = LSTWBT_OFF + NUMTOT * MAXSTRTI * NUMSTR)
        PARAMETER(LSTWRA_OFF = LSTWRO_OFF + NUMTOT * 2 * NUMSTR)
        PARAMETER(LSTWPO_OFF = LSTWRA_OFF + NUMTOT * 2 * NUMSTR)
        PARAMETER(LSTWPA_OFF = LSTWPO_OFF + NUMTOT * 2 * NUMSTR)
        PARAMETER(LSTWPR_OFF = LSTWPA_OFF + NUMTOT * 2 * NUMSTR)

	INTEGER*4 LSTPCC_OFF
	PARAMETER(LSTPCC_OFF =  LSTWPR_OFF + NUMTOT * 2 * NUMSTR)

	INTEGER*4 LSTCMB_OFF 
	PARAMETER(LSTCMB_OFF = LSTPCC_OFF + NUMSTR)

	INTEGER*4 LSTLAT_OFF 
	PARAMETER(LSTLAT_OFF = LSTCMB_OFF + NUMSTR)

        INTEGER*4 LSTRECLEN
        PARAMETER(LSTRECLEN =  LSTLAT_OFF + NUMLAT*NUMSTR -1)
C                                                                               
C LOGICAL RECORD DEFINITION                                                     
C                                                                               
        INTEGER*4 LSTREC(LSTRECLEN)

	INTEGER*4 LSTSTS(NUMSTR),LSTWEK(NUMSTR)
        INTEGER*4 LSTDAT(NUMSTR),LSTBSD(NUMSTR)
	INTEGER*4 LSTESD(NUMSTR),LSTCTM(NUMSTR)
	INTEGER*4 LSTTIM(NUMSTR),LSTSAL(NUMTOT,NUMSTR)
	INTEGER*4 LSTPAD(NUMSTR),LSTPRG(NUMSTR)
	INTEGER*4 LSTREF(NUMSTR),LSTWON(NUMSTR)
	INTEGER*4 LSTPOL(2,NUMSTR),LSTTPL(NUMSTR)
	INTEGER*4 LSTTBK(NUMSTR),LSTBRK(2,NUMSTR)
	INTEGER*4 LSTABW(NUMSTR),LSTODS(MAXSTRTI,NUMSTR)
	INTEGER*4 LSTWIN(3,MAXSTRTI,NUMSTR),LSTTAX(NUMSTR)
	INTEGER*4 LSTOTX(NUMTOT,NUMSTR),LSTHLD(3,MAXSTRTI,NUMSTR)
	INTEGER*4 LSTMID(NUMTOT,NUMSTR),LSTUTX(NUMTOT,NUMSTR)
	INTEGER*4 LSTHST(MAXSTRTI,NUMSTR),LSTORM(2,NUMSTR)
	INTEGER*4 LSTENM(STRENM_LEN/4,NUMSTR)
	INTEGER*4 LSTDES(STRDES_LEN/4,NUMSTR)
	INTEGER*4 LSTNMS(STRNMS_LEN/4,MAXSTRRW,NUMSTR)
	INTEGER*4 LSTREV(NUMSTR),LSTPUP(NUMSTR)
	INTEGER*4 LSTUPD(NUMSTR),LSTSTA(MAXSTRRW,NUMSTR)
	INTEGER*4 LSTSBR(MAXSTRRW,NUMSTR),LSTPFN(5,NUMSTR)
	INTEGER*4 LSTERF(NUMSTR),LSTTER(NUMSTR)
	INTEGER*4 LSTDRW(NUMSTR)
	INTEGER*4 LSTRTM(MAXSTRRW,NUMSTR),LSTSER(NUMSTR)
	INTEGER*4 LSTPRF(NUMSTR),LSTSPR(NUMSTR),LSTPRC(NUMSTR)
	INTEGER*4 LSTTVC(STRTVC_LEN/4,NUMSTR)

	BYTE	  LSTMDS(MAXMLTD_AVL,NUMSTR)

	INTEGER*4 LSTRWS(NUMSTR),LSTWCP(MAXSTRTI,NUMSTR)
        INTEGER*4 LSTWBT(NUMTOT,MAXSTRTI,NUMSTR)
        INTEGER*4 LSTWRO(NUMTOT,2,NUMSTR),LSTWRA(NUMTOT,2,NUMSTR)
	INTEGER*4 LSTWPO(NUMTOT,2,NUMSTR)
        INTEGER*4 LSTWPA(NUMTOT,2,NUMSTR),LSTWPR(NUMTOT,2,NUMSTR)       
	INTEGER*4 LSTPCC(NUMSTR),LSTCMB(NUMSTR),LSTLAT(NUMLAT,NUMSTR)
C
	EQUIVALENCE(LSTSTS,LSTREC(LSTSTS_OFF))
	EQUIVALENCE(LSTWEK,LSTREC(LSTWEK_OFF))
	EQUIVALENCE(LSTDAT,LSTREC(LSTDAT_OFF))
	EQUIVALENCE(LSTDRW,LSTREC(LSTDRW_OFF))
	EQUIVALENCE(LSTBSD,LSTREC(LSTBSD_OFF))
	EQUIVALENCE(LSTESD,LSTREC(LSTESD_OFF))
	EQUIVALENCE(LSTPUP,LSTREC(LSTPUP_OFF))
	EQUIVALENCE(LSTUPD,LSTREC(LSTUPD_OFF))
	EQUIVALENCE(LSTCTM,LSTREC(LSTCTM_OFF))
	EQUIVALENCE(LSTTIM,LSTREC(LSTTIM_OFF))
	EQUIVALENCE(LSTSER,LSTREC(LSTSER_OFF))
	EQUIVALENCE(LSTSAL,LSTREC(LSTSAL_OFF))
	EQUIVALENCE(LSTPAD,LSTREC(LSTPAD_OFF))
	EQUIVALENCE(LSTPRG,LSTREC(LSTPRG_OFF))
	EQUIVALENCE(LSTPRF,LSTREC(LSTPRF_OFF))
	EQUIVALENCE(LSTREF,LSTREC(LSTREF_OFF))
	EQUIVALENCE(LSTERF,LSTREC(LSTERF_OFF))
	EQUIVALENCE(LSTTER,LSTREC(LSTTER_OFF))
	EQUIVALENCE(LSTWON,LSTREC(LSTWON_OFF))
	EQUIVALENCE(LSTPOL,LSTREC(LSTPOL_OFF))
	EQUIVALENCE(LSTTPL,LSTREC(LSTTPL_OFF))
	EQUIVALENCE(LSTTBK,LSTREC(LSTTBK_OFF))
	EQUIVALENCE(LSTBRK,LSTREC(LSTBRK_OFF))
	EQUIVALENCE(LSTABW,LSTREC(LSTABW_OFF))
	EQUIVALENCE(LSTODS,LSTREC(LSTODS_OFF))
	EQUIVALENCE(LSTWIN,LSTREC(LSTWIN_OFF))
	EQUIVALENCE(LSTHLD,LSTREC(LSTHLD_OFF))
	EQUIVALENCE(LSTTAX,LSTREC(LSTTAX_OFF))
	EQUIVALENCE(LSTOTX,LSTREC(LSTOTX_OFF))
	EQUIVALENCE(LSTMID,LSTREC(LSTMID_OFF))
	EQUIVALENCE(LSTUTX,LSTREC(LSTUTX_OFF))
	EQUIVALENCE(LSTHST,LSTREC(LSTHST_OFF))
	EQUIVALENCE(LSTORM,LSTREC(LSTORM_OFF))
	EQUIVALENCE(LSTENM,LSTREC(LSTENM_OFF))
	EQUIVALENCE(LSTDES,LSTREC(LSTDES_OFF))
	EQUIVALENCE(LSTNMS,LSTREC(LSTNMS_OFF))
	EQUIVALENCE(LSTSTA,LSTREC(LSTSTA_OFF))
	EQUIVALENCE(LSTSBR,LSTREC(LSTSBR_OFF))
	EQUIVALENCE(LSTREV,LSTREC(LSTREV_OFF))
	EQUIVALENCE(LSTPFN,LSTREC(LSTPFN_OFF))
	EQUIVALENCE(LSTRTM,LSTREC(LSTRTM_OFF))
	EQUIVALENCE(LSTPRC,LSTREC(LSTPRC_OFF))
	EQUIVALENCE(LSTSPR,LSTREC(LSTSPR_OFF))
	EQUIVALENCE(LSTTVC,LSTREC(LSTTVC_OFF))
	EQUIVALENCE(LSTMDS,LSTREC(LSTMDS_OFF))
	EQUIVALENCE(LSTRWS,LSTREC(LSTRWS_OFF))
	EQUIVALENCE(LSTWCP,LSTREC(LSTWCP_OFF))
	EQUIVALENCE(LSTWBT,LSTREC(LSTWBT_OFF))
        EQUIVALENCE(LSTWRO,LSTREC(LSTWRO_OFF))
        EQUIVALENCE(LSTWRA,LSTREC(LSTWRA_OFF))
        EQUIVALENCE(LSTWPO,LSTREC(LSTWPO_OFF))
        EQUIVALENCE(LSTWPA,LSTREC(LSTWPA_OFF))
        EQUIVALENCE(LSTWPR,LSTREC(LSTWPR_OFF))
        EQUIVALENCE(LSTPCC,LSTREC(LSTPCC_OFF))
        EQUIVALENCE(LSTCMB,LSTREC(LSTCMB_OFF))
        EQUIVALENCE(LSTLAT,LSTREC(LSTLAT_OFF))
