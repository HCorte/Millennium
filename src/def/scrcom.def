C SCRCOM.DEF
C
C V06 30-NOV-2000 UXN SCRLAT added.
C V05 18-DEC-1993 HXK ADDED FIELDS FOR COUNTS AND AMOUNTS FOR 
C                     PRIZES/REFUNDS WON AND PAID.
C V04 17-JUN-1993 GXA Released for Finland Dec Conversion / Oddset.
C                     (Parameterized common layout and space calculations).
C V03 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V02 07-OCT-1991 MTK INITAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C
C SCORE GAME AND POOL COMMONS
C
C
C GAME VARIABLE ARRAYS
C
C     SCRSTS(NUMSCR)                 ; GAME STATUS
C     SCRWEK(NUMSCR)                 ; WEEK NUMBER
C     SCRDAT(NUMSCR)                 ; DRAW DATE
C     SCRDRW(NUMSCR)                 ; DRAW NUMBER
C     SCRBSD(NUMSCR)                 ; BEGINNING SALES DATE
C     SCRESD(NUMSCR)                 ; ENDING SALES DATE
C     SCRPUP(NUMSCR)                 ; LAST PURGE UPDATE   (FILE ONLY)
C     SCRUPD(NUMSCR)                 ; LAST FILE UPDATE    (FILE ONLY)
C     SCRCTM(NUMSCR)                 ; ACTUAL TIME WHEN CLOSED
C     SCRTIM(NUMSCR)                 ; TIME WHEN GAME SHOULD CLOSE
C     SCRSER(NUMSCR)                 ; LAST SERIAL NUMBER
C     SCRSAL(NUMSCR)                 ; TOTAL SALES
C     SCRPAD(NUMSCR)                 ; PRIZES PAID + REFUNDS
C     SCRPRG(NUMSCR)                 ; PRIZES PURGED
C     SCRPRF(NUMSCR)                 ; PAID REFUNDS
C     SCRREF(NUMSCR)                 ; TOTAL REFUND AMOUNT
C     SCRWON(NUMSCR)                 ; PRIZES WON
C     SCRPOL(2,NUMSCR)               ; ROLL POOL
C     SCRTPL(NUMSCR)                 ; TOTAL PRIZE POOL
C     SCRTBK(NUMSCR)                 ; TOTAL BREAKAGE
C     SCRBRK(2,NUMSCR)               ; WINNING ROUNDING POT
C     SCRABW(NUMSCR)                 ; AMOUNT BET ON WINNING SCORE
C     SCRODS(NUMSCR)                 ; WINNING ODDS
C     SCRWIN(2,NUMSCR)               ; WINNING RESULTS
C     SCRHLD(2,NUMSCR)               ; WINNING RESULTS HOLD
C     SCRTAX(NUMSCR)                 ; WINNING TAXES
C     SCRFUL(NUMTOT,MAXFUL,NUMSCR)   ; FULL SYS SALES CNT AMT
C     SCROTX(NUMTOT,NUMSCR)          ; OVER TAX LIMIT
C     SCRMID(NUMTOT,NUMSCR)          ; >REDMIN <REDMAX
C     SCRUTX(NUMTOT,NUMSCR)          ; UNDER TAX LIMIT
C     SCRHST(NUMSCR)                 ; HIGHEST WINNER FOR THIS GAME
C     SCRORM(NUMTOT,NUMSCR)          ; OVER REDMAX
C     SCRNM1(SNMS_LEN/4,NUMSCR)      ; TEAM 1 NAME
C     SCRNM2(SNMS_LEN/4,NUMSCR)      ; TEAM 2 NAME
C     SCRREV(NUMSCR)                 ; REV #
C     SCRTYP(NUMSCR)                 ; GAME TYPE 1=SOC. 2=HOCK.
C     SCRPFN(5,NUMSCR)               ; POOL FILE NAME
C     SCRPRC(NUMSCR)                 ; BASE PRICE
C     SCRSPR(NUMSCR)                 ; POOL PERCENTAGE
C     SCRDES(SDES_LEN/4,NUMSCR)      ; GAME DESCRIPTION
C     SCRTVC(STVC_LEN/4,NUMSCR)      ; TV-CHANEL NAME
C     SCRMDS(MAXMLTD_AVL,NUMSCR)     ; MULTI DRAW SELECTED TABLE
C                                      (52 BYTE / 4 = 13)
C     SCRWRO(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT REFUNDS ONLY
C     SCRWRA(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT REFUNDS ALTOGETHER
C     SCRWPO(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT PRIZES ONLY
C     SCRWPA(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT PRIZES ALTOGETHER
C     SCRWPR(NUMTOT,2,NUMSCR)        ; WINNING: COUNT,AMOUNT PRIZES AND REFUNDS
C                                    ; 1=PRIZES/REFUNDS WON  (PRWON)
C                                    ; 2=PRIZES/REFUNDS PAID (PRPAD)
C     SCRLAT(NUMLAT,NUMSCR)          ; EVENT STARTED BEFORE GAME WAS CLOSED
C                                    ; TICKETS PLAYED LATER SHOULD BE REFUNDED.
C
C     SCRFRE(CALCULATED)             ; FREE SPACE
C
C
C SCORE GAME POOL ARRAYS
C
C     SCPOOL(SLEN,VALS,TYPS,NUMSCR)  ; POOL ARRAY
C     DPOOL(MAXD,VALD,NUMSCR)        ; DISPLAYED ODDS
C     OPOOL(MAXO,VALD,NUMSCR)        ; OUTSIDE DISPLAYED ODDS
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1990 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	INTEGER*4 SCRSTS_OFF, SCRWEK_OFF, SCRDAT_OFF, SCRDRW_OFF
	INTEGER*4 SCRBSD_OFF, SCRESD_OFF, SCRPUP_OFF, SCRUPD_OFF
	INTEGER*4 SCRTIM_OFF, SCRCTM_OFF, SCRSER_OFF, SCRSAL_OFF
	PARAMETER(SCRSTS_OFF=1)
	PARAMETER(SCRWEK_OFF=SCRSTS_OFF+NUMSCR)
	PARAMETER(SCRDAT_OFF=SCRWEK_OFF+NUMSCR)
	PARAMETER(SCRDRW_OFF=SCRDAT_OFF+NUMSCR)
	PARAMETER(SCRBSD_OFF=SCRDRW_OFF+NUMSCR)
	PARAMETER(SCRESD_OFF=SCRBSD_OFF+NUMSCR)
	PARAMETER(SCRPUP_OFF=SCRESD_OFF+NUMSCR)
	PARAMETER(SCRUPD_OFF=SCRPUP_OFF+NUMSCR)
	PARAMETER(SCRCTM_OFF=SCRUPD_OFF+NUMSCR)
	PARAMETER(SCRTIM_OFF=SCRCTM_OFF+NUMSCR)
	PARAMETER(SCRSER_OFF=SCRTIM_OFF+NUMSCR)
	PARAMETER(SCRSAL_OFF=SCRSER_OFF+NUMSCR)
C
	INTEGER*4 SCRPAD_OFF, SCRPRG_OFF, SCRPRF_OFF, SCRREF_OFF
	INTEGER*4 SCRWON_OFF, SCRPOL_OFF, SCRTPL_OFF, SCRTBK_OFF
	INTEGER*4 SCRBRK_OFF, SCRABW_OFF, SCRODS_OFF, SCRWIN_OFF
	PARAMETER(SCRPAD_OFF = SCRSAL_OFF+NUMSCR)
	PARAMETER(SCRPRG_OFF = SCRPAD_OFF+NUMSCR)
	PARAMETER(SCRPRF_OFF = SCRPRG_OFF+NUMSCR)
	PARAMETER(SCRREF_OFF = SCRPRF_OFF+NUMSCR)
	PARAMETER(SCRWON_OFF = SCRREF_OFF+NUMSCR)
	PARAMETER(SCRPOL_OFF = SCRWON_OFF+NUMSCR)
	PARAMETER(SCRTPL_OFF = SCRPOL_OFF+(2*NUMSCR))
	PARAMETER(SCRTBK_OFF = SCRTPL_OFF+NUMSCR)
	PARAMETER(SCRBRK_OFF = SCRTBK_OFF+NUMSCR)
	PARAMETER(SCRABW_OFF = SCRBRK_OFF+(2*NUMSCR))
	PARAMETER(SCRODS_OFF = SCRABW_OFF+NUMSCR)
	PARAMETER(SCRWIN_OFF = SCRODS_OFF+NUMSCR)
C
	INTEGER*4 SCRHLD_OFF, SCRTAX_OFF, SCRFUL_OFF, SCROTX_OFF
	INTEGER*4 SCRMID_OFF, SCRUTX_OFF, SCRHST_OFF, SCRORM_OFF
	INTEGER*4 SCRNM1_OFF, SCRNM2_OFF, SCRREV_OFF, SCRTYP_OFF
	PARAMETER(SCRHLD_OFF = SCRWIN_OFF+(2*NUMSCR))
	PARAMETER(SCRTAX_OFF = SCRHLD_OFF+(2*NUMSCR))
	PARAMETER(SCRFUL_OFF = SCRTAX_OFF+NUMSCR)
	PARAMETER(SCROTX_OFF = SCRFUL_OFF+(NUMTOT*MAXFUL*NUMSCR))
	PARAMETER(SCRMID_OFF = SCROTX_OFF+(NUMTOT*NUMSCR))
	PARAMETER(SCRUTX_OFF = SCRMID_OFF+(NUMTOT*NUMSCR))
	PARAMETER(SCRHST_OFF = SCRUTX_OFF+(NUMTOT*NUMSCR))
	PARAMETER(SCRORM_OFF = SCRHST_OFF+NUMSCR)
	PARAMETER(SCRNM1_OFF = SCRORM_OFF+(NUMTOT*NUMSCR))
	PARAMETER(SCRNM2_OFF = SCRNM1_OFF+(SNMS_LEN/4)*NUMSCR)
	PARAMETER(SCRREV_OFF = SCRNM2_OFF+(SNMS_LEN/4)*NUMSCR)
	PARAMETER(SCRTYP_OFF = SCRREV_OFF+NUMSCR)
C
	INTEGER*4 SCRPFN_OFF, SCRPRC_OFF, SCRSPR_OFF, SCRDES_OFF 
	PARAMETER(SCRPFN_OFF = SCRTYP_OFF+NUMSCR)
	PARAMETER(SCRPRC_OFF = SCRPFN_OFF+(5*NUMSCR))
	PARAMETER(SCRSPR_OFF = SCRPRC_OFF+NUMSCR)
	PARAMETER(SCRDES_OFF = SCRSPR_OFF+NUMSCR)
C
	INTEGER*4 SCRTVC_OFF, SCRMDS_OFF
	PARAMETER(SCRTVC_OFF = SCRDES_OFF + (SDES_LEN/4)*NUMSCR)
	PARAMETER(SCRMDS_OFF = SCRTVC_OFF + (STVC_LEN/4)*NUMSCR)
C
        INTEGER*4 SCRWRO_OFF, SCRWRA_OFF, SCRWPO_OFF, SCRWPA_OFF
        INTEGER*4 SCRWPR_OFF
        PARAMETER(SCRWRO_OFF = SCRMDS_OFF + (MAXMLTD_AVL/4)*NUMSCR)
        PARAMETER(SCRWRA_OFF = SCRWRO_OFF + NUMTOT*2*NUMSCR)
        PARAMETER(SCRWPO_OFF = SCRWRA_OFF + NUMTOT*2*NUMSCR)
        PARAMETER(SCRWPA_OFF = SCRWPO_OFF + NUMTOT*2*NUMSCR)
        PARAMETER(SCRWPR_OFF = SCRWPA_OFF + NUMTOT*2*NUMSCR)
	INTEGER*4 SCRLAT_OFF
	PARAMETER(SCRLAT_OFF = SCRMDS_OFF + NUMTOT*2*NUMSCR)

	INTEGER*4 SCRFRE_OFF
	PARAMETER(SCRFRE_OFF = SCRLAT_OFF + NUMLAT*NUMSCR)
C
        INTEGER*4 SCRSEC_SIZE, SCRSEC_NUM, SCRLEN
        PARAMETER(SCRSEC_SIZE = 2048)
        PARAMETER(SCRSEC_NUM = NINT(FLOAT((SCRFRE_OFF-2)/
     *                         SCRSEC_SIZE)+.5))
        PARAMETER(SCRLEN = SCRSEC_SIZE * SCRSEC_NUM)

	COMMON /SCRCOM/
     *	 SCRSTS(NUMSCR),
     *	 SCRWEK(NUMSCR),
     *	 SCRDAT(NUMSCR),
     *	 SCRDRW(NUMSCR),
     *	 SCRBSD(NUMSCR),
     *	 SCRESD(NUMSCR),
     *	 SCRPUP(NUMSCR),
     *	 SCRUPD(NUMSCR),
     *	 SCRCTM(NUMSCR),
     *	 SCRTIM(NUMSCR),
     *	 SCRSER(NUMSCR),
     *	 SCRSAL(NUMSCR),
     *	 SCRPAD(NUMSCR),
     *	 SCRPRG(NUMSCR),
     *	 SCRPRF(NUMSCR),
     *	 SCRREF(NUMSCR)
	COMMON /SCRCOM/
     *	 SCRWON(NUMSCR),
     *	 SCRPOL(2,NUMSCR),
     *	 SCRTPL(NUMSCR),
     *	 SCRTBK(NUMSCR),
     *	 SCRBRK(2,NUMSCR),
     *	 SCRABW(NUMSCR),
     *	 SCRODS(NUMSCR),
     *	 SCRWIN(2,NUMSCR),
     *	 SCRHLD(2,NUMSCR),
     *	 SCRTAX(NUMSCR),
     *	 SCRFUL(NUMTOT,MAXFUL,NUMSCR)
	COMMON /SCRCOM/
     *	 SCROTX(NUMTOT,NUMSCR),
     *	 SCRMID(NUMTOT,NUMSCR),
     *	 SCRUTX(NUMTOT,NUMSCR),
     *	 SCRHST(NUMSCR),
     *	 SCRORM(NUMTOT,NUMSCR),
     *	 SCRNM1(SNMS_LEN/4,NUMSCR),
     *	 SCRNM2(SNMS_LEN/4,NUMSCR)
	COMMON /SCRCOM/
     *	 SCRREV(NUMSCR),
     *	 SCRTYP(NUMSCR),
     *	 SCRPFN(5,NUMSCR),
     *   SCRPRC(NUMSCR),
     *   SCRSPR(NUMSCR),
     *   SCRDES(SDES_LEN/4,NUMSCR),
     *   SCRTVC(STVC_LEN/4,NUMSCR),
     *   SCRMDS(MAXMLTD_AVL,NUMSCR)
       COMMON /SCRCOM/
     *   SCRWRO(NUMTOT,2,NUMSCR),
     *   SCRWRA(NUMTOT,2,NUMSCR),
     *   SCRWPO(NUMTOT,2,NUMSCR),
     *   SCRWPA(NUMTOT,2,NUMSCR),
     *   SCRWPR(NUMTOT,2,NUMSCR),
     *   SCRLAT(NUMLAT,NUMSCR),
     *	 SCRFRE(SCRLEN - SCRFRE_OFF + 1)
C
	COMMON /SCRCOM/
     *	 SCPOOL(SLEN,VALS,TYPS,NUMSCR),
     *	 DPOOL(MAXD,VALD,NUMSCR),
     *	 OPOOL(MAXO,VALD,NUMSCR)
C
	INTEGER*4 SCRSTS,SCRWEK,SCRDAT,SCRBSD,SCRESD,SCRCTM,SCRTIM
	INTEGER*4 SCRSAL,SCRPAD,SCRPRG,SCRREF,SCRWON,SCRPOL,SCRTPL
	INTEGER*4 SCRTBK,SCRBRK,SCRABW,SCRODS,SCRWIN,SCRHLD,SCRTAX
	INTEGER*4 SCRFUL,SCROTX,SCRMID,SCRUTX,SCRHST,SCRORM,SCRNM1
	INTEGER*4 SCRREV,SCRTYP,SCRFRE,SCRPUP,SCRUPD,SCRPFN,SCRDRW
	INTEGER*4 SCRSER,SCRPRF,SCRNM2,SCRPRC,SCRSPR,SCRDES,SCRTVC
C
	BYTE      SCRMDS
C
        INTEGER*4 SCRWRO,SCRWRA,SCRWPO,SCRWPA,SCRWPR,SCRLAT
C
	INTEGER*4 SCPOOL,DPOOL,OPOOL
	INTEGER*4 SCPOOL_LEN, SCPSEC_NUM
        PARAMETER (SCPOOL_LEN = SLEN*VALS*TYPS*NUMSCR + 
     *                          MAXD*VALD*NUMSCR      +
     *                          MAXO*VALD*NUMSCR)
        PARAMETER (SCPSEC_NUM = NINT(FLOAT((SCPOOL_LEN-1)/
     *                          SCRSEC_SIZE)+.5))
C
C EQUIVALENCE FOR CHECKPOINT
C
	INTEGER*4 SCRBLK,SCRCSB
	PARAMETER(SCRCSB = SCRSEC_NUM + SCPSEC_NUM)!NUMBER OF SCRCOM 2048 BLOCKS
	DIMENSION SCRBLK(2048,SCRCSB)
	EQUIVALENCE(SCRBLK(1,1),SCRSTS(1))
C
	VOLATILE /SCRCOM/
C
        INTEGER*4        FRST_SCRCOM(2)
        EQUIVALENCE     (FRST_SCRCOM, SCRBLK(1,1))
        INTEGER*4        LAST_SCRCOM
        EQUIVALENCE     (LAST_SCRCOM, SCRBLK(2048,SCRCSB))

