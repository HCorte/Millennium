C
C SUBROUTINE CMDX2X
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]CMDX2X.FOV                                   $
C  $Date::   17 Apr 1996 12:39:24                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - cmdx2x.for;1 **
C
C CMDX2X.FOR
C
C V05 12-DEC-97 UXN STATION NUMBER CHECKING ADDED.
C V04 29-DEC-94 WJK MOVE UNSOLICITED STATION CONNECT AND DISCONNECT FROM GLOBAL
C                   TO STATION CLASS
C V03 05-DEC-94 SCD Integrate UK changes into X2X Baseline
C V02 05-APR-94 GPR USE X2X_I4_STATION TO DETERMINE STATION AND TERNUM
C V01 01-DEC-91 DAS RELEASED FOR VAX (NETHERLANDS)
C
C SUBROUTINE TO PROCESS X2X FILE MAINTAINENCE COMMANDS.
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE CMDX2X(TRABUF,MESS)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:X2XREL.DEF'
	INCLUDE 'INCLIB:X2STMES.DEF'
	INCLUDE 'INCLIB:X2FEMES.DEF'
C
	INTEGER*4   MESS(EDLEN)         !Input message
	INTEGER*4   CMDNUM              !Command number
	INTEGER*4   ALLREC(128)         !File buffer
	INTEGER*4   ADDFLG              !New record flag
	INTEGER*4   FILE                !File number relative to GLOBAL
	INTEGER*4   RECORD              !Record to be updated
	INTEGER*4   FIELD               !Field to be updated
	INTEGER*4   VALUE(4)            !Field value
	INTEGER*4   UPDATE              !Update file (Vision commands)
	INTEGER*4   FILFDB(7)           !File descriptor block
	INTEGER*4   STN,TER             !Station/terminal number
	INTEGER*4   PROBUF              !Procom buffer number
	INTEGER*4   FILSEC		!Number of sectors
	INTEGER*4   X2FILSEC		!Function to require # of sectors
	INTEGER*4   OFF, X2FLDNUM, CONF, TEMP, WORDS, ST
C
C
C EXTRACT DATA VALUES.
C
        VALUE(1)=TRABUF(TCMDT3)
        VALUE(2)=TRABUF(TCMDT4)
        VALUE(3)=TRABUF(TCMTER)
        VALUE(4)=TRABUF(TCMLIN)
C
C PROCESS COMMANDS.
C
	MESS(1)=CMD
	CMDNUM=TRABUF(TCMNUM)
C
	GOTO (10,20,20,20,20,20,20,20) CMDNUM
	GOTO 1000
C
C     ============== X2X FILE MAINTAINENCE ===================
C
10	CONTINUE
	ADDFLG=TRABUF(TCMNEW)
	FILE  =TRABUF(TCMDT1)
	FIELD =TRABUF(TCMDT2)
	UPDATE=TRABUF(TAGT)
	RECORD=TRABUF(TCMDT5)
C
C OPEN THE SPECIFIED FILE.
C NOTE: ALL X2X SUBSYSTEM FILES ARE 1 SECTOR IN LENGTH.
C
	CALL OPENW(1,SFNAMES(1,FILE),4,0,0,ST)
	FILSEC=X2FILSEC(FILE)
	IF(FILSEC.GT.1) THEN
	  CALL IOINIT(FILFDB,1,FILSEC*256)
	ELSE
	  ST=-1
	ENDIF
C
	IF(ST.NE.0) THEN
	  TRABUF(TSTAT)=REJT
	  TRABUF(TERR)=INVL
	  MESS(2)=TEGEN
	  MESS(3)=3
	  CALL FASTMOV(SFNAMES(1,FILE),MESS(4),5)
	  MESS(9)=ST
	  CALL QUEMES(MESS)
	  GOTO 8000
	ENDIF
C
C READ THE SPECIFIED RECORD.
C
	CALL READW(FILFDB,RECORD,ALLREC,ST)
	IF(ST.NE.0) THEN
	  TRABUF(TSTAT)=REJT
	  TRABUF(TERR)=INVL
	  MESS(1)=CMD
	  MESS(2)=TEGEN
	  MESS(3)=4
	  CALL FASTMOV(SFNAMES(1,FILE),MESS(4),5)
	  MESS(9)=RECORD
	  CALL QUEMES(MESS)
	  GOTO 8000
	ENDIF
C
C UPDATE THE INFORMATION INTO THE FILE.
C
	IF(FIELD.NE.0) THEN
	  WORDS=1
	  IF(VALUE(2).NE.-1) WORDS=2
	  IF(VALUE(3).NE.-1) WORDS=3
	  IF(VALUE(4).NE.-1) WORDS=4
	  CALL FASTMOV(VALUE,ALLREC(FIELD),WORDS)
	ENDIF
C
C UPDATE MEMORY BASED ON THE FILE NUMBER.
C NOTE: -1 IN VALUE(1) INDICATES A DELETION, SO
C DO NOT UPDATE MEMORY.
C
        IF(FIELD.EQ.1 .AND. VALUE(1).EQ.0) THEN
C
C SKIP DELETIONS.
C
	ELSE
	  IF(FILE.EQ.XGBL) THEN
	    CALL CMDXGBL(FIELD,ALLREC,ADDFLG)
	  ELSE IF(FILE.EQ.XNPC) THEN
	    CALL CMDXNPC(FIELD,ALLREC,ADDFLG)
	  ELSE IF(FILE.EQ.XLPC) THEN
	    CALL CMDXLPC(FIELD,ALLREC,ADDFLG)
	  ELSE IF(FILE.EQ.XSTN) THEN
	    CALL CMDXSTN(FIELD,ALLREC,ADDFLG)
          ELSE IF(FILE.EQ.XSCL) THEN  
            CALL CMDXSCL(FIELD,ALLREC,ADDFLG)                   
 	  ELSE IF(FILE.EQ.XTER) THEN
	    CALL CMDXTER(FIELD,ALLREC,ADDFLG)
	  ELSE IF(FILE.EQ.XBRO) THEN
	    CALL CMDXBRO(FIELD,ALLREC,ADDFLG)
          ELSE IF(FILE.EQ.XTTN) THEN
            CALL CMDXTTN(FIELD,ALLREC,ADDFLG)
          ELSE IF(FILE.EQ.XGRP) THEN
            CALL CMDXGRP(FIELD,ALLREC,ADDFLG)
	  ENDIF
	ENDIF
C
C IF THE UPDATE FILE FLAG IS SET, REWRITE THE RECORD.
C
	IF(UPDATE.EQ.0) THEN
	  CALL WRITEW(FILFDB,RECORD,ALLREC,ST)
	  IF(ST.NE.0) THEN
	    TRABUF(TSTAT)=REJT
	    TRABUF(TERR)=INVL
	    MESS(2)=TEGEN
	    MESS(3)=5
	    CALL FASTMOV(SFNAMES(1,FILE),MESS(4),5)
	    MESS(9)=RECORD
	    CALL QUEMES(MESS)
	    GOTO 8000
	  ENDIF
	ENDIF
C
C IF THE FIELD MODIFICATION IMMEDIATELY EFFECTS A
C STATION, UPDATE THE STATION CONFIGURATION FORCING THE
C STATION TO REQUEST CONFIGURATION.
C
	STN=0
	IF(FILE.EQ.XSPC) THEN
	  STN=ALLREC(1)
	ELSE IF(FILE.EQ.XSTN) THEN
	  STN=ALLREC(1)
	ELSE IF(FILE.EQ.XTER) THEN
	  STN=ALLREC(2)
	ENDIF
	IF(STN.NE.0) THEN
	  CALL ILBYTE(TEMP,IX2XS_CONF,STN-1)
	  CONF=ISHFT(IAND(TEMP,'E0'X),-5)
	  CONF=CONF+1
	  IF(MOD(CONF,8).EQ.0) CONF=0
	  CONF=ISHFT(CONF,5)
	  TEMP=IAND(TEMP,'1F'X)+CONF
	  CALL ISBYTE(TEMP,IX2XS_CONF,STN-1)
	ENDIF
C
C BUILD THE MESSAGE FOR ERRLOG.
C
	IF(VALUE(2).EQ.-1) VALUE(2)=0
	IF(VALUE(3).EQ.-1) VALUE(3)=0
	IF(VALUE(4).EQ.-1) VALUE(4)=0
	MESS(3) = 13
	MESS(4) = VALUE(4)
	MESS(5) = VALUE(3)
	MESS(7) = VALUE(2)
	MESS(8) = FILE
	MESS(9) = X2FLDNUM(FILE,FIELD)
	MESS(10)= VALUE(1)
	MESS(11)= UPDATE
	MESS(12)= RECORD
	GOTO 8000
C
C ================ STATION RESET COMMAND =====================
C
20	CONTINUE
	STN =TRABUF(TCMNEW)
	IF(STN.LE.0.OR.STN.GT.X2X_STATIONS) GOTO 1100   ! V05
	TER =TRABUF(TCMLIN)
	IF(X2XS_STNCLS(STN).LE.0.OR.			! V05
     *     X2XS_STNCLS(STN).GT.X2XC_CLASSES) GOTO 1200
C
C GET A PROCOM BUFFER.
C
	CALL GETBUF(PROBUF)
	IF(PROBUF.LE.0) THEN
	  TRABUF(TSTAT)=REJT
	  TRABUF(TERR)=INVL
	  MESS(2)=TEGEN
	  MESS(3)=20
	  MESS(4)=STN
	  CALL QUEMES(MESS)
	  GOTO 8000
	ENDIF
C
C FILL UP PROCOM BUFFER.
C

C       ***** Start V02 changes *****

        IF (X2X_I4_STATION) THEN
	   PRO(TERNUM,PROBUF)=TER
	   PRO(LINENO,PROBUF)=STN
        ELSE
	   HPRO(TERNUM,PROBUF)=TER
	   HPRO(LINENO,PROBUF)=STN
        ENDIF

C       ***** End V02 changes *****

	HPRO(PRCSRC,PROBUF)=X2X_COM
	HPRO(PRCDST,PROBUF)=0
	HPRO(TRCODE,PROBUF)=TYPX2X_PRO
	HPRO(QUENUM,PROBUF)=QIN
	HPRO(MSGNUM,PROBUF)=0
	HPRO(INPLEN,PROBUF)=30
	HPRO(X2X_LINK,PROBUF)=0
        HPRO(X2X_HOST_ID,PROBUF)=0
        PRO(CDT3,PROBUF)=VALUE(1)
        PRO(CDT4,PROBUF)=VALUE(2)
	HPRO(X2X_DEST,PROBUF)=X2DEST_FE+X2DEST_STATION+
     *	                      X2DEST_TRANSPORT
	HPRO(X2X_CONNCTL_OVR,PROBUF)=256*
     *	      (X2X_UNSOLICIT_FE_CONNECT*16+X2X_UNSOLICIT_FE_DISCONNECT)
C V04 *	      +(X2X_UNSOLICIT_STATION_CONNECT*16+
C V04 *	       X2X_UNSOLICIT_STATION_DISCONNEC )
     *        +(X2XC_UNSO_STN_CON(X2XS_STNCLS(STN))*16+                 ! V04
     *         X2XC_UNSO_STN_DIS(X2XS_STNCLS(STN)) )                    ! V04
C
C BUILD THE PTL HEADER PORTION.
C
	CALL I4TOBUF2(X2X_MESTYP_CMD,PRO(INPTAB,PROBUF),
     *	              X2PRO_MESTYP-1)
	CALL ISBYTE(X2X_TRATYP_GLO,PRO(INPTAB,PROBUF),X2PRO_TRATYP-1)
	CALL I4TOBUF2(TER,PRO(INPTAB,PROBUF),X2PRO_TERMINAL-1)
	CALL I4TOBUF2(STN,PRO(INPTAB,PROBUF),X2PRO_STATION-1)
	IF (CMDNUM.EQ.5)						!V03
     *	      CALL I4TOBUF2(0,PRO(INPTAB,PROBUF),X2PRO_STATION-1)	!V03
	CALL ISBYTE(0,PRO(INPTAB,PROBUF),X2PRO_SSAP-1)
	CALL ISBYTE(X2PRO_OFFSET+1,PRO(INPTAB,PROBUF),X2PRO_OFFSET-1)
C
C BUILD THE STATION MESSAGE PORTION. (TYPE INDEPENDANT).
C
	OFF=X2PRO_OFFSET
	CALL ISBYTE(X2STMES_PROTID_VAL,PRO(INPTAB,PROBUF),
     *	            OFF+X2STMES_PROTID-1)
	CALL ISBYTE(0,PRO(INPTAB,PROBUF),OFF+X2STMES_CONFCHK-1)
	CALL I4TOBUF2(STN,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_STATION_NO-1)
	CALL ISBYTE(X2STMES_UNS,PRO(INPTAB,PROBUF),
     *	            OFF+X2STMES_FLAGS-1)
	CALL ISBYTE(X2STMES_HDRLEN,PRO(INPTAB,PROBUF),
     *	            OFF+X2STMES_MESLEN-1)
C
C BUILD THE MESSAGE BUFFER FOR THE STATION SOFT RESET COMMAND.
C
	IF (CMDNUM.EQ.2) THEN
	  CALL ISBYTE(X2ERR_GLO_STN_RES_SOFT,PRO(INPTAB,PROBUF),
     *	              X2PRO_STATUS-1)
	  CALL ISBYTE(X2STMES_DATATYPE_CMD_UP,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_DATATYPE-1)
	  CALL ISBYTE(X2STMES_SOFT_RESET,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_CODE-1)
	  HPRO(X2X_DELIVER_OVR,PROBUF)=X2FEMES_FLAGS_ER+
     *	                               X2FEMES_FLAGS_DA
	  MESS(3) = 14
	  MESS(8) = STN
C
C BUILD THE CONNECTION REQUEST MESSAGE 
C
	ELSE IF(CMDNUM.EQ.3) THEN
          CALL ISBYTE(X2ERR_GLO_STN_CONN,PRO(INPTAB,PROBUF),
     *                X2PRO_STATUS-1)
          CALL ISBYTE(X2STMES_DATATYPE_CMD_DOWN,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_DATATYPE-1)
          HPRO(X2X_DEST,PROBUF)=X2DEST_FE+
     *                          X2DEST_TRANSPORT
          HPRO(X2X_CONNCTL_OVR,PROBUF)=256*
     *          (X2X_UNSOLICIT_FE_CONNECT*16+
     *           X2X_UNSOLICIT_FE_DISCONNECT)
          HPRO(INPLEN,PROBUF)=50

C         ***** Start V02 changes *****

          IF (X2X_I4_STATION) THEN
             PRO(LINENO,PROBUF)=VALUE(1)
          ELSE
             HPRO(LINENO,PROBUF)=VALUE(1)
          ENDIF

C         ***** End V02 changes *****

          MESS(3) = 17
          MESS(8) = STN
	  GOTO 1000
C
C BUILD THE STATISTICS REQUEST MESSAGE.
C
	ELSE IF(CMDNUM.EQ.4) THEN
	  CALL ISBYTE(X2ERR_GLO_STN_STATS,PRO(INPTAB,PROBUF),
     *	              X2PRO_STATUS-1)
	  CALL ISBYTE(X2STMES_DATATYPE_CMD_DOWN,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_DATATYPE-1)
	  CALL ISBYTE(X2STMES_STAT_REQ,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_CODE-1)
	  HPRO(X2X_DELIVER_OVR,PROBUF)=0
	  MESS(3) = 15
	  MESS(8) = STN
C
C BUILD THE MESSAGE FOR THE STATION HARD RESET COMMAND.
C
	ELSE IF (CMDNUM.EQ.5) THEN
	  CALL ISBYTE(X2ERR_GLO_STN_RES_HARD,PRO(INPTAB,PROBUF),
     *	              X2PRO_STATUS-1)
	  CALL ISBYTE(X2STMES_DATATYPE_CMD_UP,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_DATATYPE-1)
	  CALL ISBYTE(X2STMES_RESET,PRO(INPTAB,PROBUF),
     *	              OFF+X2STMES_CODE-1)
	  HPRO(X2X_DELIVER_OVR,PROBUF)=X2FEMES_FLAGS_ER+
     *	                               X2FEMES_FLAGS_DA
	  MESS(3) = 16
	  MESS(8) = STN
C
C BUILD THE MESSAGE FOR THE STATION LAST 5 CALLS.
C
        ELSE IF (CMDNUM.EQ.6) THEN
          CALL ISBYTE(X2ERR_GLO_STN_LAST_CALL,PRO(INPTAB,PROBUF),
     *                X2PRO_STATUS-1)
          CALL ISBYTE(X2STMES_DATATYPE_CMD_DOWN,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_DATATYPE-1)
          CALL ISBYTE(X2STMES_STAT_REQ,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_CODE-1)
          HPRO(X2X_DELIVER_OVR,PROBUF)=0
          MESS(3) = 18
          MESS(8) = STN
C
C BUILD THE MESSAGE BUFFER FOR THE STATION WAKE UP COMMAND.
C
        ELSEIF (CMDNUM.EQ.7) THEN
          CALL ISBYTE(X2ERR_GLO_STN_WAKE_UP,PRO(INPTAB,PROBUF),
     *                X2PRO_STATUS-1)
          CALL ISBYTE(X2STMES_DATATYPE_CMD_UP,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_DATATYPE-1)
          CALL ISBYTE(X2STMES_WAKE_UP,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_CODE-1)
          HPRO(X2X_DELIVER_OVR,PROBUF)=X2FEMES_FLAGS_ER+
     *                                 X2FEMES_FLAGS_DA
          MESS(3) = 19
          MESS(8) = STN
          X2XR_STATION_STATE(STN)=X2XR_NOT_IN_RELAY

C BUILD THE MESSAGE BUFFER FOR THE STATION DISABLE COMMAND.
C
        ELSEIF (CMDNUM.EQ.8) THEN
          CALL ISBYTE(X2ERR_GLO_STN_DISABLE,PRO(INPTAB,PROBUF),
     *                X2PRO_STATUS-1)
          CALL ISBYTE(X2STMES_DATATYPE_CMD_UP,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_DATATYPE-1)
          CALL ISBYTE(X2STMES_DISABLE,PRO(INPTAB,PROBUF),
     *                OFF+X2STMES_CODE-1)
          HPRO(X2X_DELIVER_OVR,PROBUF)=X2FEMES_FLAGS_ER+
     *                                 X2FEMES_FLAGS_DA
C
          MESS(3) = 20
          MESS(8) = STN
          MESS(10)= VALUE(1)
          MESS(11)= VALUE(2)
C
C BUILD THE MESSAGE FOR THE STATION X25 STATISTICS                    V07
C
      ELSE IF (CMDNUM.EQ.9) THEN
        CALL ISBYTE(X2ERR_GLO_STN_X25_STATS,PRO(INPTAB,PROBUF),
     *              X2PRO_STATUS-1)
        CALL ISBYTE(X2STMES_DATATYPE_CMD_DOWN,PRO(INPTAB,PROBUF),
     *              OFF+X2STMES_DATATYPE-1)
        CALL ISBYTE(X2STMES_STAT_REQ,PRO(INPTAB,PROBUF),
     *              OFF+X2STMES_CODE-1)
        HPRO(X2X_DELIVER_OVR,PROBUF)=0
        MESS(3) = 15
        MESS(8) = STN
C
C BUILD THE MESSAGE FOR THE STATION BCST STAT.                      V07
C
      ELSE IF (CMDNUM.EQ.10) THEN
        CALL ISBYTE(X2ERR_GLO_STN_BCST_STATS,PRO(INPTAB,PROBUF),
     *              X2PRO_STATUS-1)
        CALL ISBYTE(X2STMES_DATATYPE_CMD_DOWN,PRO(INPTAB,PROBUF),
     *              OFF+X2STMES_DATATYPE-1)
        CALL ISBYTE(X2STMES_STAT_REQ,PRO(INPTAB,PROBUF),
     *              OFF+X2STMES_CODE-1)
        HPRO(X2X_DELIVER_OVR,PROBUF)=0
        MESS(3) = 15
        MESS(8) = STN
C
C INVALID COMMAND NUMBER.
C
	ELSE
	  GOTO 1000
	ENDIF
	CALL QUEINP(PROBUF,ST)
	GOTO 8000
C
C PROGRAM EXIT.
C
8000	CONTINUE
	CALL CLOSEFILE(FILFDB)
	RETURN
C
C INVALID COMMAND NUMBER
C
1000	CONTINUE
	TRABUF(TSTAT)=REJT
	TRABUF(TERR)=INVL
	MESS(2)=TECMD
	MESS(3)=1
	MESS(4)=TRABUF(TCMTYP)
	MESS(5)=TRABUF(TCMNUM)
	RETURN
1100	CONTINUE
	TRABUF(TSTAT)=REJT
	TRABUF(TERR)=INVL
	MESS(2)=TECMD
	MESS(3)=28
	MESS(9)=STN
	RETURN
1200	CONTINUE
	TRABUF(TSTAT)=REJT
	TRABUF(TERR)=INVL
	MESS(2)=TECMD
	MESS(3)=29
	MESS(9)=X2XS_STNCLS(STN)
	MESS(10)=STN
	RETURN
	END
