C GUI_014.FOR
C
C V04 30-MAR-2015 MTK Modified Super 14 game
C VO3 27-APR-2005 LINE 207 I=2  >> I=1
C V02 05-DEC-2003 GXR NEW TOTOBOLA
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C This subroutine returns GUI FUNCTION.
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)    OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	     MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUI_014(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
	INCLUDE 'INCLIB:GUIMPRM.DEF'
	INCLUDE 'INCLIB:GUISTR.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
	INCLUDE 'INCLIB:DSPREC.DEF'
	INCLUDE 'INCLIB:GUIARGS.DEF'
	INCLUDE 'INCLIB:GUIFIL.DEF'
C
C
	BYTE		OUTBUF(*)
	INTEGER*4	MES_LEN,RET_CODE
C
	INTEGER*4 NUM_COLS, NUM_ROWS
	INTEGER*4 GIND

        INTEGER*4  LPAD(SPGDIV)
        INTEGER*4  LVAL(SPGDIV)
        INTEGER*4  LWIN(SPGDIV)
 	REAL*8	   POOL
	INTEGER*4  TOTWON(2),TOTPAD(2),ROLL
        INTEGER*4  ROLLOVER(6),LIN
        INTEGER*4  FRAMT,SCORE(2)
	EXTERNAL   FRAMT
C
        INTEGER*4  GNUM
        INTEGER*4  ST,STS,BCNT
	INTEGER*4  DRAW,I,YEAR,WEK,LTOT

        CHARACTER*8 DNAME(SPGDIV)
          
	CHARACTER BLANK
        CHARACTER WIN(0:4)
        CHARACTER RWIN(0:4)
        DATA WIN/ '-','1','X','C','2'/
        DATA RWIN/'-','0','1','C','M'/
	DATA BLANK/' '/
C
C  GET PARAMETERS
C
	CALL GUI_GETPARAMS(OUTBUF, ST)
	IF(ST.NE.0) THEN
	   RET_CODE = 11
	   RETURN
	ENDIF

	GIND = GUI_ARGVAL(1)
	DRAW = GUI_ARGVAL(2)

	IF(GIND.LT.1.OR.GIND.GT.NUMSPT) THEN
	  RET_CODE = 11
	  RETURN
	ENDIF

	GNUM = GTNTAB(TSPT,GIND)
	IF(GNUM.LT.1.OR.GNUM.GT.MAXGAM) THEN
	  RET_CODE = 11
	  RETURN
	ENDIF

	IF(DRAW.LT.1) DRAW = DAYDRW(GNUM)	
	IF(DRAW.EQ.0) DRAW = DAYHDR(GNUM)
C
C GET DATA FROM COMMON OR DISK
C
5       CONTINUE
	IF(DRAW.EQ.DAYDRW(GNUM)) THEN
	    CALL GAMLOG(TSPT,GIND,DSPREC,SPTSTS)
	    GOTO 100
	ENDIF
C
C SET FOR NOT ACTIVE GAMES
C
        IF(DRAW .EQ. DAYHDR(GNUM) .AND. DAYDRW(GNUM) .LE. 0) THEN
	    CALL GAMLOG(TSPT,GIND,DSPREC,SPTSTS)
            GOTO 100
        ENDIF	
C
	CALL READW(GAMFDB(1,GNUM),DRAW,DSPREC,ST)
	IF(ST.NE.0) THEN
	    CALL OPS('Failed to read '//CGFNAMES(GNUM),ST,DRAW)
	    RET_CODE = 11
	    RETURN
	ENDIF
C
100	CONTINUE
C
	LTOT = 0
	DO I = 1, SPGENT
	    LTOT = LTOT + DSPSAL(I)
        END DO
        POOL=LTOT*CALPER(DSPSPR)
        DO I=1,DSPDIV
            LVAL(I)=IDNINT(POOL*CALPER(DSPPER(I)))
            LVAL(I)=LVAL(I)+DSPPOL(I)        !ADD POOL CARRIED OVER
            LWIN(I)=0
            LPAD(I)=0
        END DO
C
        IF(DSPSTS.GE.GAMDON.OR.DSPSPR.EQ.0) THEN
            DO I = 1, DSPDIV
                LVAL(I) = DSPSHV(I)
                LWIN(I) = DSPSHR(I)*LVAL(I)
                LPAD(I) = FRAMT(MAXFRC(GNUM),DSPPAD(I),LVAL(I))
            END DO
        ENDIF
C
	CALL GUI_CHKSTS_RESCOM(GIND,TSPT,DRAW,STS)
	STS = MAX(STS,DSPSTS)
        LIN=0
        ROLL=2
        ROLLOVER(1)=(DSPPOL(1)+DSPASH(1)+DSPAPL)
        DO I=ROLL,MIN(4,DSPDIV)         ! 4 fits to the page; not more...
           LIN=LIN+1  
           ROLLOVER(I)=DSPPOL(I)
        ENDDO
C
C BUILD GUI MESSAGE
C
	CALL GUIARG_INIT()

	NUM_COLS = 8+LIN+3
	NUM_ROWS = 1
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)

        CALL FIGWEK(DSPESD,WEK,YEAR)

	CALL GUIARG_CHAR(OUTBUF,GLNAMES(1,GNUM),16)
	CALL GUIARG_INT2(OUTBUF,DSPDRW)
	CALL GUIARG_INT2(OUTBUF,WEK)
	CALL GUIARG_INT2(OUTBUF,YEAR)

	CALL GUIARG_BYTE(OUTBUF,STS)
	CALL GUIARG_MONY(OUTBUF,DSPSAL(1))
	CALL GUIARG_MONY(OUTBUF,DSPPOL(1))	
	CALL GUIARG_MONY(OUTBUF,LTOT)	
        CALL GUIARG_INT2(OUTBUF,NUM_COLS)
        CALL GUIARG_MONY(OUTBUF,DSPSAL(2))  ! OFFLINE
        CALL GUIARG_MONY(OUTBUF,DSPSAL(12))  !PREVIOUS
        DO I=ROLL,MIN(4,DSPDIV)            !ROLLOVER 2,3,4
          CALL GUIARG_MONY(OUTBUF,ROLLOVER(I))
        ENDDO         
C 
C RESULT SET 2
C
	NUM_COLS = 2
	NUM_ROWS = DSPDIV
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)

        DO I=1,SPGDIV
           IF(DSPMAT(I).NE.0) THEN
	      WRITE (DNAME(I),800) I,DSPMAT(I)
	   ELSE
	      WRITE(DNAME(I),801) I
	   ENDIF
         END DO
	
	DO I=1,DSPDIV
 	   CALL GUIARG_CHAR(OUTBUF,%REF(DNAME(I)),8)
       	   CALL GUIARG_MONY(OUTBUF,LVAL(I))
	ENDDO	
C
C RESULT SET 3
C
        NUM_COLS = 2
        NUM_ROWS = (DSPDAT(CURDRW) - DSPBSD) + 3        
        CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)

        DO I=1, NUM_ROWS
          CALL GUIARG_DATE(OUTBUF,DSPDAT(CURDRW)-I+1)
          CALL GUIARG_MONY(OUTBUF,DSPSAL(2+I))           
        ENDDO
C
	IF(DSPSTS.LT.GAMENV) GOTO 9000
C
C RESULT SET 4
C
	BCNT = 0
	IF(DSPFRG.NE.0) BCNT = 1

	NUM_COLS = 1
	NUM_ROWS = DSPMAX-BCNT
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)

	DO I=1,NUM_ROWS
	   CALL GUIARG_CHAR(OUTBUF,%REF(WIN(DSPWIN(I))),1)
	ENDDO

	IF(DSPFRG.EQ.1) THEN
          SCORE(1)=ISHFT(DSPWIN(DSPMAX),-4) 
          SCORE(2)=IAND(DSPWIN(DSPMAX),'0F'X)  
          CALL GUIARG_CHAR(OUTBUF,%REF(RWIN(SCORE(1))),1)
          CALL GUIARG_CHAR(OUTBUF,%REF(RWIN(SCORE(2))),1)  
        ENDIF

        IF(DSPFRG.EQ.2) THEN
          CALL GUIARG_CHAR(OUTBUF,%REF(WIN(DSPWIN(DSPMAX))),1)
          CALL GUIARG_CHAR(OUTBUF,%REF(BLANK),1)
        ENDIF

C
	IF(DSPSTS.LT.GAMDON) GOTO 9000
C
	TOTWON(1) = 0
	TOTWON(2) = 0
	TOTPAD(1) = 0
	TOTPAD(2) = 0
        DO I=1,DSPDIV
            TOTWON(1) = TOTWON(1) + DSPSHR(I)
            TOTWON(2) = TOTWON(2) + LWIN(I)
            TOTPAD(1) = TOTPAD(1) + DSPPAD(I)
            TOTPAD(2) = TOTPAD(2) + LPAD(I)
        END DO
C
C RESULT SET 5
C
	NUM_COLS = 4
	NUM_ROWS = DSPDIV
        CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)

	DO I=1,DSPDIV
 	   CALL GUIARG_INT4(OUTBUF,DSPSHR(I))
	   CALL GUIARG_MONY(OUTBUF,LWIN(I))
	   CALL GUIARG_INT4(OUTBUF,DSPPAD(I))
	   CALL GUIARG_MONY(OUTBUF,LPAD(I))
	ENDDO
C	
C RESULT SET 6
C
	NUM_COLS = 4
	NUM_ROWS = 1
        CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
C
	CALL GUIARG_INT4(OUTBUF,TOTWON(1))
	CALL GUIARG_MONY(OUTBUF,TOTWON(2))
	CALL GUIARG_INT4(OUTBUF,TOTPAD(1))
	CALL GUIARG_MONY(OUTBUF,TOTPAD(2))
C
9000	CONTINUE
	CALL GUIARG_SET_MESLEN(MES_LEN)
	RETURN
C
800     FORMAT(I1,1X,'(',I3,')')
801     FORMAT(I1,1X,'( - )')
	END
