C
C SUBROUTINE BNKGETPRZ
C
C V06 29-NOV-2000 UXN TOTOGOLA ADDED.
C V05 18-JAN-2000 OXK SPT_PRZDRW used for SPZSHV (Vakio changes)
C V04 13-OCT-1999 RXK World Tour added.
C V03 13-MAY-1999 UXN SUPER TRIPLE ADDED.
C V02 20-DEC-1995 HXK Various fixes as part of the Double / Couple installation
C V01 19-DEC-1994 HXK Initial revision.
C
C BNKGETPRZ.FOR
C
C SUBROUTINE TO INITIALIZE PRIZE COMMONS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	SUBROUTINE BNKGETPRZ
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'

	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:DLTREC.DEF'
        INCLUDE 'INCLIB:DSPREC.DEF'
        INCLUDE 'INCLIB:DNBREC.DEF'
        INCLUDE 'INCLIB:DWIREC.DEF'
        INCLUDE 'INCLIB:DSCREC.DEF'
        INCLUDE 'INCLIB:DTSREC.DEF'
        INCLUDE 'INCLIB:DKKREC.DEF'
        INCLUDE 'INCLIB:DBNREC.DEF'
        INCLUDE 'INCLIB:DDBREC.DEF'
        INCLUDE 'INCLIB:DCPREC.DEF'
        INCLUDE 'INCLIB:DTGREC.DEF'
	INCLUDE 'INCLIB:RECDAF.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
	INCLUDE 'INCLIB:PRZCOM.DEF'
C
C
        ! argument
        INTEGER*4  GAM                    !

        ! variables
	INTEGER*4  FDB(7)                 !
	INTEGER*4  IND                    !
	INTEGER*4  I                      !
	INTEGER*4  J			  !
        INTEGER*4  K			  !
	INTEGER*4  ST                     !
	INTEGER*4  DRAW                   !
	INTEGER*4  GIND                   !
	INTEGER*4  GTYP                   !
	INTEGER*4  SHRV			  !Share Value for PRZCOM update.


	EQUIVALENCE (DLTREC,DSPREC,DKKREC,DNBREC,DWIREC,DTSREC,DSCREC,
     *               DBNREC,DDBREC,DCPREC,DTGREC)

C
C
        DO 90000 GAM=1,MAXGAM

	GTYP = GNTTAB(GAMTYP,GAM)
	GIND = GNTTAB(GAMIDX,GAM)

	DRAW = DAYDRW(GAM)
        IF(DRAW.EQ.0) GOTO 90000

	IF(GTYP.EQ.TLTO) GOTO  1000
	IF(GTYP.EQ.TSPT) GOTO  2000
	IF(GTYP.EQ.TKIK) GOTO  3000
	IF(GTYP.EQ.TNBR) GOTO 90000
        IF(GTYP.EQ.TSCR) GOTO 90000
        IF(GTYP.EQ.TWIT) GOTO 90000
        IF(GTYP.EQ.TTSL) GOTO 90000
        IF(GTYP.EQ.TBNG) GOTO 10000
        IF(GTYP.EQ.TDBL) GOTO 90000
        IF(GTYP.EQ.TCPL) GOTO 90000
        IF(GTYP.EQ.TSSC) GOTO 90000
        IF(GTYP.EQ.TTRP) GOTO 90000
        IF(GTYP.EQ.TSTR) GOTO 90000
	IF(GTYP.EQ.TTGL) GOTO  4000
C
C LOTTO GAMES
C
1000	CONTINUE
	CALL OPENW(3,GFNAMES(1,GAM),4,0,0,ST)
	CALL IOINIT(FDB,3,DLTSEC*256)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),1,ST,0)
	    RETURN
	ENDIF

	WRITE(6,900) IAM(),GAM,GTNAMES(TLTO),GIND
	CALL READW(FDB,DRAW,DLTREC,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
	    RETURN
	ENDIF
C
C STORE LAST 100 SHARE VALUES AND DRAW DATES TABLES IN PRZCOM.
C
	DRAW = DAYHDR(GAM)
	DO I = DRAW, DRAW-(PRZDRW-1), -1
	   IF(I.GT.0) THEN
	      CALL READW(FDB,I,DLTREC,ST)
	      IF(ST.NE.0) THEN
	         CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
		 RETURN
	      ENDIF
C
	      IND = DRAW - I + 1
	      CALL FASTMOV(DLTSHV,LPZSHV(1,1,IND,GIND),LTGDIV*2)
C
C DETERMINE IF SHARE VALUES HAVE BEEN SET FOR A GIVEN DRAW
C
	      SHRV = 0
	      DO K = 1,LTGDIV
	         SHRV = SHRV + DLTSHV(K,1)
	      END DO
C
C IF SHARE VALUES HAVE NOT BEEN SET TO THEIR FINAL VALUES
C THEN SET SHARE VALUES IN PRZCOM TO -1, TO INDICATE
C THAT THE DRAW HAS BEEN POSTPONED, (NO POOL UPDATING UNTILL THE
C FINAL SHARE VALUES HAVE BEEN SET AND POOLBLD RUN FROM WINUPD).
C
	      IF(((SHRV.EQ.0.AND.DLTSTS.EQ.GAMBFD).OR.
     *	         (DLTSTS.EQ.GAMENV)).AND.IND.GT.1) THEN
		 DO K = 1,LTGDIV
		    LPZSHV(K,1,IND,GIND) = -1
		 END DO
	      ENDIF
C
	      LPZDAT(IND,GIND) = DLTDAT(CURDRW)
	   ENDIF
	END DO
	CALL CLOSEFIL(FDB)
        GOTO 90000
C
C SPORTS GAMES
C
2000	CONTINUE
	CALL OPENW(3,GFNAMES(1,GAM),4,0,0,ST)
	CALL IOINIT(FDB,3,DSPSEC*256)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),1,ST,0)
	    RETURN
	ENDIF

	WRITE(6,900) IAM(),GAM,GTNAMES(TSPT),GIND
	CALL READW(FDB,DRAW,DSPREC,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
	    RETURN
	ENDIF
C
C STORE LAST SPT_PRZDRW SHARE VALUES AND DRAW DATES TABLES IN PRZCOM.
C
	DRAW = DAYHDR(GAM)
	DO I = DRAW, DRAW-(PRZDRW-1), -1
	   IF(I.GT.0) THEN
	      CALL READW(FDB,I,DSPREC,ST)
	      IF(ST.NE.0) THEN
	         CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
		 RETURN
	      ENDIF
C
	      IND = DRAW - I + 1
	      CALL FASTMOV(DSPSHV,SPZSHV(1,IND,GIND),SPGDIV)
C
C DETERMINE IF SHARE VALUES HAVE BEEN SET FOR A GIVEN DRAW
C
	      SHRV = 0
	      DO K = 1,SPGDIV
	         SHRV = SHRV + DSPSHV(K)
	      END DO
C
C IF SHARE VALUES HAVE NOT BEEN SET TO THEIR FINAL VALUES
C THEN SET SHARE VALUES IN PRZCOM TO -1, TO INDICATE
C THAT THE DRAW HAS BEEN POSTPONED, (NO POOL UPDATING UNTILL THE
C FINAL SHARE VALUES HAVE BEEN SET AND POOLBLD RUN FROM WINUPD).
C
	      IF(((SHRV.EQ.0.AND.DSPSTS.EQ.GAMBFD).OR.
     *	         (DSPSTS.EQ.GAMENV)).AND.IND.GT.1) THEN
		 DO K = 1,SPGDIV
		    SPZSHV(K,IND,GIND) = -1
		 END DO
	      ENDIF
C
	      SPZDAT(IND,GIND) = DSPDAT(CURDRW)
	      CALL FASTMOV(DSPMAT,SPZMAT(1,IND,GIND),SPGDIV)
	   ENDIF
	END DO
	CALL CLOSEFIL(FDB)
        GOTO 90000
C
C KICKER GAMES
C
3000	CONTINUE
	CALL OPENW(3,GFNAMES(1,GAM),4,0,0,ST)
	CALL IOINIT(FDB,3,DKKSEC*256)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),1,ST,0)
	    RETURN
	ENDIF

	WRITE(6,900)IAM(),GAM,GTNAMES(TKIK),GIND
	CALL READW(FDB,DRAW,DKKREC,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
	    RETURN
	ENDIF
C
C STORE LAST 100 SHARE VALUES AND DRAW DATES TABLES IN PRZCOM.
C
	DRAW = DAYHDR(GAM)
	DO I = DRAW, DRAW-(PRZDRW-1), -1
	   IF(I.GT.0) THEN
	      CALL READW(FDB,I,DKKREC,ST)
	      IF(ST.NE.0) THEN
	         CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
		 RETURN
	      ENDIF
C
	      IND = DRAW - I + 1
	      CALL FASTMOV(DKKSHV,KPZSHV(1,IND,GIND),KIGDIV)
C
C DETERMINE IF SHARE VALUES HAVE BEEN SET FOR A GIVEN DRAW
C
	      SHRV = 0
	      DO K = 1,KIGDIV
	         SHRV = SHRV + DKKSHV(K)
	      END DO
C
C IF SHARE VALUES HAVE NOT BEEN SET TO THEIR FINAL VALUES
C THEN SET SHARE VALUES IN PRZCOM TO -1, TO INDICATE
C THAT THE DRAW HAS BEEN POSTPONED, (NO POOL UPDATING UNTILL THE
C FINAL SHARE VALUES HAVE BEEN SET AND POOLBLD RUN FROM WINUPD).
C
	      IF(((SHRV.EQ.0.AND.DKKSTS.EQ.GAMBFD).OR.
     *	         (DKKSTS.EQ.GAMENV)).AND.IND.GT.1) THEN
		 DO K = 1,KIGDIV
		    KPZSHV(K,IND,GIND) = -1
		 END DO
	      ENDIF
C
	      KPZDAT(IND,GIND) = DKKDAT(CURDRW)
	   ENDIF
	END DO
	CALL CLOSEFIL(FDB)
	GOTO 90000
C
C TOTOGOLA GAMES
C
4000	CONTINUE
	CALL OPENW(3,GFNAMES(1,GAM),4,0,0,ST)
	CALL IOINIT(FDB,3,DTGSEC*256)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),1,ST,0)
	    RETURN
	ENDIF

	WRITE(6,900) IAM(),GAM,GTNAMES(TTGL),GIND
	CALL READW(FDB,DRAW,DTGREC,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
	    RETURN
	ENDIF
C
C STORE LAST PRZDRW SHARE VALUES AND DRAW DATES TABLES IN PRZCOM.
C
	DRAW = DAYHDR(GAM)
	DO I = DRAW, DRAW-(PRZDRW-1), -1
	   IF(I.GT.0) THEN
	      CALL READW(FDB,I,DTGREC,ST)
	      IF(ST.NE.0) THEN
	         CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
		 RETURN
	      ENDIF
C
	      IND = DRAW - I + 1
	      CALL FASTMOV(DTGSHV,TGZSHV(1,IND,GIND),TGGDIV)
C
C DETERMINE IF SHARE VALUES HAVE BEEN SET FOR A GIVEN DRAW
C
	      SHRV = 0
	      DO K = 1,TGGDIV
	         SHRV = SHRV + DTGSHV(K)
	      END DO
C
C IF SHARE VALUES HAVE NOT BEEN SET TO THEIR FINAL VALUES
C THEN SET SHARE VALUES IN PRZCOM TO -1, TO INDICATE
C THAT THE DRAW HAS BEEN POSTPONED, (NO POOL UPDATING UNTILL THE
C FINAL SHARE VALUES HAVE BEEN SET AND POOLBLD RUN FROM WINUPD).
C
	      IF(((SHRV.EQ.0.AND.DTGSTS.EQ.GAMBFD).OR.
     *	         (DTGSTS.EQ.GAMENV)).AND.IND.GT.1) THEN
		 DO K = 1,TGGDIV
		    TGZSHV(K,IND,GIND) = -1
		 END DO
	      ENDIF
C
	      TGZDAT(IND,GIND) = DTGDAT(CURDRW)
	      CALL FASTMOV(DTGMAT,TGZMAT(1,IND,GIND),TGGDIV)
	   ENDIF
	END DO
	CALL CLOSEFIL(FDB)
        GOTO 90000
C
C BINGO GAMES
C
10000   CONTINUE
        CALL OPENW(3,GFNAMES(1,GAM),4,0,0,ST)
        CALL IOINIT(FDB,3,DBNSEC*256)
        IF(ST.NE.0) THEN
            CALL FILERR(GFNAMES(1,GAM),1,ST,0)
            RETURN
        ENDIF

        WRITE(6,900) IAM(),GAM,GTNAMES(TBNG),GIND
        CALL READW(FDB,DRAW,DBNREC,ST)
        IF(ST.NE.0) THEN
            CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
            RETURN
        ENDIF
C
C STORE LAST 100 SHARE VALUES AND DRAW DATES TABLES IN PRZCOM.
C
        DRAW = DAYHDR(GAM)
        DO I = DRAW, DRAW-(PRZDRW-1), -1
           IF(I.GT.0) THEN
              CALL READW(FDB,I,DBNREC,ST)
              IF(ST.NE.0) THEN
                 CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)
                 RETURN
              ENDIF
C
              IND = DRAW - I + 1

              CALL FASTMOV(DBNSHV(1,BGOBAB),BPZSHV(1,BGOBAB,IND,GIND),BGODIV)
              CALL FASTMOV(DBNSHV(1,BGOFHS),BPZSHV(1,BGOFHS,IND,GIND),BGODIV)

C DETERMINE IF SHARE VALUES HAVE BEEN SET FOR A GIVEN DRAW
C
              SHRV = 0
              DO K = 1,DBNDIV(BGOBAB)
                 SHRV = SHRV + DBNSHV(K,BGOBAB)
              ENDDO
              DO K = 1,DBNDIV(BGOFHS)
                 SHRV = SHRV + DBNSHV(K,BGOFHS)
              ENDDO
C
C IF SHARE VALUES HAVE NOT BEEN SET TO THEIR FINAL VALUES
C THEN SET SHARE VALUES IN PRZCOM TO -1, TO INDICATE
C THAT THE DRAW HAS BEEN POSTPONED, (NO POOL UPDATING UNTILL THE
C FINAL SHARE VALUES HAVE BEEN SET AND POOLBLD RUN FROM WINUPD).
C
              IF(((SHRV.EQ.0.AND.DBNSTS.EQ.GAMBFD).OR.
     *           (DBNSTS.EQ.GAMENV)).AND.IND.GT.1) THEN
                 DO K = 1,BGODIV
                 DO J = 1,BGOSUB
                    BPZSHV(K,J,IND,GIND) = -1
                 ENDDO
                 ENDDO
              ENDIF
C
              BPZDAT(IND,GIND) = DBNDAT(CURDRW)
           ENDIF
        ENDDO
        CALL CLOSEFIL(FDB)
        GOTO 90000

90000   CONTINUE

900	FORMAT(1X,A18,' Loading game number ',I2,1X,A8,1X,I1,
     *	       ' game data ')
910	FORMAT(1X,A18,' Game number ',I2,' Invalid game status > ',I4)
920	FORMAT(1X,A18,' Loading seed information: ',Z8.8)
	END
