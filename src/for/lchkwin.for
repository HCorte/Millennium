C
C SUBROUTINE LCHKWIN
C
C V07 30-NOV-2010 MAC LUCKY NUMBER
C V06 28-FEB-2000 RXK Promotion ("add 1 free week") added.
C V05 14-JAN-1999 UXN GET_TEBEID added.
C V04 27-NOV-1997 UXN Changes for LOTTO extra draw.
C V03 17-Sep-1993 HXK Set KGME even if KEXP is zero
C V02 22-Aug-1993 GXA Released for Finland Dec Conversion / Oddset.
C V01 21-JAN-1993 DAB Initial Release Based on Netherlands Bible, 12/92,
C                   and Comm 1/93 update.  DEC Baseline
C
C
C
C SUBROUTINE TO CHECK IF LOTTO TICKET IS A WINNER
C AND UPDATE VALIDATION RECORDS
C
C
C
C     CALL LCHKWIN(TRABUF,V4BUF,WIN)
C INPUT
C          TRABUF - TRANSACTION BODY
C          V4BUF  - VALIDATION RECORD
C OUTPUT
C          V4BUF  - UPDATED FOR NEW WINNER (IF ANY)
C          WIN    - ZERO -> NOT A WINNER
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE LCHKWIN(TRABUF,V4BUF,WIN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:WINCOM.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
	INCLUDE 'INCLIB:VALFIL.DEF'
	INCLUDE 'INCLIB:VDETAIL.DEF'
C
	INTEGER*4   SHARES(LTGDIV,2), PRZIND, DIV, GIND, ST, WIN, B
	INTEGER*4   FRCS		!# of Fractions.
	LOGICAL	    CXLED,UPDATE
	LOGICAL	    YESKIK		!True if ticket participates in Kicker.
C
C
	UPDATE=.TRUE.
	GOTO 10
C
C ENTRY TO CHECK IF WINNER ONLY (NO UPDATE)
C
	ENTRY LIFWIN(TRABUF,WIN)
	UPDATE=.FALSE.
C
C
10	CONTINUE
	WIN=0
	CXLED=.FALSE.
	ST=TRABUF(TSTAT)
	GIND=TRABUF(TGAMIND)
	IF(LLTDRW(GIND).LT.0) RETURN
	IF(LTDELAY(GIND).EQ.2) RETURN
	IF(ST.NE.GOOD.AND.ST.NE.VOID.AND.
     *	   ST.NE.INCA.AND.ST.NE.EXCH) RETURN
	IF(TRABUF(TWBEG).GT.LLTDRW(GIND)) RETURN
        IF(TRABUF(TWEND)+TRABUF(TWADDFW).LT.LLTDRW(GIND)) RETURN
	IF(TRABUF(TSTAT).EQ.VOID.OR.TRABUF(TSTAT).EQ.INCA) CXLED=.TRUE.
C
C CHECK IF TICKET IS A WINNER
C
	CALL LWINLOS(TRABUF,SHARES,WIN)
	CALL LNWINLOS(TRABUF,SHARES,WIN)     !V07
	IF(WIN.EQ.0.OR..NOT.UPDATE) RETURN
C
C CHECK IF TICKET IS PARTICIPATING IN KICKER.
C
	YESKIK = .FALSE.
	IF(TRABUF(TWKFLG).NE.0.OR.TRABUF(TWKFLG2).NE.0) YESKIK = .TRUE. 
C
	FRCS = TRABUF(TFRAC)
	IF(FRCS.LT.1) FRCS = MAX(MAXFRC(TRABUF(TGAM)),1)
C
C UPDATE MAILSUB WINNERS
C
	IF(MAILSCAN) THEN
	  IF(CXLED) RETURN
	  DO 20 B=1,2
          DO 20 DIV=1,LTGDIV
          LLTMSR(DIV,B,GIND)=LLTSHR(DIV,B,GIND)+SHARES(DIV,B)*FRCS
20	  CONTINUE
	  WIN=0
	  RETURN
	ENDIF
C
C UPDATE VALIDATION RECORD
C
	IF(V4BUF(VFSSER).NE.0) THEN
	  CALL LOGVAL(VALREC,V4BUF)
	  CALL DLOGVAL(VALREC,VDETAIL)
	ELSE
	  CALL FASTSET(0,VALREC,VALLEN)
	  CALL FASTSET(0,VDETAIL,VPLEN*VMAX)
	ENDIF
C
C
	DO 30 B=1,2
	DO 30 DIV=1,LTGDIV
	IF(SHARES(DIV,B).EQ.0) GOTO 30
	IF(.NOT.CXLED)
     *     LLTSHR(DIV,B,GIND)=LLTSHR(DIV,B,GIND)+SHARES(DIV,B)*FRCS
	VALREC(VPZOFF)=VALREC(VPZOFF)+1
	PRZIND=VALREC(VPZOFF)
	IF(PRZIND.GT.VMAX) THEN
	  TYPE*,IAM(),' Prize table overflow ',TRABUF(TCDC),TRABUF(TSER)
	  CALL GPAUSE
	  VALREC(VSTAT)=VHOLD
	  VALREC(VPZOFF)=VMAX
	  GOTO 30
	ENDIF
C
	VDETAIL(VKIK,PRZIND)=0
	VDETAIL(VKI2,PRZIND)=0
	VDETAIL(VPRG,PRZIND)=0
	VDETAIL(VUPD,PRZIND)=0
	VDETAIL(VDIV,PRZIND)=DIV
	VDETAIL(VBDR,PRZIND)=B-1
	VDETAIL(VSHR,PRZIND)=SHARES(DIV,B)
	VDETAIL(VDRW,PRZIND)=LLTDRW(GIND)
C

30	CONTINUE
	VALREC(VWCDC)=DAYCDC
C
C UPDATE VALIDATION HEADER IF NEW WINNER
C
	IF(VALREC(VSTAT).EQ.VNOWIN) THEN
	  VALREC(VSCDC)=TRABUF(TCDC)
	  VALREC(VSTER)=TRABUF(TTER)
	  VALREC(VSSER)=TRABUF(TSER)
	  VALREC(VEXP )=TRABUF(TWEND) + TRABUF(TWADDFW)
	  VALREC(VGAM )=TRABUF(TGAM)
	  VALREC(VGTYP)=TRABUF(TGAMTYP)
	  VALREC(VGIND)=TRABUF(TGAMIND)
	  VALREC(VFRAC)=TRABUF(TFRAC)
	  VALREC(VBNKID)=TRABUF(TWBNKID)
	  VALREC(VBNKNUM)=TRABUF(TWBNKNM)
	  VALREC(VKEXP)=0
          VALREC(VKGME)=TRABUF(TWKGME)
	  IF(YESKIK) THEN
	     VALREC(VKEXP)=TRABUF(TWKEND) + TRABUF(TWADDFW)
	  ENDIF
	ENDIF
C
	IF(VALREC(VSTAT).EQ.VPRPAY) THEN
	  VALREC(VSTAT)=VPPNPZ
	ELSEIF(VALREC(VSTAT).NE.VHOLD) THEN
	  VALREC(VSTAT)=VNOPRZ
	ENDIF
	IF(TRABUF(TSTAT).EQ.VOID) VALREC(VSTAT)=VCXL
	IF(TRABUF(TSTAT).EQ.INCA) VALREC(VSTAT)=VDEL
	CALL DVALLOG(VALREC,VDETAIL)
	CALL VALLOG (VALREC,V4BUF  )
	RETURN
	END
