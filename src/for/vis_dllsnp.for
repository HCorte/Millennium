C DLLSNP.FOR
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]VIS_DLLSNP.FOV                               $
C  $Date::   17 Apr 1996 15:53:48                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C
C X2X Upgrade: 22-FEB-96 wsm Added AGTINF.DEF for Finland.
C
C V03 24-NOV-1999 UXN FIRST_LINE set to 5, IN_PAGE SET TO 17
C V02 13-SEP-1995 DAS LEIPZIG VERSION FOR BACKGROUND DOWNLOADS
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1995 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	SUBROUTINE DLLSNP(REQ_SUBNETWORK,CLINE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:MSGCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:REQCOM.DEF'

	INTEGER*4 REQ_SUBNETWORK
	INTEGER*4 CLINE(*)

	INTEGER*4 LOAD
	INTEGER*4 TOTAL_STATIONS, TOTAL_TERMINALS, TOTAL_VOLUME
	INTEGER*4 ALL_TOTAL_STATIONS, ALL_TOTAL_TERMINALS 
	INTEGER*4 ALL_TOTAL_VOLUME
	INTEGER*4 SUBNETWORK
	INTEGER*4 STATIONS, TERMINALS, VOLUME
	INTEGER*4 FIRST_LINE, IN_PAGE
	INTEGER*4 NEXT_SUBNETWORK
	INTEGER*4 NAME1, NAME2, NAME3, BLANK/'    '/
	INTEGER*4    STATIONS_PER_INTERVAL1
	INTEGER*4    TERMINALS_PER_INTERVAL1
	INTEGER*4    LOADS_PER_INTERVAL1
	INTEGER*4    STATIONS_PER_INTERVAL2
	INTEGER*4    TERMINALS_PER_INTERVAL2
	INTEGER*4    LOADS_PER_INTERVAL2
	INTEGER*4    STATIONS_PER_INTERVAL3
	INTEGER*4    TERMINALS_PER_INTERVAL3
	INTEGER*4    LOADS_PER_INTERVAL3
	INTEGER*4    GRAND_TOTAL_REQUESTS
	INTEGER*4    GRAND_TOTAL_DONE
	INTEGER*4    LOADS_TOTAL1,LOADS_TOTAL2,LOADS_TOTAL3
	INTEGER*4    SEG0_TOTAL1,SEG0_TOTAL2,SEG0_TOTAL3
	INTEGER*4    APPLICATION_NO/1/
	LOGICAL	     DISPLAY_TOTAL, LAST_DISPLAY_TOTAL/.FALSE./
C
        INTEGER*4 NUM_KEYS
        PARAMETER (NUM_KEYS=5)         !NUMBER OF KEYS
	REAL*8 KEY_NAME(0:NUM_KEYS)
	DATA   KEY_NAME /'CURRent ','TOTAl   ','APPL    ',
     *		         'MCPReset','RESEt   ','        '/	    !V05
	INTEGER*4 GET_CURRENT, GET_TOTAL, GET_APPL
	INTEGER*4 CHG_MCP_RESET,CHG_RESET
	PARAMETER (GET_CURRENT=0)
	PARAMETER (GET_TOTAL=1)
	PARAMETER (GET_APPL=2)
	PARAMETER (CHG_MCP_RESET=3)
	PARAMETER (CHG_RESET = 4)
	INTEGER*4 POS,VALUE,KEYNUM
	CHARACTER*1 FORGROUND_DISP(0:2) /' ','*',' '/, FRG1, FRG2, FRG3
C
        SAVE APPLICATION_NO
C	
	DISPLAY_TOTAL=LAST_DISPLAY_TOTAL
	SUBNETWORK=REQ_SUBNETWORK
	IF (SUBNETWORK.LT.0 .OR. SUBNETWORK.GT.RE_MAX_SUBNET) 
     *						      SUBNETWORK=0
C
	POS=1
	CALL KEY(CLINE,KEY_NAME,NUM_KEYS+1,POS,KEYNUM)
C
C
	IF (KEYNUM.EQ.0) GOTO 100
	IF (KEYNUM-1.EQ.CHG_MCP_RESET.OR.KEYNUM-1.EQ.CHG_RESET) THEN
	    CALL NUMB(CLINE,POS,VALUE)             !GET VALUE
	    IF(VALUE.LT.0) THEN                     !VALUE ERROR
		  WRITE(CLIN23,9924)
		  GOTO 8300
	    ELSEIF (KEYNUM-1 .EQ. CHG_MCP_RESET) THEN
		  DLLREQ_MCP_RESET_ENABLE = VALUE
	    ELSE
		  DLLREQ_RESET_ENABLE = VALUE
	    ENDIF
	ENDIF

	IF (KEYNUM-1 .EQ. GET_APPL) THEN
	    CALL NUMB(CLINE,POS,APPLICATION_NO)
	ENDIF
100	CONTINUE
C
C LOOK ALL APPLICAITONS FOR A VALID FCL. THE FIRST ONE WITH A VALID FCL WILL
C BE TAKEN AS THE ONE TO DISPLAY
C
	IF((APPLICATION_NO.LT.1) .OR.
     *	   (APPLICATION_NO.GT.MAXAPP)) APPLICATION_NO=1
C
        IF (SMFDLNAM(1,FCL_LOAD_NO,APPLICATION_NO).EQ.0)
     *      APPLICATION_NO = 1
	IF (KEYNUM-1 .EQ. GET_TOTAL) THEN
	   DISPLAY_TOTAL=.TRUE.
	ELSEIF (KEYNUM-1 .EQ. GET_CURRENT) THEN
	   DISPLAY_TOTAL=.FALSE.
	ENDIF
	LAST_DISPLAY_TOTAL=DISPLAY_TOTAL

	CALL REMSGDLL(TOTAL_VOLUME,SUBNETWORK)
	CALL REREQDLL(TOTAL_TERMINALS,SUBNETWORK)
	CALL RESTNDLL(TOTAL_STATIONS,SUBNETWORK)

	GRAND_TOTAL_REQUESTS=0
	GRAND_TOTAL_DONE=0
	ALL_TOTAL_STATIONS=0
	ALL_TOTAL_TERMINALS=0
	ALL_TOTAL_VOLUME=0

	DO 1000, NEXT_SUBNETWORK=0,RE_MAX_SUBNET
	    CALL REMSGDLL(VOLUME,NEXT_SUBNETWORK)
	    CALL REREQDLL(TERMINALS,NEXT_SUBNETWORK)
	    CALL RESTNDLL(STATIONS,NEXT_SUBNETWORK)

	    ALL_TOTAL_STATIONS=ALL_TOTAL_STATIONS+STATIONS
	    ALL_TOTAL_TERMINALS=ALL_TOTAL_TERMINALS+TERMINALS
	    ALL_TOTAL_VOLUME=ALL_TOTAL_VOLUME+VOLUME
	    GRAND_TOTAL_REQUESTS=GRAND_TOTAL_REQUESTS+
     *		      RE_TOTAL_REQUESTS(NEXT_SUBNETWORK)
	    GRAND_TOTAL_DONE=GRAND_TOTAL_DONE+
     *		      RE_LOAD_DONE_CNT(NEXT_SUBNETWORK)
1000	CONTINUE
C
	WRITE (CLIN1,8001) SUBNETWORK
8001	FORMAT('download snapshot for subnetwork ',I3)
	WRITE (CLIN2,8002) RE_TOTAL_REQUESTS(SUBNETWORK),
     *	      GRAND_TOTAL_REQUESTS,RE_LOAD_DONE_CNT(SUBNETWORK),
     *	      GRAND_TOTAL_DONE
8002	FORMAT(1X,'Total no of requests: ',I8,'/',I8,3X,
     *	       'Total terms done: ',I8,'/',I8)
	WRITE (CLIN3,8003) TOTAL_STATIONS,ALL_TOTAL_STATIONS,
     *	      TOTAL_TERMINALS, ALL_TOTAL_TERMINALS,
     *	      TOTAL_VOLUME,ALL_TOTAL_VOLUME
8003	FORMAT(' no stations  ',I6,'/',I6,'  terminals  ',I6,'/',I6,
     *          ' volume ',I7,'/',I7)
	WRITE (CLIN4,8004) APPLICATION_NO,DLLREQ_MCP_RESET_ENABLE,
     *			   DLLREQ_RESET_ENABLE
8004	FORMAT(' Application no.: ',I4, ' *MCP_Reset_enable: ',I5,
     *		  ' *RESet_enable ',I5)
	IF (DISPLAY_TOTAL) THEN
	    WRITE(CLIN5,80051)
80051	   FORMAT(2('load  total: seg0   all    '),
     *			      'load  total: seg0   all')	
	ELSE
	   WRITE(CLIN5,8005)
8005	   FORMAT(2('load   stns  terms volume  '),
     *			      'load   stns  terms volume')	
	ENDIF
	FIRST_LINE=5
	IN_PAGE=17		    !17*3 LOADS IN PAGE 
	DO 200 LOAD=1,IN_PAGE
	    NAME1=SMFDLNAM(1,LOAD,APPLICATION_NO)
	    NAME2=SMFDLNAM(1,LOAD+IN_PAGE,APPLICATION_NO)
	    NAME3=SMFDLNAM(1,LOAD+IN_PAGE*2,APPLICATION_NO)
	    FRG1=FORGROUND_DISP
     *	     (SMFDLTAB(LOAD,FOREGROUND_FLAG,APPLICATION_NO))
	    FRG2=FORGROUND_DISP
     *	     (SMFDLTAB(LOAD+IN_PAGE,FOREGROUND_FLAG,APPLICATION_NO))
	    FRG3=FORGROUND_DISP
     *	    (SMFDLTAB(LOAD+IN_PAGE*2,FOREGROUND_FLAG,APPLICATION_NO))
	    IF (NAME1.EQ.0) NAME1=BLANK
	    IF (NAME2.EQ.0) NAME2=BLANK
	    IF (NAME3.EQ.0) NAME3=BLANK
	    STATIONS_PER_INTERVAL1=0
	    TERMINALS_PER_INTERVAL1=0
	    LOADS_PER_INTERVAL1=0
	    STATIONS_PER_INTERVAL2=0
	    TERMINALS_PER_INTERVAL2=0
	    LOADS_PER_INTERVAL2=0
	    STATIONS_PER_INTERVAL3=0
	    TERMINALS_PER_INTERVAL3=0
	    LOADS_PER_INTERVAL3=0
	    LOADS_TOTAL1=RE_LOADS_TOTAL(LOAD,APPLICATION_NO,SUBNETWORK)
	    LOADS_TOTAL2=RE_LOADS_TOTAL(LOAD+IN_PAGE,APPLICATION_NO,
     *					SUBNETWORK)
	    LOADS_TOTAL3=RE_LOADS_TOTAL(LOAD+IN_PAGE*2,
     *			      APPLICATION_NO,SUBNETWORK)
	    SEG0_TOTAL1=RE_SEG0_TOTAL(LOAD,APPLICATION_NO,SUBNETWORK)
	    SEG0_TOTAL2=RE_SEG0_TOTAL(LOAD+IN_PAGE,
     *			      APPLICATION_NO,SUBNETWORK)
	    SEG0_TOTAL3=RE_SEG0_TOTAL(LOAD+IN_PAGE*2,
     *			      APPLICATION_NO,SUBNETWORK)
	    IF (P(ACTTIM)-RE_LAST_REFRESH_TIME(SUBNETWORK)-
     *		  2* RE_TIME_INTERVAL(SUBNETWORK) .LT.0 .AND.
     *		P(ACTTIM).GT.RE_LAST_REFRESH_TIME(SUBNETWORK)) THEN
		STATIONS_PER_INTERVAL1=
     *		  RE_STATIONS_PER_INTERVAL(LOAD,APPLICATION_NO,
     *					   SUBNETWORK,1)
		TERMINALS_PER_INTERVAL1=
     *		  RE_TERMINALS_PER_INTERVAL(LOAD,APPLICATION_NO,
     *				            SUBNETWORK,1)
		LOADS_PER_INTERVAL1=
     *		  RE_LOADS_PER_INTERVAL(LOAD,APPLICATION_NO,
     *				        SUBNETWORK,1)
		STATIONS_PER_INTERVAL2=
     *		  RE_STATIONS_PER_INTERVAL(LOAD+IN_PAGE,
     *				  APPLICATION_NO,SUBNETWORK,1)
		TERMINALS_PER_INTERVAL2=
     *		  RE_TERMINALS_PER_INTERVAL(LOAD+IN_PAGE,APPLICATION_NO,
     *					    SUBNETWORK,1)
		LOADS_PER_INTERVAL2=
     *		  RE_LOADS_PER_INTERVAL(LOAD+IN_PAGE,APPLICATION_NO,
     *				        SUBNETWORK,1)
		STATIONS_PER_INTERVAL3=
     *		RE_STATIONS_PER_INTERVAL(LOAD+IN_PAGE*2,APPLICATION_NO,
     *					 SUBNETWORK,1)
		TERMINALS_PER_INTERVAL3=
     *		RE_TERMINALS_PER_INTERVAL(LOAD+IN_PAGE*2,APPLICATION_NO,
     *					  SUBNETWORK,1)
		LOADS_PER_INTERVAL3=
     *		RE_LOADS_PER_INTERVAL(LOAD+IN_PAGE*2,
     *				      APPLICATION_NO,SUBNETWORK,1)
	    ENDIF

	    IF (DISPLAY_TOTAL) THEN

		WRITE(XNEW(FIRST_LINE+LOAD),8101)
     *		NAME1,FRG1,
     *          SEG0_TOTAL1,
     *	        LOADS_TOTAL1,
     *	        NAME2,FRG2,
     *          SEG0_TOTAL2,
     *	        LOADS_TOTAL2,
     *	        NAME3,FRG3,
     *          SEG0_TOTAL3,
     *	        LOADS_TOTAL3

8101	    FORMAT(2(A4,A1,5X,I7,'/',I7,'  '),A4,A1,5X,I7,'/',I7)
	  ELSE
	    	    WRITE(XNEW(FIRST_LINE+LOAD),8100)
     *	    NAME1,FRG1,
     *	    STATIONS_PER_INTERVAL1,
     *      TERMINALS_PER_INTERVAL1,
     *	    LOADS_PER_INTERVAL1,
     *	    NAME2,FRG2,
     *	    STATIONS_PER_INTERVAL2,
     *      TERMINALS_PER_INTERVAL2,
     *	    LOADS_PER_INTERVAL2,
     *	    NAME3,FRG3,
     *	    STATIONS_PER_INTERVAL3,
     *      TERMINALS_PER_INTERVAL3,
     *	    LOADS_PER_INTERVAL3
8100	    FORMAT(2(A4,A1,I6,'/',I6,'/',I6,'  '),A4,A1,I6,'/',I6,'/',I6)
	  ENDIF
200	CONTINUE
	WRITE(CLIN23,8200) 
8200	FORMAT('Enter vision command, subnetwork, TOTAl, CURRent, ',
     *		  'MCPReset #, RESEt # or APPL #')
8300	CONTINUE
9924	FORMAT('Value error   ')
	RETURN		
	END
