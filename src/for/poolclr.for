C
C SUBROUTINE POOLCLR
C $Log:   GXAFXT:[GOLS]POOLCLR.FOV  $
C  
C     Rev 1.0   17 Apr 1996 14:24:40   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 17:18:04   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - poolupd.for **
C
C
C     CALL POOLCLR(GAM)    ;CLEAR GAM POOLS
C
C     IN - GAM - GAM #
C
C+++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE POOLCLR(GAM)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:POOLLTO.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INTEGER*4 FDB(7),PFDB(7),OVERFLOWS(2,MAXOVR)
	INTEGER*4 BLOCK, CURRENT_BLOCK, PAGE, ST, GAM
C
	IF (LTPOOLDRAW(GAM).LE.0) RETURN
C
10	CONTINUE
	CALL OPENQW(1,SFNAMES(1,LP1),4,0,0,ST)
	IF(ST.NE.0) THEN
C
C	  'FILERR' DOES PAUSE
C
	  TYPE *,IAM(),'Open "LP1" error.'
	  TYPE *,IAM(),'Correct the problem to continue. '
	  CALL FILERR(SFNAMES(1,LP1),1,ST,0)
	  GOTO 10
	ENDIF
	CALL IOQINIT(FDB,1,LTOSEC*256)
C
20	CONTINUE
	CALL OPENW(2,SFNAMES(1,LO1),4,0,0,ST)   !OPEN OVERFLOW FILE
	IF (ST.NE.0) THEN
C
C	  'FILERR' DOES PAUSE
C
	  TYPE *,IAM(),'Open overflows error.'
	  TYPE *,IAM(),'Correct the problem to continue. '
	  CALL FILERR(SFNAMES(1,LO1),1,ST,0)
	  GOTO 20
	ENDIF
	CALL IOINIT(PFDB,2,MAXOVR*8/256*256)     !INITIALISE FOR I/O
C
	CALL FASTSET(0,LTPAGE,PAGESIZE)     !CLEAR THE NO OVERFLOWS
C
C     CALCULATE # OF PAGES
C
C
C
	DO 80, PAGE=1,LTNUMPAG
	   IF (LTPOOL_PAGGAM(PAGE).NE.GAM) GOTO 80
	   CALL WRITEQW(FDB,PAGE,LTPAGE,ST)
	   IF (ST.NE.0) THEN
	      TYPE *,IAM(),'Error writing combinations '
	      CALL FILERR(SFNAMES(1,LP1),3,ST,PAGE)
	   ENDIF
80	CONTINUE
C
C     CLEAR OVERFLOW TABLE
C
	CALL READQW(FDB,LTNUMPAG+1,LTOVR,ST)
	IF (ST.NE.0) THEN
	      TYPE *,IAM(),'Error reading overflow table'
	      CALL FILERR(SFNAMES(1,LP1),2,ST,LTNUMPAG+1)
	ENDIF
C
	CALL FASTSET(0,LTOVR(1,1,GAM),MAXOVR*2)
	LTLSTOVR(GAM)=0
	LTPOOL_TOT(GAM)=0
C
C     SHRINK OVERFLOWS FILE NOW
C
	CURRENT_BLOCK=0
C
	DO 100, BLOCK=1,OVRBLK
	  CALL READW(PFDB,BLOCK,OVERFLOWS,ST)
	  IF (ST.NE.0) THEN
	      TYPE *,IAM(),'Error reading overflow file'
	      CALL FILERR(SFNAMES(1,LO1),2,ST,BLOCK)
	  ENDIF
C
	  IF (OVERFLOWS(1,MAXOVR).NE.GAM) THEN
	      CURRENT_BLOCK=CURRENT_BLOCK+1
	      CALL WRITEW(PFDB,CURRENT_BLOCK,OVERFLOWS,ST)
	      IF (ST.NE.0) THEN
		TYPE *,IAM(),'Error writing overflow file'
		CALL FILERR(SFNAMES(1,LO1),3,ST,CURRENT_BLOCK)
	      ENDIF
	  ENDIF
100	CONTINUE
C
	OVRBLK=CURRENT_BLOCK
	CALL WRITEQW(FDB,LTNUMPAG+1,LTOVR,ST)
	IF (ST.NE.0) THEN
	      TYPE *,IAM(),'Error writing overflow table'
	      CALL FILERR(SFNAMES(1,LP1),2,ST,LTNUMPAG+1)
	ENDIF
	CALL CLOSEQFIL(FDB)
	CALL CLOSEFIL(PFDB)
C
8000	CONTINUE
C
	RETURN
	END
