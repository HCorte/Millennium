C PASENT.FOR
C
C V05 18-MAY-11 FJG PASENT TCPAS 6 Purge Date commented
C V04 01-JAN-10 FJG ePassive
C V03 25-AUG-05 FRP Modify for Natal 2005: Allow to enter 0 in winning serie.
C V02 25-OCT-02 TRG CHANGE NUMBER ENTRY 
C V01 17-DEC-00 CS  INITIAL RELEASE FOR PORTUGAL
C
C SUBROUTINE TO PROCESS OPERATOR ENTRY OF PASSIVE LOTTERY RESULTS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE PASENT(GNUM,GIND,DRAW)
	IMPLICIT NONE

	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:RESCOM.DEF'
	INCLUDE 'INCLIB:PASCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
	INCLUDE 'INCLIB:STANDARD.DEF'
C
C LOCAL VARIABLES
C
	CHARACTER*19 STRING
	CHARACTER*2  THR(4)
	CHARACTER*25 STR
	CHARACTER*3 CYESNO(0:1)

	DATA CYESNO /'NO ','YES'/

	INTEGER*4 FDB(7), Y, EXT, ST, DRAW, GIND, GNUM
	INTEGER*4 CBUF(CDLEN),DIVS,K
	INTEGER*4 WINSUM,OPSUM,NUM,WINSER
	INTEGER*4 EMIOFF,INDEMI, QTD,NBR,FLAG,NUMSER,PRG_DAY
	INTEGER*4 INISER

	LOGICAL*4 ALLDONE,ON_MEMORY
C
C FUNCTION
C
	INTEGER*4 PAS_ROUND_VALUE
C
C  DATA INICIALIZATION
C
	DATA THR    /'st','nd','rd','th'/
C
C CODE STARTS HERE
C
	ON_MEMORY = .FALSE.
	DO INDEMI = 1, PAGEMI
	    IF(DRAW.EQ.PASEMIS(INDEMI,GIND)) THEN
		ON_MEMORY = .TRUE.
		EMIOFF    = INDEMI
	    ENDIF
	ENDDO
C
C BRING MEMORY TO LOCAL VARIABLES
C
	IF(ON_MEMORY) THEN	    
	    CALL GAMLOGPAS(EMIOFF,GIND,DPAREC,PASBLK)
	ELSE			    !READ RECORD ON GAME FILE
	    CALL OPENW(3,GFNAMES(1,GNUM),4,0,0,ST)
	    CALL IOINIT(FDB,3,DPASEC*256)
	    IF(ST.NE.0) THEN
		VERREADY = 0
		CALL FILERR(SCFGFN(1,GNUM),OPEN_ERROR,ST,0)
	    ENDIF
	    CALL READW(FDB,DRAW-PAS_DRW_OFFSET,DPAREC,ST)
	    IF(ST.NE.0) THEN
		VERREADY = 0
		CALL FILERR(SCFGFN(1,GNUM),READ_ERROR,ST,DRAW)
	    ENDIF
	    CALL CLOSEFIL(FDB)

	    IF(DPASTS.NE.GAMENV) THEN
		TYPE *,IAM(),' emission with wrong status >', DPASTS
		RETURN
	    ENDIF
	ENDIF
C
C INITIALIZE SOME VARIBLES
C
20	OPSUM = 1
	WINSUM = 0

	DO WHILE( OPSUM.NE.WINSUM )
	    OPSUM  = 0
	    WINSUM = 0
	    QTD    = 0
C
C ENTER REGULAR WINNING RESULTS
C
	    DO DIVS = 1, DPADIV
		IF (DPAWNUM(DIVS).GT.0) THEN
                   TYPE*,IAM(),'*** WINNING NUMBERS FOR DIVISION ',DIVS
	           DO NBR=1,DPAWNUM(DIVS)
	              IF(NBR.LE.3) THEN
	                WRITE(STRING,906) NBR,THR(NBR) 
	              ELSE 
	              	WRITE(STRING,906) NBR,(THR(4))
	              ENDIF	
		      CALL INPNUM(STRING,NUM,0,DPANUMTCK-1,EXT)
		      IF(EXT.LT.0) CALL MY_GSTOP(GEXIT_OPABORT)

		      DPAWIN(NBR,DIVS) = NUM
		      WINSUM	       = WINSUM + NUM
		      QTD              = QTD + 1
	           ENDDO
		   TYPE*,IAM(),' '
		ENDIF 
	    ENDDO

C
C IF POPULAR OR EXTRAORDINARIA, ASK FOR WINNING SERIE
C
	    INISER = 0
            NUMSER = DPANUMSER
            IF (GIND.EQ.PSBPOP.OR.DPAEMT.EQ.EM_EXT) THEN
                IF (GIND.EQ.PSBPOP) THEN
		  INISER = 1
		  NUMSER = DPANOFFRA
		ENDIF
		CALL INPNUM('Enter winning serie: ',WINSER,INISER,NUMSER,EXT)
		IF (EXT.LT.0) CALL MY_GSTOP(GEXIT_OPABORT)

		DPAWSER = WINSER
		WINSUM  = WINSUM + WINSER
		QTD     = QTD + 1
		STR = ' including winning serie '
	    ENDIF
C
C IF ESPECIAL, ASK FOR EXTRA PRIZE
C
            FLAG = 0
	    IF (DPAEMT.EQ.EM_ESP) THEN
		CALL INPYESNO('Add special prize in first division ?',FLAG,EXT)
		IF (EXT.LT.0) CALL MY_GSTOP(GEXIT_OPABORT)
		IF(FLAG.NE.1) FLAG=0
	        EXTPRZ = FLAG
	    ENDIF
C
C ENTER WINNING NUMBERS SUM
C
	    CALL INPNUM('Enter sum of winning numbers '//STR,
     *			    OPSUM,0,DPANUMTCK*QTD,EXT)
	    IF (EXT.LT.0) CALL MY_GSTOP(GEXIT_OPABORT)

C	
C CHECK VALUES AGAINST OPERATOR ENTRY
C
	    IF(OPSUM.NE.WINSUM) THEN
		TYPE *,IAM(),
     *		      ' Winning numbers sum incorrect, please re-enter '
	    ENDIF
	ENDDO
C
C DISPLAY ALL ENTERED INFORMATION AND ASK
C IF IT IS OK.
C
	IF (DPAEMT.EQ.EM_ESP) THEN
	    WRITE(6,903) IAM(),CYESNO(FLAG)
	ENDIF

	IF (GIND.EQ.PSBPOP .OR. DPAEMT.EQ.EM_EXT) THEN
	    WRITE(6,905) IAM(),DPAWSER
	ENDIF

	DO DIVS=1,DPADIV
	    IF (DPAWNUM(DIVS).GT.0) THEN
	       WRITE(6,904) IAM(),DIVS,(K,DPAWIN(K,DIVS),K=1,DPAWNUM(DIVS))
	    ENDIF
	ENDDO

	CALL WIMG(5,'Are the results entered ok [Y/N]? ')

	CALL YESNO(Y)
	IF(Y.NE.1) THEN
	    TYPE *,IAM(),
     *		  ' DO AGAIN ALL WINNING RESULTS PROCCESS'
	    CALL XWAIT(2,2,ST)
	    RETURN
	ENDIF
C
C UPDATE STATUS AND LET RESVER CONTINUE
C
	DPASTS  = GAMEN1
	OPDONE  = 1
	ALLDONE = .FALSE.
C
C WAIT FOR VERIFICATION FROM REMOTE TERMINAL
C
	DO  WHILE(.NOT.ALLDONE)
	    TYPE*,' Waiting for verification from remote terminal'

	    IF(DPASTS.EQ.GAMENV) THEN
C
C WINNER RESULTS COMPLETED: SEND COMMANDS
C
		CALL FASTSET(0,CBUF,CDLEN)
C
C SET WINNING NUMBERS 
C
		DO DIVS = 1,DPADIV
		   DO NBR=1,DPAWNUM(DIVS)
		      CBUF(1)  = 4
		      CBUF(2)  = DPAWIN(NBR,DIVS)
		      CBUF(3)  = TCPAS
		      CBUF(6)  = 'SYS '
		      CBUF(8)  = NBR
		      CBUF(9)  = GIND	
		      CBUF(10)  = DIVS
		      CBUF(11) = DRAW		    ! EMISSION NUMBER
		      CALL RESCMD(CBUF)
		      CALL XWAIT(50,1,ST)
	           ENDDO
		ENDDO
C
C CHANGE PURGE CDC: Already come in ORCEXT. No need to overwrite
C
C               CALL GET_PAS_PRG_DAY(PRG_DAY, DPAESD, DPAMAXDAYPAY, GNUM)
C		CBUF(1) = 6
C		CBUF(2) = PRG_DAY
C		CBUF(3) = TCPAS
C		CBUF(6) = 'SYS '
C		CBUF(8) = GIND	
C		CBUF(9) = DRAW		    ! EMISSION NUMBER
C		CALL RESCMD(CBUF)
C
C CHANGE GAME STATUS
C
		CBUF(1) = 1
		CBUF(2) = GAMDON
		CBUF(3) = TCPAS
		CBUF(6) = 'SYS '
		CBUF(8) = GIND
		CBUF(9) = DRAW				! EMISSION NUMBER
		CALL RESCMD(CBUF)

C
C SET WINNING SERIE (IF POPULAR OR EXTRAORDINARIA)
C
                IF (GIND.EQ.PSBPOP .OR. DPAEMT.EQ.EM_EXT) THEN
		   CBUF(1) = 5
		   CBUF(2) = DPAWSER
		   CBUF(3) = TCPAS
	           CBUF(6) = 'SYS '
		   CBUF(8) = GIND
                   CBUF(9) = DRAW
 		   CALL RESCMD(CBUF)
	        ENDIF
C
C SET PRIZE VALUE IF ESPECIAL
C  
		IF (DPAEMT.EQ.EM_ESP.AND.DPAEXSHV(1).GT.0.AND.FLAG.EQ.1) THEN
		   CBUF(1) = 7
		   CBUF(2) = PAS_ROUND_VALUE(DPAEXSHV(1))
		   CBUF(3) = TCPAS
		   CBUF(6) = 'SYS '
		   CBUF(8) = GIND
		   CBUF(9) = DRAW
		   CALL RESCMD(CBUF)
	        ENDIF

		ALLDONE = .TRUE.
	    ELSEIF(DPASTS.EQ.GAMBFD) THEN
		TYPE*,'Verification error, please re-enter '
		GOTO 20
	    ENDIF
C
C WAIT A LITTLE BIT AND TEST STATUS AGAIN
C
	    CALL XWAIT(5,2,ST)
	ENDDO

	RETURN
C
C FORMAT STATEMENTS
C
900	FORMAT(1X,A8,I1,' invalid game status> ',I4)
901	FORMAT(1X,A8,I1,' results entered ',13(A1,1X))
903	FORMAT(1X,A,' Add special prize: ',A3)
904	FORMAT(1X,A,' Winning Numbers for division ',I2.2,': ',/,<DPAWNUM(DIVS)>(1X,I2.2,' - ',I5.5,/))
905	FORMAT(1X,/,A,' Winning Serie: ',I2.2)
906	FORMAT(1X,'Enter ',I2,A,' number')

	END
C
C ROUTINE TO ABORT PROGRAM A CLEAR SOME VARIABLES
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE MY_GSTOP(STATUS_STOP)
	IMPLICIT NONE

	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:RESCOM.DEF'
C
C PARAMETERS
C
	INTEGER*4   STATUS_STOP
C
C CLEAR SOME VARIABLES
C
	VERREADY = 0
C
C ABORT PROGRAM
C
	CALL GSTOP(STATUS_STOP)
	RETURN
	END
