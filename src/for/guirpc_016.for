C
C SUBROUTINE GUIRPC_016
C
C V05 11-MAR-2010 RXK  TCLM removed
C V04 08-NOV-2000 UXN  Cleaned up.
C V03 24-JUN-2000 ANDY Start of Changes for Rolldown
C V02 07-APR-2000 XXX  MOVED RPC PARAMETERS TO SERVCOM
C V01 06-JAN-2000 AMY  Initial revision.
C  
C GUIRPC_016.FOR
C
C This subroutine returns the last transaction of a terminal.
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)	OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUIRPC_016(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMDLL.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:GUIMCOM.DEF'
C
	BYTE		OUTBUF(*)
	INTEGER*4	MES_LEN,RET_CODE
C
	INTEGER*4	LAST,ST,TER,AGT_NR
	INTEGER*4	NUM_COLS,NUM_ROWS
	INTEGER*4       LOGREC(LREC*3)
C
	INTEGER*4	AMT
C
	BYTE		I1TEMP(4)
	INTEGER*4	I4TEMP
	EQUIVALENCE	(I1TEMP,I4TEMP)
C
	REAL*8	R_TIME
	CHARACTER*8 LETTERS
	BYTE		BLETTER(8)
	EQUIVALENCE (BLETTER,LETTERS)
	EQUIVALENCE (R_TIME,LETTERS)
C
	RET_CODE = 0
C
C  GET TERMINAL NUMBER 
C
	CALL MOVBYT(OUTBUF,10,I1TEMP,1,4)
	AGT_NR = I4TEMP
C
	CALL FIND_AGENT(AGT_NR,TER,ST)
C
C  IF INVALID TERMINAL NUMBER, RETURN WITH ERROR
C
        IF (TER.LT.1.OR.TER.GT.X2X_TERMS.OR.ST.NE.0) THEN
          RET_CODE = 11
          RETURN
        ENDIF
	IF (AGTTAB(AGTNUM,TER).EQ.0) THEN
	  RET_CODE = 11
	  RETURN
	ENDIF
C
C SET REPRINT SERIAL NUMBER
C
	LAST=AGTTAB(ALSTRA,TER)
	IF (LAST.NE.0) THEN
C
C READ TERMINALS LAST TRANSACTION FROM LOG FILE
C
	  CALL GUI_RLOG(LAST,LOGREC,ST)
	  CALL LOGTRA(TRABUF,LOGREC)
	ENDIF
C
C Build RPC message
C
	CALL RPCARG_INIT() ! use RPC format
C
	NUM_ROWS = 1
	NUM_COLS = 8
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
C

	IF (ST.EQ.0.AND.LAST.NE.0) GOTO 1000 ! last transaction found
C
C No last transaction or error
C
	CALL GUIARG_CHAR(OUTBUF,%REF('        '),8)
	CALL GUIARG_INT4(OUTBUF,RPCNULL)
	CALL GUIARG_MONY(OUTBUF,RPCNULL)
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)

	CALL GUIARG_BYTE(OUTBUF,RPCNULL)
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)
	CALL GUIARG_INT4(OUTBUF,RPCNULL)

	CALL GUIARG_SET_MESLEN(MES_LEN)
	RETURN
C
C Good transactions
C
1000	CONTINUE
C
C CHECK FOR TRAINING MODE
C
	IF(TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTTRN)) THEN
	  RET_CODE=11
	  RETURN
	ENDIF
C
	CALL GUIARG_TIME(OUTBUF,TRABUF(TTIM))           ! TRANSACTION TIME
	CALL GUIARG_INT4(OUTBUF,TRABUF(TSER))           ! TRAN. SERIAL #
C
C  TRANSACTION AMT
C
	AMT = 0
	IF (TRABUF(TTYP).EQ.TWAG) THEN
	  AMT = TRABUF(TWTOT)
	ELSEIF (TRABUF(TTYP).EQ.TCAN) THEN
	  AMT = TRABUF(TWTOT)-(TRABUF(TWDAMT)*TRABUF(TWDUR))
	ELSEIF (TRABUF(TTYP).EQ.TVAL) THEN
	  AMT = TRABUF(TVPAY)+TRABUF(TVKPAY)
	ENDIF

	CALL GUIARG_MONY(OUTBUF,AMT)
	CALL GUIARG_BYTE(OUTBUF,TRABUF(TSTAT)) ! TRANSACTION STATUS

	CALL GUIARG_BYTE(OUTBUF,TRABUF(TGAM))  ! GAME NUMBER
	CALL GUIARG_BYTE(OUTBUF,TRABUF(TTYP))  ! TRANSACTION TYPE
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)       ! TRANSACTION SUB TYPE
	CALL GUIARG_INT4(OUTBUF,TRABUF(TCDC))  ! CDC
C
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
	END
