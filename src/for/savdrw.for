C
C PROGRAM SAVDRW
C
C SAVDRW.FOR
C
! V10 01-JAN-2010 FJG ePASSIVE
C V09 15-FEB-2000 UXN REG_DRWPCK, ODD_DRWPCK added.
C V08 17-MAY-1999 UXN Super Triple added.
C V07 23-NOV-1995 HXK Merge of post 65 stuff; changes for Double/Couple
C V06 30-JAN-1994 HXK PUT ODDSET DRAW FILES ON A DIFFERENT PACK.
C V05 16-AUG-1993 GXA Released for Finland Dec Conversion / Oddset.
C                     NOTE! Exchange transactions are no longer moved to 
C                     the draw files, they will be writtn to the Carryover 
C                     file as they take place).
C V04 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V03 01-AUG-1990 XXX RELEASED FOR VAX
C V02 11-FEB-1990 MTK FIXED FILE SIZE PROBLEM
C V01 01-OCT-1989 LOU R. INITIAL RELEASE FOR FINLAND
C
C PROGRAM TO DUMP BETS TO THE DRAWING PACKS
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM SAVDRW
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:DESLOG.DEF'
	INCLUDE 'INCLIB:RECSCF.DEF'
C
	INTEGER*4 S, LENGTH, TYPE, CNT, GN, DUMMY, SER, K, I
	INTEGER*4 ST, MXLOG, EOF
	INTEGER*4 GMFDB(7,MAXGAM),GMIOBUF(8192,MAXGAM),GMSIZE(MAXGAM)
	INTEGER*4 GMDRWNAM(5,MAXGAM),GMIND(MAXGAM),GMBLOCK(MAXGAM)
	INTEGER*4 GMLU(MAXGAM),GMCNT(MAXGAM)
	INTEGER*4 LBUF(LREC*3)
	INTEGER*4 FILEXT(2)
        INTEGER*4 GTYP
C
	INTEGER*4 GMIOBUFLEN
	PARAMETER (GMIOBUFLEN=8192)
C
	INTEGER*4   INPLEN
	INTEGER*4   DRWPACK(2)
	CHARACTER*4 CXDRWPACK
	EQUIVALENCE (CXDRWPACK, DRWPACK)
	DATA DRWPACK/'XXXX',':YYY'/
C
        INTEGER*4   DRWPACK_ODDSET(2)
        CHARACTER*4 CXDRWPACK_ODDSET
        EQUIVALENCE (CXDRWPACK_ODDSET, DRWPACK_ODDSET)
        DATA DRWPACK_ODDSET/'XXXX',':YYY'/
C
C
	DATA FILEXT/'.FIL','    '/
C
	DATA GMCNT/MAXGAM*0/
	DATA GMLU/MAXGAM*0/
	DATA GMIND/MAXGAM*1/
	DATA GMBLOCK/MAXGAM*0/
	DATA EOF/0/
C
C
	CALL COPYRITE
C
C
	MXLOG=(8192-LMUREC)+1
	CALL FASTSET(0,GMIOBUF(1,1),(8192*MAXGAM))
C
C READ SYSTEM CONTROL FILE
C
	CALL GETSCONF(SCFREC,ST)
	IF(ST.NE.0) THEN
	   TYPE*,IAM(),'Unable to get System Configuration information!'
	   CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C OPEN TRANSACTION MASTER FILE
C
	CALL OPENW(2,SCFSFN(1,PTMF),4,0,0,ST)
	CALL TOPEN(2)
	IF(ST.NE.0) THEN
	   WRITE(5,901) IAM(),SCFSFN(1,PTMF),ST
	   CALL GPAUSE
	ENDIF

	DRWPACK(1)        = SCFPAR(REG_DRWPCK)
	DRWPACK_ODDSET(1) = SCFPAR(ODD_DRWPCK)
	GOTO 6

5	CONTINUE
	DRWPACK(1)        = 0
	DRWPACK_ODDSET(1) = 0

6	CONTINUE
	IF(DRWPACK(1).EQ.0) THEN
           CALL PRMTEXT('Enter normal drawing pack volume name: ',
     *               CXDRWPACK,INPLEN)
	ENDIF

	IF(DRWPACK_ODDSET(1).EQ.0) THEN
           CALL PRMTEXT('Enter ODDSET drawing pack volume name: ',
     *               CXDRWPACK_ODDSET,INPLEN)
	ENDIF
C
C SET UP FOR ALL GAMES
C CREATE DRAW FILE NAMES , COMPUTE SIZES , CREATE FILES AND OPEN THEM
C
	DO 10 I=1,MAXGAM
           GTYP=GNTTAB(GAMTYP,I)
           if(gtyp.ne.TPAS) then   ! NO PASSIVE
             IF(GTYP.EQ.TSCR.OR.GTYP.EQ.TWIT.OR.GTYP.EQ.TTSL.OR.
     *         GTYP.EQ.TDBL.OR.GTYP.EQ.TCPL.OR.
     *         GTYP.EQ.TSSC.OR.GTYP.EQ.TTRP.OR.GTYP.EQ.TSTR) THEN
	       CALL MOVBYT(DRWPACK_ODDSET,1,GMDRWNAM(1,I),1,5)
             ELSE
               CALL MOVBYT(DRWPACK,1,GMDRWNAM(1,I),1,5)
             ENDIF
	     CALL MOVBYT(SCFSGN(I),1,GMDRWNAM(1,I),6,4)

	     CALL BINASC(GMDRWNAM(1,I),10,4,DAYCDC)
	     CALL MOVBYT(FILEXT(1),1,GMDRWNAM(1,I),14,7)
C
	     IF(DAYDRW(I).GT.0) THEN
	       GMSIZE(I)=(LRCCNT(I)*LREC/(MXLOG-1))+1+2
	       GMSIZE(I)=GMSIZE(I)*((GMIOBUFLEN*4+(SECSIZE-1))/SECSIZE)
	       CALL CRTFIL(GMDRWNAM(1,I),GMSIZE(I),ST)
	       IF(ST.NE.0) THEN
	         WRITE(5,900) IAM(),(GMDRWNAM(K,I),K=1,5),ST
		 GOTO 5
	       ENDIF
C
	       GMLU(I)=I+10
	       CALL OPENW(GMLU(I),GMDRWNAM(1,I),4,0,0,ST)
	       CALL IOINIT(GMFDB(1,I),GMLU(I),128*256)
	       IF(ST.NE.0) THEN
	         WRITE(5,902) IAM(),(GMDRWNAM(K,I),K=1,5),ST
		 GOTO 5
	      ENDIF
	    ENDIF
	  endif
10	CONTINUE
C
C DUMP WAGERS ONLY TO DRAWING PACK
C
	SER=0
C
40	CONTINUE
	SER=SER+1
	CALL RLOG(SER,LBUF,DUMMY,ST)
	IF(ST.GT.0) GOTO 40
	IF(ST.LT.0) THEN
	  WRITE(5,903)IAM()
	  CALL GPAUSE
	ENDIF
C
	CALL QLOGTRA(TRABUF,LBUF)
	IF(TRABUF(TSTAT).EQ.NUSD) THEN
	  EOF=EOF+1
	  IF(EOF.GT.5000) GOTO 1000
	  GOTO 40
	ENDIF
C
	EOF=0
C
D	TYPE *,'SAVDRW    TYPE',TRABUF(TTYP)
C
	IF(TRABUF(TTYP).NE.TWAG) THEN
	  GOTO 40  
	ELSE
	  IF(TRABUF(TGAMTYP).EQ.TPAS) GOTO 40 ! PASSIVE WAGERS DON'T GO
	ENDIF
C
D	TYPE *,'SAVDRW    STAT',TRABUF(TSTAT)
C
	IF(TRABUF(TSTAT).EQ.REJT) GOTO 40
C
C WITH NEW WINSEL WAY, DO NOT MOVE EXCHANGES TO DRAW FILES
C
	IF(TRABUF(TSTAT).EQ.EXCH) GOTO 40	
C
C SET GAME NUMBER FROM WAGER RECORD
C
	GN=TRABUF(TGAM)
C
D	TYPE *,'SAVDRW    GAME',TRABUF(TGAM), DAYDRW(GN)
C
	IF(DAYDRW(GN).LE.0) GOTO 40   !INVALID GAME NUMBER
C
	CNT=1
	CALL ILBYTE(TYPE,LBUF,LREC1-1)
	IF(TYPE.EQ.LONE) THEN
	  CALL ILBYTE(TYPE,LBUF,LREC2-1)
	  IF(TYPE.EQ.LEND) CNT=2
	  IF(TYPE.EQ.LTWO) CNT=3
	ENDIF
C
	LENGTH=LREC*CNT
C
D	TYPE *,'SAVDRW:   ADDING TO GMCNT  ',GN,GMCNT(GN)
C
	GMCNT(GN)=GMCNT(GN)+1
	CALL FASTMOV(LBUF,GMIOBUF(GMIND(GN),GN),LENGTH)
	GMIND(GN)=GMIND(GN)+LENGTH
C
C IF BLOCK IS FULL THEN WRITE IT TO THE RESPECTIVE DRAW FILE
C
	IF(GMIND(GN).GT.MXLOG) THEN
	  GMBLOCK(GN)=GMBLOCK(GN)+1
	  CALL WRITEW(GMFDB(1,GN),GMBLOCK(GN),GMIOBUF(1,GN),ST)
	  IF(ST.NE.0) THEN
	    WRITE(5,904) IAM(),(GMDRWNAM(K,GN),K=1,5),ST,GMBLOCK(GN)
	    CALL GPAUSE
	  ENDIF
	  GMIND(GN)=1
	  DO 35 I=1,8192
	  GMIOBUF(I,GN)=0
35	  CONTINUE
	ENDIF
	GOTO 40
C
C WRITE LAST BLOCKS AND STOP
C
1000	CONTINUE
	DO 1100 I=1,MAXGAM
           GTYP=GNTTAB(GAMTYP,I)	
           if(gtyp.ne.TPAS) then   ! NO PASSIVE	
             IF(DAYDRW(I).GT.0) THEN
	      GMBLOCK(I)=GMBLOCK(I)+1
	      CALL WRITEW(GMFDB(1,I),GMBLOCK(I),GMIOBUF(1,I),ST)
	      IF(ST.NE.0) THEN
	         WRITE(5,904) IAM(),(GMDRWNAM(K,I),K=1,5),ST,GMBLOCK(I)
	         CALL GPAUSE
	      ENDIF
	      IF(GMCNT(I) .NE. 0) THEN
                WRITE(5,905) IAM(),
     *                       GMCNT(I),
     *                       (SCFLGN(S,I),S=1,4),
     *	                     (GMDRWNAM(S,I),S=1,5)
              ENDIF
	      CALL CLOSEFIL(GMFDB(1,I))
	     ENDIF
	   endif
1100	CONTINUE
C
	CALL USRCLOS1(     2)
	CALL GSTOP(GEXIT_SUCCESS)
C
900	FORMAT(1X,A,5A4,'   Allocation error ',Z8,' on the draw pack')
901	FORMAT(1X,A,4A4,'   open error > ',Z8,' hex ')
902	FORMAT(1X,A,5A4,'   open error > ',Z8,' hex ')
903	FORMAT(1X,A,'TMF   read error')
904	FORMAT(1X,A,5A4,'   write error > ',Z8,' record > ',I4)
905	FORMAT(1X,A,I8,1X,4A4,' wagers transfered to ',5A4)
	END
