C
C  $Log:   GXAFIP:[GOLS]SET_CALLBACK.FOV  $
C  
C     Rev 1.0   03 Feb 1997 21:26:42   HXK
C  Initial revision.
C  
C     Rev 1.6   28 Jan 1995 14:09:46   DJO
C  Changed to allow interval amounts of 5 thru 95.
C  
C     Rev 1.5   24 Jan 1995 11:51:44   DJO
C  Modified to support the AGTCBF callback scheduled flag.
C  
C     Rev 1.4   23 Jan 1995 12:22:36   DJO
C  Changed to skip over terminals who have not been installed yet.
C  
C     Rev 1.3   16 Jan 1995 12:21:10   DJO
C  Changed to skip over retailers with a zero next call cdc.
C  
C     Rev 1.2   14 Jan 1995 19:17:22   DJO
C  Fixed a stack dump when producing the callback report.
C
C     Rev 1.1   13 Jan 1995 15:07:18   DJO
C  Applying PVCS header for automatic revision history
C
C     Rev 1.0    13 Jan 1995 15:06:48   DJO
C  Initial revision.
C
C
C PROGRAM TO SET THE CALLBACK PARAMETERS IN THE ASF FOR ALL GVT RETAILERS.
C  
C V01 01-JAN-94 XXX RELEASED FOR VAX
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1995 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	PROGRAM SET_CALLBACK
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:RECAGT.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:CLERK.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
C
	INTEGER*4 I,J,TER,AGENT,CLASS,CTIME,TYPE_FLAGS
	INTEGER*4 START_HRS,END_HRS,START_MINS,END_MINS,MINUTES,GVTS
	INTEGER*4 CHECK_COUNT,SLOT,ST,MTEMP,HTEMP,FIRST_CALL_CDC
C
	INTEGER*4 MAX_SLOTS,MAX_AT_ONCE
	PARAMETER (MAX_SLOTS   = 1500)
	PARAMETER (MAX_AT_ONCE = 1000)
C
	INTEGER*4 CURRENT_CDC,CALLBACK_CDC,NEXT_CALL_CDC
	INTEGER*4 START_TIME,END_TIME,INTERVAL,NUM_PER_SLOT
	INTEGER*4 TIME_SLOTS(MAX_SLOTS,MAX_AT_ONCE)
	INTEGER*4 TERMS_CONFIGURED(MAX_SLOTS),AGENTS(0:NUMAGT)
	INTEGER*4 TODAY_LIST(NUMAGT),TODAY_COUNT
	INTEGER*4 PRIOR_LIST(NUMAGT),PRIOR_COUNT
	INTEGER*2 SLOT_TIMES(MAX_SLOTS),SLOTS_NEEDED
C
	COMMON /GLOBALS/ AGENTS,CURRENT_CDC,CALLBACK_CDC,NEXT_CALL_CDC,
     *                   START_TIME,END_TIME,INTERVAL,NUM_PER_SLOT,
     *		         TIME_SLOTS,TERMS_CONFIGURED,SLOT_TIMES,
     *                   PRIOR_LIST,PRIOR_COUNT,TODAY_LIST,TODAY_COUNT,
     *                   SLOTS_NEEDED
C
C GET THE INFORMATION REQUIRED FROM THE USER:
C
C  START_TIME:   TIME OF DAY TO START CALLBACK SCHEDULING
C  END_TIME:     TIME OF DAY TO END CALLBACK SCHEDULING
C  INTERVAL:     THE LENGTH OF TIME OF EACH CALLBACK SLOT
C  NUM_PER_SLOT: THE NUMBER OF TERMINALS TO SCHEDULE FOR A CALLBACK SLOT
C  CURRENT_CDC:  THE CURRENT DAYS CDC
C  CALLBACK_CDC: THE CDC TO USE FOR TODAYS CALLBACK SCHEDULING
C
	CALL COPYRITE
C
	CALL INPNUM('Enter CallBack start time: ',START_TIME,1,2359,
     *              ST)
	IF(ST.NE.0) THEN
	  CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
	CALL INPNUM('Enter CallBack end time: ',END_TIME,START_TIME,2359,
     *              ST)
	IF(ST.NE.0) THEN
	  CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
	CALL INPNUM('Enter # of minutes for each timeslot: ',INTERVAL,
     *              5,99,ST)
	INTERVAL=INTERVAL/5*5
	IF(INTERVAL.LT.5) INTERVAL=5
	IF(ST.NE.0) THEN
	  CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
	CALL INPNUM('Enter max terminals per time slot: ',NUM_PER_SLOT,
     *              1,MAX_AT_ONCE,ST)
	IF(ST.NE.0) THEN
	  CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
	CALL INPNUM('Enter todays CDC: ',
     *              CURRENT_CDC,1,9999,ST)
	IF(ST.NE.0) THEN
	  CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
	CALL INPNUM('Enter the CDC for todays callback scheduling: ',
     *              CALLBACK_CDC,CURRENT_CDC,9999,ST)
	IF(ST.NE.0) THEN
	  CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C CALCULATE ALL OF THE LOOP SETUP/CONTROL VARIABLES
C
	START_HRS=START_TIME/100+1
	END_HRS=END_TIME/100
	START_MINS=MOD(START_TIME,100)/10*10        !ONLY UNITS OF 10
	END_MINS=MOD(END_TIME,100)/10*10	    !ONLY UNITS OF 10
	MINUTES=((END_HRS-START_HRS)*60)+(60-START_MINS)+(END_MINS)
	SLOTS_NEEDED=MINUTES/INTERVAL + 1
C
C FILL IN THE SLOT_TIMES() ARRAY WITH THE APPROPRIATE BEGINNING TIME 
C FOR EACH TIME SLOT
C
	MTEMP=START_MINS
	HTEMP=START_HRS-1
	DO 100 I=1,SLOTS_NEEDED
	  SLOT_TIMES(I)=HTEMP*100+MTEMP
	  TYPE *,'THE SLOT TIME(I) ARE ',SLOT_TIMES(I)
	  MTEMP=MTEMP+INTERVAL
	  IF(MTEMP.GT.60) THEN
	    MTEMP=(INTERVAL-(60-MTEMP))
	    HTEMP=HTEMP+1
	  ENDIF
	  IF(MTEMP.EQ.60) THEN
	    MTEMP=0
	    HTEMP=HTEMP+1
	  ENDIF
100	CONTINUE
C
	I=SLOTS_NEEDED*NUM_PER_SLOT
	TYPE *,IAM()
	TYPE *,IAM(),'THIS CONFIGURATION WILL SUPPORT ',I,' TERMINALS!!'
	TYPE *,IAM()
C
C BEGIN THE FIRST SCAN OF THE ASF FILE.  IN THIS SCAN,  THE FOLLOWING
C WILL HAPPEN:
C
C 	- FIND ALL RETAILERS SCHEDULED FOR CALLBACK TODAY AND UPDATE THE 
C         TODAY_LIST() WITH EACH.
C       - FIND ALL RETAILERS SCHEDULED FOR CALLBACK ON A PREVIOUS DAY 
C         AND UPDATE THE PRIOR_LIST() WITH EACH.
C       - FIND ALL RETAILERS SCHEDULED FOR CALLBACK ON THE CALLBACK CDC
C  	  AND PLACE THOSE RETAILERS INTO THE TIME_SLOTS() ARRAY.
C
	TYPE *,IAM(),'Beginning pass 1 of the ASF file scan'
	CALL OPENASF(1)
	TODAY_COUNT=0
	PRIOR_COUNT=0
	GVTS=0
	DO 200 TER=1,NUMAGT
	  CALL READASF(TER,ASFREC,ST)
	  IF(MOD(TER,5000).EQ.0) TYPE *,IAM(),TER,' RETAILERS PROCESSED',
     *         GVTS,' GVTS PROCESSED'
	  IF(ST.NE.0) THEN
	    TYPE *,IAM(),'ERROR READING ASF, REC=',TER
	    CALL CLOSASF
	    CALL GSTOP(GEXIT_FATAL)
	  ENDIF
	  CALL ASCBIN(ASFINF,SAGNO,LAGNO,AGENT,ST)
	  IF(ST.NE.0.OR.AGENT.EQ.0) GOTO 200
	  AGENTS(TER)=AGENT
	  CALL ASCBIN(ASFINF,SSCLS,LSCLS,CLASS,ST)
	  IF(ST.NE.0) GOTO 200
	  IF(CLASS.NE.9) GOTO 200   !ONLY GET GVT TERMINALS
	  GVTS=GVTS+1
	  NEXT_CALL_CDC=ASFNCDC
	  FIRST_CALL_CDC=ASFGVT
CWXW	  IF(FIRST_CALL_CDC.EQ.0) GOTO 200	    !SKIP GVT'S NOT INSTALLED
	  IF(NEXT_CALL_CDC.EQ.CURRENT_CDC) THEN	    !UPDATE TODAY LIST
	    TODAY_COUNT=TODAY_COUNT+1
	    TODAY_LIST(TODAY_COUNT)=TER
	  ENDIF
	  IF(NEXT_CALL_CDC.LT.CURRENT_CDC) THEN	    !UPDATE PRIOR DAY LIST
	    PRIOR_COUNT=PRIOR_COUNT+1
	    PRIOR_LIST(PRIOR_COUNT)=TER
	  ENDIF
	  IF(NEXT_CALL_CDC.EQ.CALLBACK_CDC) THEN    !UPDATE TIME_SLOTS()
	    CTIME=ASFGVTIM
	    DO 210 I=1,SLOTS_NEEDED
	      IF(CTIME.GE.SLOT_TIMES(I).AND.CTIME.LT.SLOT_TIMES(I+1)) THEN
		TERMS_CONFIGURED(I)=TERMS_CONFIGURED(I)+1
	        TIME_SLOTS(I,TERMS_CONFIGURED(I))=TER
	        GOTO 200
	      ENDIF
210	    CONTINUE
	  ENDIF
200	CONTINUE
	TYPE *,IAM()
	TYPE *,IAM(),'RETAILERS SCHEDULED FOR CALLBACK TODAY:',TODAY_COUNT
	TYPE *,IAM(),'RETAILERS SHCEDULED FOR CALLBACK ON PRIOR DAYS:',
     *               PRIOR_COUNT
C
C BEGIN THE SECOND SCAN OF THE ASF FILE.  IN THIS SCAN,  THE FOLLOWING
C WILL HAPPEN:
C
C       - CALCULATE THE CALLBACK TIMES FOR EACH RETAILER IN THE TODAY_LIST() &
C         PRIOR_LIST().
C 	- UPDATE THE ASF FOR ALL RETAILERS IN THE TODAY_LIST() WITH THE
C         APPROPRIATE CALLBACK DATE & TIMES.
C
	TYPE *,IAM()
	TYPE *,IAM(),'Beginning pass 2 of the ASF file scan'
	SLOT=0
	DO 300 TER=1,TODAY_COUNT		!PROCESS TODAY LIST
	  SLOT=SLOT+1
	  IF(SLOT.GE.SLOTS_NEEDED) SLOT=1
	  CHECK_COUNT=0
301	  CONTINUE
	  IF(TERMS_CONFIGURED(SLOT).GE.NUM_PER_SLOT) THEN
	    CHECK_COUNT=CHECK_COUNT+1
	    SLOT=SLOT+1
	    IF(SLOT.GE.SLOTS_NEEDED) SLOT=1
	    IF(CHECK_COUNT.GE.SLOTS_NEEDED) THEN
	      TYPE *,IAM(),'NO MORE SLOTS AVAILABLE..ABORTING'
	      CALL GSTOP(GEXIT_FATAL)
	    ENDIF
	    GOTO 301
	  ENDIF    
	  TERMS_CONFIGURED(SLOT)=TERMS_CONFIGURED(SLOT)+1
	  TIME_SLOTS(SLOT,TERMS_CONFIGURED(SLOT))=TODAY_LIST(TER)
300	CONTINUE
C
	DO 400 TER=1,PRIOR_COUNT		!PROCESS PRIOR DAY LIST
	  SLOT=SLOT+1
	  IF(SLOT.GE.SLOTS_NEEDED) SLOT=1
	  CHECK_COUNT=0
401	  CONTINUE
	  IF(TERMS_CONFIGURED(SLOT).GE.NUM_PER_SLOT) THEN
	    CHECK_COUNT=CHECK_COUNT+1
	    SLOT=SLOT+1
	    IF(SLOT.GE.SLOTS_NEEDED) SLOT=1
	    IF(CHECK_COUNT.GE.SLOTS_NEEDED) THEN
	      TYPE *,IAM(),'NO MORE SLOTS AVAILABLE..ABORTING'
	      CALL GSTOP(GEXIT_FATAL)
	    ENDIF
	    GOTO 401
	  ENDIF    
	  TERMS_CONFIGURED(SLOT)=TERMS_CONFIGURED(SLOT)+1
	  TIME_SLOTS(SLOT,TERMS_CONFIGURED(SLOT))=PRIOR_LIST(TER)
400	CONTINUE
C
C NOW, LOOP THROUGH THE TIME_SLOTS() ARRAY AND UPDATE EACH OF THE RETAILERS
C WITH THEIR NEW CALLBACK TIMES.
C
	DO 500 I=1,SLOTS_NEEDED
	  DO 510 J=1,TERMS_CONFIGURED(I)
	    CALL READASF(TIME_SLOTS(I,J),ASFREC,ST)
	    IF(ST.NE.0) THEN
	      TYPE *,IAM(),'ERROR READING ASF, REC=',TER
	      CALL CLOSASF
	      CALL GSTOP(GEXIT_FATAL)
	    ENDIF
	    ASFGVTIM=SLOT_TIMES(I)	    !UPDATE CALLBACK TIME
	    ASFNCDC=CALLBACK_CDC	    !UPDATE CALLBACK CDC
	    CALL ASCBIN(ASFINF,STTYP,LTTYP,TYPE_FLAGS,ST)
	    CALL BSET(TYPE_FLAGS,AGTCBF)    !SET CALLBACK SHCEDULED FLAG
            CALL BINASC(ASFINF,STTYP,LTTYP,TYPE_FLAGS)
	    CALL WRITASF(TIME_SLOTS(I,J),ASFREC,ST) 
510	  CONTINUE
500	CONTINUE
	CALL CLOSASF
	CALL CALLBACK_REPORT
CCC	CALL CALLBACK_REPORT(PRIOR_LIST,PRIOR_COUNT,2)
	CALL GSTOP(GEXIT_SUCCESS)
	STOP
C
900	FORMAT(1X,A,1X,5A4,' not updated')
	END
C
C SUBROUTINE TO PRINT A REPORT DETAILING ALL AGENTS SCHEDULED FOR CALLBACK
C 
      SUBROUTINE CALLBACK_REPORT
      IMPLICIT NONE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:AGTINF.DEF'
      INCLUDE 'INCLIB:AGTCOM.DEF'
      INCLUDE 'INCLIB:RECAGT.DEF'
C
      INTEGER*4 LINE_COUNT/99/,EXT,COPY,ST
      INTEGER*4 REPLU/7/,PAGE/1/,I,J,K
      LOGICAL   FIRST/.TRUE./
C
      INTEGER*4 MAX_SLOTS,MAX_AT_ONCE
      PARAMETER (MAX_SLOTS   = 1500)
      PARAMETER (MAX_AT_ONCE = 1000)
C
      INTEGER*4 CURRENT_CDC,CALLBACK_CDC,NEXT_CALL_CDC
      INTEGER*4 START_TIME,END_TIME,INTERVAL,NUM_PER_SLOT
      INTEGER*4 TIME_SLOTS(MAX_SLOTS,MAX_AT_ONCE)
      INTEGER*4 TERMS_CONFIGURED(MAX_SLOTS),AGENTS(0:NUMAGT)
      INTEGER*4 TODAY_LIST(NUMAGT),TODAY_COUNT
      INTEGER*4 PRIOR_LIST(NUMAGT),PRIOR_COUNT
      INTEGER*2 SLOT_TIMES(MAX_SLOTS),SLOTS_NEEDED
C
      COMMON /GLOBALS/   AGENTS, CURRENT_CDC,CALLBACK_CDC,NEXT_CALL_CDC,
     *                   START_TIME,END_TIME,INTERVAL,NUM_PER_SLOT,
     *		         TIME_SLOTS,TERMS_CONFIGURED,SLOT_TIMES,
     *                   PRIOR_LIST,PRIOR_COUNT,TODAY_LIST,TODAY_COUNT,
     *                   SLOTS_NEEDED
C
C OPEN THE REPORT FILE
C
      TYPE *,IAM(),'Generating the SET_CALLBACK scheduling report'
      TYPE *,IAM()
      CALL INPNUM('Enter number of report copies ',COPY,0,20,EXT)
      IF(EXT.LT.0) CALL GSTOP(GEXIT_OPABORT)
 
      CALL ROPEN('SET_CALLBACK.REP',REPLU,ST)
      IF(ST.NE.0)THEN
         TYPE *,' Error openning SET_CALLBACK.REP >',ST
         CALL GPAUSE
      ENDIF
C
      DO 100 I=1,SLOTS_NEEDED
        IF(LINE_COUNT.GT.55) THEN
 	 IF(.NOT.FIRST) THEN
	  WRITE(REPLU,902)
	 ELSE
	  FIRST=.FALSE.
	 ENDIF 
         CALL TITLE('CALLBACK SCHEDULING REPORT','SET_CALL',
     *             1,7,PAGE,DAYCDC)
         WRITE(REPLU,900)
	 WRITE(REPLU,901)
	 WRITE(REPLU,902)
         LINE_COUNT=11
        ENDIF
	IF(TERMS_CONFIGURED(I).EQ.0) GOTO 100
        WRITE(REPLU,913) SLOT_TIMES(I),
     *       (AGENTS(TIME_SLOTS(I,K)),K=1,11)
	LINE_COUNT=LINE_COUNT+1
	DO 110 J=12,TERMS_CONFIGURED(I),11
	  WRITE(REPLU,914) (AGENTS(TIME_SLOTS(I,K)),K=J,J+10)
	  LINE_COUNT=LINE_COUNT+1
          IF(LINE_COUNT.GT.55) THEN
 	   IF(.NOT.FIRST) THEN
	    WRITE(REPLU,902)
	   ELSE
	    FIRST=.FALSE.
	   ENDIF 
           CALL TITLE('CALLBACK SCHEDULING REPORT','SET_CALL',
     *               1,7,PAGE,DAYCDC)
           WRITE(REPLU,900)
	   WRITE(REPLU,901)
	   WRITE(REPLU,902)
           LINE_COUNT=11
          ENDIF
110     CONTINUE
100   CONTINUE
C
      WRITE(REPLU,902)
      WRITE(REPLU,903) CURRENT_CDC
      WRITE(REPLU,904) CALLBACK_CDC
      WRITE(REPLU,905) START_TIME
      WRITE(REPLU,906) END_TIME
      WRITE(REPLU,907) INTERVAL
      WRITE(REPLU,908) NUM_PER_SLOT
      WRITE(REPLU,909) 
      WRITE(REPLU,910) TODAY_COUNT
      WRITE(REPLU,911) PRIOR_COUNT
      WRITE(REPLU,912) TODAY_COUNT+PRIOR_COUNT
C
      CALL USRCLOS1(REPLU)
      CALL SPOOL('SET_CALLBACK.REP',COPY,ST)
      RETURN
C
900   FORMAT(1X,131('='),/)
901   FORMAT(1X,'TIME',11X,'RETAILERS SCHEDULED')
902   FORMAT(1X,'----',11X,111('-'))
903   FORMAT(//,1X,'CURRENT CDC DATE            :',I4)
904   FORMAT(1X,'CALLBACK CDC DATE           :',I4)
905   FORMAT(1X,'START TIME FOR SCHEDULING   :',I4)
906   FORMAT(1X,'END TIME FOR SCHEDULING     :',I4)
907   FORMAT(1X,'TIME INTERVAL BETWEEN SLOTS :',I4)
908   FORMAT(1X,'MAXIMUM TERMINALS PER SLOT  :',I4,/)
909   FORMAT(1X,60('-'))
910   FORMAT(1X,'TOTAL RETAILERS SCHEDULED FOR CALLBACK TODAY         :',
     *       I4)
911   FORMAT(1X,'TOTAL RETAILERS SCHEDULED FOR CALLBACK ON PRIOR DAYS :',
     *       I4)
912   FORMAT(1X,'TOTAL RETAILERS SCHEDULED FOR CALLBACK (BOTH)        :',
     *       I4)
913   FORMAT(/,1X,I4.4,12X,11(I6.6,4X))
914   FORMAT(17X,11(I6.6,4X))
C
      END
