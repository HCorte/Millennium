C CNVCONC.FOR
C
C V02 26-MAR-2011 FRP MAXGAM to 50.
C V01 04-MAY-2004 FRP Initial release.
C
C CONVERTS SAPDRWAMT.FIL (GENERATED BY RELCONC) TO HANDLE MAXGAM=50.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, W.Greenwich, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1993 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	OPTIONS/CHECK=NOOVERFLOW/EXT
	PROGRAM CNVCONC
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:STANDARD.DEF'
C
C
        INTEGER*4 OMAXGAM
        PARAMETER(OMAXGAM=10)
C
        CHARACTER*20 OFILNAM
        INTEGER*4    IOFILNAM(5),OIDX_FDB(7)
        EQUIVALENCE  (OFILNAM,IOFILNAM)
C
        STRUCTURE   /OSTCAMTDRW/
            INTEGER*8   AMTDRWONL(6,OMAXGAM)
            INTEGER*8   COMDRWONL(6,OMAXGAM)
            INTEGER*8   AMTDRWOFF(6,OMAXGAM)
            INTEGER*8   COMDRWOFF(6,OMAXGAM)
        END STRUCTURE
C
        RECORD /OSTCAMTDRW/ OREGAMTDRW
C
C
        CHARACTER*20 FILNAM
        INTEGER*4    IFILNAM(5),IDX_FDB(7)
        EQUIVALENCE  (FILNAM,IFILNAM)
C
        STRUCTURE   /STCAMTDRW/
            INTEGER*8   AMTDRWONL(6,MAXGAM)
            INTEGER*8   COMDRWONL(6,MAXGAM)
            INTEGER*8   AMTDRWOFF(6,MAXGAM)
            INTEGER*8   COMDRWOFF(6,MAXGAM)
        END STRUCTURE
C
        RECORD /STCAMTDRW/ REGAMTDRW
C
C
        INTEGER*4 MDUR
        PARAMETER (MDUR=5)
C
	INTEGER*4 ST,YESNO,POS1,POS2,GAM
C
C
	CALL COPYRITE
C
	CALL PRMYESNO('Are you sure you want to convert SAPDRWAMT file',YESNO)
	IF(YESNO.NE.1) CALL GSTOP(GEXIT_OPABORT)
C
C Open old SAPDRWAMT.FIL
        OFILNAM = 'FILE:SAPDRWAMT.FIL'
        CALL FIDX_OPEN(OIDX_FDB,OFILNAM,SIZEOF(OREGAMTDRW),'OLD',ST)
        IF(ST.NE.0) CALL FILERR(IOFILNAM,OPEN_ERROR,ST,0)
C
C Create new SAPDRWAMT.NEW
        FILNAM = 'FILE:SAPDRWAMT.NEW'
        CALL FIDX_OPEN(IDX_FDB,FILNAM,SIZEOF(REGAMTDRW),'NEW',ST)
        IF(ST.NE.0) CALL FILERR(IFILNAM,OPEN_ERROR,ST,0)
C
C Convert records from SAPDRWAMT.FIL to SAPDRWAMT.NEW
	TYPE*, IAM(),'STARTING...'
C
	DO POS1 = 1,MDUR
          CALL FIDX_READ(OIDX_FDB,POS1,SIZEOF(OREGAMTDRW),OREGAMTDRW,ST)
          IF(ST.NE.0) CALL FILERR(IOFILNAM,READ_ERROR,ST,POS1)
C
	  DO GAM = 1,OMAXGAM
            DO POS2 = 1,6
              REGAMTDRW.AMTDRWONL(POS2,GAM) = OREGAMTDRW.AMTDRWONL(POS2,GAM)
              REGAMTDRW.COMDRWONL(POS2,GAM) = OREGAMTDRW.COMDRWONL(POS2,GAM)
              REGAMTDRW.AMTDRWOFF(POS2,GAM) = OREGAMTDRW.AMTDRWOFF(POS2,GAM)
              REGAMTDRW.COMDRWOFF(POS2,GAM) = OREGAMTDRW.COMDRWOFF(POS2,GAM)
            ENDDO
          ENDDO
C
          CALL FIDX_WRITE(IDX_FDB,POS1,SIZEOF(REGAMTDRW),REGAMTDRW,ST)
          IF(ST.NE.0) CALL FILERR(IFILNAM,WRITE_ERROR,ST,POS1)
	ENDDO
C
C Close SAPDRWAMT.FIL and SAPDRWAMT.NEW
        CALL FIDX_CLOSE(OIDX_FDB,ST)
        IF(ST.NE.0) CALL FILERR(IOFILNAM,CLOSE_ERROR,ST,0)
C
        CALL FIDX_CLOSE(IDX_FDB,ST)
        IF(ST.NE.0) CALL FILERR(IFILNAM,CLOSE_ERROR,ST,0)
C
C Rename SAPDRWAMT.FIL to SAPDRWAMT.OLD
	TYPE*,IAM(),'Renaming SAPDRWAMT.FIL to SAPDRWAMT.OLD'
	CALL LIB$RENAME_FILE('FILE:SAPDRWAMT.FIL','FILE:SAPDRWAMT.OLD')
C
C Rename SAPDRWAMT.NEW to SAPDRWAMT.FIL
	TYPE*,IAM(),'Renaming SAPDRWAMT.NEW to SAPDRWAMT.FIL'
	CALL LIB$RENAME_FILE('FILE:SAPDRWAMT.NEW','FILE:SAPDRWAMT.FIL')
C
C Check SAPDRWAMT.FIL and SAPDRWAMT.OLD
        OFILNAM = 'FILE:SAPDRWAMT.OLD'
        CALL FIDX_OPEN(OIDX_FDB,OFILNAM,SIZEOF(OREGAMTDRW),'OLD',ST)
        IF(ST.NE.0) CALL FILERR(IOFILNAM,OPEN_ERROR,ST,0)
C
        FILNAM = 'FILE:SAPDRWAMT.FIL'
        CALL FIDX_OPEN(IDX_FDB,FILNAM,SIZEOF(REGAMTDRW),'OLD',ST)
        IF(ST.NE.0) CALL FILERR(IFILNAM,OPEN_ERROR,ST,0)
C
	DO POS1 = 1,MDUR
          CALL FIDX_READ(OIDX_FDB,POS1,SIZEOF(OREGAMTDRW),OREGAMTDRW,ST)
          IF(ST.NE.0) CALL FILERR(IOFILNAM,READ_ERROR,ST,POS1)
C
          CALL FIDX_READ(IDX_FDB,POS1,SIZEOF(REGAMTDRW),REGAMTDRW,ST)
          IF(ST.NE.0) CALL FILERR(IFILNAM,READ_ERROR,ST,POS1)
C
          DO GAM = 1,OMAXGAM
            DO POS2 = 1,6
	      IF(OREGAMTDRW.AMTDRWONL(POS2,GAM) .NE.
     *           REGAMTDRW.AMTDRWONL(POS2,GAM)) THEN
                TYPE*, 'POS1:',POS1,' GAM:',GAM,'POS2:',POS2
                TYPE*, '********* SAPDRWAMT.OLD *********'
                TYPE*, 'AMTDRWONL:',OREGAMTDRW.AMTDRWONL(POS2,GAM)
                TYPE*, 'COMDRWONL:',OREGAMTDRW.COMDRWONL(POS2,GAM)
                TYPE*, 'AMTDRWOFF:',OREGAMTDRW.AMTDRWOFF(POS2,GAM)
                TYPE*, 'COMDRWOFF:',OREGAMTDRW.COMDRWOFF(POS2,GAM)
                TYPE*, '********* SAPDRWAMT.FIL *********'
                TYPE*, 'AMTDRWONL:',REGAMTDRW.AMTDRWONL(POS2,GAM)
                TYPE*, 'COMDRWONL:',REGAMTDRW.COMDRWONL(POS2,GAM)
                TYPE*, 'AMTDRWOFF:',REGAMTDRW.AMTDRWOFF(POS2,GAM)
                TYPE*, 'COMDRWOFF:',REGAMTDRW.COMDRWOFF(POS2,GAM)
	        TYPE*
	      ENDIF
            ENDDO
          ENDDO
C
          DO GAM = OMAXGAM+1,MAXGAM
            DO POS2 = 1,6
	      IF(REGAMTDRW.AMTDRWONL(POS2,GAM) .NE. 0) THEN
                TYPE*, 'POS1:',POS1,' GAM:',GAM,'POS2:',POS2
                TYPE*, '********* SAPDRWAMT.FIL *********'
                TYPE*, 'AMTDRWONL:',REGAMTDRW.AMTDRWONL(POS2,GAM)
                TYPE*, 'COMDRWONL:',REGAMTDRW.COMDRWONL(POS2,GAM)
                TYPE*, 'AMTDRWOFF:',REGAMTDRW.AMTDRWOFF(POS2,GAM)
                TYPE*, 'COMDRWOFF:',REGAMTDRW.COMDRWOFF(POS2,GAM)
	        TYPE*
	      ENDIF
            ENDDO
          ENDDO
C
	ENDDO
C
C End
	TYPE*, IAM(),'SAPDRWAMT file converted successfully!'
	CALL GSTOP(GEXIT_SUCCESS)
	END
