C
C SUBROUTINE INVSNP
C  
C V17 16-MAR-2011 GPW NUMAGT=12288
C V16 01-JAN-2010 FJG ePASSIVE
C V15 28-JAN-1997 RXK Instant invoice information displayed 
C V14 18-DEC-1996 HXK Update from TEBE project (MXP,WXW,PXN,MJF)
C V13 28-NOV-1996 WXW Telebetting startup, changes MP/PXN/WXW.
C                     Fixes for non commission agents.
C V12 17-APR-1996 HXK Release of Finland for X.25, Telephone Betting,
C                     Instant Pass Thru Phase 1
C V11 24-APR-1995 HXK Merge of V5 development with March 10th 1995 bible
C V10 02-MAR-1995 HXK Changed commission calculation for V5
C V09 24-JAN-1994 JXP Display 7 characters for agent numbeR
C V08 12-OCT-1993 HXK Restore REFUNDs.
C V07 24-SEP-1993 GXA Removed cash commision and ticket charge.
C V06 11-JUN-1993 HXK REARRANGED AGTINF.DEF, AGTCOM.DEF
C V05 21-JAN-1993 DAB Initial Release Based on Netherlands Bible, 12/92,
C                     and Comm 1/93 update DEC Baseline
C V04 29-OCT-1991 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C                      CHANGED ACCESS OF GAMES TO USE GAME NUMBER.
C V03 12-MAR-1991 JPJ  INITIAL RELEASE FOR MARYLAND
C V02 15-FEB-1991 WOL  USES NEW CHARACTER CMONY ROUTINES
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C INVSNP.FOR
C
C AGENT INVOICE SNAPSHOT
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1995 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	SUBROUTINE INVSNP(NUM,LKEY,LNUM,GNUMDSP)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
C
	INTEGER*4   CANIND , CLMIND , DSCIND , SALIND , VALIND
	INTEGER*4   REFIND , TKCIND , LENIND
	PARAMETER   (CANIND=MAXGAM+1)
	PARAMETER   (CLMIND=MAXGAM+2)
	PARAMETER   (DSCIND=MAXGAM+3)
	PARAMETER   (SALIND=MAXGAM+4)
	PARAMETER   (VALIND=MAXGAM+5)
	PARAMETER   (REFIND=MAXGAM+6)
	PARAMETER   (TKCIND=MAXGAM+7)
	PARAMETER   (LENIND=TKCIND)
C
	INTEGER*4 FDB(7),CURAMT(LENIND),WEKAMT(LENIND),LSTAMT(LENIND)
	INTEGER*4 CURCNT(LENIND),WEKCNT(LENIND),LSTCNT(LENIND)
	INTEGER*4 COMAMT(2)
	INTEGER*4 SCOM(2,3), VCOM(2,3), ADJUST(2,3), AMTDUE(2,3)
	INTEGER*4 POSDUE(2,2), WCOM(2,3)
	INTEGER*4   INDVTAB(AGAMLEN,MAXGAM)
	INTEGER*4   GNUMDSP			!Game # to display sales for.
	INTEGER*4   GTYPDSP			!Game type      - " -       .
	INTEGER*4   GINDDSP			!Game index     - " -       .
	INTEGER*4   STTRANSP,CERR,TRANSP
C
	INTEGER*4 J, DAY, NETSAL, GTYP, GAM, I, K, ST
	INTEGER*4 AGT, CLRKNUM, LNUM, LKEY, NUM, GIND, DUMMY
C
	CHARACTER CZERO
	DATA      CZERO/Z0/,CLRKNUM/0/
C
C CHECK INPUTED GAME NUMBER, DECODE GAME TYPE AND INDEX.
C
	IF(GNUMDSP.LT.1.OR.GNUMDSP.GT.MAXGAM) GNUMDSP=1
	GTYPDSP=GNTTAB(GAMTYP,GNUMDSP)
	GINDDSP=GNTTAB(GAMIDX,GNUMDSP)
C
	IF(GTYPDSP.LT.1.OR.GTYPDSP.GT.MAXTYP) THEN
	    WRITE(CLIN23,923) GNUMDSP
	    RETURN
	ENDIF
C
	AGT=NUM
	IF(AGT.LT.1.OR.AGT.GT.NUMAGT) AGT=1
	LSTAGT=AGTTAB(AGTNUM,AGT)
	IF(AGT.EQ.LNUM.AND.LKEY.EQ.11) GOTO 100
	CALL OPENW(1,SFNAMES(1,ASF),4,0,0,ST)
	CALL IOINIT(FDB,1,ASFSEC*256)
	IF(ST.NE.0) THEN
	  WRITE(CLIN23,925) (SFNAMES(K,ASF),K=1,5),ST
	  RETURN
	ENDIF
	CALL READW(FDB,AGT,ASFREC,ST)
	IF(ST.NE.0) THEN
	  WRITE(CLIN23,1023) (SFNAMES(K,ASF),K=1,5),ST,AGT
	  RETURN
	ENDIF
	DO 10 I=1,512
	IF(ASFBYT(I).EQ.CZERO) ASFBYT(I)=' '
10	CONTINUE
	CALL USRCLOS1(     1)
C
100	CONTINUE
	IF(P(CLRKACT).EQ.0) THEN
	  CLRKNUM=AGTHTB(AGTPASOFF,AGT)
	  CALL GETCLERK(AGT,CLRKNUM,1,INDVTAB)
	ENDIF
	CALL FASTSET(0,CURAMT,LENIND)
	CALL FASTSET(0,WEKAMT,LENIND)
	CALL FASTSET(0,LSTAMT,LENIND)
	CALL FASTSET(0,CURCNT,LENIND)
	CALL FASTSET(0,WEKCNT,LENIND)
	CALL FASTSET(0,LSTCNT,LENIND)
	CALL FASTSET(0,SCOM,6)
	CALL FASTSET(0,VCOM,6)
	CALL FASTSET(0,WCOM,6)
	CALL FASTSET(0,AMTDUE,6)
	CALL FASTSET(0,POSDUE,4)
	CALL FASTSET(0,ADJUST,6)
C
C TODAYS SALES
C
	DO 110 GAM=1,MAXGAM
	   GTYP=GNTTAB(GAMTYP,GAM)
           GIND=GNTTAB(GAMIDX,GAM)
	   IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 110
	   CURCNT(GAM)=CURCNT(GAM)+AGTGAM(GSCNT,GAM,AGT)-
     *	                           AGTGAM(GCCNT,GAM,AGT)
	   CURAMT(GAM)=CURAMT(GAM)+AGTGAM(GSAMT,GAM,AGT)-
     *	                           AGTGAM(GCAMT,GAM,AGT)
	   CURCNT(SALIND)=CURCNT(SALIND)+AGTGAM(GSCNT,GAM,AGT)-
     *	                       AGTGAM(GCCNT,GAM,AGT)
	   CURAMT(SALIND)=CURAMT(SALIND)+AGTGAM(GSAMT,GAM,AGT)-
     *	                       AGTGAM(GCAMT,GAM,AGT)
	   CURCNT(VALIND)=CURCNT(VALIND)+AGTGAM(GVCNT,GAM,AGT)
	   CURAMT(VALIND)=CURAMT(VALIND)+AGTGAM(GVAMT,GAM,AGT)
	   CURCNT(CANIND)=CURCNT(CANIND)+AGTGAM(GCCNT,GAM,AGT)
	   CURAMT(CANIND)=CURAMT(CANIND)+AGTGAM(GCAMT,GAM,AGT)
	   CURCNT(CLMIND)=CURCNT(CLMIND)+AGTGAM(GCLCNT,GAM,AGT)
	   CURAMT(CLMIND)=CURAMT(CLMIND)+AGTGAM(GCLAMT,GAM,AGT)
	   CURCNT(DSCIND)=CURCNT(DSCIND)+AGTGAM(GDCNT,GAM,AGT)
	   CURAMT(DSCIND)=CURAMT(DSCIND)+AGTGAM(GDAMT,GAM,AGT)
	   CURCNT(REFIND)=CURCNT(REFIND)+AGTGAM(GRCNT,GAM,AGT)
	   CURAMT(REFIND)=CURAMT(REFIND)+AGTGAM(GRAMT,GAM,AGT)
	   CURAMT(TKCIND)=CURAMT(TKCIND)+AGTGAM(GTKCHG,GAM,AGT)
	   NETSAL=AGTGAM(GSAMT,GAM,AGT)-AGTGAM(GCAMT,GAM,AGT)
	   CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,SCOM(1,1),GTYP,GIND,AGT)
           IF(TSBIT(AGTTAB(AGTTYP,AGT),AGTNCM).NE.0) THEN
	     SCOM(1,1)=0
	     SCOM(2,1)=0
	   ENDIF
110	CONTINUE
	DO 155 I=1,15
	IF(ASFLGR(LGRCDC,I).NE.DAYCDC) GOTO 155
	CALL ADDI8I8(ADJUST,ASFLGR(LGRAMTU,I),BETUNIT)
155	CONTINUE
C
C SUM CLERKS ALSO FOR TODAY
C
	IF(P(CLRKACT).EQ.0) THEN
	  DO 115 GAM=1,MAXGAM
	     GTYP=GNTTAB(GAMTYP,GAM)
             GIND=GNTTAB(GAMIDX,GAM)
	     IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 115
	     CURCNT(GAM)=CURCNT(GAM)+INDVTAB(GSCNT,GAM)-
     *	                             INDVTAB(GCCNT,GAM)
	     CURAMT(GAM)=CURAMT(GAM)+INDVTAB(GSAMT,GAM)-
     *	                             INDVTAB(GCAMT,GAM)
	     CURCNT(SALIND)=CURCNT(SALIND)+INDVTAB(GSCNT,GAM)-
     *                     INDVTAB(GCCNT,GAM)
	     CURAMT(SALIND)=CURAMT(SALIND)+INDVTAB(GSAMT,GAM)-
     *                     INDVTAB(GCAMT,GAM)
	     CURCNT(VALIND)=CURCNT(VALIND)+INDVTAB(GVCNT,GAM)
	     CURAMT(VALIND)=CURAMT(VALIND)+INDVTAB(GVAMT,GAM)
	     CURCNT(CANIND)=CURCNT(CANIND)+INDVTAB(GCCNT,GAM)
	     CURAMT(CANIND)=CURAMT(CANIND)+INDVTAB(GCAMT,GAM)
	     CURCNT(CLMIND)=CURCNT(CLMIND)+INDVTAB(GCLCNT,GAM)
	     CURAMT(CLMIND)=CURAMT(CLMIND)+INDVTAB(GCLAMT,GAM)
	     CURCNT(DSCIND)=CURCNT(DSCIND)+INDVTAB(GDCNT,GAM)
	     CURAMT(DSCIND)=CURAMT(DSCIND)+INDVTAB(GDAMT,GAM)
	     CURCNT(REFIND)=CURCNT(REFIND)+INDVTAB(GRCNT,GAM)
	     CURAMT(REFIND)=CURAMT(REFIND)+INDVTAB(GRAMT,GAM)
             CURAMT(TKCIND)=CURAMT(TKCIND)+INDVTAB(GTKCHG,GAM)
	     NETSAL=INDVTAB(GSAMT,GAM)-INDVTAB(GCAMT,GAM)
	     CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,SCOM(1,1),GTYP,GIND,AGT)
           IF(TSBIT(AGTTAB(AGTTYP,AGT),AGTNCM).NE.0) THEN
	     SCOM(1,1)=0
	     SCOM(2,1)=0
	   ENDIF
115	  CONTINUE
	ENDIF

        DUMMY=0
        CALL GETCOM(CURAMT(VALIND),TVAL,GAM,COMAMT,VCOM(1,1),DUMMY,DUMMY,DUMMY)
!       CALL GETCOM(CURCNT(CLMIND),TCLM,GAM,COMAMT,VCOM(1,1),DUMMY,DUMMY,DUMMY)
        CALL ADDI8I4(AMTDUE(1,1),CURAMT(SALIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,1),CURAMT(VALIND),VALUNIT)
	CALL SUBI8I4(AMTDUE(1,1),CURAMT(REFIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,1),CURAMT(DSCIND),BETUNIT)
        CALL ADDI8I8(AMTDUE(1,1),ADJUST(1,1),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,1),SCOM(1,1),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,1),VCOM(1,1),BETUNIT)
	CALL ADDI8I4(AMTDUE(1,1),CURAMT(TKCIND),BETUNIT)
        CALL ADDI8I4(POSDUE(1,1),CURAMT(SALIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,1),CURAMT(VALIND),VALUNIT)
	CALL SUBI8I4(POSDUE(1,1),CURAMT(REFIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,1),CURAMT(DSCIND),BETUNIT)
C
C INVOICE TO DATE SALES
C
	CALL FASTMOV(CURAMT,WEKAMT,LENIND)
	CALL FASTMOV(CURCNT,WEKCNT,LENIND)
	SCOM(1,2)=SCOM(1,1)
	SCOM(2,2)=SCOM(2,1)
	ADJUST(1,2)=ADJUST(1,1)
	ADJUST(2,2)=ADJUST(2,1)
	DO 200 DAY=1,9
	DO 200 GAM=1,MAXGAM
	   IF(ASFDAT(ASFCDC,DAY).LE.ASFINV(ASFEND,1)) GOTO 200
	   IF(ASFDAT(ASFCDC,DAY).EQ.DAYCDC)           GOTO 200
	   GTYP=GNTTAB(GAMTYP,GAM)
           GIND=GNTTAB(GAMIDX,GAM)
	   IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 200
	   WEKCNT(GAM)=WEKCNT(GAM)+ASFDAY(GSCNT,GAM,DAY)-
     *	                           ASFDAY(GCCNT,GAM,DAY)
	   WEKAMT(GAM)=WEKAMT(GAM)+ASFDAY(GSAMT,GAM,DAY)-
     *	                           ASFDAY(GCAMT,GAM,DAY)
	   WEKCNT(SALIND)=WEKCNT(SALIND)+ASFDAY(GSCNT,GAM,DAY)-
     *	                       ASFDAY(GCCNT,GAM,DAY)
	   WEKAMT(SALIND)=WEKAMT(SALIND)+ASFDAY(GSAMT,GAM,DAY)-
     *	                       ASFDAY(GCAMT,GAM,DAY)
	   WEKCNT(VALIND)=WEKCNT(VALIND)+ASFDAY(GVCNT,GAM,DAY)
	   WEKAMT(VALIND)=WEKAMT(VALIND)+ASFDAY(GVAMT,GAM,DAY)
	   WEKCNT(CANIND)=WEKCNT(CANIND)+ASFDAY(GCCNT,GAM,DAY)
	   WEKAMT(CANIND)=WEKAMT(CANIND)+ASFDAY(GCAMT,GAM,DAY)
	   WEKCNT(CLMIND)=WEKCNT(CLMIND)+ASFDAY(GCLCNT,GAM,DAY)
	   WEKAMT(CLMIND)=WEKAMT(CLMIND)+ASFDAY(GCLAMT,GAM,DAY)
           WEKCNT(DSCIND)=WEKCNT(DSCIND)+ASFDAY(GDCNT,GAM,DAY)
           WEKAMT(DSCIND)=WEKAMT(DSCIND)+ASFDAY(GDAMT,GAM,DAY)
	   WEKCNT(REFIND)=WEKCNT(REFIND)+ASFDAY(GRCNT,GAM,DAY)
	   WEKAMT(REFIND)=WEKAMT(REFIND)+ASFDAY(GRAMT,GAM,DAY)
	   WEKAMT(TKCIND)=WEKAMT(TKCIND)+ASFDAY(GTKCHG,GAM,DAY)
	   NETSAL=ASFDAY(GSAMT,GAM,DAY)-ASFDAY(GCAMT,GAM,DAY)
	   CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,SCOM(1,2),GTYP,GIND,AGT)
           IF(TSBIT(AGTTAB(AGTTYP,AGT),AGTNCM).NE.0) THEN
	      SCOM(1,2)=0
	      SCOM(2,2)=0
	   ENDIF
200	CONTINUE

        DUMMY=0
	CALL GETCOM(WEKAMT(VALIND),TVAL,GAM,COMAMT,VCOM(1,2),DUMMY,DUMMY,DUMMY)
!       CALL GETCOM(WEKCNT(CLMIND),TCLM,GAM,COMAMT,VCOM(1,2),DUMMY,DUMMY,DUMMY)
	DO 210 I=1,15
        IF(ASFLGR(LGRCDC,I).LE.ASFINV(ASFEND,1)) GOTO 210
        IF(ASFLGR(LGRCDC,I).EQ.DAYCDC)           GOTO 210
	CALL ADDI8I8(ADJUST(1,2),ASFLGR(LGRAMTU,I),BETUNIT)
210	CONTINUE
        CALL ADDI8I4(AMTDUE(1,2),WEKAMT(SALIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,2),WEKAMT(VALIND),VALUNIT)
	CALL SUBI8I4(AMTDUE(1,2),WEKAMT(REFIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,2),WEKAMT(DSCIND),BETUNIT)
        CALL ADDI8I8(AMTDUE(1,2),ADJUST(1,2),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,2),SCOM(1,2),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,2),VCOM(1,2),BETUNIT)
        CALL ADDI8I4(AMTDUE(1,2),WEKAMT(TKCIND),BETUNIT)
        CALL ADDI8I4(POSDUE(1,2),WEKAMT(SALIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,2),WEKAMT(VALIND),VALUNIT)
	CALL SUBI8I4(POSDUE(1,2),WEKAMT(REFIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,2),WEKAMT(DSCIND),BETUNIT)
C
C LAST INVOICE SALES
C
	DO 300 GAM=1,MAXGAM
	   GTYP=GNTTAB(GAMTYP,GAM)
	   IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 300
	   LSTCNT(GAM)=LSTCNT(GAM)+ASFBIL(GSCNT,GAM,1)-
     *	                           ASFBIL(GCCNT,GAM,1)
	   LSTAMT(GAM)=LSTAMT(GAM)+ASFBIL(GSAMT,GAM,1)-
     *	                           ASFBIL(GCAMT,GAM,1)
	   LSTCNT(SALIND)=LSTCNT(SALIND)+ASFBIL(GSCNT,GAM,1)-
     *	                       ASFBIL(GCCNT,GAM,1)
	   LSTAMT(SALIND)=LSTAMT(SALIND)+ASFBIL(GSAMT,GAM,1)-
     *	                       ASFBIL(GCAMT,GAM,1)
	   LSTCNT(VALIND)=LSTCNT(VALIND)+ASFBIL(GVCNT,GAM,1)	    !WE HAVE ONLY ONLINE COUNTS...
	   LSTAMT(VALIND)=LSTAMT(VALIND)+ASFBIL(GVAMT,GAM,1)
	   LSTCNT(CANIND)=LSTCNT(CANIND)+ASFBIL(GCCNT,GAM,1)
	   LSTAMT(CANIND)=LSTAMT(CANIND)+ASFBIL(GCAMT,GAM,1)
	   LSTCNT(CLMIND)=LSTCNT(CLMIND)+ASFBIL(GCLCNT,GAM,1)
	   LSTAMT(CLMIND)=LSTAMT(CLMIND)+ASFBIL(GCLAMT,GAM,1)
	   LSTCNT(DSCIND)=LSTCNT(DSCIND)+ASFBIL(GDCNT,GAM,1)
	   LSTAMT(DSCIND)=LSTAMT(DSCIND)+ASFBIL(GDAMT,GAM,1)
	   LSTCNT(REFIND)=LSTCNT(REFIND)+ASFBIL(GRCNT,GAM,1)
	   LSTAMT(REFIND)=LSTAMT(REFIND)+ASFBIL(GRAMT,GAM,1)
           LSTAMT(TKCIND)=LSTAMT(TKCIND)+ASFBIL(GTKCHG,GAM,1)
300	CONTINUE
C
C ADDED OFFLINE VALIDATION AMOUNT (TOTAL PER AGENT)
C
	LSTAMT(VALIND)=LSTAMT(VALIND)+ASFINV(ASFOFFPAY,1)	!ONLINE + OFFLINE
C
C TRANSPORTES
C
	TRANSP = 0
	IF (LSTAMT(SALIND).GT.0) THEN
           CALL ASCBIN(ASFINF,SSTTP,LSTTP,STTRANSP,CERR)
           IF (STTRANSP.EQ.1) THEN
              TRANSP = P(VALCT1)
           ELSEIF (STTRANSP.EQ.2) THEN
      	      TRANSP = P(VALCT2)      
           ELSEIF (STTRANSP.EQ.3) THEN
      	      TRANSP = P(VALCT3)       
           ENDIF
	ENDIF

	SCOM(1,3)=ASFINV(ASFSCMU,1)
	SCOM(2,3)=ASFINV(ASFSCMP,1)
	VCOM(1,3)=ASFINV(ASFVCMU,1)
	VCOM(2,3)=ASFINV(ASFVCMP,1)
	WCOM(1,3)=ASFINV(ASFWCMU,1)
	WCOM(2,3)=ASFINV(ASFWCMP,1)
	CALL ADDI8I8(ADJUST(1,3),ASFINV(ASFPADU,1),BETUNIT)
	CALL ADDI8I8(ADJUST(1,3),ASFINV(ASFADJU,1),BETUNIT)
	CALL SUBI8I4(ADJUST(1,3),TRANSP,BETUNIT)
C***    IF(TSBIT(AGTTAB(AGTTYP,AGT),AGTNCM).NE.0) THEN
C	  CALL FASTSET(0,SCOM,6)
C	  CALL FASTSET(0,VCOM,6)
C       ENDIF
	AMTDUE(1,3)=ASFINV(ASFDUEU,1)
	AMTDUE(2,3)=ASFINV(ASFDUEP,1)
C
C ENCODE INVOICE SNAPSHOT
C
	WRITE(CLIN1,901)
	WRITE(CLIN2,902) (ASFBYT(J),J=SNAME,ENAME),
     *	                  AGTTAB(AGTNUM,AGT)
	WRITE(CLIN3,903) (ASFBYT(J),J=SSTRT,ESTRT),AGT
	WRITE(CLIN4,904)
	WRITE(CLIN5,905)
	WRITE(CLIN6,906)  GTNAMES(GTYPDSP),GINDDSP,CURCNT(GNUMDSP),
     *                    CMONY(CURAMT(GNUMDSP),11,BETUNIT),
     *	                  WEKCNT(GNUMDSP),
     *			  CMONY(WEKAMT(GNUMDSP),11,BETUNIT),
     *	                  LSTCNT(GNUMDSP),
     *			  CMONY(LSTAMT(GNUMDSP),11,BETUNIT)
	WRITE(CLIN8,908)  CURCNT(SALIND),
     *                    CMONY(CURAMT(SALIND),11,BETUNIT),
     *	                  WEKCNT(SALIND),
     *			  CMONY(WEKAMT(SALIND),11,BETUNIT),
     *	                  LSTCNT(SALIND),
     *			  CMONY(LSTAMT(SALIND),11,BETUNIT)
        WRITE(CLIN9,909)  CURCNT(DSCIND),
     *                    CMONY(CURAMT(DSCIND),11,BETUNIT),
     *                    WEKCNT(DSCIND),
     *			  CMONY(WEKAMT(DSCIND),11,BETUNIT),
     *                    LSTCNT(DSCIND),
     *			  CMONY(LSTAMT(DSCIND),11,BETUNIT)
        WRITE(CLIN10,910) CURCNT(CANIND),
     *                    CMONY(CURAMT(CANIND),11,BETUNIT),
     *                    WEKCNT(CANIND),
     *			  CMONY(WEKAMT(CANIND),11,BETUNIT),
     *                    LSTCNT(CANIND),
     *			  CMONY(LSTAMT(CANIND),11,BETUNIT)
        WRITE(CLIN11,911) CURCNT(VALIND),
     *                    CMONY(CURAMT(VALIND),11,BETUNIT),
     *                    WEKCNT(VALIND),
     *			  CMONY(WEKAMT(VALIND),11,BETUNIT),
     *                    LSTCNT(VALIND),
     *			  CMONY(LSTAMT(VALIND),11,BETUNIT)
	WRITE(CLIN12,912) CURCNT(CLMIND),
     *                    CMONY(CURAMT(CLMIND),11,BETUNIT),
     *	                  WEKCNT(CLMIND),
     *                    CMONY(WEKAMT(CLMIND),11,BETUNIT),
     *	                  LSTCNT(CLMIND),
     *                    CMONY(LSTAMT(CLMIND),11,BETUNIT)
	WRITE(CLIN13,913) CURCNT(REFIND),
     *			  CMONY(CURAMT(REFIND),11,BETUNIT),
     *			  WEKCNT(REFIND),
     *			  CMONY(WEKAMT(REFIND),11,BETUNIT),
     *			  LSTCNT(REFIND),
     *			  CMONY(LSTAMT(REFIND),11,BETUNIT)
	WRITE(CLIN14,914) CSMONYI8(SCOM(1,1),11,BETUNIT),
     *                    CSMONYI8(SCOM(1,2),11,BETUNIT),
     *                    CSMONYI8(SCOM(1,3),11,BETUNIT)
C***	WRITE(CLIN14,915) CSMONYI8(VCOM(1,1),11,BETUNIT),
C*** *	                  CSMONYI8(VCOM(1,2),11,BETUNIT),
C*** *	                  CSMONYI8(VCOM(1,3),11,BETUNIT)
        WRITE(CLIN15,916) CSMONYI8(ADJUST(1,1),12,BETUNIT),
     *                    CSMONYI8(ADJUST(1,2),12,BETUNIT),
     *                    CSMONYI8(ADJUST(1,3),12,BETUNIT)
C***	WRITE(CLIN16,917) CSMONY(CURAMT(TKCIND),12,BETUNIT),
C*** *                    CSMONY(WEKAMT(TKCIND),12,BETUNIT),
C*** *                    CSMONY(LSTAMT(TKCIND),12,BETUNIT)
	WRITE(CLIN16,918) CSMONYI8(AMTDUE(1,1),12,BETUNIT),
     *                    CSMONYI8(AMTDUE(1,2),12,BETUNIT),
     *                    CSMONYI8(AMTDUE(1,3),12,BETUNIT)
	WRITE(CLIN17,919) CSMONYI8(WCOM(1,3),11,BETUNIT)
        WRITE(CLIN18,930)
	WRITE(CLIN19,931) ASFITINV(ASFITSCNT),
     *                    CSMONY(ASFITINV(ASFITSAMT),11,BETUNIT),
     *                    CSMONY(ASFITINV(ASFITRAMT),11,BETUNIT)
	WRITE(CLIN20,932) ASFITINV(ASFITVCNT),
     *                    CSMONY(ASFITINV(ASFITVAMT),11,BETUNIT),
     *                    CSMONY((ASFITINV(ASFITSCM)+
     *                    ASFITINV(ASFITPCM)),11,BETUNIT)
	WRITE(CLIN21,933) ASFITINV(ASFITBCNT),
     *                    CSMONY(ASFITINV(ASFITBAMT),11,BETUNIT),
     *                    CSMONY(ASFITINV(ASFITADJ),11,BETUNIT)
	WRITE(CLIN22,934) CSMONY(ASFITINV(ASFITDUE),11,BETUNIT)
C
C     ================== FORMAT STATEMENTS ===================
C
901	FORMAT('Agent invoice snapshot ')
902	FORMAT('Name',T10,<LNAME>A1,T40,'Agtnum ',T50,I7.7)
903	FORMAT('Address',T10,<LSTRT>A1,T40,'Terminal',T50,I5.5)
904	FORMAT(17X,'-------TODAY------',2X,'--INVOICE TO DATE-',
     *	        2X,'---LAST INVOICE---')
905	FORMAT(19X,'Count',5X,'Amount',4X,'Count',5X,'Amount',
     *	        4X,'Count',5X,'Amount')
906	FORMAT(A8,I1,1X,'sales',1X,I8,A11,1X,I8,A11,1X,I8,A11)
908	FORMAT('Net Sales    ',3X,I8,A11,1X,I8,A11,1X,I8,A11)
909     FORMAT('Discounts    ',3X,I8,A11,1X,I8,A11,1X,I8,A11)
910	FORMAT('Cancelled    ',3X,I8,A11,1X,I8,A11,1X,I8,A11)
911	FORMAT('Cashed-On/off',3X,I8,A11,1X,I8,A11,1X,I8,A11)
912	FORMAT('Returned     ',3X,I8,A11,1X,I8,A11,1X,I8,A11)
913	FORMAT('Refunds      ',3X,I8,A11,1X,I8,A11,1X,I8,A11)
914     FORMAT('Sales commis ',11X,A11,9X,A11,9X,A11)
915     FORMAT('Cash commis  ',11X,A11,9X,A11,9X,A11)
916     FORMAT('Adjustments  ',10X,A12,8X,A12,8X,A12)
917     FORMAT('Ticket Charge',10X,A12,8X,A12,8X,A12)
918	FORMAT('Amount Due   ',10X,A12,8X,A12,8X,A12)
919	FORMAT('Winners commis ',49(' '),A11)
923	FORMAT('Game number ',I2,' is not active')
925	FORMAT(5A4,' open error> ',I4)
930	FORMAT(1X,33('-'),'  INSTANT  ',33('-')) 
931	FORMAT('Instant Sales            ',I5,2(' '),A11,5(' '),
     *         'Claims          ',A11)
932	FORMAT('Instant Cashes           ',I5,2(' '),A11,5(' '),
     *         'Commission      ',A11)
933	FORMAT('Instant Bank Validations ',I5,2(' '),A11,5(' '),
     *         'Adjustments     ',A11)
934	FORMAT('Instant Amount Due       ',7(' '),A11)
1023	FORMAT(5A4,' read error> ',I4,' record> ',I4)
C
	RETURN
	END
