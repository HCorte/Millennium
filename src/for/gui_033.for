C GUI_033.FOR
C
C V01 15-FEB-2001 HXK Initial release AlphaGOLS
C
C ACTIVE TERMINALS DATA REQUEST
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2001 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C This subroutine returns GUI FUNCTION 31 - Invoicing Data 
C 
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)    OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	     MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUI_033(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:RECAGT.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'

	INCLUDE 'INCLIB:GUIMPRM.DEF'
	INCLUDE 'INCLIB:GUIARGS.DEF'
	INCLUDE 'INCLIB:GUIFIL.DEF'
C
C
	BYTE	    OUTBUF(*)
	INTEGER*4   MES_LEN,RET_CODE
C
	INTEGER*4   NUM_COLS,NUM_ROWS
        INTEGER*4   ST
C
C
        ! arguments
        INTEGER*4  TER                     !
	INTEGER*4  NUM_AGTS_REQD	   !
C
C
        INTEGER*4  I, IND, SER
	INTEGER*4  MIN_NUM_AGTS,MAX_NUM_AGTS
	   PARAMETER(MIN_NUM_AGTS=20)
	   PARAMETER(MAX_NUM_AGTS=60)
	INTEGER*4  TOT_AGTS_SON
	INTEGER*4  BASE_TIME
C
	INTEGER*4 TERM_IND        !terminal index
	PARAMETER(TERM_IND = 1)
	INTEGER*4 LSER_IND	  !last-serial index
	PARAMETER(LSER_IND = 2)
	INTEGER*4 OPST_IND        !ops-status index
	PARAMETER(OPST_IND = 3)
	INTEGER*4 STAT_IND	  !status index
	PARAMETER(STAT_IND = 4)

	INTEGER*4  ASTAT(STAT_IND,MAX_NUM_AGTS)  !status table

	INTEGER*4  BUF(LREC*3)
	INTEGER*4  OFFSET
C
C
	RET_CODE = 0	
	CALL GUI_GETPARAMS(OUTBUF,ST)
	IF(ST.NE.0) THEN
	    RET_CODE = 11
	    RETURN
	ENDIF

	TER = GUI_ARGVAL(1)
        NUM_AGTS_REQD = GUI_ARGVAL(2)       


	IF(NUM_AGTS_REQD.LT.MIN_NUM_AGTS) NUM_AGTS_REQD = MIN_NUM_AGTS
	IF(NUM_AGTS_REQD.GT.MAX_NUM_AGTS) NUM_AGTS_REQD = MAX_NUM_AGTS

	IF(TER.LT.1) TER = 1
	IF(TER.GT.(NUMAGT-NUM_AGTS_REQD)) TER = NUMAGT-NUM_AGTS_REQD
C
C READ TRANSACTION
C
	OFFSET = PERFRM(3,PERTRA)+1
	OFFSET = OFFSET*10
	SER    = NXTSER-OFFSET
	IF(SER.LE.0 .OR. SER.EQ.NXTSER) SER=1
10	CONTINUE
	CALL GUI_RLOG(SER,BUF,ST)
	IF(ST.GT.0) THEN
	   SER = SER-1
	   GOTO 10
	ENDIF
	IF(ST.NE.0) THEN
	   CALL GUIARG_NO_DATA(OUTBUF,NUM_COLS)
	   GOTO 20
	ENDIF
	CALL LOGTRA(TRABUF,BUF)
C
C GET TIME
C
	BASE_TIME = TRABUF(TTIM)

C
C GET AGENT DATA
C
	CALL FASTSET(0,ASTAT,4*MAX_NUM_AGTS)
	IND = 0
	DO I = TER, (TER+NUM_AGTS_REQD)-1
	   IND = IND +1
	   ASTAT(1,IND) = I
	   ASTAT(2,IND) = AGTTAB(ALSTRA,I)
	   ASTAT(3,IND) = AGTHTB(AOPSTS,I)
	   IF(ASTAT(3,IND).NE.2) ASTAT(3,IND) = 1
	   ASTAT(4,IND) = 2
	   IF(AGTHTB(ALSTRA,I).GE.SER) ASTAT(4,IND) = 1
	ENDDO
C
C GET TOTAL NUMBER OF AGENTS SIGNED ON
C
	TOT_AGTS_SON = 0
	DO I = 1, NUMAGT
	   IF(AGTHTB(AOPSTS,I).EQ.SIGNON) TOT_AGTS_SON = TOT_AGTS_SON + 1
	ENDDO

C
C ENCODE OUTPUT
C
C INITIALIZE OUTPUT 
C
	CALL GUIARG_INIT()
C
	NUM_COLS = 3 + 4*NUM_AGTS_REQD
	NUM_ROWS = 1
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
	CALL GUIARG_INT4(OUTBUF,NUM_AGTS_REQD)
	CALL GUIARG_INT4(OUTBUF,TOT_AGTS_SON)
	CALL GUIARG_TIME(OUTBUF,BASE_TIME)
	DO I = 1, NUM_AGTS_REQD
	   CALL GUIARG_INT4(OUTBUF,ASTAT(TERM_IND,I))
	   CALL GUIARG_INT4(OUTBUF,ASTAT(LSER_IND,I))
	   CALL GUIARG_BYTE(OUTBUF,ASTAT(OPST_IND,I))
	   CALL GUIARG_BYTE(OUTBUF,ASTAT(STAT_IND,I))
	ENDDO
C
C FINALLY SET OUTPUT MESSAGE LENGTH 
C
20	CONTINUE
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
C
	END
