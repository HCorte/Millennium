C
C PROGRAM INCPRO
C
C INCPRO.FOR
C V17 11-AUG-2015 SCML Correcting message lengths after changes in PLACARD
C V16 16-MAR-2010 RXK Changes for ePassive
C V15 25-JAN-2001 UXN On secondary system don't process 1st phase cancellations.
C                     Make all internal cancellations to have 2 phases. 
C                     Add WAIT_APUQUE to RLOG.
C V14 29-NOV-2000 UXN Totogolo added.
C V13 24-NOV-1999 OXK Fix for game type.
C V12 13-OCT-1999 RXK World Tour added.
C V11 14-MAY-1999 UXN Super Triple added.
C V10 23-NOV-1995 PXB Couple and Double games added
C V09 07-NOV-1995 HXK Added DBINGO
C V08 02-OCT-1994 HXK Added Bingo
C V07 12-MAR-1994 HXK COMMENTED ON CHECKSUM AND KICKER FOR DELETES BECAUSE
C                     THEY ARE DEPENDENT ON HOST.
C V06 30-JUN-1993 GXA Added RAVI (V65), corrected call of Speden and 
C                     'else if'd' game conditions.
C V05 11-MAY-1993 HXK Added Speden game.
C V04 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V03 11-MAY-1992 GCAN ADDED DELETE RETRY BUG FIX.
C                      (CHECK IF TTRN MATCHES AGENTS LAST WAGER).
C V02 07-OCT-1991 MTK  INITAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C
C INTERNAL CANCELLATION TASK
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM INCPRO
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:QUECOM.DEF'
	INCLUDE 'INCLIB:CHKSUMCM.DEF'
	INTEGER*4 REC(LREC*3),WRKBUF(TRALEN),BETBUF(TRALEN)
	INTEGER*4 ST, SUBTYP, TYPE, WAGSER, TER, BUF, STATUS
	INTEGER*4 TASK
C
C
	CALL COPYRITE
	CALL SNIF_AND_WRKSET
C
	TASK=INC
5	CONTINUE
        BASECHKSUM=IAND(DAYCDC,'FFFF'X)
C
C WAIT FOR SOMETHING TO DO
C IF END OF DAY THEN CALL GSTOP(GEXIT_SUCCESS)
C
10	CONTINUE
	IF(DAYSTS.EQ.DSCLOS) CALL GSTOP(GEXIT_SUCCESS)
	IF(DAYSTS.EQ.DSSUSP) THEN
	  CALL HOLD(0,STATUS)
	  IF(DAYSTS.EQ.DSOPEN) GOTO 5
	  GOTO 10
	ENDIF
	CALL HOLD(0,STATUS)
C
C GET BUFFER NUMBER FROM TOP OF INTERNAL CANCEL QUEUE.
C IF NO CANCELS QUEUED, GO BACK TO WAIT STATE.
C
20	CONTINUE
	CALL TOPQUE(TASK,BUF)
	IF(BUF.EQ.0) GOTO 10
CV14
C
C       ONLY PROCESS FIRST PHASE INTERNAL CANCELLATIONS ON THE PRIMARY SYSTEM
C
        IF(P(SYSTYP).NE.LIVSYS) THEN
          CALL DQUTRA(TASK,BUF)
          CALL RELBUF(BUF)
          GOTO 20
        ENDIF
CEV14
C
	CALL FASTSET(0,TRABUF,TRALEN)
C
C FILL IN HEADER INFORMATION FOR CANCEL TRANSACTION
C
	TER=HPRO(TERNUM,BUF)
	TRABUF(TSTAT) =GOOD
	TRABUF(TERR)  =NOER
	TRABUF(TCDC)  =DAYCDC
	TRABUF(TSER)  =PRO(SERIAL,BUF)
	TRABUF(TTIM)  =PRO(TSTAMP,BUF)
	TRABUF(TSIZE) =HPRO(NUMLRC,BUF)
	TRABUF(TTER)  =TER
	TRABUF(TTYP)  =TINC
	WAGSER=AGTTAB(ALSTRA,TER)
C
C PROCESS COMMUNICATIONS GENERATED CANCELLATIONS
C
	IF(HPRO(TRCODE,BUF).EQ.TYPDEL) THEN
	  TRABUF(TINTRA)=1
	  TRABUF(TERR)=INVL
	  GOTO 60
	ENDIF
C
C PROCESS TERMINAL GENERATED INTERNAL CANCELLATIONS.
C EXTRACT WAGER INFORMATION FROM TERMINAL GENERATED
C INTERNAL CANCELLATION.
C INSURE ONLY WAGERS ARE DELETED
C
	CALL FASTSET(0,BETBUF,TRALEN)
	CALL FASTSET(0,WRKBUF,TRALEN)
	CALL ILBYTE(TRABUF(TTRN),PRO(INPTAB,BUF),0)
	TRABUF(TTRN)=IAND(TRABUF(TTRN),15)
	CALL ILBYTE(TRABUF(TCHK),PRO(INPTAB,BUF),2)
	CALL ILBYTE(TYPE,PRO(INPTAB,BUF),1)
	BETBUF(TTER)=TRABUF(TTER)
	BETBUF(TSIZE)=TRABUF(TSIZE)
	BETBUF(TCHK)=TRABUF(TCHK)
	CALL ILBYTE(SUBTYP,PRO(INPTAB,BUF),5)
	TYPE=ISHFT(TYPE,-4)
	IF(TYPE.NE.0.OR.SUBTYP.EQ.0) THEN
	   TRABUF(TERR)=INVL
	   GOTO 60
	ENDIF
	BETBUF(TTYP)=TINC
C
C
	IF(SUBTYP.EQ.TLTO) THEN
     	   CALL DLOTTO(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TSPT) THEN
      	   CALL DSPORT(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
        ELSE IF(SUBTYP.EQ.TTGL) THEN
           CALL DTGOLO(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
        ELSE IF(SUBTYP.EQ.TPAS) THEN
           CALL DPAS(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
           IF(BETBUF(TWEPOP).NE.EPASSAL) GOTO 60
        ELSE IF(SUBTYP.EQ.TKIK) THEN
           CALL DKICK(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TNBR) THEN
           CALL DNBR(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
        ELSE IF(SUBTYP.EQ.TSCR) THEN
           CALL DSCORE(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
        ELSE IF(SUBTYP.EQ.TWIT) THEN
           CALL DWIT(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
        ELSE IF(SUBTYP.EQ.TTSL) THEN
           CALL DTSEL(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
        ELSE IF(SUBTYP.EQ.TBNG) THEN
           CALL DBINGO(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TDBL) THEN
	  CALL DDOUBLE(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TCPL) THEN
	  CALL DCOUPLE(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TSSC) THEN
	  CALL DSSCORE(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TTRP) THEN
	  CALL DTRIPLE(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE IF(SUBTYP.EQ.TSTR) THEN
	  CALL DSTRIPLE(PRO(INPTAB,BUF),BETBUF,HPRO(INPLEN,BUF))
	ELSE
	   TRABUF(TERR)=INVL
	   GOTO 60
	ENDIF
C
C
	IF(AGTHTB(ATRNUM,TER).NE.TRABUF(TTRN)) THEN
	  AGTHTB(ATRNUM,TER)=TRABUF(TTRN)
	  AGTHTB(ACHKSM,TER)=-1
	  TRABUF(TERR)=INVL
	  GOTO 60
	ENDIF
C
C
C READ AGENTS LAST TRANSACTION FROM THE LOG FILE
C AND CHECK GAME STATUS FOR APPROPIATE GAME.
C
	CALL RLOG(WAGSER,REC,TASK,STATUS)
Cv15	
	IF(STATUS.NE.0) THEN
	   CALL WAIT_APUQUE
	   CALL RLOG(WAGSER,REC,TASK,STATUS)
	ENDIF
CEv15
	IF(STATUS.NE.0) THEN
	  TRABUF(TERR)=INVL
	  GOTO 60
	ENDIF
	CALL LOGTRA(WRKBUF,REC)
	IF(WRKBUF(TSER).NE.WAGSER.OR.WRKBUF(TTYP).NE.TWAG) THEN
	  TRABUF(TERR)=INVL
	  GOTO 60
	ENDIF
C
C CHECK IF THE TERMINAL GENERATED DELETION MATCHES
C THE AGENTS LAST WAGER.
C
	IF(BETBUF(TTRN).NE.WRKBUF(TTRN))       TRABUF(TERR)=INVL	
C***	IF(BETBUF(TCHK).NE.WRKBUF(TCHK))       TRABUF(TERR)=INVL
	IF(BETBUF(TGAMIND).NE.WRKBUF(TGAMIND)) TRABUF(TERR)=INVL
	IF(BETBUF(TGAMTYP).NE.WRKBUF(TGAMTYP)) TRABUF(TERR)=INVL
	IF(BETBUF(TWSYSN).NE.WRKBUF(TWSYSN))   TRABUF(TERR)=INVL
	IF(BETBUF(TWSYST).NE.WRKBUF(TWSYST))   TRABUF(TERR)=INVL
	IF(BETBUF(TWNBET).NE.WRKBUF(TWNBET))   TRABUF(TERR)=INVL
	IF(BETBUF(TWKGME).NE.WRKBUF(TWKGME))   TRABUF(TERR)=INVL
C***    IF(BETBUF(TWKICK).NE.WRKBUF(TWKICK))   TRABUF(TERR)=INVL
	IF(BETBUF(TWBEG).NE.WRKBUF(TWBEG))     TRABUF(TERR)=INVL
	IF(BETBUF(TWEND).NE.WRKBUF(TWEND))     TRABUF(TERR)=INVL
	IF(BETBUF(TWAMT).NE.WRKBUF(TWAMT))     TRABUF(TERR)=INVL
	IF(BETBUF(TWTOT).NE.WRKBUF(TWTOT))     TRABUF(TERR)=INVL
	IF(BETBUF(TWDUR).NE.WRKBUF(TWDUR))     TRABUF(TERR)=INVL
C
C IF NOT THE PRIMARY SYSTEM AND THE TICKET IS ALREADY CANCELLED
C THEN CHECK IF SECOND PHASE OF CANCELLATION WAS PROCESSED FIRST.
C
	IF(WRKBUF(TSTAT).NE.GOOD) TRABUF(TERR)=INVL
C
C COPY WAGER INFORMATION TO CANCELLATION RECORD
C
	CALL FASTMOV(WRKBUF(TWBEG),TRABUF(TWBEG),TRALEN-TWBEG+1)
	TRABUF(TWCSER)=WRKBUF(TSER)
	TRABUF(TWCTER)=WRKBUF(TTER)
	TRABUF(TGAM)=WRKBUF(TGAM)
	TRABUF(TGAMTYP)=WRKBUF(TGAMTYP)
	TRABUF(TGAMIND)=WRKBUF(TGAMIND)
C
C CHECK IF TICKET CAN BE CANCELLED
C
	CALL CHKCAN(WRKBUF,ST)
	IF(ST.NE.0) TRABUF(TERR)=INVL
60	CONTINUE
	IF(TRABUF(TERR).NE.NOER) TRABUF(TSTAT)=REJT
C
C CHECK FOR GOOD STATUS BEFORE SETTING AGENT CHECKSUM TO -1
C
        IF (TRABUF(TSTAT).EQ.GOOD) AGTHTB(ACHKSM,TER) = -1
	
	CALL TRALOG(TRABUF,PRO(WRKTAB,BUF))
C
C ENCODE THE DELETION TRANSACTION IN THE WORK
C AREA OF THE PROCESSING BUFFER. THE WAGERING TASKS WILL UPDATE
C FINANCIAL AND POOL DATA. BOTH TRANSACTIONS WILL BE LOGGED
C DURING THE SECOND PHASE OF PROCESSING.
C REQUEUE BUFFER TO THE TOP OF THE DISPATCHER QUEUE.
C
	IF (TRABUF(TSTAT).EQ.REJT) THEN
          IF (TRABUF(TERR).EQ.TBAD) HPRO(ENCOVR,BUF) = -1
        ENDIF

	CALL TRALOG(TRABUF,PRO(WRKTAB,BUF))

C	HPRO(INPLEN,BUF)=320   !INCREASED DO SUPPORT 3 RECORDS
C----+------------------------------------------------------------------
C V17| Correcting message lengths after changes in PLACARD
C----+------------------------------------------------------------------
C       HPRO(INPLEN,BUF)=384	
        HPRO(INPLEN,BUF)=448
C----+------------------------------------------------------------------
C V17| Correcting message lengths after changes in PLACARD
C----+------------------------------------------------------------------
	HPRO(TRCODE,BUF)=TYPODL
	IF(TRABUF(TGAMTYP).EQ.TLTO.OR.
     *     TRABUF(TGAMTYP).EQ.TKIK.OR.
     *     TRABUF(TGAMTYP).EQ.TTGL.OR.
     *	   TRABUF(TGAMTYP).EQ.TSPT) HPRO(TRCODE,BUF)=TYPWDL
        IF(TRABUF(TGAMTYP).EQ.TNBR) HPRO(TRCODE,BUF)=TYPNDL
        IF(TRABUF(TGAMTYP).EQ.TBNG) HPRO(TRCODE,BUF)=TYPPDL
        IF(TRABUF(TGAMTYP).EQ.TPAS) HPRO(TRCODE,BUF)=TYPEPD

	CALL ATL(BUF,QUETAB(1,DIS),ST)
	CALL DQUTRA(TASK,BUF)

	GOTO 20
	END
