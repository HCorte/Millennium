C
C SUBROUTINE GUIRPC_004
C
C V08 02-JUN-2010 RXK  NOTE: Do not use value NUM_COLS=31 !!! (Gateway issue)
C V07 30-MAR-2010 RXK  Returns and suppression of returns added.
C V06 25-JAN-2001 UXN  System time and CDC added.
C V05 08-NOV-2000 UXN  Cleaned up.
C V04 24-JUN-2000 ANDY Start of Changes for Rolldown
C V03 07-APR-2000 XXX  MOVED RPC PARAMETERS TO SERVCOM
C V02 19-JAN-2000 AMY  ADDED CHECK FOR NESTED STATIONS
C V01 06-JAN-2000 AMY  Initial revision.
C  
C GUIRPC_004.FOR
C
C This subroutine returns the terminal snapshot.
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)	OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUIRPC_004(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESNET.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:GUIMCOM.DEF'
C
	BYTE		OUTBUF(*)
	INTEGER*4	MES_LEN,RET_CODE
C
	INTEGER*4	I,I4TEMP,J,PRT,STN,TER
	INTEGER*4	AVGLIF,MINLIF,MAXLIF
	INTEGER*4	CNT,NUM_COLS,NUM_ROWS
	INTEGER*4	TOTTER
C
	INTEGER*4	TOFF(4)
	DATA TOFF	/TWAG,TCAN,TVAL,TRET/
	!INTEGER*4 	DAYEND/0/              
	CHARACTER*1	NAME(0:MAX_SYSTEMS)
	DATA NAME	/'?','A','B','C','D','E'/
	CHARACTER*8	TRAN(4)
	DATA TRAN	/'Wagered ','Canceled','Cashed  ','Returned'/
C
	CHARACTER*8 LETTERS
	BYTE		BLETTER(8)
	EQUIVALENCE (BLETTER,LETTERS)
C
	INTEGER*4   AMT
C
	RET_CODE = 0
C
C BUILD RPC MESSAGE
C
	CALL RPCARG_INIT()
C
	NUM_COLS = 30
	NUM_ROWS = 1
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
C
	CALL GUIARG_CHAR(OUTBUF,%REF(NAME(NETMASTER(WAYINP))),1) ! PRIMARY
	CALL GUIARG_CHAR(OUTBUF,%REF(NAME(NETBACKUP(WAYINP))),1) ! BACKUP
	CALL GUIARG_CHAR(OUTBUF,RPCNULL,1)                       ! SPARE

	CALL GUIARG_BYTE(OUTBUF,RPCNULL)                         ! MODE
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)                         ! SYSTEM STATUS
	CALL GUIARG_BYTE(OUTBUF,X2X_GAME_STATE)                  ! COMM STATUS
	CALL GUIARG_BYTE(OUTBUF,P(TAPESW)+P(DISKSW)*2)           ! BACKUP LOG
C
	CALL GUIARG_BYTE(OUTBUF,P(SUPWAG))                       ! WAGERS
	CALL GUIARG_BYTE(OUTBUF,P(SUPCAN))                       ! CANCELS
	CALL GUIARG_BYTE(OUTBUF,P(SUPVAL))                       ! VALIDATIONS
	CALL GUIARG_BYTE(OUTBUF,P(SUPRET))                       ! RETURNS
	CALL GUIARG_BYTE(OUTBUF,P(SUPSPE))                       ! SPESRV
	CALL GUIARG_BYTE(OUTBUF,P(DESFLG))                       ! ENCRYPTION

	CALL LISTSIZE(INQUE,I4TEMP)
	CALL GUIARG_INT4(OUTBUF,I4TEMP)                          ! COMM INP QUE

	CALL LISTSIZE(GAME_OUTQUE,I4TEMP)
 	CALL GUIARG_INT4(OUTBUF,I4TEMP)                          ! COMM OUT QUE

	CALL LISTSIZE(FREEQ,I4TEMP)
	CALL GUIARG_INT4(OUTBUF,I4TEMP)                          ! COMM FRE QUE

	CALL GUIARG_INT4(OUTBUF,PERFRM(3,PERTRA))  ! TRANSACTIONS IN PROGRESS
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)           ! GTMS INP QUEUE
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)           ! TIME DELAY QUEUE
	CALL GUIARG_BYTE(OUTBUF,RPCNULL)           ! GTMS FREE QUEUE

	CALL GUIARG_INT4(OUTBUF,P(NXTTRA))         ! TOTAL TRANSACTIONS

	CALL TRNLIF(MINLIF,MAXLIF,AVGLIF)          ! TRANSACTION RATE
	CALL GUIARG_BYTE(OUTBUF,AVGLIF)

	CALL GUIARG_INT4(OUTBUF,P(CHKTIM)/8)       ! CHECKPOINT INTERVAL
C
C  NUMBER CONFIGURED TERMS
C
	TOTTER=0
	DO 100 STN=1,X2X_STATIONS
        IF(
     *    (BX2XS_CONN_TYPE(STN).EQ.X2XSCT_X21SWC.OR.
     *     BX2XS_CONN_TYPE(STN).EQ.X2XSCT_X25SVC).AND.
     *    (X2XS_ADRESS(1,STN).NE.0.OR.X2XS_ADRESS(2,STN).NE.0).OR.
     *    (BX2XS_CONN_TYPE(STN).EQ.X2XSCT_ASYPVC.OR.
     *     BX2XS_CONN_TYPE(STN).EQ.X2XSCT_X25PVC.OR.  
     *     BX2XS_CONN_TYPE(STN).EQ.X2XSCT_USAT_PVC).AND.
     *     X2XS_PHYS(STN).NE.0.OR.
     *    (BX2XS_CONN_TYPE(STN).EQ.X2XSCT_GTECH_DIAL.OR.
CPXN *     BX2XS_CONN_TYPE(STN).EQ.X2XSCT_X28PAD).OR.
CPXN *     X2XS_NESTED_STNS(STN).TERM.NE.0) THEN
     *     BX2XS_CONN_TYPE(STN).EQ.X2XSCT_X28PAD) ) THEN
C
	    DO 110 PRT=1,X2X_MAXPORT
	      DO 120 TER=1,X2X_MAXTERMS
	        IF(X2XS_TERMS(TER,PRT,STN).NE.0) TOTTER=TOTTER+1
120	      CONTINUE
110	    CONTINUE
	  ENDIF
100	CONTINUE
	CALL GUIARG_INT4(OUTBUF,TOTTER)
C
C  NUMBER SIGNED ON TERMS
C
	TOTTER=0
	DO 130 I=1,NUMAGT
	  IF(AGTHTB(AOPSTS,I).EQ.SIGNON) TOTTER=TOTTER+1
130	CONTINUE
	CALL GUIARG_INT4(OUTBUF,TOTTER)
C

	CALL GUIARG_BYTE(OUTBUF,RPCNULL) ! TICKET MESSAGE BITMAP
	CALL GUIARG_BYTE(OUTBUF,RPCNULL) ! LAST CHECKPOINT TIME
	CALL GUIARG_BYTE(OUTBUF,RPCNULL) ! NEXT CHECKPOINT TIME

	!CALL GUIARG_TIME(OUTBUF,DAYEND)         !  DAYEND TIME
	CALL GUIARG_TIME(OUTBUF,P(ACTTIM))	! SYSTEM TIME
	CALL GUIARG_INT4(OUTBUF,DAYCDC)         ! SYSTEM CDC
C
C RESULT SET 2
C
	NUM_COLS = 3
	NUM_ROWS = 4
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
C
	DO 150 I=1,NUM_ROWS
	  CALL GUIARG_CHAR(OUTBUF,%REF(TRAN(I)),8) ! TRANSACTION TYPE
	  CNT = 0
	  AMT = 0
	  DO 160 J=1,MAXGAM
	    CNT = CNT + DAYTYP(TRACNT,TOFF(I),J)
	    AMT = AMT + DAYTYP(DOLAMT,TOFF(I),J)
160	  CONTINUE
	  CALL GUIARG_INT4(OUTBUF,CNT) ! COUNT 
	  CALL GUIARG_MONY(OUTBUF,AMT) ! AMOUNT
150	ENDDO
C
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
	END
