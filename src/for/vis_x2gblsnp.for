C
C SUBROUTINE X2GBLSNP
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]X2GBLSNP.FOV                                 $
C  $Date::   17 Apr 1996 16:18:54                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - vis_x2gblsnp.for;3 **
C
C X2GBLSNP.FOR
C
C
C X2X Upgrade: 22-FEB-96 wsm Added PRMAGT.DEF, AGTINF.DEF for Finland.
C
C V09 05-OCT-95 DAS FIXED STNDIS VALUES.
C V08 22-DEC-94 GPR Integrate UK changes into X2X Baseline
C V07 26-OCT-94 GPR Allow user to Stop calls from coming in and Clear stats
C V06 25-JUL-94 SCD Allow configuration of new GVTs during an online game
C V05 20-JUL-94 WS MULTINETWORK CHANGES
C V04 20-MAY-94 GPR Fix minor BCST problems
C V03  7-MAR-94 JWE Broadcast BCST server changes...
C V02 05-MAY-92 NJA CHANGED SER TO 9 DIGITS
C V01 01-DEC-91 DAS RELEASED FOR VAX (NETHERLANDS)
C
C This routine will display the X2X Distributed Network
C Global snapshot.
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE X2GBLSNP(CMDLIN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:LANCOM.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:X2VIS.DEF'
	INCLUDE 'INCLIB:PRMPRO.DEF'
	INCLUDE 'INCLIB:X2XREL.DEF'
	INCLUDE 'INCLIB:X2XQUE.DEF'
	INCLUDE 'INCLIB:X2XGBL.DEF'					    !V08
C
	INTEGER*4   CMDLIN(20)                      !Input command line
	INTEGER*4   CBUF(CDLEN)                     !Command buffer
	INTEGER*4   HR,MIN,SEC                      !X2X time
	INTEGER*4   ACTSTN,ACTREL,ACTNET,ACTLOC     !Active count
	INTEGER*4   STN,REL,PRT,QUE                 !Indices
	INTEGER*4   LANOUT                          !LAN queue count
	INTEGER*4   GAMOUT                          !Output queue count
	INTEGER*4   RESPMIN,RESPMAX,RESPTOT,RESPAVG !Response calc var
	INTEGER*4   NETRESPMIN,NETRESPMAX           !Network response
	INTEGER*4   NETRESPTOT,NETRESPAVG           !Network response
	INTEGER*4   CMDVALUE(4)                     !Command value
	INTEGER*4   CONNECT, ACTSAP, LAN, LINIDX, AUTOUPD, NETSTAT
	INTEGER*4   DELACK, DELERR, LSTTIM, LSTSER, STATE, ST
	INTEGER*4   VALUE, KEYNUM, POS, I, QUECNT, LSTMIN, LSTHR
	INTEGER*4   LSTSEC, SAP, X2XFRE, X2XIN
	REAL*8      CMDOPT(14)                      !Command line options-V07
	CHARACTER   FEDIS(0:4)*8                    !Front end disconnect
	CHARACTER   STNDIS(0:15)*8                  !Station disconnect
	CHARACTER   GSTATE(0:4)*8                   !Game state
	CHARACTER   YESNO(0:1)*8                    !Yes or no
	CHARACTER   GVT_CFG(0:1)*8                  !Enable or disable GVT 
						    !cfg - V06
	CHARACTER   LANSTATE(0:1)*8                 !Lan state
        CHARACTER   GAMEMODE(0:2)*5                 !type of game
	INTEGER*4   ACTIVE_STATIONS, ACTIVE_CNT, NEXT_LINE	!V05
	INTEGER*4   NITEMODE			    !Value for Night mode   !V07
	INTEGER*4   CLRSTATS			    !Value Clearing Stats   !V07
        INTEGER*4   FIELD			    !Field to modify	    !V08
        INTEGER*4   START_LOC			    !%Loc OF FIRST field    !V08
						    !in Global record	    !V08
        INTEGER*4   BYTES_PER_FIELD		    !Bytes in a field       !V08
        PARAMETER   (BYTES_PER_FIELD=4)
C
      CHARACTER   BCST_ROUTE(0:3)*8/'No BCST ',   !  V03
     *                              'BCSTonly',
     *                              'BCST+CFG',
     *                              'BCST+ACT'/
C
	DATA        FEDIS  /'Response',' Outcall',' Unc Out',
     *	                    'Fast Sel','Conn Acc'/
	DATA        STNDIS /'Def Mode','Invalid ','Invalid ',
     *	                    'Invalid ','Invalid ','Invalid ',
     *	                    'Invalid ','Unc Disc','Immd Dis',
     *	                    'Time * 1','Time * 2','Time * 3',
     *	                    'Time * 4','Time * 5','Time * 6',
     *                      'Rem Cnct'/
	DATA        YESNO  /'     yes','      no'/
	DATA        GVT_CFG /'      no','     yes'/ !defaults to 0 = no	!V05
	DATA        GSTATE /'    down','    idle','req MGR ',
     *	                    '  online','shutdown'/
	DATA        LANSTATE/'   down','  online'/
	DATA        CMDOPT  /'FEDis   ','STNdis  ','DELack  ',
     *	                     'DELerr  ','GAMSTat ','XNETstat',
     *                     'AUTOstat','DEFCHh  ','BCSTEna ',
     *		           'ABCSTsta','BCSTRout','GVTCEna ',	!V06
     *			   'NITEmode','CLRSTats'/		!V07
        DATA        GAMEMODE/'    ',' DAY ','NIGHT'/
C
C INITIALIZE VARIABLES.
C
	DO 20 I=1,4
	  CMDVALUE(I)=-1
20	CONTINUE
	POS=1
C
C IF AN X2X COMMAND HAS BEEN ENTERED, DO NOT
C CHECK FOR OTHER COMMANDS.
C
	IF(X2SCRN(X2SCRN_INPLEV1,X2SCRN_GLOBAL).NE.0 .OR.
     *	   X2SCRN(X2SCRN_INPLEV2,X2SCRN_GLOBAL).NE.0 .OR.
     *	   X2SCRN(X2SCRN_INPLEV3,X2SCRN_GLOBAL).NE.0) THEN
	  X2SCRN(X2SCRN_INPLEV1,X2SCRN_GLOBAL)=0
	  X2SCRN(X2SCRN_INPLEV2,X2SCRN_GLOBAL)=0
	  X2SCRN(X2SCRN_INPLEV3,X2SCRN_GLOBAL)=0
	  GOTO 100
	ENDIF
C
C CHECK FOR INPUT COMMAND LINE.
C
	CALL KEY(CMDLIN,CMDOPT,14,POS,KEYNUM)			    ! V04,V07
	IF(KEYNUM.EQ.0) GOTO 100
	CALL NUMB(CMDLIN,POS,VALUE)             !GET VALUE
	IF(VALUE.LT.0) THEN                     !VALUE ERROR
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
        START_LOC = %LOC(X2XGBL_SAP)		!GET START LOC 	   ! V08
	GOTO (50,52,54,56,58,60,62,64,66,68,70,72,74,76) KEYNUM	   ! V04,V07
C
C FRONT END DISCONNECT CHANGE.
C
50	CONTINUE
	IF(VALUE.LT.0 .OR. VALUE.GT.3) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_FEDIS)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C STATION DISCONNECT CHANGE.
C
52	CONTINUE
	IF(VALUE.LT.0) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ELSE IF(VALUE.NE.0) THEN
	  IF(VALUE.LT.7 .OR. VALUE.GT.15) THEN
	    WRITE(CLIN23,9924)
	    GOTO 8000
	  ENDIF
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_STNDIS)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C DELIVERY ACK CHANGE.
C
54	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_DELACK)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C DELIVERY ERROR CHANGE.
C
56	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_DELERR)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C X2X GAME STATE CHANGE.
C (DO NOT ALLOW ANY CHANGE EXCEPT FOR REQUEST ONLINE. 
C  X2XMGR HANDLES THE REST.)
C	CHANGED BACK TO WAY IT WAS WS
C
58	CONTINUE
	IF(VALUE.EQ.2.AND.X2X_GAME_STATE.EQ.1) THEN
          CMDVALUE(1)=VALUE
	  FIELD=((%LOC(X2XGBL_GAMSTAT)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	  CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)		    !V08
	  GOTO 90
C
C	***** Start V08 changes *****
C
	ELSEIF (VALUE.EQ.1 .AND. X2X_GAME_STATE.EQ.3) THEN
          CMDVALUE(1)=VALUE
	  FIELD=((%LOC(X2XGBL_GAMSTAT)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	  CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)		    !V08
	  GOTO 90
C
C	***** End V08 changes *****
C
        ELSE
          WRITE(CLIN23,9924)
          GOTO 8000
        ENDIF
C
C NETWORK STATISTICS CHANGE.
C
60	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_NETSTAT)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C AUTOMATIC STATISTICS UPDATE CHANGE.
C
62	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_AUTOUPD)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C CHECK DEFAULT STATION PARAMETERS CHECKSUM CHANGE.
C
64	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_DEFCHK)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C BROADCAST SERVER (BCST) ENABLE CHANGE                     V03
C
66	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_BCST_ENABLE)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C AUTOMATIC BCST STATISTICS UPDATE CHANGE.                  V03
C
68	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_BCST_AUTO_REPORT)-START_LOC)/BYTES_PER_FIELD)+1 !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C BCST ROUTING (No BCST, BCST only, BCST+CFG, BCST+ACT) CHANGE  V03
C
70	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.3) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_BCST_ROUTE)-START_LOC)/BYTES_PER_FIELD)+1	    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C GVT CONFIGURATION ENABLE CHANGE
C
72	CONTINUE						      ! V06
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN			      ! V06
	  WRITE(CLIN23,9924)					      ! V06
	  GOTO 8000						      ! V06
	ENDIF							      ! V06
	CMDVALUE(1)=VALUE					      ! V06
	FIELD=((%LOC(X2XGBL_GVT_CFG_ENABLE)-			      ! V08
     *	  START_LOC)/BYTES_PER_FIELD)+1				      ! V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)		      ! V08
	GOTO 90							      ! V06
C
C ***** Start V07 changes *****
C
C Stop calls command (NITEMODE)
C
74	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) THEN
	  WRITE(CLIN23,9924)
	  GOTO 8000
	ENDIF
C
C	Stop Calls is the low bit in the
C	X2XE_MAINT_OPTIONS Word
C
	IF(VALUE.EQ.0) THEN
	  VALUE=IOR(X2XE_MAINT_OPTIONS,X2XEM_OPTIONS_STOP_MASK)
	ELSE
	  VALUE=IOR(X2XE_MAINT_OPTIONS,X2XEM_OPTIONS_STOP_MASK)
	  VALUE=IEOR(X2XE_MAINT_OPTIONS,X2XEM_OPTIONS_STOP_MASK)
	ENDIF
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_MAINT_OPTIONS)-START_LOC)/BYTES_PER_FIELD)+1    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C Clear Statistics command
C
76	CONTINUE
C
C	Clear Statistics is the 2nd lowest bit in 
C	the X2XE_MAINT_OPTIONS Word
C
	VALUE=IOR(X2XE_MAINT_OPTIONS,X2XEM_OPTIONS_STATS_MASK)
	CMDVALUE(1)=VALUE
	FIELD=((%LOC(X2XGBL_MAINT_OPTIONS)-START_LOC)/BYTES_PER_FIELD)+1    !V08
	CALL X2BLDCMD(1,XGBL,1,FIELD,CMDVALUE,2,1,CBUF)			    !V08
	GOTO 90
C
C ***** End V07 changes *****
C
C QUEUE COMMAND BUFFER TO SYSTEM INPUT QUEUE
C
90	CONTINUE
	CBUF(6)=IDNUM
	CALL VISCMD(CBUF,ST)
	CALL XWAIT(2,1,ST)
C
C CALCULATE TIME LAST UPDATED.
C
100	CONTINUE
	SEC=X2X_SYSTIM
	HR=SEC/3600
	MIN=(SEC-HR*3600)/60
	SEC=SEC-(HR*3600+MIN*60)
C
C COUNT NUMBER OF ACTIVE STATIONS.
C
	ACTSTN=0
	DO 110 STN=1,X2X_STATIONS
	  CALL ILBYTE(STATE,IX2XS_STATE,STN-1)
	  IF(STATE.EQ.X2XS_INIT) ACTSTN=ACTSTN+1
110	CONTINUE
C
C COUNT NUMBER OF ACTIVE RELAYS.
C
	ACTREL=0
	DO 111 REL=1,X2X_RELAY_APPS
	  IF(X2XR_APP_STATUS(REL).EQ.X2XR_APPS_ACTIVE) ACTREL=ACTREL+1
111	CONTINUE
C
C COUNT NUMBER OF ACTIVE NETWORK PORTS.
C
	ACTNET=0
	DO 120 PRT=1,X2X_NETWORK_PORTS
	  IF(X2XPN_STATE(PRT).EQ.X2XPS_ON_LINE) ACTNET=ACTNET+1
120	CONTINUE
C
C COUNT NUMBER OF ACTIVE LOCAL PORTS.
C
	ACTLOC=0
	DO 130 PRT=1,X2X_LOCAL_PORTS
	  IF(X2XPL_STATE(PRT).EQ.X2XPS_ON_LINE) ACTLOC=ACTLOC+1
130	CONTINUE
C
C GET HIGHEST SERIAL NUMBER AND LAST TIME ACTIVE.
C
	LSTSER=0
	LSTTIM=0
	DO 140 SAP=1,MAXSAP
	  IF(X2XE_TIME(SAP).GT.LSTTIM)   LSTTIM=X2XE_TIME(SAP)
	  IF(X2XE_SERIAL(SAP).GT.LSTSER) LSTSER=X2XE_SERIAL(SAP)
140	CONTINUE
	LSTSEC=LSTTIM
	LSTHR=LSTSEC/3600
	LSTMIN=(LSTSEC-LSTHR*3600)/60
	LSTSEC=LSTSEC-(LSTHR*3600+LSTMIN*60)
C
C COUNT THE NUMBER OF TRANSACTIONS ON THE LANPRO AND
C X2XMGR OUTPUT QUEUES.
C
	QUE=QUESAP(X2X_GAME_SAP)
	X2XIN=QUECNT(LANAPP(1,QUE))
	X2XFRE=QUECNT(LANFRAP(1,QUE))
	LANOUT=QUECNT(LANEXEC)
	GAMOUT=QUECNT(X2X_OUTPUT)
	DELERR=1
	DELACK=1
	NETSTAT=1
	AUTOUPD=1
	IF(X2X_DELIVERY_ERR.EQ.0) DELERR=0
	IF(X2X_DELIVERY_ACK.EQ.0) DELACK=0
	IF(IAND(X2X_STATION_ATRIBUTES,X2XSA_STATS).NE.0)
     *	   NETSTAT=0
	IF(IAND(X2X_STATION_ATRIBUTES,X2XSA_AUTO_STATS).NE.0)
     *	   AUTOUPD=0
C
C DETERMINE CENTRAL REPONSE TIME STATISTICS.
C
	RESPTOT=0
	RESPMIN=9999999
	RESPMAX=0
	DO 150 I=1,X2X_RESPONSE_LEN
	  IF(X2XA_RESPONSE(I).LT.RESPMIN .AND.
     *	     X2XA_RESPONSE(I).NE.0) RESPMIN=X2XA_RESPONSE(I)
	  IF(X2XA_RESPONSE(I).GT.RESPMAX) RESPMAX=X2XA_RESPONSE(I)
	  RESPTOT=RESPTOT+X2XA_RESPONSE(I)
150	CONTINUE
	RESPAVG=RESPTOT/X2X_RESPONSE_LEN
C
C DETERMINE NETWORK REPONSE TIME STATISTICS.
C
	NETRESPTOT=0
	NETRESPMIN=9999999
	NETRESPMAX=0
	DO 152 I=1,X2X_NET_RESPONSE_LEN
	  IF(X2XA_NET_RESPONSE(I).LT.NETRESPMIN .AND.
     *	     X2XA_NET_RESPONSE(I).NE.0) NETRESPMIN=X2XA_NET_RESPONSE(I)
	  IF(X2XA_NET_RESPONSE(I).GT.NETRESPMAX)
     *	     NETRESPMAX=X2XA_NET_RESPONSE(I)
	  NETRESPTOT=NETRESPTOT+X2XA_NET_RESPONSE(I)
152	CONTINUE
	NETRESPAVG=NETRESPTOT/X2X_NET_RESPONSE_LEN
C
C DISPLAY INFORMATION.
C
	WRITE(CLIN1,9000) GAMEMODE(X2X_GAME_MODE)
	WRITE(CLIN3,9010) X2X_GAME_SAP, GSTATE(X2X_GAME_STATE),
     *	                  HR,MIN,SEC
	WRITE(CLIN4,9020) FEDIS(X2X_GLOBAL_FE_DISCONNECT),
     *	                  STNDIS(X2X_GLOBAL_STATION_DISCONNECT),
     *	                  YESNO(DELACK)
	WRITE(CLIN5,9030) YESNO(NETSTAT), YESNO(AUTOUPD),
     *	                  YESNO(DELERR)
	WRITE(CLIN6,9031) YESNO(X2X_DEF_CHKSUM),
     *   YESNO(X2X_BCST_AUTO_REPORT) , YESNO(X2X_BCST_ENABLE)
	WRITE(CLIN7,9032) X2XS_ALARM_TOTAL, X2XS_ALARM_STATION,
     *	                  X2XS_BAD_ADRESS
	WRITE(CLIN8,9040) ACTSTN, X2XE_ACTIVE, ACTREL

C	START V05 CHANGE BLOCK
	ACTIVE_CNT=0
	ACTIVE_STATIONS=0
	DO 500, NEXT_LINE=1,X2X_NETWORK_PORTS
	    IF (X2XPN_BCST_ACTIVE_CNT(NEXT_LINE).NE.0) 
     *		  ACTIVE_CNT=ACTIVE_CNT+1
	    ACTIVE_STATIONS=ACTIVE_STATIONS+X2XPN_BCST_ACTIVE_CNT(NEXT_LINE)
500	CONTINUE
C	END V05 CHANGE BLOCK

	WRITE(CLIN9,9050) ACTNET, ACTLOC, ACTIVE_CNT, ACTIVE_STATIONS    !V03,V05

      	WRITE(CLIN10,9060) LSTSER,X2X_REL_PRI,BCST_ROUTE(X2X_BCST_ROUTE) !V03
	WRITE(CLIN11,9061) LSTHR,LSTMIN,LSTSEC,		      !V03,V05
     *			   GVT_CFG(X2X_GVT_CFG_ENABLE),	      !V06
     *			   X2X_BAD_ADR_CNT,X2X_BAD_SVN_COUNT
	WRITE(CLIN12,9070) RESPMIN, RESPMAX, RESPAVG
	WRITE(CLIN13,9072) NETRESPMIN, NETRESPMAX, NETRESPAVG
	WRITE(CLIN14,9080) X2X_IN_WAIT_ADD-X2X_IN_WAIT_REMOVE,
     *	                   X2X_IN_WAIT_REMOVE, GAMOUT  
	WRITE(CLIN15,9085) X2XIN, X2XFRE, LANOUT			   !V07
C
C	***** Start V07 changes *****
C
C	Stop Calls is the low bit in the X2XE_MAINT_OPTIONS Word,
C	Clear Statistics is the 2nd lowest bit in the 
C	X2XE_MAINT_OPTIONS Word. Note: 0 is off and 1 is on
C	for displaying, so we must complement them before
C	displaying
C
	NITEMODE=NOT(X2XE_MAINT_OPTIONS)
	NITEMODE=IAND(NITEMODE,X2XEM_OPTIONS_STOP_MASK)
	CLRSTATS=NOT(X2XE_MAINT_OPTIONS)
	CLRSTATS=IAND(CLRSTATS,X2XEM_OPTIONS_STATS_MASK)
	WRITE(CLIN16,9090) YESNO(NITEMODE)
C
C	***** End V07 changes *****
C
C DISPLAY LAN STATS
C
	LINIDX=17
	DO 3000 LAN=1,MAXLAN
	  ACTSAP=0
	  DO 3010 CONNECT=1,MAXCON
	    IF(CURLAN(CONNECT).EQ.LAN) ACTSAP=ACTSAP+1
3010	  CONTINUE
	  WRITE(XNEW(  LINIDX),9092) LAN
	  LINIDX=LINIDX+1
	  WRITE(XNEW(LINIDX),9094) ACTSAP,
     *          LANSTATE(LOCLAN(X2X_GAME_SAP,LAN))
	  LINIDX=LINIDX+1
	  WRITE(XNEW(  LINIDX),9096) QUECNT(LANWRITE(1,LAN)),
     *	                             QUECNT(LANDONER(1,LAN)),
     *	                             QUECNT(LANDONEW(1,LAN))
	  LINIDX=LINIDX+1
3000	CONTINUE
C
C PROGRAM EXIT.
C
8000	CONTINUE
C
C     ================== Format Statements =====================
C
9000	FORMAT('X2X Global Snapshot',2X,'Game Mode:',A5) 
9010	FORMAT(T2,'Game SAP:',T17,I8,T26,'*GAMe STate:',T44,A8,
     *	       T55,'System time:',T70,I2.2,':',I2.2,':',I2.2)
9020	FORMAT(T1,'*FE Disconnect:',T17,A8,T26,'*STN Disconnect:',
     *	       T44,A8,T54,'*DELivery ACK:',T70,A8)
9030  FORMAT(T1,'*XNETwork Stats:',T17,A8,T26,'*AUTO stn stats:',T44,A8,
     *	       T54,'*DELivery ERR:',T70,A8)
9031  FORMAT(T1,'*DEFault CHksum:',T17,A8T26,'*Auto BCST stats:',T44,A8,   !V03
     *       T54,'*BCST Enabled:',T70,A8)				   !V04
9032	FORMAT(T2,'Total alarms:',T17,I8,T27,'Last alarm stn:',T44,I8,
     *	       T55,'Last bad addr:',T70,I8)
9040	FORMAT(T2,'Active Stns:',T17,I8,T27,'Active SAPs:',T44,I8,
     *	       T55,'Active relays:',T70,I8)
9050  FORMAT(T2,'Active netprt:',T17,I8,T27,'Active locprt:',T44,I8,       !V03
     *       T55,'Act. BCSTprt:',T69,I4,'/',I6)				   !V05
9060  FORMAT(T2,'Last serial:',T16,I9,T27,'Relay Priority:',T44,I8,        !V03
     *       T54,'*BCST Routing:',T70,A8)
9061  FORMAT(T2,'Last active: ',T17,I2.2,':',I2.2,':',I2.2,		   !V05
     *	     T26,'*GVT Cfg Enabled ',T44,A8,
     *       T55,'Bad adr cnt ',I6,'/',I6)
9070	FORMAT(T2,'Host Resp (min)',T17,I8,T27,
     *	          'Host Resp (max)',T44,I8,T55,
     *	          'Host Resp (avg)',T70,I8)
9072	FORMAT(T2,'Net  Resp (min)',T17,I8,T27,
     *	          'Net  Resp (max)',T44,I8,T55,
     *	          'Net  Resp (avg)',T70,I8)
9080	FORMAT(T2,'Wait buf: ',T17,I8,T27,'Removed buf:',T44,I8,
     *	       T55,'Back to X2X:  ',T70,I8)
9085	FORMAT(T2,'X2X in buf:',T17,I8,T27,'X2X free buf:',T44,I8,	!V07
     *	       T55,'LAN out buf:',T70,I8)
9090	FORMAT(T1,'*NITE mode:',T17,A8,T26,'*CLR STatistics (GTX)') !V07
9092	FORMAT(T2,31('='),' Lan ',I2,' Stats ',32('='))
9094	FORMAT(T2,'Active SAPS:',T17,I8,T27,'Local Status:',T44,A8)
9096	FORMAT(T2,'Write queue:',T17,I8,T27,'Done Read:',T44,I8,
     *	       T55,'Done Write:',T70,I8)
9924	FORMAT('Value error  ')
	END
