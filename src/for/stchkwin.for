C
C SUBROUTINE STCHKWIN
C
C V02 03-JUL-2000 UXN Refund too late played tickets.
C V01 21-MAY-1999 UXN Initial revision.
C  
C SUBROUTINE TO CHECK IF SUPER TRIPLE TICKET IS A WINNER
C AND UPDATE VALIDATION RECORDS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	SUBROUTINE STCHKWIN(TRABUF,V4BUF,WIN)
	IMPLICIT NONE

	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
	INCLUDE 'INCLIB:WINCOM.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
	INCLUDE 'INCLIB:VALFIL.DEF'
	INCLUDE 'INCLIB:VDETAIL.DEF'

	INTEGER*4 WINTAB(25)
	INTEGER*4 REFTAB(25)
	INTEGER*4 WIN, ST, GIND, AMTWON, TOTWON, COUNT
	INTEGER*4 I, PRZIND, TAXAMT, NETAMT
        INTEGER*4 NAMT, TAMT, J, COUNTTAB(2,MAXSTRTI), AMTTAB(MAXSTRTI)
	INTEGER*4 REFROWS
	LOGICAL CXLED, PRVFLG, HLDFLG

        INTEGER*4 AWNTAB(2,NUMAGT)
        COMMON/BIGWIN/ AWNTAB
	INTEGER*4  WINFLG
	LOGICAL*4  LATEFLG
C--------------------------- Start of code -----------------------------

	WIN    = 0
	COUNT  = 0
	TOTWON = 0
        NETAMT = 0
        TAXAMT = 0
	PRVFLG = .FALSE.
	CXLED  = .FALSE.
	HLDFLG = .FALSE.

	CALL FASTSET(0,WINTAB,25)
	CALL FASTSET(0,REFTAB,25)
	CALL FASTSET(0,COUNTTAB,2*MAXSTRTI)
	CALL FASTSET(0,AMTTAB,MAXSTRTI)

	ST     = TRABUF(TSTAT)
	GIND   = TRABUF(TGAMIND)

	IF (LSTDRW(GIND) .LT. 0) RETURN
	IF (ST .NE. GOOD .AND. ST .NE. VOID .AND.
     *	    ST .NE. INCA .AND. ST .NE. EXCH) RETURN
	IF (TRABUF(TWBEG) .GT. LSTDRW(GIND)) RETURN
	IF (TRABUF(TWEND) .LT. LSTDRW(GIND)) RETURN
	IF (TRABUF(TSTAT).EQ.VOID.OR.TRABUF(TSTAT).EQ.INCA) CXLED = .TRUE.

C---- Check for cancelled game/row.

	LATEFLG = .FALSE.
        IF (STREFUND(GIND)) THEN
          IF (.NOT.CXLED) THEN
	     LATEFLG = LSTLAT(LATCDC,GIND).GT.0.AND.
     *                 (LSTLAT(LATCDC,GIND).LT.TRABUF(TCDC).OR.
     *                  (LSTLAT(LATCDC,GIND).EQ.TRABUF(TCDC).AND.
     *                   LSTLAT(LATTIM,GIND).LT.TRABUF(TTIM)))
	     CALL STR_GETREF(TRABUF,WINTAB,REFTAB,WIN,REFROWS,LATEFLG)
	  ENDIF
        END IF

	WINFLG = 0
	IF (LSTSTS(GIND) .GE. GAMENV .AND. LSTSTS(GIND).NE.GAMCAN .AND.
     *      .NOT.LATEFLG) THEN
	  WINFLG = WIN
          CALL STWINLOS(TRABUF,WINTAB,WIN,COUNTTAB)
	  WINFLG = WIN - WINFLG
	END IF

C---- Update validation record.

	IF (WIN .EQ. 0) RETURN

	IF (V4BUF(VFSSER) .NE. 0) THEN
	  CALL LOGVAL(VALREC,V4BUF)
	  CALL DLOGVAL(VALREC,VDETAIL)
	ELSE
	  CALL FASTSET(0,VALREC,VALLEN)
	  CALL FASTSET(0,VDETAIL,VPLEN*VMAX)
	END IF

	DO 1000 I = 1,WIN
	  AMTWON = WINTAB(I)
	  IF (REFTAB(I).NE.0) THEN
	    LSTREF(GIND) = LSTREF(GIND) + AMTWON
	    IF (WINFLG .EQ. 0) THEN
              LSTWRO(1,PRWON,GIND) = LSTWRO(1,PRWON,GIND) + REFROWS
              LSTWRO(2,PRWON,GIND) = LSTWRO(2,PRWON,GIND) + AMTWON
	    END IF
            LSTWRA(1,PRWON,GIND) = LSTWRA(1,PRWON,GIND) + REFROWS
            LSTWRA(2,PRWON,GIND) = LSTWRA(2,PRWON,GIND) + AMTWON
            LSTWON(GIND) = LSTWON(GIND) + AMTWON 
            LSTWPR(1,PRWON,GIND) = LSTWPR(1,PRWON,GIND) + REFROWS
            LSTWPR(2,PRWON,GIND) = LSTWPR(2,PRWON,GIND) + AMTWON
   	  END IF

	  VALREC(VPZOFF) = VALREC(VPZOFF) + 1
	  PRZIND = VALREC(VPZOFF)
	  IF (PRZIND .GT. VMAX) THEN
	    TYPE*,IAM(),' Prize table overflow ',TRABUF(TCDC),TRABUF(TSER)
	    CALL GPAUSE
	    HLDFLG = .TRUE.
	    VALREC(VPZOFF) = VMAX
	    GOTO 20
	  END IF

	  VDETAIL(VKIK,PRZIND) = 0
          VDETAIL(VKI2,PRZIND) = 0
          VDETAIL(VPRG,PRZIND) = 0
	  VDETAIL(VREF,PRZIND) = 0
	  VDETAIL(VBDR,PRZIND) = 0
	  VDETAIL(VDIV,PRZIND) = 0
	  VDETAIL(VUPD,PRZIND) = 1
	  VDETAIL(VSHR,PRZIND) = AMTWON
	  IF (REFTAB(I).NE.0) VDETAIL(VREF,PRZIND) = 1
	  VDETAIL(VDRW,PRZIND) = LSTDRW(GIND)

20	  CONTINUE

	  IF (REFTAB(I).NE.0) THEN
	    VALREC(VRAMT) = VALREC(VRAMT) + AMTWON
	  ELSE
	    TOTWON = TOTWON + AMTWON
	    DO J = 1,MAXSTRTI
	       IF(COUNTTAB(1,J).NE.0.AND.AMTTAB(J).EQ.0) THEN
                  AMTTAB(J) = AMTWON
                  GOTO 1000
               ENDIF
            ENDDO
	  END IF

1000	CONTINUE

C---- Update validation header if new winner.

	IF (VALREC(VSTAT) .EQ. VNOWIN) THEN
	  VALREC(VSCDC) = TRABUF(TCDC)
	  VALREC(VSTER) = TRABUF(TTER)
	  VALREC(VSSER) = TRABUF(TSER)
	  VALREC(VEXP ) = TRABUF(TWEND)
	  VALREC(VKEXP) = TRABUF(TWKEND)
	  VALREC(VGAM ) = TRABUF(TGAM)
	  VALREC(VKGME) = TRABUF(TWKGME)
	  VALREC(VGTYP) = TRABUF(TGAMTYP)
	  VALREC(VGIND) = TRABUF(TGAMIND)
          VALREC(VFRAC) = TRABUF(TFRAC)
          VALREC(VBNKID) = TRABUF(TWBNKID)
          VALREC(VBNKNUM) = TRABUF(TWBNKNM)
	ENDIF

C---- Get taxes and set priv pay flag
C---- and update big winner commission table.

        IF (.NOT. CXLED .AND. TOTWON .NE. 0) THEN
          LSTWON(GIND) = LSTWON(GIND) + TOTWON
 
	  DO J = 1,MAXSTRTI
	    IF (COUNTTAB(1,J) .GT. 0) THEN
	      LSTWCP(J,GIND) = LSTWCP(J,GIND) + 1
	      LSTWBT(TRACNT,J,GIND) = LSTWBT(TRACNT,J,GIND) + 1 
	      LSTWBT(DOLAMT,J,GIND) = LSTWBT(DOLAMT,J,GIND) + COUNTTAB(2,J)
              IF (AMTTAB(J) .GT. LSTHST(J,GIND)) THEN
  	        LSTHST(J,GIND) = AMTTAB(J)
	      END IF
	    END IF
	  END DO

1001	  CONTINUE

          DO 2000 I = 1,WIN
             AMTWON = WINTAB(I)
             IF (REFTAB(I).EQ.0) THEN
               LSTWPR(1,PRWON,GIND) = LSTWPR(1,PRWON,GIND) + 1
               LSTWPR(2,PRWON,GIND) = LSTWPR(2,PRWON,GIND) + AMTWON
               LSTWPO(1,PRWON,GIND) = LSTWPO(1,PRWON,GIND) + 1
               LSTWPO(2,PRWON,GIND) = LSTWPO(2,PRWON,GIND) + AMTWON
               CALL GETTAX(AMTWON,TAMT,NAMT)
               NETAMT = NETAMT + NAMT
               TAXAMT = TAXAMT + TAMT
             END IF
2000      CONTINUE

          IF (NETAMT .GT. REDMAX(TRABUF(TGAM))) PRVFLG = .TRUE.

          LSTTAX(GIND) = LSTTAX(GIND) + TAXAMT

          IF (HVCLVL .NE. 0) THEN
            IF (NETAMT .GE. HVCLVL) THEN
              AWNTAB(1,TRABUF(TTER)) = AWNTAB(1,TRABUF(TTER)) + 1
              AWNTAB(2,TRABUF(TTER)) = AWNTAB(2,TRABUF(TTER)) + NETAMT
            END IF
          END IF
          VALREC(VPAMT) = VALREC(VPAMT) + TOTWON
          VALREC(VTAMT) = VALREC(VTAMT) + TAXAMT
        END IF

	VALREC(VWCDC) = DAYCDC
	VALREC(VSTAT) = VUNCSH
	IF (PRVFLG) VALREC(VSTAT) = VPRPAY
	IF (HLDFLG) VALREC(VSTAT) = VHOLD
	IF (TRABUF(TSTAT) .EQ. VOID) VALREC(VSTAT) = VCXL
	IF (TRABUF(TSTAT) .EQ. INCA) VALREC(VSTAT) = VDEL
	CALL DVALLOG(VALREC,VDETAIL)
	CALL VALLOG (VALREC,V4BUF  )

	RETURN

	END
