C
C SUBROUTINE REPCLERK
C $Log:   GXAFXT:[GOLS]REPCLERK.FOV  $
C  
C     Rev 1.0   17 Apr 1996 14:42:16   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.2   13 Dec 1994 11:06:40   HXK
C  Change LU 13 to LU 31 (CLK) to prevent access violation error
C  
C     Rev 1.1   10 Nov 1993 17:05:36   HXK
C  ADDED MISCELLANEOUS STUFF.
C  
C     Rev 1.0   21 Jan 1993 17:28:32   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - repclerk.for **
C
C REPCLERK.FOR
C
C V02 13-MAR-91 MTK INITIAL RELEASE FOR MARYLAND
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C SUBROUTINE TO PAGE CURRENT CLERK IN MEMORY TO DISK AND RELOAD
C NEW ONE INTO MEMORY FROM A REPROCESSING MODE.
C
C CALLING SEQUENCE:
C      CALL REPCLERK(SERIAL,TERMINAL,OLDCLERK,NEWCLERK)
C INPUT
C     SERIAL   - SERIAL # THAT LAST UPDATED FILE
C     TERMINAL - TERMINAL NUMBER
C     OLDCLERK - OLD CLERK NUMBER TO SAVE
C     NEWCLERK - NEW CLERK NUMBER TO LOAD
C OUTPUT
C     NONE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1995 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE REPCLERK(SERIAL,TERMINAL,OLDCLERK,NEWCLERK)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:CLERK.DEF'
C
	INTEGER*4 ST, NEWCLERK, OLDCLERK, TERMINAL, SERIAL
	INTEGER*4 CLRKFDB(7)
        INTEGER*4 TMPSER
	LOGICAL FIRST
	DATA FIRST/.TRUE./
C
	TMPSER=MOD(SERIAL,SYSOFF)
	IF(TERMINAL.LT.1.OR.TERMINAL.GT.NUMAGT) GOTO 9000
	IF(OLDCLERK.EQ.NEWCLERK) GOTO 9000   !NO CHANGE IN MEMORY
	IF(OLDCLERK.LT.1.OR.OLDCLERK.GT.8.OR.NEWCLERK.LT.1.OR.
     *	   NEWCLERK.GT.8) GOTO 9000          !SOMETHING WRONG
C
	IF(FIRST) THEN       !IF FIRST TIME CALLED OPEN FILE
	   CALL OPENW(CLK,SFNAMES(1,CLK),4,0,0,ST)
	   CALL IOINIT(CLRKFDB,CLK,CLRKSEC*256)
	   IF(ST.NE.0) THEN
	      CALL FILERR(SFNAMES(1,CLK),1,ST,0)
	      CALL GPAUSE
	      GOTO 9000
	   ENDIF
	   FIRST=.FALSE.
	ENDIF
C
C READ CLERK FILE AND SWAP FOR NEW CLERK
C
	CALL READW(CLRKFDB,TERMINAL,CLRKREC,ST)
	IF(ST.NE.0) THEN
	  CALL FILERR(SFNAMES(1,CLK),2,ST,TERMINAL)
	  TYPE*,' CONTINUE TO UPDATE MEMORY ONLY '
	  CALL GPAUSE
	  GOTO 9000
	ENDIF
C
	IF(CLRKHED(CLRKSER).GE.TMPSER) GOTO 8000
C
C SAVE SERIAL NUMBER THAT UPDATED FILE LAST
C
	CLRKHED(CLRKSER)=TMPSER
C
C MOVE MEMORY TO RECORD
C
	CALL FASTMOV(AGTGAM(1,1,TERMINAL),CLRKDAY(1,1,OLDCLERK),
     *	             AGAMLEN*MAXGAM)
        CALL FASTMOV(AGTSPE(1,1,TERMINAL),CLRKSPE(1,1,OLDCLERK),
     *               ASPELEN*MAXGAM)
        CALL FASTMOV(AGTMIS(1,1,TERMINAL),CLRKMIS(1,1,OLDCLERK),
     *               AMISLEN*NUMTOT)
C
C WRITE UPDATE RECORD TO FILE
C
	CALL WRITEW(CLRKFDB,TERMINAL,CLRKREC,ST)
	IF(ST.NE.0) THEN
	  CALL FILERR(SFNAMES(1,CLK),3,ST,TERMINAL)
	  TYPE*,' CONTINUE TO UPDATE MEMORY ONLY '
	  CALL GPAUSE
	  GOTO 9000
	ENDIF
C
C MOVE RECORD TO MEMORY
C
8000	CONTINUE
	CALL FASTMOV(CLRKDAY(1,1,NEWCLERK),AGTGAM(1,1,TERMINAL),
     *	             AGAMLEN*MAXGAM)
        CALL FASTMOV(CLRKSPE(1,1,NEWCLERK),AGTSPE(1,1,TERMINAL),
     *               ASPELEN*MAXGAM)
        CALL FASTMOV(CLRKMIS(1,1,NEWCLERK),AGTMIS(1,1,TERMINAL),
     *               AMISLEN*NUMTOT)

9000	CONTINUE
	RETURN
	END
