C
C SUBROUTINE MATOVR3
C $Log:   GXAFXT:[GOLS]MATOVR3.FOV  $
C  
C     Rev 1.0   17 Apr 1996 14:00:52   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 16:58:50   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - poolshr3.for **
C
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C     MATCHOVR3(WIN,OVR3,OVR3P,GAM)
C     IN-WIN-NUMBERS DRAWN
C     OUT- OVR3-# OF MATCH 3 THAT OVERFLEW
C          OVR3P-# OF MATCH 3 WITH BONUS THAT OVERFLEW
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE MATOVR3(FDB,WIN,BONUS_MASK,OVR3,OVR3P,GAM,BET)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:POOLLTO.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INTEGER*4 OFF1, LAST, LENGTH, F_INDEX, TIMESB, OFF, ST
	INTEGER*4 RECN, OVERFLOW_BLOK, CURRENT_FILE, BET, GAM
	INTEGER*4 OVR3P, OVR3, ACT_SECT
C
	INTEGER*4 OFFSET,TIMES
	INTEGER*4 BOARD(20)                !SHOULD BE SEEBET
	INTEGER*4 TEMP(2),TEMP1(2)
	INTEGER*4 WINMSK(2)
	INTEGER*4 BONUS_MASK(*)
	INTEGER*4 WIN(*)
	INTEGER*4 FDB(*)
	INTEGER*4 PFDB(7)            !FDB BLOCK FOR WRITE
	INTEGER*4 OVERFLOWS(2,MAXOVR)!TABLE TO READ OVERFLOWS FROM FILE
	COMMON /CURRFIL/ CURRENT_FILE
C
	WINMSK(1)=0
	WINMSK(2)=0
C
C
	CALL MAP(WINMSK,8,WIN,BET)
C
	OVR3=0
	OVR3P=0
C
	CALL FASTMOV(LTOVR(1,1,GAM),OVERFLOWS,MAXOVR*2)
	OVERFLOW_BLOK=OVRBLK
C
	IF (CURRENT_FILE.NE.1) THEN
	   ACT_SECT=LTOSEC*256/SECSIZE
C***	   RECN=LTOSEC*LTNUMPAG+1+(GAM-1)*MAXOVR*8/256
	   RECN=ACT_SECT*LTNUMPAG+1+(GAM-1)*MAXOVR*8/SECSIZE
	   CALL READQIO(FDB,RECN,OVERFLOWS,MAXOVR*8,ST)
	   IF (ST.NE.0) THEN
	      CALL FILERR(SFNAMES(1,LP2),2,ST,RECN)
	      RETURN
	   ENDIF
C***	   RECN=LTOSEC*LTNUMPAG+1+LTNUMGAMES*MAXOVR*8/256
	   RECN=ACT_SECT*LTNUMPAG+1+LTNUMGAMES*MAXOVR*8/SECSIZE
	   CALL READQIO(FDB,RECN,OVERFLOW_BLOK,4,ST)
	   IF (ST.NE.0) THEN
	      CALL FILERR(SFNAMES(1,LP2),2,ST,RECN)
	      RETURN
	   ENDIF
	ENDIF
C
C
	DO 100, OFF=1,MAXOVR-1
	  TEMP(1)=0
	  TEMP(2)=0
	  IF (OVERFLOWS(2,OFF).EQ.0) GOTO 200
	  OFFSET=OVERFLOWS(1,OFF)
	  CALL OFFCMB(BOARD,OFFSET,BET)
	  CALL MAP(TEMP,8,BOARD,BET)
	  CALL BITAND(WINMSK,TEMP,8,TEMP1)
	  CALL BITCNT(TEMP1,8,TIMES)
	  IF (TIMES.NE.BET-3) GOTO 100
	  CALL BITAND(BONUS_MASK,TEMP,8,TEMP1)
	  CALL BITCNT(TEMP1,8,TIMESB)
	  IF (TIMESB.EQ.0.OR.LTPOOLFLAG(6,GAM).EQ.0) THEN
	     OVR3=OVR3+OVERFLOWS(2,OFF)
	  ELSE
	     OVR3P=OVR3P+OVERFLOWS(2,OFF)
	  ENDIF
100	CONTINUE
C
200	CONTINUE
	IF (OVERFLOW_BLOK.EQ.0) RETURN
C
210	CONTINUE
	IF (CURRENT_FILE.EQ.1) THEN
	  CALL OPENW(1,SFNAMES(1,LO1),4,0,0,ST) !OPEN POOL OVERFLOW FILE
	   F_INDEX=LO1
	ELSE
	  CALL OPENW(1,SFNAMES(1,LO2),4,0,0,ST) !OPEN POOL OVERFLOW FILE
	  F_INDEX=LO2
	ENDIF
	IF (ST.NE.0) THEN
	  CALL FILERR(SFNAMES(1,F_INDEX),1,ST,0)
	  TYPE *,IAM(),' correct the problem and continue '
	  CALL GPAUSE
	  GOTO 210
	ENDIF
	LENGTH=MAXOVR*8/256
	CALL IOINIT(PFDB,1,LENGTH*256)     !INITIALISE FOR I/O
C
C     READ FROM POOLOVR.FIL      ;READ OVERFLOWS FROM FILE
C
	LAST=OVERFLOW_BLOK
	DO 230, OFF=1,LAST
	CALL READW(PFDB,OFF,OVERFLOWS(1,1),ST)
	  IF (ST.NE.0) THEN
	  CALL FILERR(SFNAMES(1,F_INDEX),2,ST,OFF)
	    CALL GPAUSE
	  ENDIF
	IF (OVERFLOWS(1,MAXOVR).NE.GAM) GOTO 230
	DO 220, OFF1=1,MAXOVR-1
	  IF (OVERFLOWS(2,OFF1).EQ.0) GOTO 230
	  OFFSET=OVERFLOWS(1,OFF1)
	  CALL OFFCMB(BOARD,OFFSET,BET)
	  TEMP(1)=0
	  TEMP(2)=0
	  CALL MAP(TEMP,8,BOARD,BET)
	  CALL BITAND(WINMSK,TEMP,8,TEMP1)
	  CALL BITCNT(TEMP1,8,TIMES)
	  IF (TIMES.NE.BET-3) GOTO 220
	  CALL BITAND(BONUS_MASK,TEMP,8,TEMP1)
	  CALL BITCNT(TEMP1,8,TIMESB)
	  IF (TIMESB.EQ.0.OR.LTPOOLFLAG(6,GAM).EQ.0) THEN
	     OVR3=OVR3+OVERFLOWS(2,OFF1)
	  ELSE
	     OVR3P=OVR3P+OVERFLOWS(2,OFF1)
	  ENDIF
220	CONTINUE
230	CONTINUE
C
	CALL CLOSEFIL(PFDB)
	RETURN
	END
