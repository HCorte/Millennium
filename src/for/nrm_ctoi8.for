C
C     FILE   : NRM_CTOI8.FOR
C     AUTHOR : M.M.O
C     VERSION: 01            DATE:  04 / 02 / 2009
C
C V01 MMO 04-FEB-2009 INITIAL RELEASE FOR O.N.C.E. PROJECT -- RFSS 761 --
C
C CTOI8 ROUTINE TO CONVERT A NUMBER FROM ASCII FORMATS, GIVEN IN A STRING BUFFER
C TO INTEGER*8 VALUE. THIS ROUTINE WILL GIVEN TOTAL NUMBER
C OF DIGITS CONVERTED EQUAL TO ZERO, IF WE HAVE ANY PROBLEM WITH OVERFLOW.
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rights Reserved
C
C     **************************************************************************
C
C ROUTINE TO CONVER ASCII TO INTEGER ( FROM ASCII BUFFER TO INTEGER VARIABLE )
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      INTEGER * 8 FUNCTION CTOI8(STR_BUF, TOT_CNV)
      IMPLICIT NONE
C
C PARAMETERS DEFINITIONS TO CONVER ASCII TO INTEGER
C
      INTEGER * 4 TOT_CNV        ! TOTAL NUMBER OF DIGITS CONVERTED
C
      CHARACTER STR_BUF * (*)    ! STRING BUFFER WITH ASCII NUMBER TO CONVERT
C
C VARIABLES DEFINITIONS TO CONVER ASCII TO INTEGER
C
      INTEGER * 4 DIG            ! DIGIT COUNTER
      INTEGER * 4 STR_LEN        ! INPUT STRING LENGHT
C
      LOGICAL IS_VALUE           ! WE SHOULD HAVE A VALUE IN OUTPUT CONVERSION
C
C SET THAT NOTHING HAS BEEN CONVERTED ( OUTPUT VALUE CAN BE ZERO )
C
      IS_VALUE = .FALSE.
C
C SET TOTAL NUMER OF DIGITS CONVERTED TO ZERO
C
      TOT_CNV = 0
C
C MAKE CONVERSION FROM BUFFER STRING TO INTEGER VARIABLE
C
      CALL OTS$CVT_TI_L(STR_BUF, CTOI8, %VAL(8), %VAL(1))
C
C GET TOTAL LENGHT FROM INPUT BUFFER ( NUMBER OF DIGITS TO CHECK / CONVERT )
C
      STR_LEN = LEN(STR_BUF)
C
C SET FIRST DIGIT TO CHECK IF INPUT STRING IS CORRECT ONE
C
      DIG = 1
C
C CHECK IF WE HAVE BLANK SPACES ( BLANK SPACE ARE NOT CONVERTED )
C
1000  CONTINUE
      IF(STR_BUF(DIG:DIG) .EQ. ' ') THEN
        IF(TOT_CNV .NE. 0) GOTO 3000       ! IGNORE ALL BLANKS AT BUFFER END
        GOTO 2000
      ENDIF
C
C CHECK IF WE SHOULD HAVE SOMETHING CONVERTED ( SOME DIGITS IN THE STRING ) 
C
      IF(STR_BUF(DIG:DIG) .GT. '0' .AND. STR_BUF(DIG:DIG) .LE. '9') THEN
        IS_VALUE = .TRUE.
      ENDIF
C
C INCREATE TOTAL NUMBER OF DIGITS CONVERTED
C
      TOT_CNV = TOT_CNV + 1
C
C CHECK IF WE HAVE MORE DIGITS TO BE CHECKED
C
2000  CONTINUE
      DIG = DIG + 1
C
      IF(DIG .LE. STR_LEN) GOTO 1000
C
C CHECK IF WE HAVE OUTPUT VALUE CONVERSION AND IF THIS CONVERSION IS CORRECT
C
3000  CONTINUE
      IF(CTOI8 .EQ. 0 .AND. IS_VALUE .EQ. .TRUE.) TOT_CNV = 0   ! OVERFLOW
C
C THIS IS THE END TO CONVER ASCII TO INTEGER
C
      END
