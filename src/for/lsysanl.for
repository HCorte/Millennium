C
C SUBROUTINE LSYSANL
C $Log:   GXAFXT:[GOLS]LSYSANL.FOV  $
C  
C     Rev 1.0   17 Apr 1996 13:56:58   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 16:56:44   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - lsyschk.for **
C
C
C+++++++++++++++++++++++++++++++++++++
C+
C+    LSYSANL(SYSNR)
C+    IN:
C+    SYSNR - SYSTEM NUMBER
C+
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE LSYSANL(SYSNR)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:LSYSCOM.DEF'
	INTEGER*4  BET_LENGTH
	PARAMETER (BET_LENGTH=(LMXMARK+9)/4)
C
	INTEGER*4 I, II, BONCNT, BONUS, OFF1, COUNT, MASK, WIN
	INTEGER*4 DISPLAY_ERROR, DIFF_COMBINATIONS, ALL, BONUSBET
	INTEGER*4 CHOSE, MARKS, GAME, STATUS, OFF, MAXTIMES, SYSNR
	INTEGER*4 BET(BET_LENGTH)
	INTEGER*4 I4
	INTEGER*4 WINMSK(2) /0,0/
	INTEGER*4 BONMSK(2) /0,0/
	INTEGER*4 SHARE(0:LMXSHR)
	INTEGER*4 BONUS_SHARE(0:LMXSHR)
	INTEGER*4 TOTAL_TAB(0:LMXSHR,0:LMXBONUS) !TOTAL # TIMES MATCHED
C
	PARAMETER (MAXTIMES=20000)
	INTEGER*4 STATS_SHARE(0:LMXSHR,0:1,MAXTIMES)
     *	          ,STATS_COUNT(MAXTIMES),STATS_BONUS(MAXTIMES)
     *	          ,STATS_TIMES(MAXTIMES)
C
	CALL FASTSET(-1,STATS_COUNT,MAXTIMES)
	CALL FASTSET(0,BET,BET_LENGTH)
	DO 5, OFF=0,LMXBONUS
	   CALL FASTSET(0,TOTAL_TAB(0,OFF),LMXSHR+1)
5	CONTINUE
C
	CALL LSYSDSP(SYSNR,STATUS)
	IF (STATUS.NE.0) RETURN
C
C     SET THE BET
C
	GAME=LSYS_GAME(SYSNR)
	MARKS=LSYS_NUMMRK(SYSNR)
	CHOSE=LSYS_GAMCHOSE(GAME)
	BONUSBET=LSYS_BONUSBET(GAME)
C
	DO 10, OFF=1,MARKS
	   CALL SETNIBLE(1,BET,OFF)
10	CONTINUE
C
C
C     TEST FOR "ALL" WINNING COMBINATIONS
C
C
	ALL=2**MARKS-1
C
	DIFF_COMBINATIONS=0
	DISPLAY_ERROR=0
C
	DO 100, WIN=0,ALL
C
	   BONMSK(1)=0
	   MASK=ISHFT(WIN,1)            !SHIFT RIGHT # OF MARKS
	   MASK=IAND(MASK,'FFFFFFFE'X)   !MAKE SURE U DO NOT PROPAGATE 1
	   MASK=ISHFT(MASK,31-MARKS)
	   WINMSK(1)=MASK
C
	   CALL BITCNT(WINMSK,L_SYSBYTES,COUNT)
	   IF (COUNT.GT.CHOSE) GOTO 100
	   CALL LSYSCHK(BET,SYSNR,WINMSK,BONMSK,SHARE,BONUS_SHARE)
C
C     UPDATE STATS TABLES
C
	DO 30, OFF=1,MAXTIMES
	   IF (STATS_COUNT(OFF).EQ.-1) THEN
	      DIFF_COMBINATIONS=DIFF_COMBINATIONS+1
	      STATS_COUNT(OFF)=COUNT
	      STATS_BONUS(OFF)=0
	      STATS_TIMES(OFF)=1
	      CALL FASTMOV(SHARE,STATS_SHARE(0,0,OFF),CHOSE+1)
	      CALL FASTMOV(BONUS_SHARE,STATS_SHARE(0,1,OFF),CHOSE+1)
	      GOTO 40
	   ENDIF
	   IF (STATS_COUNT(OFF).NE.COUNT) GOTO 30
	   IF (STATS_BONUS(OFF).NE.0)     GOTO 30
	   DO 20, OFF1=0,CHOSE
	      IF (STATS_SHARE(OFF1,0,OFF).NE.SHARE(OFF1)) GOTO 30
	      IF (STATS_SHARE(OFF1,1,OFF).NE.BONUS_SHARE(OFF1)) GOTO 30
20	   CONTINUE
	   STATS_TIMES(OFF)=STATS_TIMES(OFF)+1
	   GOTO 40
C
30	CONTINUE
C
	IF (DISPLAY_ERROR.EQ.0) THEN
        TYPE *,'Not enough possible entries to store all combinations'
	  DISPLAY_ERROR=-1
	ENDIF
C
40	CONTINUE
C
C     CHECK FOR BONUS NOW
C
C
	   IF (BONUSBET.EQ.0) GOTO 100     !IF NO BONUS PRIZE
	   DO 90, BONUS=1,ALL
	      BONMSK(1)=ISHFT(BONUS,1)
	      BONMSK(1)=IAND(BONMSK(1),'FFFFFFFE'X)
	      BONMSK(1)=ISHFT(BONMSK(1),31-MARKS)
	      IF (IAND(BONMSK(1),WINMSK(1)).NE.0) GOTO 90!WINS,BONUSES OVERLAP
	      CALL BITCNT(BONMSK,L_SYSBYTES,BONCNT)
	      IF (BONCNT.GT.BONUSBET) GOTO 90      !TO MANY BONUSES
	      CALL LSYSCHK(BET,SYSNR,WINMSK,BONMSK,SHARE,BONUS_SHARE)
C***  IF (COUNT.EQ.5.AND.BONCNT.EQ.1)
C*** *   TYPE *,'win, bonus ',WINMSK,BONMSK,' bonshr ',BONUS_SHARE
C*** *         ,' bet ',BET,' win, bon ',WIN,BONUS
C
C     UPDATE STATS NOW
C
C
	      DO 80, OFF=1,MAXTIMES
	         IF (STATS_COUNT(OFF).EQ.-1) THEN
	            DIFF_COMBINATIONS=DIFF_COMBINATIONS+1
	            STATS_COUNT(OFF)=COUNT
	            STATS_BONUS(OFF)=BONCNT
	            STATS_TIMES(OFF)=1
	            CALL FASTMOV(SHARE,STATS_SHARE(0,0,OFF),CHOSE+1)
	         CALL FASTMOV(BONUS_SHARE,STATS_SHARE(0,1,OFF),CHOSE+1)
	            GOTO 90
	         ENDIF
	         IF (STATS_COUNT(OFF).NE.COUNT) GOTO 80
	         IF (STATS_BONUS(OFF).NE.BONCNT)GOTO 80
	         DO 60, OFF1=0,CHOSE
	            IF (STATS_SHARE(OFF1,0,OFF).NE.SHARE(OFF1)) GOTO 80
              IF(STATS_SHARE(OFF1,1,OFF).NE.BONUS_SHARE(OFF1)) GOTO 80
60	         CONTINUE
	         STATS_TIMES(OFF)=STATS_TIMES(OFF)+1
	         GOTO 90
C
80	      CONTINUE
C
C
90	   CONTINUE
100	CONTINUE
C
C     DISPLAY STATS NOW
C
C     CALCULATE TOTAL # OF TIMES BET FIRST
C
	DO 120, OFF=1,MAXTIMES
	   IF (STATS_COUNT(OFF).LT.0) GOTO 140
	   TOTAL_TAB(STATS_COUNT(OFF),STATS_BONUS(OFF))=
     *   TOTAL_TAB(STATS_COUNT(OFF),STATS_BONUS(OFF))+STATS_TIMES(OFF)
120	CONTINUE
140	CONTINUE
C
C     DISPLAY STATS NOW
C
	DO 190, BONUS=0,BONUSBET
	   DO 180, COUNT=0,CHOSE
	     DO 170, OFF=1,MAXTIMES
	       IF (STATS_COUNT(OFF).LT.0) GOTO 180
 
	       IF (STATS_BONUS(OFF).NE.BONUS) GOTO 170
C
	       IF (STATS_COUNT(OFF).NE.COUNT) GOTO 170
C
	      WRITE(6,900) COUNT,BONUS
     *	      ,STATS_TIMES(OFF),TOTAL_TAB(COUNT,BONUS)
     *	      ,(STATS_SHARE(II,0,OFF),II=0,CHOSE)
C
900	      FORMAT(1H ,'match ',I2,'+',I1,' ** ',I6,'/',I6,' win ',
     *	              10I6)
	      WRITE(6,910) (STATS_SHARE(I,1,OFF),I=0,CHOSE)
910	      FORMAT(1H ,22X,'bonus win ',10I6)
170	     CONTINUE
180	   CONTINUE
190	CONTINUE
C
	RETURN
	END
