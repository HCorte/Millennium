C SUBROUTINE PROXFE
C
C V06 15-JUN-2000 OXK CLEANUP W/ WARNINGS=ALL
C V05 17 Apr 1996 HXK Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  			DEC Baseline
C V04 16-FEB-1994 JWE Add broadcst server support
C V03 23-DEC-1994 GPR Integrate UK changes into X2X Baseline
C V02 05-APR-1994 GPR USE X2X_I4_STATION TO DETERMINE STATION AND TERNUM
C V01 24-OCT-1989 MBK-MRM ORIGINAL RELEASE
C
C ENCODE FE LAYER MESSAGE TO GO OUT
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE PROXFE(TRABUF,MESSAGE,ORIGINAL,RESPOND,
     *	                  LENGTH,BUF)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:X2FEMES.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
C
	INTEGER*4 ERROFF, ADRLEN, ERRCDE
	INTEGER*4 OFFMES, STN, BUF, CNT, TEMP
	INTEGER*4 MESSAGE(*)
	INTEGER*4 ORIGINAL(*)
	INTEGER*2 LENGTH
	LOGICAL   RESPOND
C
	RESPOND=.FALSE.
	STN=TRABUF(TXSTN)
C
C PROCESS FIRST THOSE THAT YOU WOULDN'T KNOW HOW TO PROCESS.
C ONLY X2XMGR KNOWS THAT YOU HAVE TO DO SOMETHING DIFFERENT.
C
	IF(TRABUF(TXPTL).EQ.X2ERR_INV) THEN
C                                                   ; NO RESPONSE
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_FE) THEN
C
        ELSEIF(TRABUF(TXPTL).EQ.X2ERR_GOODVS) THEN
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_BADADR) THEN    ! NO RESPONSE
C
	   CALL X2DISSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	   RESPOND=.TRUE.
	   TRABUF(TXBAK)=X2XS_BAD_ADRESS
	   X2XS_BAD_ADRESS=TRABUF(TXIDX)
C
      ELSEIF(TRABUF(TXPTL).EQ.X2ERR_BCST_BADADR) THEN       !V02
C
         CALL X2CLRSVC(BUF)
         RESPOND=.TRUE.
         TRABUF(TXBAK)=X2XS_BAD_ADRESS
         X2XS_BAD_ADRESS=TRABUF(TXIDX)
C
        ELSEIF(TRABUF(TXPTL).EQ.X2ERR_BADVSP) THEN
C
           CALL X2DISSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
           RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_INV_CMD) THEN   ! NO RESPONSE
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_ACK) THEN       !STANDARD PROCESSING
	  IF(STN.GE.1 .AND. STN.LE.X2X_STATIONS) THEN
	    X2XS_ACK_CNT(STN)=X2XS_ACK_CNT(STN)+1
            IF (X2XS_STATS_PNT.EQ.1) THEN
              CALL ILBYTE(CNT,X2XS_ACK_CNT_LAST1,STN-1)
              CNT=CNT+1
              CALL ISBYTE(CNT,X2XS_ACK_CNT_LAST1,STN-1)
            ELSE
              CALL ILBYTE(CNT,X2XS_ACK_CNT_LAST2,STN-1)
              CNT=CNT+1
              CALL ISBYTE(CNT,X2XS_ACK_CNT_LAST2,STN-1)
            ENDIF
	    IF(TRABUF(TXFSSAP).NE.0) THEN
	      CALL X2STRIP(BUF,TRABUF(TXLAY),LENGTH)
	      HPRO(TRCODE,BUF)=TYPX2X_RELAY_DELACK

C             ***** Start V02 changes *****

              IF (X2X_I4_STATION) THEN
	         PRO(LINENO,BUF)=STN
	      ELSE
	         HPRO(LINENO,BUF)=STN
	      ENDIF

C             ***** End V02 changes *****

	    ENDIF
	  ENDIF
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_ERR) THEN       !STANDARD PROCESSING
	  IF(STN.GE.1 .AND. STN.LE.X2X_STATIONS) THEN
	    X2XS_ERR_CNT(STN)=X2XS_ERR_CNT(STN)+1
            IF (X2XS_STATS_PNT.EQ.1) THEN
              CALL ILBYTE(CNT,X2XS_ERR_CNT_LAST1,STN-1)
              CNT=CNT+1
              CALL ISBYTE(CNT,X2XS_ERR_CNT_LAST1,STN-1)
            ELSE
              CALL ILBYTE(CNT,X2XS_ERR_CNT_LAST2,STN-1)
              CNT=CNT+1
              CALL ISBYTE(CNT,X2XS_ERR_CNT_LAST2,STN-1)
            ENDIF
	    CALL ILBYTE(OFFMES,ORIGINAL,X2PRO_OFFSET-1)
	    CALL ILBYTE(ERRCDE,ORIGINAL,OFFMES+X2FEMES_DELIVERY-2)
	    IF(ERRCDE.NE.X2FEMES_DELIVERY_ESCAPE) THEN
	      X2XS_LAST_ERR_CODE(STN)=ERRCDE
	    ELSE
	      CALL ILBYTE(ADRLEN,ORIGINAL,OFFMES+X2FEMES_ADRLEN-2)
	      ADRLEN=(ADRLEN+1)/2
	      ERROFF=OFFMES+X2FEMES_ADR+ADRLEN-2
	      CALL MOV4TOI4(TEMP,ORIGINAL,ERROFF)
	      X2XS_LAST_ERR_CODE(STN) = ISHFT(TEMP,-8)
	    ENDIF
	    IF(TRABUF(TXFSSAP).NE.0) THEN
	      CALL X2STRIP(BUF,TRABUF(TXLAY),LENGTH)
	      HPRO(TRCODE,BUF)=TYPX2X_RELAY_DELERR

C             ***** Start V02 changes *****

              IF (X2X_I4_STATION) THEN
	         PRO(LINENO,BUF)=STN
	      ELSE
	         HPRO(LINENO,BUF)=STN
	      ENDIF

C             ***** End V02 changes *****

	    ENDIF
	  ENDIF
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_INV_STN_PROTOCOL) THEN
	   CALL X2RESFE(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	   RESPOND=.TRUE.
	   TRABUF(TXBAK)=X2XS_BAD_ADRESS
	   X2XS_BAD_ADRESS=TRABUF(TXIDX)

C
        ELSEIF (TRABUF(TXPTL).EQ.X2ERR_NAAS) THEN
              CALL X2RENAAS(TRABUF,MESSAGE,ORIGINAL,LENGTH)
              RESPOND=.TRUE.
C
        ELSEIF(TRABUF(TXPTL).EQ.X2ERR_ALARM) THEN
              CALL X2FEALRM(TRABUF,MESSAGE,ORIGINAL,LENGTH)
              RESPOND=.FALSE.
C
C***  ELSEIF(TRABUF(TXPTL).EQ.X2ERR_FE_CMD) THEN    ;STANDARD PROCESSING
C
	ELSE
C
C NOW PROCESS AS YOU KNOW BEST (DON'T CONSIDER THOSE CONDITIONS WHICH
C HAPPENED TO BE DESCRIBED ABOVE)
C
	   IF(TRABUF(TXFMDUT).EQ.X2FEMES_MESTYP_CMD) THEN
C
C COMMAND/STATUS CONNECTION STATUS - DECODE STATION ADDRESS LENGTH
C AND ADDRESS, THEN SEARCH COMMON FOR A MATCH.  IF STATION IS FOUND,
C UPDATE BACKLINK PTL MESSAGE POINTER.
C
	      IF(TRABUF(TXFCC).EQ.X2FEMES_MESCOD_CONSTS) THEN
C****	        CALL ILBYTE(OFFMES,ORIGINAL,X2PRO_OFFSET-1)
C****                OFFMES = OFFMES - 1
C****	        CALL ILBYTE(ADRLEN,ORIGINAL,OFFMES+
C****     *	                    X2FEMES_CONSTS_ADRLEN-1)
C****	        STNADR(1)=0
C****	        STNADR(2)=0
C****	        LEN=(ADRLEN+1)/2
C****
C 		CHECK TO SEARCH ON  VERIFICATION SEQUENCE NUMBER             
C
C****               CALL ILBYTE(X32LEN,ORIGINAL,
C****     *                     OFFMES+X2FEMES_CONSTS_X32ADRLEN-1)
C****               CONTYPE_OFFSET = X2FEMES_CONSTS_X32ADRLEN + X32LEN + 1
C****               VSLEN_OFFSET   = CONTYPE_OFFSET + X2FEMES_CONSTS_CONTYPE
C****               VS_OFFSET      = VSLEN_OFFSET   + X2FEMES_CONSTS_EVS
C
C****               CALL ILBYTE (CONTYPE, ORIGINAL, CONTYPE_OFFSET+OFFMES-1)
C****               CALL ILBYTE (EVSNLEN, ORIGINAL, VSLEN_OFFSET+OFFMES-1)
C
C****               IF((CONTYPE .EQ. X2XSCT_GTECH_DIAL .OR. 
C****     *             CONTYPE .EQ. X2XSCT_X28PAD)    .AND.
C****     *             EVSNLEN .GT. 0) THEN
C****                   EVSNNUM(1) = 0
C****                   EVSNNUM(2) = 0
C****                   CALL FASTBYT(ORIGINAL, VS_OFFSET+OFFMES, EVSNNUM, 1,
C****     *                          EVSNLEN)
C****                   CALL X2QSHFT(EVSNNUM,-(64-EVSNLEN*4*2))
C****                   CALL X2BINVSN(EVSNLEN*2, EVSNNUM, STN, ST)
C****
C****		ELSE		!IF X.25 TYPE CONNECTIONS
C****		  STN=1
C****		  ST=0	
C		  
C****		  CALL FASTBYT(ORIGINAL,OFFMES+X2FEMES_CONSTS_STNADD-1,
C****     *	                     STNADR,1,LEN)
C****      		  CALL X2QSHFT(STNADR,-(64-ADRLEN*4))
C****		  CALL X2BINSRC(ADRLEN,STNADR,STN,ST)
C
C IF NOT FOUND IN BINARY SEARCH, SEQUENTIALLY SEARCH FOR THE
C STATION.
C****		  IF(ST.NE.0) THEN
C****		    IF (IAND(X2X_DEBUG,16384).NE.0) 
C****     *		      TYPE *,'PROXFE not found in bin search '
C****		    DO 100 OFF=1,X2X_STATIONS
C****		      IF(ADRLEN.NE.X2XS_ADRESS_LEN(OFF)) GOTO 100
C****		      IF(X2XS_ADRESS(1,OFF).EQ.0 .AND.
C****     *	               X2XS_ADRESS(2,OFF).EQ.0) GOTO 100
C****		      DO 110 OFF1=1,X2X_ADRESS_MAXLEN
C****			IF(X2XS_ADRESS(OFF1,OFF).NE.STNADR(OFF1))
C****     *			      GOTO 100
C****110	              CONTINUE
C****	              STN=OFF
C****	              ST=0
C****	              GOTO 120
C****100	            CONTINUE
C****	          ENDIF
C
C****                ENDIF
C
C IF STATION HAS BEEN FOUND, UPDATE THE TRANSACTION HEADER AND
C PTL BACKLINKS.
C
C****120	        CONTINUE
C****	        IF (ST.EQ.0) THEN
	        IF(TRABUF(TXSTN).GT.0 .AND. 
     *			  TRABUF(TXSTN).LE.X2X_STATIONS) THEN
C****	          TRABUF(TXSTN)=STN
		  STN=TRABUF(TXSTN)
	          TRABUF(TXBAK)=X2XS_ALARM_INDEX(STN)
	          X2XS_ALARM_INDEX(STN)=TRABUF(TXIDX)
	          X2XS_ALARM_TIME(STN)=TRABUF(TTIM)
	          X2XS_ALARM_STATION=STN
	          X2XS_ALARM_TOTAL=X2XS_ALARM_TOTAL+1
	        ENDIF
C
C***        ELSEIF(TRABUF(TXFCC).EQ.@@@@) THEN
C
	      ENDIF
C
	   ELSEIF(TRABUF(TXFMDUT).EQ.X2FEMES_MESTYP_ALARM) THEN
C
C ALARM STATUS
C
C***        IF(TRABUF(TXFLMC).EQ.@@@) THEN
C
C***        ELSEIF(TRABUF(TXFLMC).EQ.@@@) THEN
C
C***        ENDIF
	   ENDIF
 
	ENDIF
C
C X2OUTFE SHOULD BE USED IN THE ABOVE IF STATEMENT IF NECESSARY
C AND ALSO IN STANDARD PROCESSING IF NECESSARY.
C RIGHT NOW WE DON'T DO ANYTHING.
C
C***  CALL X2OUTFE(TRABUF,MESSAGE,ORIGINAL,LENGTH)
C
	RETURN
	END
