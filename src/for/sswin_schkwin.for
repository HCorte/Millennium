C
C SUBROUTINE SSWIN_SCHKWIN
C  
C V04 03-JUL-2000 UXN Refund too late played tickets.
C V03 01-FEB-2000 UXN TNFRAC ADDED.
C V02 14-JAN-1999 UXN GET_TEBEID ADDED.
C V01 XX-XXX-XXXX RXK INITIAL RELEASE.
C
C SUBROUTINE TO CHECK IF SUPERSCORE TICKET IS A WINNER
C AND UPDATE VALIDATION RECORDS
C
C
C
C     CALL SSWIN_SCHKWIN(TRABUF,V4BUF,WIN)
C INPUT
C          TRABUF - TRANSACTION BODY
C          V4BUF  - VALIDATION RECORD
C OUTPUT
C          V4BUF  - UPDATED FOR NEW WINNER (IF ANY)
C          WIN    - ZERO -> NOT A WINNER
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE SSWIN_SCHKWIN(TRABUF,V4BUF,WIN)
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:DESTRA.DEF'
        INCLUDE 'INCLIB:WINCOM.DEF'
        INCLUDE 'INCLIB:DESVAL.DEF'
        INCLUDE 'INCLIB:VALFIL.DEF'
        INCLUDE 'INCLIB:PRMAGT.DEF'
        INCLUDE 'INCLIB:VDETAIL.DEF'
C
        INTEGER*4 WINTAB
        INTEGER*4 WIN, PRZIND, COUNT, ST, GIND, AMTWON, TOTWON
        INTEGER*4 NETAMT,TAXAMT
        INTEGER*4 NAMT,TAMT
        LOGICAL CXLED,REFUND,PRVFLG,HLDFLG
        INTEGER*4 AWNTAB(2,NUMAGT)
        COMMON/BIGWIN/ AWNTAB
	LOGICAL*4 LATEFLG
C
C
        WIN=0
        COUNT=0
        TOTWON=0
        NETAMT=0
        TAXAMT=0
        CXLED = .FALSE.
        REFUND = .FALSE.
        PRVFLG = .FALSE.
        HLDFLG = .FALSE.
        ST=TRABUF(TSTAT)
        GIND=TRABUF(TGAMIND)
        IF(LSSDRW(GIND).LT.0) RETURN
        IF(ST.NE.GOOD.AND.ST.NE.VOID.AND.
     *     ST.NE.INCA.AND.ST.NE.EXCH) RETURN
        IF(TRABUF(TWBEG).GT.LSSDRW(GIND)) RETURN
        IF(TRABUF(TWEND).LT.LSSDRW(GIND)) RETURN
        IF(TRABUF(TSTAT).EQ.VOID.OR.TRABUF(TSTAT).EQ.INCA) CXLED=.TRUE.
C
	LATEFLG = LSSLAT(LATCDC,GIND).GT.0 .AND.
     *            (LSSLAT(LATCDC,GIND).LT.TRABUF(TCDC).OR.
     *             (LSSLAT(LATCDC,GIND).EQ.TRABUF(TCDC).AND.
     *              LSSLAT(LATTIM,GIND).LT.TRABUF(TTIM)))
C
C CHECK FOR CANCELLED GAME
C
        IF(LSSSTS(GIND).EQ.GAMCAN .OR. LATEFLG) THEN
          IF(CXLED) RETURN
          REFUND=.TRUE.
          WIN=1
          WINTAB=TRABUF(TWAMT)
	  IF(TRABUF(TFAMTFLG).EQ.1) WINTAB=WINTAB/TRABUF(TNFRAC)
	  IF(LATEFLG) THEN
	     LSSLAT(LATCNT,GIND) = LSSLAT(LATCNT,GIND) + 1
	     LSSLAT(LATAMT,GIND) = LSSLAT(LATAMT,GIND) + WINTAB
	  ENDIF
        ELSE
          CALL SSWIN_SWINLOS(TRABUF,WINTAB,WIN)
        ENDIF
C
C UPDATE VALIDATION RECORD
C
        IF(WIN.EQ.0) RETURN
        IF(V4BUF(VFSSER).NE.0) THEN
          CALL LOGVAL(VALREC,V4BUF)
          CALL DLOGVAL(VALREC,VDETAIL)
        ELSE
          CALL FASTSET(0,VALREC,VALLEN)
          CALL FASTSET(0,VDETAIL,VPLEN*VMAX)
        ENDIF
C
C
        AMTWON=WINTAB
        IF(REFUND) THEN
          LSSREF(GIND)=LSSREF(GIND)+AMTWON
          LSSWRO(1,PRWON,GIND)=LSSWRO(1,PRWON,GIND) + TRABUF(TWSYSN)
          LSSWRO(2,PRWON,GIND)=LSSWRO(2,PRWON,GIND) + AMTWON
          LSSWRA(1,PRWON,GIND)=LSSWRA(1,PRWON,GIND) + TRABUF(TWSYSN)
          LSSWRA(2,PRWON,GIND)=LSSWRA(2,PRWON,GIND) + AMTWON
          LSSWON(GIND)=LSSWON(GIND)+AMTWON
          LSSWPR(1,PRWON,GIND)=LSSWPR(1,PRWON,GIND) + TRABUF(TWSYSN)
          LSSWPR(2,PRWON,GIND)=LSSWPR(2,PRWON,GIND) + AMTWON
        ENDIF
C
C
        VALREC(VPZOFF)=VALREC(VPZOFF)+1
        PRZIND=VALREC(VPZOFF)
        IF(PRZIND.GT.VMAX) THEN
          TYPE*,IAM(),' Prize table overflow ',TRABUF(TCDC),TRABUF(TSER)
          CALL GPAUSE
          HLDFLG = .TRUE.
          VALREC(VPZOFF)=VMAX
          GOTO 20
        ENDIF
C
C
        VDETAIL(VKIK,PRZIND)=0
        VDETAIL(VKI2,PRZIND)=0
        VDETAIL(VPRG,PRZIND)=0
        VDETAIL(VREF,PRZIND)=0
        VDETAIL(VBDR,PRZIND)=0
        VDETAIL(VDIV,PRZIND)=0
        VDETAIL(VUPD,PRZIND)=1
        VDETAIL(VSHR,PRZIND)=AMTWON
        IF(REFUND) VDETAIL(VREF,PRZIND)=1
        VDETAIL(VDRW,PRZIND)=LSSDRW(GIND)
20      CONTINUE
        IF(REFUND) THEN
          VALREC(VRAMT)=VALREC(VRAMT)+AMTWON
        ELSE
          TOTWON=TOTWON+AMTWON
        ENDIF
1000    CONTINUE
C
C UPDATE VALIDATION HEADER IF NEW WINNER
C
        IF(VALREC(VSTAT).EQ.VNOWIN) THEN
          VALREC(VSCDC)=TRABUF(TCDC)
          VALREC(VSTER)=TRABUF(TTER)
          VALREC(VSSER)=TRABUF(TSER)
          VALREC(VEXP )=TRABUF(TWEND)
          VALREC(VKEXP)=0
          VALREC(VGAM )=TRABUF(TGAM)
          VALREC(VKGME)=0
          VALREC(VGTYP)=TRABUF(TGAMTYP)
          VALREC(VGIND)=TRABUF(TGAMIND)
          VALREC(VFRAC)=TRABUF(TFRAC)
          VALREC(VBNKID)=TRABUF(TWBNKID)
          VALREC(VBNKNUM)=TRABUF(TWBNKNM)
        ENDIF
C
C GET TAXES AND SET PRIV PAY FLAG
C AND UPDATE BIG WINNER COMMISSION TABLE
C AND WINNERS COUNT AND AMOUNT
C
        IF(.NOT.CXLED.AND..NOT.REFUND) THEN
          LSSWON(GIND)=LSSWON(GIND)+TOTWON
          IF(TOTWON.GT.LSSHST(GIND)) LSSHST(GIND)=TOTWON
          AMTWON = WINTAB
          IF(.NOT.REFUND) THEN
             LSSWPR(1,PRWON,GIND) = LSSWPR(1,PRWON,GIND) + 1
             LSSWPR(2,PRWON,GIND) = LSSWPR(2,PRWON,GIND) + AMTWON
             LSSWPO(1,PRWON,GIND) = LSSWPO(1,PRWON,GIND) + 1
             LSSWPO(2,PRWON,GIND) = LSSWPO(2,PRWON,GIND) + AMTWON
             CALL GETTAX(AMTWON,TAMT,NAMT)
             NETAMT = NETAMT + NAMT
             TAXAMT = TAXAMT + TAMT
          ENDIF
2000      CONTINUE
          IF(NETAMT.GT.REDMAX(TRABUF(TGAM))) PRVFLG=.TRUE.
          LSSTAX(GIND)=LSSTAX(GIND)+TAXAMT
          IF(HVCLVL.NE.0) THEN
            IF(NETAMT.GE.HVCLVL) THEN
              AWNTAB(1,TRABUF(TTER))=AWNTAB(1,TRABUF(TTER))+1
              AWNTAB(2,TRABUF(TTER))=AWNTAB(2,TRABUF(TTER))+NETAMT
            ENDIF
          ENDIF
          VALREC(VPAMT)=VALREC(VPAMT)+NETAMT
          VALREC(VTAMT)=VALREC(VTAMT)+TAXAMT
        ENDIF
C
C
        VALREC(VWCDC) = DAYCDC
        VALREC(VSTAT) = VUNCSH
        IF(PRVFLG) VALREC(VSTAT) = VPRPAY
        IF(HLDFLG) VALREC(VSTAT) = VHOLD
        IF(TRABUF(TSTAT).EQ.VOID) VALREC(VSTAT) = VCXL
        IF(TRABUF(TSTAT).EQ.INCA) VALREC(VSTAT) = VDEL
        CALL DVALLOG(VALREC,VDETAIL)
        CALL VALLOG (VALREC,V4BUF  )
        RETURN
        END
