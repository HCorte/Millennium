C PROGRAM POOLBLD
C  
C V23 29-JUN-2000 UXN P(SPTTCF) removed.
C V22 08-MAY-2000 OXK No questions asked when run as a Multiwin-Subprocess
C V21 08-MAR-2000 OXK More Vakio changes
C V20 01-MAR-2000 UXN VAKIO changes.
C V19 17-Feb-2000 OXK Game name displayed etc.
C V18 15-Feb-2000 OXK TQCNT from TRABUF, not SPSNUM (Vakio changes)
C V17 13 Jun 1997 WPW Yes / No to run poolbld question added.
C V16 18 Dec 1996 HXK Update from TEBE project (MXP,WXW,PXN,MJF)
C V15 28 Nov 1996 WXW Telebetting startup, changes MP/PXN/WXW.
C  			Fix for determining the count of Vakio draw files.
C V14 17 Apr 1996 HXK Release of Finland for X.25, Telephone Betting, 
C			Instant Pass Thru Phase 1
C V13 04 Dec 1995 HXK Change for LTPOOL_GAMENR not having MAXTYP as array size!
C V12 06 Feb 1994 HXK AMENDEDSO THAT IT CAN WILL REBUILD FROM SCRATCH ALL POOLS.
C V11 30 Jan 1994 HXK Initial revision.
C V10 10 Oct 1993 GXA Changed for Postponed draws for Finland. Allow for 
C			pools to stay around untill the postponed winner 
C			selection is run, inorder to be available for TV 
C			broadcasting befor winner selection is run. TCF is 
C			read to rebuild pool in all cases except for 
C			postponed draws when some draw files are needed.
C V09 21 Jan 1993 DAB Initial Release
C  			Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  			DEC Baseline
C V08 09-MAY-1991 MP  ADDED CALL TO SNIF_AND_WRKSET
C V07 10-APR-1991 MP  ELIMINATED OPEN OF THE POOL FILE, SINCE IT IS NOT
C			USED IN THIS PROGRAM - POOLS ARE MAINTAINED BY
C			'POOLPRO' AS IN REAL-TIME.
C		      MOVED 'POOLINI' ROUTINE HERE FROM THE 'POOLPRO'.
C			- OTHERWISE THERE COULD BE A SYNCHRONIZATION PROBLEM.
C V06 11-APR-1991 MP  JUMPED AROUND 'SAVDRAW' FILES - THEY ARE NOT USED FOR 
C		       MARYLAND, BUT MAY BE USED SOMEWHERE ELSE FOR DELAYED DRAW
C			MTK SAID WE WOULD DO DIFFERENTLY NEXT TIME, SO
C			THE CODE MAY BE TAKEN OUT. I LEFT THE CODE UNTILL
C			DIFFERENT WAY IS IMPLEMENTED...
C			THERE IS ALSO A CHANGE IN THE CODE THAT IS NOT USED FOR
C			MARYLAND: WHEN LTODRW OR SPTDRW ARE USED, GAME TYPE
C			SHOULD BE CHECKED.
C V05 16-APR-1991 MP  CHECK FOR 'GAMBFD' STATUS BEFORE CLEARING GAME POOLS
C V04 01-AUG-1990 XXX RELEASED FOR VAX
C V03 20-JUN-1990 SWB CHANGED FOR POSTPONED EVENTS
C V02 15-JUL-1989 WS  RELEASED FOR SWEDEN
C V01 01-JUN-1988 XXX RELEASED FOR MICHIGAN
C
C=====================================================================
C
C DESCRIPTION  :
C
C    PROGRAM TO BUILD  POOLS
C
C     IT IS ASSUMED THAT THERE ARE NO HOLES IN THE BUFFER
C
C SPECIAL NOTES:
C     THIS PROGRAM CALLS POOLSAV, POOLSAV USES LUN 2 AND 3
C     IF YOU DO NOT WANT SUCH RESTRICTIONS MODIFY POOLSAV
C     TO TRY ANY AVAILABLE LUN
C
C====================================================================
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM POOLBLD
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:POOLLTO.DEF'
	INCLUDE 'INCLIB:LTOPOL.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:DESLOG.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:LSYSCOM.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
	INCLUDE 'INCLIB:LTOCOM.DEF'
	INCLUDE 'INCLIB:HSHCOM.DEF'
	INCLUDE 'INCLIB:RECDAF.DEF'
	INCLUDE 'INCLIB:WINCOM.DEF'
	INCLUDE 'INCLIB:DLTREC.DEF'
	INCLUDE 'INCLIB:DSPREC.DEF'
	INCLUDE 'INCLIB:STOPCOM.DEF'
C
	INTEGER*4 LCFBUF(LREC*3),DAFFDB(7),DRWFDB(7)
	INTEGER*4 FILES(5,MAXGAM*9+1)
	CHARACTER*20 CFILES(MAXGAM*9+1)
	EQUIVALENCE (CFILES, FILES)
	LOGICAL*4 NEED_TCF
C
	REAL*8 R8_POOLPROTSK/'POOLPRO '/
	INTEGER*4 GAME_INITIALIZED(LTNUMGAMES) /LTNUMGAMES*0/
C
	INTEGER*4 DUMMY, FLAG
	INTEGER*4 FILNUM, CDC, SVOL, LVOL , COUNT, ST, S
	INTEGER*4 GAM, GIND, GTYP, GNUM, FILCNT
        INTEGER*4 TMFBUF(8192)
        INTEGER*4 EOFCNT, IND, BLOCK, LENGTH ,XTYPE
        INTEGER*4 I4TEMP
	INTEGER*4 I
	INTEGER*4 TQCNT(LTNUMGAMES)
	INTEGER*4 GAM2(LTNUMGAMES)

        BYTE      I1TEMP(4)

        EQUIVALENCE(I4TEMP,I1TEMP)

        INTEGER*4 INPLEN
        CHARACTER*4 C_LVOL, C_SVOL
        EQUIVALENCE(C_LVOL,LVOL)
        EQUIVALENCE(C_SVOL,SVOL)
C
	LOGICAL EOF/.FALSE./
	LOGICAL INITIALIZED_FLAG        !Any games to run.
	INTEGER*4 DRAW, DRAWS(LTNUMGAMES)
	INTEGER*4 FILNUM_START

	LOGICAL*4 BLDALL			! BUILD ALL POOLS
C
	CALL COPYRITE
	CALL SNIF_AND_WRKSET
C
	IF (DAYSTS.EQ.DSOPEN) THEN
	    TYPE *,IAM(), 'POOLBLD cannot be run when game up'
	    CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
C
	IF (.NOT. (ISSUBPROC() .AND. (STOPMOD.EQ.WINMULTI))) THEN
      	    CALL PRMYESNO('Are you sure you want to run POOLBLD ? [Y/N]',FLAG)
      	    IF(FLAG.NE.1) CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
C
	BLDALL = .FALSE.
	IF (.NOT.ISSUBPROC()) THEN
           CALL PRMYESNO('Run POOLBLD for all pools? [Y/N]',FLAG)
	   BLDALL = FLAG.EQ.1
	ENDIF

	CALL FASTSET(0,DRAWS,LTNUMGAMES)
	NEED_TCF = .FALSE.
C
	FILCNT=1
	INITIALIZED_FLAG = .FALSE.
	CALL FASTMOV(SFNAMES(1,TCF),FILES(1,FILCNT),5)
	DO 5 GNUM=1,MAXGAM
	   GTYP=GNTTAB(GAMTYP,GNUM)
	   GIND=GNTTAB(GAMIDX,GNUM)
	   IF(GTYP.LE.0 .OR. GTYP.GT.LTPOOL_MAXTYP) GOTO 5
	   IF(GIND.LE.0) GOTO 5
	   GAM=LTPOOL_GAMENR(GTYP,GIND)
	   IF (GAM.LE.0.OR.GAM.GT.LTNUMGAMES) GOTO 5
	   GAM2(GAM)=GNUM
C
C
	   IF (GAME_INITIALIZED(GAM).EQ.0) THEN
C
C V04 CHECK FOR GAME STATUS BEFORE CLEARING GAME POOLS
C
C
	     IF(GTYP.EQ.TLTO) THEN
	        IF(LTDELAY(GIND).EQ.2)	GOTO 5 ! KEEP POOLS IF WINSEL POSTPONED
		IF(LLTDRW(GIND).LT.0 .AND. .NOT.BLDALL) GOTO 5   ! NO WINSEL WAS DONE
		IF(LLTDRW(GIND).EQ.0 .OR. BLDALL) THEN
		   DRAW = LTODRW(GIND)
		   IF(LTOSTS(GIND).GT.GAMOPN) DRAW = DRAW + 1 
                ELSE
		   DRAW = LLTDRW(GIND) + 1
		ENDIF
		LTPOOLDRAW(GAM) = DRAW
	     ENDIF
C
	     IF(GTYP.EQ.TSPT) THEN
		IF(SPDELAY(GIND).EQ.2) GOTO 5  ! KEEP POOLS IF WINSEL POSTPONED
	        IF(LSPDRW(GIND).LT.0 .AND. .NOT.BLDALL) GOTO 5   ! NO WINSEL WAS DONE
		IF(LSPDRW(GIND).EQ.0 .OR. BLDALL) THEN
		   DRAW = SPTDRW(GIND)
		   IF(SPTSTS(GIND).GT.GAMOPN) DRAW = DRAW + 1 
                ELSE
		   DRAW = LSPDRW(GIND) + 1
		ENDIF
	     ENDIF
	     IF(GTYP.EQ.TSPT) THEN
	        IF(SPTMLT(GIND).GT.1) NEED_TCF = .TRUE.
	     ELSE
	        NEED_TCF = .TRUE.
	     ENDIF

	     WRITE(6,1002) IAM(),GAM,(GLNAMES(I,GNUM),I=1,4)
	     CALL POOLCLR(GAM)
	     DRAWS(GAM) = DRAW
C
	     GAME_INITIALIZED(GAM)=-1
	     INITIALIZED_FLAG = .TRUE.
C
	   ENDIF
5	CONTINUE
C
C
	P(SUPPUD)=0         ! enable pool update
C
C STOP POOLPRO AND OVERPRO (IF RUNNING)
C
	LCHKSTOP=LSTOP
	CALL XWAIT(10,2,ST)
C
C
C INITIALISE FILE AND COMMON
C
	CALL POOLRES
C
	DO GAM=1,LTNUMGAMES
	   IF(DRAWS(GAM).GT.0) THEN
	      LTPOOLDRAW(GAM) = DRAWS(GAM)
           ENDIF
	ENDDO
C
C IF NO GAMES SELECTED FOR BUILDING ONLY SAVE POOLS
C
	IF(.NOT.INITIALIZED_FLAG) GOTO 120
C
C INITIALIZE  POOLS
C
C     RESTART POOLPRO AND OVERPRO
C
C
C       APR 10,91. M.P.:
C       INITIALIZE POOL QUEUES. IF POOL QUEUES ARE INITIALIZED
C       BY 'POOLPRO', DATA MAY BE PUT ON THE
C       POOLS QUEUE AND THE DATA IS LOST WHEN QUEUES ARE INITIALIZED.
C	'RESET' HAS BEEN CHANGED TOO...
C
        CALL POOLINI                     !INITIALIZE ALL POOL QUEUES
C
	LTSKSTAT=0
	CALL NRUNTSK(R8_POOLPROTSK)         !RUN POOLPRO
C
C V04	THE FOLLOWING WAITING LOOP IS NOT NEEDED IF INITIALIZATION
C V04	OF POOL QUEUES IS DONE HERE. I LEFT THE CODE JUST IN CASE...
C
	CALL XWAIT(10,2,ST)
10	CONTINUE
	IF (LTSKSTAT.EQ.0) THEN
D	   TYPE *,IAM(),'WAITING FOR POOLPRO TO START'
	   CALL XWAIT(5,2,ST)
	   GOTO 10
	ENDIF

	COUNT=0
	CALL FASTSET(0,TQCNT,LTNUMGAMES)

C SET UP ALL FILES THAT MUST BE READ FOR ALL GAMES
C (ONLY WHEN POSTPONED DRAW IS RUN)
C
C***	IF(.NOT.POSTPONED_FLAG) GOTO 31

	CALL OPENW(DAF,SFNAMES(1,DAF),4,0,0,ST)
	CALL IOINIT(DAFFDB,DAF,DAFSEC*256)
	IF(ST.NE.0) CALL FILERR(SFNAMES(1,DAF),1,ST,0)

	LVOL=P(REG_DRWPCK)
	SVOL=P(REG_DRWPCK)
11      CONTINUE
	IF(LVOL.EQ.'    '.OR.LVOL.EQ.0)
     *	  CALL PRMTEXT('Enter Lotto draw pack volume name: ',C_LVOL,INPLEN)
        IF(LVOL.EQ.'    ') GOTO 11
12      CONTINUE
	IF(SVOL.EQ.'    '.OR.SVOL.EQ.0)
     *	  CALL PRMTEXT('Enter Sports draw pack volume name: ',C_SVOL,INPLEN)
        IF(SVOL.EQ.'    ') GOTO 12

	DO 30 GNUM=1,MAXGAM
	  GTYP=GNTTAB(GAMTYP,GNUM)
	  GIND=GNTTAB(GAMIDX,GNUM)
	  IF(GTYP.LE.0 .OR. GTYP.GT.LTPOOL_MAXTYP)GOTO 30
	  IF(GIND.LE.0)				  GOTO 30
	  IF(GTYP .NE. TLTO .AND. GTYP .NE. TSPT) GOTO 30
	  GAM=LTPOOL_GAMENR(GTYP,GIND)
	  IF (GAM.LE.0.OR.GAM.GT.LTNUMGAMES)      GOTO 30
	  IF(GTYP.EQ.TLTO.AND.LTODRW(GIND).LE.0)  GOTO 30
	  IF(GTYP.EQ.TSPT.AND.SPTDRW(GIND).LE.0)  GOTO 30
	  IF(GAME_INITIALIZED(GAM).NE.-1)	  GOTO 30
	  IF(LTPOOLDRAW(GAM).LE.0) GOTO 30
	  DRAW = LTPOOLDRAW(GAM)
	  IF(GTYP.EQ.TLTO) THEN
	    CALL READGFL(9,GFNAMES(1,GNUM), DLTSEC, DRAW, DLTREC)
	    IF(DLTSTS.GT.GAMNUL.AND.DLTSTS.LT.GAMENV) THEN
	       DO 40 CDC=DLTBSD,MIN(DAYCDC,DLTESD)
	          CALL READW(DAFFDB,CDC,DAFREC,ST)
	          IF(ST.NE.0) CALL FILERR(SFNAMES(1,DAF),2,ST,CDC)
	          IF(DAFSTS.EQ.DNOSAL) GOTO 40
	          FILCNT=FILCNT+1
	          WRITE (CFILES(FILCNT),901) LVOL,GSNAMES(GNUM),CDC
40	       CONTINUE
	    ENDIF
	  ELSEIF(GTYP.EQ.TSPT) THEN
	    CALL READGFL(9,GFNAMES(1,GNUM), DSPSEC, DRAW, DSPREC)
	    IF(DSPSTS.GT.GAMNUL.AND.DSPSTS.LT.GAMENV)THEN
	       DO 50 CDC=DSPBSD,MIN(DAYCDC,DSPESD)
	          CALL READW(DAFFDB,CDC,DAFREC,ST)
	          IF(ST.NE.0) CALL FILERR(SFNAMES(1,DAF),2,ST,CDC)
	          IF(DAFSTS.EQ.DNOSAL) GOTO 50
	          FILCNT=FILCNT+1
	          WRITE (CFILES(FILCNT),901) SVOL,GSNAMES(GNUM),CDC
50	       CONTINUE
	    ENDIF
	  ENDIF
30	CONTINUE
	CALL CLOSEFIL(DAFFDB)
C
31	CONTINUE
C
C LOOP THROUGH CARRY OVER FILE AND ALL DRAW FILES FOR ALL GAMES
C
	FILNUM_START = 1
	IF(.NOT.NEED_TCF) FILNUM_START = 2
	DO 70 FILNUM=FILNUM_START,FILCNT
C
C OPEN DRAW FILE OR CARRY OVER FILE
C
	WRITE(6,902) IAM(),(FILES(S,FILNUM),S=1,5)
	IF(FILNUM.EQ.1) THEN
	   CALL IOPEN(FILES(1,FILNUM),TCF,LREC*2,LCDC,LSER*2-1,ST)
	   IF(ST.NE.0) CALL FILERR(FILES(1,FILNUM),1,ST,0)
	ELSE
	   CALL POOL_OPNDRW(FILES(1,FILNUM),TCF)
	   CALL IOINIT(DRWFDB,TCF,128*256)
           BLOCK=0
           EOFCNT=0
           IND=8192
	ENDIF
C
C
C GET NEXT RECORD
C
20	CONTINUE
	IF(FILNUM.EQ.1) THEN
	   CALL READTCF(LCFBUF,TCF,EOF)	    !READ A CARRY RECORD
	   IF(EOF) THEN
	      CALL ICLOSE(TCF,DUMMY,ST)
	      EOF=.FALSE.
	      TYPE *, IAM(), COUNT,' records read'
	      IF(FILNUM.GE.FILCNT) GOTO 100
	      COUNT=0
	      GOTO 70
	   ENDIF
	   CALL LOGTRA(TRABUF,LCFBUF)
C***	   IF(TRABUF(TGAMTYP).EQ.TLTO.AND.TRABUF(TGAMIND).EQ.2) THEN !VIKING
C***	      IF(TRABUF(TWEND).LT.LTODRW(TRABUF(TGAMIND))) GOTO 20
C***	   ENDIF
	ELSE
           IF(IND.GT.8157) THEN
              ST=0
              BLOCK=BLOCK+1
              IND=1
              CALL READW(DRWFDB,BLOCK,TMFBUF,ST)
              IF(ST.NE.0) THEN
                 WRITE(6,8002) IAM(),CDC,ST,BLOCK
                 CALL GPAUSE
              ENDIF
           ENDIF
           IF(EOFCNT.GT.1000) THEN
              TYPE*,IAM(),' ',COUNT,' records read'
	      COUNT=0
              GOTO 70
           ENDIF
           IF(TMFBUF(IND).EQ.0) THEN
              EOFCNT=EOFCNT+1
              IND=IND+LREC
              GOTO 20
           ENDIF
           EOFCNT=0
           I4TEMP=TMFBUF(IND+LREC-1)
           XTYPE=ZEXT(I1TEMP(4))
           IF(XTYPE.NE.LONE .AND. XTYPE.NE.LREG) THEN
              TYPE*,IAM(),'Bad record type > ',XTYPE,' index > ',IND
              IND=IND+LREC
              GOTO 20
           ENDIF
           LENGTH=LREC
           IF(XTYPE.EQ.LONE) THEN
              I4TEMP=TMFBUF(IND+LREC*2-1)
              XTYPE=ZEXT(I1TEMP(4))
              IF(XTYPE.EQ.LEND) LENGTH=LREC*2
              IF(XTYPE.EQ.LTWO) LENGTH=LREC*3
           ENDIF
           CALL FASTMOV(TMFBUF(IND),LCFBUF,LENGTH)
           CALL LOGTRA(TRABUF,LCFBUF)
           IND=IND+LENGTH
C	   CALL LOGTRA(TRABUF,LCFBUF)
C***       IF(TRABUF(TSTAT).EQ.EXCH) GOTO 20
	   IF(TRABUF(TFIL).EQ.CDEAD) GOTO 20
C***       IF(TRABUF(TGAMTYP).EQ.TLTO.AND.TRABUF(TGAMIND).EQ.2) THEN !VIKING
C***          IF(TRABUF(TWEND).LT.LTODRW(TRABUF(TGAMIND))) GOTO 20
C***       ENDIF
	ENDIF
C
C
	COUNT=COUNT+1
	IF(TRABUF(TGAMTYP).NE.TLTO.AND.TRABUF(TGAMTYP).NE.TSPT) GOTO 20
	GAM=LTPOOL_GAMENR(TRABUF(TGAMTYP),TRABUF(TGAMIND))
	IF(GAM.LE.0.OR.GAM.GT.LTNUMGAMES) GOTO 20
C*** WHAT?  - SEE 3 LINES ABOVE...
C***    IF (LTPOOL_GAMENR(TRABUF(TGAMTYP),TRABUF(TGAMIND)).NE.GAM) GOTO 20
	IF(TRABUF(TSTAT).EQ.FRAC) TRABUF(TSTAT) = GOOD
	IF(TRABUF(TWFFLG).NE.0)   GOTO 20
	IF(TRABUF(TSTAT).NE.GOOD.AND.TRABUF(TSTAT).NE.EXCH) GOTO 20

C--------------------------------------------------------------------

C
C	'GAME_INITIALIZE' TELLS WHICH POOLS ARE BEING BUILT
C
	IF(GAME_INITIALIZED(GAM).NE.-1) GOTO 20
	IF (TRABUF(TGAMTYP).EQ.TLTO) THEN
	   CALL UPDLPL(TRABUF,0,ST)
	   IF (ST.EQ.0) THEN
	      IF (TRABUF(TWSYSN).EQ.0) THEN
		 TQCNT(GAM)=TQCNT(GAM)+TRABUF(TWNBET)
	      ELSE
	         TQCNT(GAM)=TQCNT(GAM)+LSYS_BOARD(TRABUF(TWSYSN))
	      ENDIF
	   ENDIF
	ELSE
	  GIND = TRABUF(TGAMIND)
	  IF(SPTDAT(1,GIND).GE.DAYCDC) THEN
	    CALL UPDSPT(TRABUF,0,ST)
	    IF (ST.EQ.0) TQCNT(GAM)=TQCNT(GAM)+TRABUF(TWSIMP)
	  ENDIF
	ENDIF
	GOTO 20
C
70	CONTINUE



100	CONTINUE
	DO 102 GAM=1,LTNUMGAMES
            IF(DRAWS(GAM).LE.0) GOTO 102
	    WRITE(6,9000)IAM(),TQCNT(GAM),
     *	      (GLNAMES(I,GAM2(GAM)),I=1,4), LTPOOLDRAW(GAM)
102	CONTINUE

C
C     FORCE  CHECKPOINT NOW
C
	LCHKPNT=LCMDCHK

110	CONTINUE
	IF (LCHKPNT.NE.LLODCHK) THEN
	   CALL XWAIT(2,2,ST)
	   GOTO 110
	ENDIF

	LCHKPNT=0

120	CONTINUE
	CALL POOLSAV
121	CONTINUE
	CALL STTSK(R8_POOLPROTSK,I,ST)
        IF (ST.NE.4) THEN
	   CALL XWAIT(2,2,ST)
           GOTO 121
        ENDIF
	CALL GSTOP(GEXIT_SUCCESS)
900	FORMAT(A4)
901	FORMAT(A4,':',A4,I4.4,'.FIL')
902	FORMAT(1X,A,1X,'Scanning file ',5A4)
1002	FORMAT(1X,A,1X,'Clearing pools for game ',I3,3X,4A4)
8002    FORMAT(1X,A,1X,' Error reading SPORTS draw file  cdc:',
     *         I4.4,' > ',I4,' Block: ',I10)
9000	FORMAT(1X,A,I10,' board(s) carried over for ',4A4,'draw ',I4)
	END
