C  GXSRC:DIFIN.FOR
C
C V17 28-MAR-2006 FRP Modify for IPS Distribution.
C V16 09-OCT-2000 UXN AlphaIPS release.
C V15 28-JAN-1997 HXK IPS LOTGEN release
C V14 22-JAN-1997 RXK Option data check 
C V13 28-JAN-1995 JJOLY ADDED REPORT REQUEST TYPE FOR MULTIPLES
C V12 28-JAN-1995 JJOLY UPDATED TO SET CHNPAS ON DIVPRV AND CHNPRV
C V11 17-JAN-1995 DJO Added support for report types 7 & 8 and a call to 
C                     FIND_AGENT for agt lookup.
C V10 29-OCT-1994 XXX Moved some checks using RTER up to a place where 
C                     RTER is bounds checked.
C V09 21-OCT-1994 DJO Changed to send back a TRSUB code of 6 for 
C                     franchise heads.
C V08 20-OCT-1994 DJO Added checks to reject report requests 
C                     which don't match type selected.
C V07 03-OCT-1994 MCM CHECK FOR VALID REQUESTED TERMINAL FROM A 
C                     PRIVILEGE RETAILER
C V06 30-AUG-1994 MCM MODIFIED ADJUSTMENT REPORT PER LMS
C V05 29-AUG-1994 MCM ADDED VERIFICATION OF MANAGER PASS NUMBERS
C V04 19-JUL-1994 MCM ADDED PACK SETTLED, ADJUSTMENT TEXT, REPORT AND 
C                     INVOICE REPORT
C V03 05-MAY-1993 MCM RELEASED FOR GEORGIA
C V02 10-FEB-1992 JPJ ADDED (GVT)
C V01 13-NOV-1991 JPJ RELEASED FOR VAX (INSTANTS)
C
C SUBROUTINE TO DECODE INSTANT FINANCIAL REPORT MESSAGE FROM TERMINAL
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE DIFIN(TERMES,TRABUF,MESLEN,CHNPAS)
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:DESTRA.DEF'
        INCLUDE 'INCLIB:TASKID.DEF'
        INCLUDE 'INCLIB:CHKSUMCM.DEF'
C
        INTEGER*2 MESLEN
        BYTE      TERMES(*)
C
        INTEGER*4   TEMP, REPTYP
        INTEGER*4   CHKLEN, MYCHKSUM, ENCMES, ENCACT
        INTEGER*4   OPTIONS, IND, CHNPAS, RTER, RAGT, ST
        LOGICAL     PRIV, CHNPRV, DIVPRV
C
C GET SEQUENCE NUMBER
C
        TEMP = ZEXT(TERMES(1))
        TRABUF(TTRN)=IAND(TEMP,15)
        PRIV=.FALSE.
        CHNPRV=.FALSE.
        DIVPRV=.FALSE.
C
C GET CHECKSUM
C
	CALL TERM_TO_HOST(TERMES(3), TRABUF(TCHK), 2)
C
C GET STATISTICS
C
        TRABUF(TTSTCS)=ZEXT(TERMES(5))
C
C GET OPTION FLAGS
C
	CALL TERM_TO_HOST(TERMES(6), OPTIONS, 2)
        IND=8
C
C CHECK FOR NODE NUMBER (NOT USED)
C
        IF(IAND(OPTIONS,'0001'X).NE.0) THEN
           IND=IND+4
        ENDIF
C
C CHECK FOR RETAILER NUMBER (NOT USED)
C
        IF(IAND(OPTIONS,'0002'X).NE.0) THEN
           IND=IND+4
        ENDIF
C
C CHECK FOR PASSWORD (NOT USED)
C
        IF(IAND(OPTIONS,'0004'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR ORIGINATOR   (NOT USED)
C
        IF(IAND(OPTIONS,'0008'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR LOCATION NUMBER (NOT USED)
C
        IF(IAND(OPTIONS,'0010'X).NE.0) THEN
           IND=IND+4
        ENDIF
C
C CHECK FOR USER ID (NOT USED)
C
        IF(IAND(OPTIONS,'0020'X).NE.0) THEN
           IND=IND+4
        ENDIF
C
C CHECK FOR OPERATOR ID (NOT USED)
C
        IF(IAND(OPTIONS,'0040'X).NE.0) THEN
           IND=IND+1
        ENDIF
C
C CHECK FOR PAYMENT TYPE (NOT USED HERE)
C
        IF(IAND(OPTIONS,'0080'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR VALIDATION MODE (NOT USED HERE)
C
        IF(IAND(OPTIONS,'0100'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR BANK (NOT USED HERE)
C
        IF(IAND(OPTIONS,'0200'X).NE.0) THEN
           IND=IND+8
        ENDIF
C
C GET REPORT TYPE
C
        TRABUF(TRTYP)=ZEXT(TERMES(IND+0))
        IF(TRABUF(TRTYP).LT.0.OR.TRABUF(TRTYP).GT.IVCLRK) THEN
          TRABUF(TERR)=SYNT
          SYNTERRCOD=10
          GOTO 8000
        ENDIF
        IND=IND+1
C
C GET SUB TYPE 
C
        TEMP = ZEXT(TERMES(IND))
        IND = IND + 1
        TRABUF(TRSUB)=IAND(TEMP,15)
C       REPTYP=TRABUF(TRSUB)
        IF(TRABUF(TRSUB).LT.0.OR.TRABUF(TRSUB).GT.2) THEN
          TRABUF(TERR)=SYNT
          SYNTERRCOD=11
          GOTO 8000
        ENDIF
C
        IF(BTEST(AGTTAB(AGTTYP,TRABUF(TTER)),AGTPRV)) PRIV=.TRUE.
C
C       GET CHAIN PRIVELEGE TYPE
C
        TEMP = ISHFT(TEMP,-4)
        IF(TEMP.EQ.1) CHNPRV=.TRUE.
        IF(TEMP.EQ.2) DIVPRV=.TRUE.
C
C       GET CLASS SPECIFIC INFORMATION
C
        IF(TRABUF(TRTYP).EQ.IINVF.OR.TRABUF(TRTYP).EQ.IADJT.OR.
     *      TRABUF(TRTYP).EQ.IVCLRK) GOTO 1000
C
C       GET CHAIN NUMBER
C
	CALL TERM_TO_HOST(TERMES(IND), TRABUF(TRCHN), 4)
        IND=IND+4
C
C       GET MANAGER PASSWORD
C
	CALL TERM_TO_HOST(TERMES(IND), CHNPAS, 2)
        IND=IND+2
C
C ON CHNPRV AND DIVPRV SET CHNPAS
C
        IF(CHNPRV.OR.DIVPRV) THEN
          CHNPAS=AGTTAB(APSNUM+1,TRABUF(TTER))
          TRABUF(TRCON1)=1
        ENDIF
C
C HXK - COMMENTED OUT AS THERE IS NO RELEVANCE TO FINLAND 
C
C CHECK REPORT PASS NUMBER FOR ALL REPORTS BUT TODAY
C
CHXK    IF(.NOT.PRIV) THEN
CHXK      IF(P(SUPMGR).EQ.0.OR.
CHXK *       TSBIT(AGTBTB(AGTPAR,TRABUF(TTER)),AGTPPAS)) THEN
CHXK        IF(TRABUF(TRTYP).NE.0) THEN
CHXK          IF(AGTTAB(APSNUM+1,TRABUF(TTER)).NE.CHNPAS) THEN
CHXK            TRABUF(TERR)=INVL
CHXK            GOTO 8000
CHXK          ENDIF
CHXK        ENDIF
CHXK      ENDIF
CHXK    ENDIF
C
C ALLOW ALL REPORTS FOR CHAINS ONLY ON CHAIN MEMBERS AND DIVISION ON DIVISION
C MEMBERS ONLY
C
c       IF(TRABUF(TRSUB).EQ.2.OR.TRABUF(TRSUB).EQ.4.OR.
c    *     TRABUF(TRSUB).EQ.5.OR.TRABUF(TRSUB).EQ.6) THEN
C
C         SET THE REQUESTED TERMINAL NUMBER
C
c         IF(TRABUF(TRSUB).EQ.4.OR.TRABUF(TRSUB).EQ.5) THEN
c           RAGT=TRABUF(TRCON)
c         ELSE
c           RAGT=TRABUF(TRCHN)
c         ENDIF
c         CALL FIND_AGENT(RAGT,RTER,ST)
c         IF(RTER.LT.1.OR.RTER.GT.NUMAGT.OR.ST.NE.0) THEN
c           TRABUF(TERR)=INVL
c           GOTO 8000
c         ENDIF
C
C DJO - CHECK TO MAKE SURE THE TYPE OF REPORT REQUESTED MATCHES THE
C       TYPE OF RETAILER REQUESTED. (I.E. IF CHAIN SUMMARY, THEN THE
C       REQUESTED TERMINAL MUST BE AR CHAIN HEAD).
C
C DJO - FOR REPORT TYPE 7 THE REQUESTING TERMINAL MUST BE A DIVISION
C       HEAD.
C
c         IF(REPTYP.EQ.1) THEN
c           IF(AGTHTB(AGTCHN,RTER).EQ.RTER.OR.
c    *         AGTHTB(AGTDIV,RTER).EQ.RTER) THEN
c             TRABUF(TERR)=INVL
c           ENDIF
c         ELSEIF(REPTYP.EQ.2.OR.REPTYP.EQ.7) THEN
c           IF(AGTHTB(AGTDIV,RTER).NE.RTER) THEN
c             TRABUF(TERR)=INVL
c           ENDIF
c         ELSEIF(REPTYP.EQ.5) THEN
c           IF(AGTHTB(AGTCHN,RTER).NE.RTER) THEN
c             TRABUF(TERR)=INVL
c           ENDIF
c         ENDIF
c         IF(TRABUF(TERR).NE.NOER) GOTO 8000
C
C DJO - CHECK TO SEE IF THE REQUESTING AGENT IS A FRANCHISE HEAD.  IF SO
C       THEN CHANGE THE (TRSUB) TO 6 BECAUSE THE LMS SYSTEM TREATS THE
C       FRANCHISE HEADS AS IF THEY WERE DIVISION HEADS.
C
c         IF(TSBIT(AGTBTB(AGTPAR,RTER),AGTFCH)) THEN  
c           TRABUF(TRSUB)=6
c         ENDIF
C
c         IF(PRIV) GOTO 200
c         IF(CHNPRV) THEN
c           IF(AGTHTB(AGTCHN,TRABUF(TTER)).NE.AGTHTB(AGTCHN,RTER)) THEN
c             TRABUF(TERR)=INVL
c             GOTO 8000
c           ENDIF
c         ELSEIF(DIVPRV) THEN
c           IF(AGTHTB(AGTDIV,TRABUF(TTER)).NE.AGTHTB(AGTDIV,RTER)) THEN
c             TRABUF(TERR)=INVL
c             GOTO 8000
c           ENDIF
c         ELSE
c           TRABUF(TERR)=INVL
c           GOTO 8000
c         ENDIF
c       ENDIF
c200    CONTINUE
C
C       GET PACK SETTLED CONTINUATION INFORMATION
C
        IF(TRABUF(TRTYP).EQ.IPSET) THEN
	  CALL TERM_TO_HOST(TERMES(IND), TRABUF(TRCON1), 2)
          IND=IND+2
C
C         CONTINUATION INFORMATION 2
C
	  CALL TERM_TO_HOST(TERMES(IND), TRABUF(TRCON2), 4)
          IND=IND+4
C
C       GET ADJUSTMENT REPORT CONTINUATION INFORMATION
C
        ELSEIF(TRABUF(TRTYP).EQ.IADJR) THEN
C
C         CONTINUATION INFORMATION 1
C
	  CALL TERM_TO_HOST(TERMES(IND), TRABUF(TRCON1), 4)
          IND=IND+4
C
C         CONTINUATION INFORMATION 2
C
	  CALL TERM_TO_HOST(TERMES(IND), TRABUF(TRCON2), 4)
          IND=IND+4
C
C         CONTINUATION INFORMATION 3
C
	  CALL TERM_TO_HOST(TERMES(IND), TRABUF(TRCON3), 2)
          IND=IND+2
        ENDIF
C
1000    CONTINUE
C
C CHECK MESSAGE CHECKSUM
C
        IF(P(SUPSUM).EQ.0) THEN
          IF(.NOT.BTEST(AGTTAB(AGTTYP,TRABUF(TTER)),AGTSUM)) THEN
            I4CCITT=IAND(BASECHKSUM+TRABUF(TTER),'FFFF'X)
	    CALL HOST_TO_TERM(TERMES(3), I4CCITT, 2)
            CHKLEN=MESLEN-1
            CALL GETCCITT(TERMES,1,CHKLEN,MYCHKSUM)
            IF(MYCHKSUM.NE.TRABUF(TCHK)) TRABUF(TERR)=CBAD
          ENDIF
        ENDIF
C
C CHECK FOR DES ERROR
C
        IF(P(DESACT).EQ.0) THEN
          ENCMES = ZEXT(TERMES(1))
          ENCMES = IAND(ENCMES,'08'X)
          IF(P(DESFLG).EQ.0.AND.
     *       BTEST(AGTTAB(AGTTYP,
     *            TRABUF(TTER)),AGTDES)) THEN
            ENCACT='08'X
          ELSE
            ENCACT=0
          ENDIF
          IF(ENCMES.NE.ENCACT) TRABUF(TERR) = DESMOD
        ENDIF
C
C
C
8000    CONTINUE
        IF(TRABUF(TERR).NE.NOER) TRABUF(TSTAT)=REJT
        RETURN
        END
