C
C SUBROUTINE X2PRINT
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]X2PRINT.FOV                                  $
C  $Date::   17 Apr 1996 16:26:30                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - x2print.for;1 **
C
C X2PRINT.FOR
C
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C REPORT TO THE CONSOLE ACCORDING TO THE REPORT MODE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE X2PRINT(TRABUF)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
C
	INTEGER*4 MESS(EDLEN)
	INTEGER*4 THISPTL, MODE, MSGMOD, STNMOD, SAPMOD
	INTEGER*4 THISMSG, THISSAP, THISSTN
C
	THISSTN=TRABUF(TXSTN)
	THISSAP=TRABUF(TXSAP)
	THISMSG=TRABUF(TXPTL)
C
	IF(THISSAP.GE.1.AND.THISSAP.LE.X2X_SAP) THEN
	   SAPMOD=X2X_SAP_PRINT(THISSAP)
	ELSE
	   SAPMOD=X2X_NONE_PRINT
	ENDIF
C
	IF(THISSTN.GE.1.AND.THISSTN.LE.X2X_STATIONS) THEN
	   STNMOD=X2X_STN_PRINT(THISSTN)
	ELSE
	   STNMOD=X2X_NONE_PRINT
	ENDIF
C
	IF(THISMSG.GE.1.AND.THISMSG.LE.X2ERR_MAX_ERR) THEN
	   MSGMOD=X2X_MSG_PRINT(THISMSG)
	ELSE
	   MSGMOD=X2X_NONE_PRINT
	ENDIF
C
	MODE=MAX0(STNMOD,SAPMOD,MSGMOD,X2X_GLO_PRINT)
C
C**   MODE=X2X_ALL_PRINT   ;@FOR TESTING
C
	IF(MODE.LE.X2X_NONE_PRINT) THEN
	   RETURN
	ENDIF
C
	IF(MODE.LE.X2X_PART_PRINT) THEN
C
C PRINT OUT OF TRABUF: INDEX X2X FILE AND STATION OR SAP NUMBER INVOLVED
C
D	   TYPE*,'**** TRABUF ****[',TRABUF,']'
C
	   THISPTL=TRABUF(TXPTL)
C
	   IF(THISPTL.EQ.X2ERR_FATAL) THEN          !FATAL ERROR
C
            CALL OPS('**** FATAL PROTOCOL ERROR ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_LANBUF) THEN     !NO LAN BUFFERS
C
	      CALL OPS('**** NO DLL BUFFERS ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_OPEN) THEN       !OPEN SAP
C
	      CALL OPS('**** SAP OPEN ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_DLL) THEN        !DLL COMMAND
C
	      CALL OPS('**** DLL COMMAND ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_SEND_NOW) THEN   !SEND NOW FLAG
C
	      CALL OPS('**** UNUSED ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_NOMORE) THEN     !NO MORE DATA
C
	      CALL OPS('**** UNUSED ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_ACK)    THEN     !DELIVERY ACK
C
            CALL OPS('**** FE MESSAGE DELIVERED ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_ERR)    THEN     !ERROR MESSAGE
C
	      CALL OPS('**** FE MESSAGE LOST ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_ALARM)  THEN     !ALARM MESSAGE
C
	      CALL OPS('**** FE ALARM ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_FE_CMD) THEN     !COMMAND (FE)
C
	      CALL OPS('**** FE COMMAND ****',THISSAP,TRABUF(TXFCC))
	   ELSEIF(THISPTL.EQ.X2ERR_FE)     THEN     !FRONT END MESSAGE BAD
C
	      CALL OPS('**** ILLEGAL FE MESSAGE ****',THISSAP,
     *	                TRABUF(TXFMDUT))
	   ELSEIF(THISPTL.EQ.X2ERR_BADADR) THEN     !INVALID STATION ADRESS
C
	      CALL OPS('**** INVALID STATION ADDRESS 1ST ****',THISSAP,
     *	                TRABUF(TXFDAD1))
	      CALL OPS('**** INVALID STATION ADDRESS 2ND ****',THISSTN,
     *	                TRABUF(TXFDAD2))
	   ELSEIF(THISPTL.EQ.X2ERR_INV_CMD)THEN     !INVALID COMMAND
C
	      CALL OPS('**** INVALID FE COMMAND ****',THISSAP,
     *	                 TRABUF(TXFCC))
	   ELSEIF(THISPTL.EQ.X2ERR_INV)    THEN     !INVALID ????
C
	      CALL OPS('**** INVALID FE MESSAGE ****',THISSAP,THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_STNLEN)    THEN     !INVALID LENGTH
C
	      CALL OPS('**** INVALID FE MESSAGE LENGTH ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_BADTRM) THEN     !BAD TERMINAL NO
C
	      CALL OPS('**** INVALID TERMINAL NO ****',THISSTN,
     *	                TRABUF(TTER))
	   ELSEIF(THISPTL.EQ.X2ERR_BADSTN) THEN     !BAD STATION NO
C
	      CALL OPS('**** INVALID STATION NO ****',THISSAP,THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_STTN_PROTOCOL)THEN!INV STTN PROT
C
	      CALL OPS('**** ILLEGAL PROTOCOL ID ****',THISSAP,THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_STTN_INV_CMD)THEN!INV STATION COMMAND
C
	      CALL OPS('**** INVALID STATION CMD ****',THISSTN,
     *	                TRABUF(TXSCC))
	   ELSEIF(THISPTL.EQ.X2ERR_STTN_INV_TYPE)THEN!INV STTN MESSAGE T
C
	      CALL OPS('**** INVALID STATION MSG ****',THISSTN,
     *	                TRABUF(TXSSDTU))
	   ELSEIF(THISPTL.EQ.X2ERR_CONFREQ)     THEN!CONFIGURATION REQUEST
C
            CALL OPS('**** CONFIGURATION REQUEST ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_STATREP)     THEN!STATS REPORT
C
	      CALL OPS('**** STATUS REPORT ****',THISSTN,0)
	   ELSEIF(THISPTL.EQ.X2ERR_PORTREQ)     THEN!PORT CONFIG REQUEST
C
	      CALL OPS('**** PORT CONFIGURATION REQUEST ****',THISSTN,
     *	                0)
	   ELSEIF(THISPTL.EQ.X2ERR_VALREQ)      THEN!VALIDATION REQUEST
C
            CALL OPS('**** CONNECTION VALIDATION REQUEST ****',THISSTN,
     *	                0)
	   ELSEIF(THISPTL.EQ.X2ERR_RESET)       THEN!RESET COMMAND
C
	      CALL OPS('**** STATION RESET ****',THISSTN,THISSAP)
           ELSEIF(THISPTL.EQ.X2ERR_NAAS)       THEN!NAAS MESSAGE
C
              CALL OPS('**** NOT APPL MESS ****',THISSTN,THISSAP)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH)        THEN!BAD TDBH HEADER
C
	      CALL OPS('**** INVALID GTP HEADER ****',THISSAP,
     *	                0)
	   ELSEIF(THISPTL.EQ.X2ERR_FLAG)        THEN!BAD TDBH FLAGS
C
	      CALL OPS('**** INVALID GTP FLAGS ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_SEQ)         THEN!BAD SEQUENCE NUMBER
C
	      CALL OPS('**** GTP BLOCK OUT OF SEQUENCE ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_BUF)         THEN!INVALID BUFFER
C
	      CALL OPS('**** INVALID BUFFER ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_SAP)         THEN!INVALID SAP
C
	      CALL OPS('**** INVALID GTP LENGTH ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_LEN)         THEN!INVALID XPORT LENGTH
C
	      CALL OPS('**** INVALID SAP ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_INV_CMD)THEN!XFER LAYER COMMAND
C
	      CALL OPS('**** INVALID GTP CMD ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_RECONNECT)   THEN  !CONNECTION DROPPED
C
	      CALL OPS('**** GTP CONNECTION DROPPED ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_SYNC)THEN !SYNC CONF
C
	      CALL OPS('**** GTP SYNC CONFIRM ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_XOFF)THEN !XOFF GTP
C
	      CALL OPS('**** GTP XOFF ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_XON) THEN !XON GTP
C
	      CALL OPS('**** GTP ON ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_RESET)THEN!GTP RESET
C
	      CALL OPS('**** GTP RESET ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_BEGIN)THEN!GTP BEGIN
C
	      CALL OPS('**** GTP BEGIN ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_MAINTENANCE)THEN! CMD
C
	      CALL OPS('**** GTP MAINTAINANCE ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_TDBH_CMD_LOOPBACK)THEN!GTP LOOPBACK
C
	      CALL OPS('**** GTP LOOPBACK ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_PRO)        THEN !INVALID PROCESSING BUF
C
	      CALL OPS('**** INVALID PROCESSING BUFFER ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_BUSY)       THEN !SAP BUSY CANNOT ACCEPT
C
	      CALL OPS('**** SAP BUSY ****',THISSAP,0)
	   ELSEIF(THISPTL.EQ.X2ERR_LAY)        THEN !ILLEGAL LAYER
C
	      CALL OPS('**** INVALID PTL LAYER ****',THISSAP,
     *	                 TRABUF(TXLAY))
	   ELSEIF(THISPTL.EQ.X2ERR_FMDUT)      THEN !ILLEGAL FE DATA TYPE
C
	      CALL OPS('**** ILLEGAL FE DATA TYPE ****',THISSAP,
     *	                TRABUF(TXFMDUT))
	   ELSEIF(THISPTL.EQ.X2ERR_SDTU)       THEN !ILLEGAL ST DATA TYPE
C
	      CALL OPS('**** ILLEGAL STATION DATA TYPE ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_MOFF)       THEN !ILLEGAL MESS OFF
C
	      CALL OPS('**** ILLEGAL MESSAGE OFFSET ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_ADRLEN)     THEN !BAD STTN ADR LEN
C
            CALL OPS('**** INVALID X.121 ADDRESS LENGTH ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_GLO_STN_RES_SOFT) THEN !STN RESET
C
	      CALL OPS('**** STATION RESET ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_GLO_STN_RES_HARD)   THEN !STN RESET
C
	      CALL OPS('**** STATION RESET ****',THISSAP,
     *	                THISSTN)
          ELSEIF(THISPTL.EQ.X2ERR_GLO_STN_WAKE_UP)   THEN !STN WAKEUP
C
              CALL OPS('**** STATION WAKEUP ***',THISSAP,
     *                  THISSTN)
           ELSEIF(THISPTL.EQ.X2ERR_GLO_STN_DISABLE)   THEN !STN DISABLE
C
              CALL OPS('**** STATION DISABLE ***',THISSAP,
     *                  THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_GLO_STN_STATS)     THEN !STN STATS
C
	      CALL OPS('**** STATION RESET ****',THISSAP,
     *	                THISSTN)
	   ELSEIF(THISPTL.EQ.X2ERR_GLO_FE_STATS)     THEN !FE STATS
C
	      CALL OPS('**** STATION RESET ****',THISSAP,
     *	                THISSTN)
	   ELSE
C
	      CALL OPS('**** ILLEGAL TXPTL ****',TRABUF(TSER),THISPTL)
	   ENDIF
	ENDIF
C
	IF(MODE.LE.X2X_ALL_PRINT) THEN
C
C TRU ERRLOG
C
	   MESS(1)=X2P
	   MESS(2)=TECOM
	   MESS(3)=8
	   MESS(4)=TRABUF(TSER)
	   MESS(5)=TRABUF(TXPTL)
	   MESS(6)=TRABUF(TXLAY)
	   MESS(7)=TRABUF(TXSTN)
	   MESS(8)=TRABUF(TXSAP)
C
	   CALL QUEMES(MESS)
C
	ENDIF
C
	RETURN
	END
