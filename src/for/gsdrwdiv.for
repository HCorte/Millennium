C
C     FILE   : GSDRWDIV.FOR
C     AUTHOR : J.H.R
C     VERSION: 01            DATE: 19 / 02 / 2001
C
C
C V01 JHR INITIAL RELEASE FOR PORTUGAL PROJECT
C
C GSALES DRAW DIVISION, THIS PROGRAM RUN GSALES LOADER FOR DRAW DIVISION
C ( GENERAL INFORMATION ABOUT DRAWS WINNING BY DIVISION: SHARES, AMOUNTS, ETC )
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rigth Reserved
C
C     **************************************************************************
C
C THIS PROGRAM RUNS GSALES LOADER FOR DRAWS DIVISION
C
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      PROGRAM GSDRWDIV
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO RUN GSALES LOADER FOR DRAWS DIVISION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
C
C  CONSTANT PARAMETERS TO RUN GSALES LOADER FOR DRAWS DIVISION
C
      INTEGER * 4 VERSION             ! DRAWS DIVISION FILE LOADER VERSION
C
C INITIATE CONSTANT PARAMETERS TO RUN GSALES LOADER FOR DRAWS DIVISION
C
      PARAMETER(VERSION = 1)          ! DRAWS DIVISION FILE LOADER VERSION
C
C VARIABLES DEFINITION TO RUN GSALES LOADER FOR DRAWS DIVISION
C
      INTEGER * 4 GNUM                ! GAME NUMBER
      INTEGER * 4 GIND                ! GAME INDEX
      INTEGER * 4 GTYP                ! GAME TYPE
      INTEGER * 4 DRAW                ! DRAW NUMBER
      INTEGER * 4 STRDRAW             ! START DRAW NUMBER FOR THIS LOADER
      INTEGER * 4 ENDDRAW             ! END DRAW NUMBER FOR THIS LOADER
      INTEGER * 4 FDB(7)              ! FILE DESCRIPTOR BLOCK
C
      CHARACTER * 25 FILENAME         ! FILE NAME
C
C INITIATE VARIABLES TO RUN GSALES LOADER FOR DRAWS DIVISION
C
      FILRECCNT = 0
C
C DISPLAY USER INFORMATION ( RUNNING GSALES DRAWS DIVISION LOADER )
C
      CALL COPYRITE
      TYPE *, IAM()
      TYPE *, IAM(), 'Running Gsales Draw Division Loader'
      TYPE *, IAM()
C
C GET GSALES DRAWS DIVISION FILE NAME YYYYMMDD_DROWDIV.FIL
C
      WRITE(FILENAME, 100) GET_YYYYMMDD_CDC(DAYCDC)
C
C IF DRAWS DIVISION FILE EXIST, DELETE IT
C
      CALL DELETE_FILE_NAME(FILENAME)
C
C GET FREE IDENTIFICATION FILE NUMBER
C
      IDFIL = GET_FREE_IDFIL(0)
C
C OPEN YYYYMMDD_DROWDIV.FIL ( ASCII FILE, ALTHOUGH IT'S EXTENSION IS '.FIL' )
C
      CALL OPEN_FILE_NAME(IDFIL, FILENAME)
C
C WRITE DRAWS DIVISION LOADER HEADER
C
      CALL GSHEADER(VERSION)
C
C LOOP TO GET ACTIVE GAMES AND WRITE INFORMATION IN FILE
C
      DO 1000 GNUM = 1, MAXGAM
C
C GET GAME TYPE AND GAME INDEX, IF IT'S NOT ACTIVE GAME, GO TO CHECK NEXT GAME
C
        GTYP = GNTTAB(GAMTYP, GNUM)
        GIND = GNTTAB(GAMIDX, GNUM)
        IF(GTYP .LT. 1 .OR. GTYP .GT. MAXTYP) GOTO 1000
        IF(GIND .LT. 1 .OR. GIND .GT. MAXIND) GOTO 1000
C
C GET START DRAW DATE AND END DRAW DATE
C
        CALL GET_GSDRWDIV_DRAW_DATES(GNUM, STRDRAW, ENDDRAW)
C
C GET FREE LUN FOR GAME DRAW FILE AND OPEN IT
C
        CALL OPEN_GAME_FILE(GNUM, FDB)
C
C LOOP TO SCAN ALL DRAWS NO PURGED IN ON LINE SYSTEM 
C
        DO DRAW = STRDRAW, ENDDRAW
C
C PRINT DRAW RESULT TRANSACTION FOR SELECTED GAME
C
          IF(GTYP .EQ. TKIK) CALL PRINT_JOKER_DRWDIV(GNUM, DRAW, FDB)
          IF(GTYP .EQ. TLTO) CALL PRINT_LOTTO_DRWDIV(GNUM, DRAW, FDB)
          IF(GTYP .EQ. TSPT) CALL PRINT_SPORTS_DRWDIV(GNUM, DRAW, FDB)
          IF(GTYP .EQ. TTGL) CALL PRINT_RESULTS_DRWDIV(GNUM, DRAW, FDB)
          IF(GTYP .EQ. TPAS) CALL PRINT_PASSIVE_DRWDIV(GNUM, DRAW, FDB)
C
C END OF LOOP TO SCAN ALL DRAWS NO PURGED IN ON LINE SYSTEM
C
        ENDDO
C
C CLOSE GAME DRAW FILE
C
        CALL CLOSEFIL(FDB)
C
C END OF LOOP TO GET ACTIVE GAMES AND WRITE INFORMATION IN FILE
C
1000  CONTINUE
C
C PRINT FOOTER AND CLOSE YYYYDDMM_DROWDIV.FIL FILE
C
      CALL GSFOOTER
      CALL USRCLOS1(IDFIL)
C
C DISPLAY MESSAGE TO USER
C
      TYPE *, IAM()
      TYPE *, IAM(), 'Generated Draw Division GSales File: ', FILENAME
      TYPE *, IAM()
C
C CREATE GSALES END FILE ( TO GSALES MEANS END OF PROCEDURE )
C
      WRITE(FILENAME, 200) GET_YYYYMMDD_CDC(DAYCDC)
      CALL CREATE_GSALES_END_FILE(FILENAME)
C
C GSALES DRAW DIVISION LOADER ENDS OK
C
      CALL GSTOP(GEXIT_SUCCESS)
C
C FORMATS DEFINITION TO RUN GSALES LOADER FOR DRAWS DIVISION
C
100   FORMAT('valx:', A8, '_drawdiv.fil')
200   FORMAT('valx:', A8, '_drawdiv.fin')
C
C THIS IS THE END TO RUN GSALES LOADER FOR DRAWS DIVISION
C
      END

C ******************************************************************************
C
C     SUBROUTINE: GET_GSDRWDIV_DRAW_DATES
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 06 / 03 / 2001
C
C ******************************************************************************
C
C FUNCTION TO GET START AND END DRAW NUMBERS FOR GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE GET_GSDRWDIV_DRAW_DATES(GNUM, STRDRAW, ENDDRAW)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO GET START AND END DRAW NUMBERS FOR GSALES LOADER
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:RECDAF.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO GET START AND END DRAW NUMBERS FOR GSALES LOADER
C
      INTEGER * 4 GNUM             ! GAME NUMBER
      INTEGER * 4 STRDRAW          ! START DRAW NUMBER FOR THIS LOADER
      INTEGER * 4 ENDDRAW          ! END DRAW NUMBER FOR THIS LOADER
C
C VARIABLES DEFINITION TO GET START AND END DRAW NUMBERS FOR GSALES LOADER
C
      INTEGER * 4 FSTS             ! FUNCTION STATUS
      INTEGER * 4 DAFIDFIL         ! DAF IDENTIFICATION FILE
      INTEGER * 4 FDB(7)           ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 PURCDC           ! PURGED CDC DATE 
C
C GET PURGE CDC DAY TO READ DAF FILE 
C
      PURCDC = DAYCDC - PRGDAY(GNUM)
      IF(PURCDC .LT. 1) PURCDC = 1
C
C OPEN DAF FILE TO GET PURGED DRAW NUMBERS
C
      DAFIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(DAFIDFIL, DAFFIL, DAF)
      CALL IOINIT(FDB, DAFIDFIL, DAFSEC * 256)
C
C READ DAILY ACTIVITY FILE REGISTER ( DAF )
C
      CALL READW(FDB, PURCDC, DAFREC, FSTS)
      IF(FSTS .NE. 0) THEN
        TYPE *, IAM()
        TYPE 100, IAM(), PURCDC
        TYPE *, IAM()
        CALL GPAUSE
      ENDIF
C
C SET START DRAW DATE ( SEND 1 LESS FOR SEGURITY )
C
      STRDRAW = DAFHDR(GNUM) - 1
      IF(STRDRAW .LT. 1) STRDRAW = 1
C
C SET END DRAW DATE
C
      ENDDRAW = GSALES_AUTO(GNUM)
      IF(ENDDRAW .LE. 0) ENDDRAW = DAYDRW(GNUM) - 1
      IF(DAYDRW(GNUM) .NE. 1) THEN
        IF(ENDDRAW .LE. 0 .AND. DAYHDR(GNUM) .GT. 0) ENDDRAW = DAYHDR(GNUM)
      ENDIF
C
C CLOSE DAF FILE
C
      CALL CLOSEFIL(FDB)
C
C FORMATS DEFINITION TO GET START AND END DRAW NUMBERS FOR GSALES LOADER
C
100   FORMAT('Error Reading Daily Activity File For Cdc: ', I6.6)
C
C THIS IS THE END TO GET START AND END DRAW NUMBERS FOR GSALES LOADER
C
      END


C ******************************************************************************
C
C     SUBROUTINE: HEADER_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 20 / 02 / 2001
C
C GAMROL PARAMETER POR PASSIVE GAMES IT'S USED TO INDICATE TOTAL WINNNING
C DIVISION AMOUNT, AND THIS VALUE IT'S CALCULATED OUTSIDE THIS FUNCTION.
C 
C ******************************************************************************
C
C FUNCTION TO PRINT HEADER FOR GENERAL DRAW DIVISION GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE HEADER_DRWDIV(DRAW, GNUM, DIV, DIVNAM, GAMSHR, GAMSHV, GAMROL)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT HEADER FOR GENERAL DRAW DIVISION
C
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT HEADER FOR GENERAL DRAW DIVISION
C
      INTEGER * 4 DRAW              ! DRAW NUMBER
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DIV               ! DIVISION NUMBER
      INTEGER * 4 GAMSHR(*)         ! GAME SHARES
      INTEGER * 4 GAMSHV(*)         ! GAME VALUES
      INTEGER * 4 GAMROL(*)         ! GAME ROLLOVER
C
      CHARACTER * 20 DIVNAM         ! DIVISION NAME
C
C VARIABLES DEFINITION TO PRINT HEADER FOR GENERAL DRAW DIVISION
C
      INTEGER * 4 TRNGTYPE          ! TRANSACTION GAME TYPE
      INTEGER * 4 TOTDIVAMT         ! TOTAL DIVISION AMOUNT
C
C SET TRANSACTION GAME TYPE ( 1: PASSIVE, 2: ON LINE )
C
      TRNGTYPE = 2
      IF(GNTTAB(GAMTYP, GNUM) .EQ. TPAS) TRNGTYPE = 1
C
C SET TOTAL DIVISION AMOUNT
C
      TOTDIVAMT = GAMSHR(DIV) * GAMSHV(DIV)
C
C FOR PASSIVE GAMES GAMROL PARAMETER IS USED TO INDICATE TOTAL DIVISION 
C AMOUNT, AND IT'S CALCULATED OUTSIDE THIS FUNCTION.
C
      IF(TRNGTYPE .EQ. 1) THEN
        TOTDIVAMT = GAMROL(DIV)
        GAMROL(DIV) = 0
      ENDIF
C
C WRITE INFORMATION TO FILE REGISTER
C
      WRITE(FILREC, 100)
     *
     *              TRNGTYPE,                  ! GAME TYPE
     *              GNUM,                      ! GAME NUMBER
     *              DRAW,                      ! DRAW NUMBER
     *              DIV,                       ! DIVISION NUMBER
     *              DIVNAM,                    ! DIVISION NAME
     *              PRNT_AMT(TOTDIVAMT, 2),    ! DIVISION AMOUNT
     *              PRNT_AMT(GAMROL(DIV), 2),  ! ROLLOVER AMOUNT
     *              '            ',            ! ROUND AMOUNT
     *              PRNT_AMT(GAMSHV(DIV), 2),  ! PRIZE AMOUNT ( SHARE VALUES )
     *              GAMSHR(DIV)                ! WINNING TICKET COUNT ( SHARES )
C
      FILRECLNG = 1 + 2 + 6 + 2 + 20 + 12 + 12 + 12 + 12 + 6
C
C FORMATS DEFINITION TO PRINT HEADER FOR GENERAL DRAW DIVISION
C
100   FORMAT(I1.1, I2.2, I6.6, I2.2, A20, 4(A12), I6.6)
C
C THIS IS THE END TO PRINT HEADER FOR GENERAL DRAW DIVISION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_LOTTO_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 20 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT LOTTO DRAW DIVISION GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_LOTTO_DRWDIV(GNUM, DRAW, FDB)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT LOTTO DRAW DIVISION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DLTREC.DEF'
C
C PARAMETERS DEFINITION TO PRINT LOTTO DRAW DIVISION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DRAW              ! DRAW NUMBER
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
C
C VARIABLES DEFINITION TO PRINT LOTTO DRAW DIVISION
C
      INTEGER * 4 DIV               ! DIVISION COUNTER
      INTEGER * 4 SHARE(LTGDIV)     ! SHARE VALUES ( COUNT )
      INTEGER * 4 VALUE(LTGDIV)     ! SHARE VALUES ( AMOUNT )
      INTEGER * 4 SHRPAID(LTGDIV)   ! SHARE PAID ( COUNT )
C
      CHARACTER * 20 DIVNAM         ! DIVISION NAME
C
C READ DRAW INFORMATION FROM LOTTO GAME FILE
C
      CALL READ_DRAW_FILE(DRAW, GNUM, FDB, DLTREC)
C
C IF GAME IS NOT CLOSE DON'T SEND DIVISION INFORMATION
C
      IF(DLTSTS .LT. GFINAL) RETURN
C
C LOOP TO PRINT LOTO DRAW INFORMATION BY DIVISION
C
      DO DIV = 1, DLTDIV
        WRITE(DIVNAM, 100) DIV, DLTDIV
        SHARE(DIV) = DLTSHR(DIV, 1)
        VALUE(DIV) = DLTSHV(DIV, 1)
        SHRPAID(DIV) = DLTPAD(DIV, 1)
        CALL HEADER_DRWDIV(DRAW, GNUM, DIV, DIVNAM, SHARE, VALUE, DLTPOL)
        CALL PRINT_DRWDIV(TLTO, DIV, SHRPAID, SHARE)
      ENDDO
C
C FORMATS DEFINITION TO PRINT LOTTO DRAW DIVISION
C
100   FORMAT('Lotto Div: ', I2.2, '/', I2.2, 4(' '))
C
C THIS IS THE END TO PRINT LOTTO DRAW DIVISION
C
       END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_SPORTS_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 20 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT SPORTS DRAW DIVISION GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_SPORTS_DRWDIV(GNUM, DRAW, FDB)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT SPORTS DRAW DIVISION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
C
C PARAMETERS DEFINITION TO PRINT SPORTS DRAW DIVISION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DRAW              ! DRAW NUMBER
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
C
C VARIABLES DEFINITION TO PRINT SPORTS DRAW DIVISION
C
      INTEGER * 4 DIV               ! DIVISION COUNTER
C
      CHARACTER * 20 DIVNAM         ! DIVISION NAME
C
C READ DRAW INFORMATION FROM SPORTS GAME FILE
C
      CALL READ_DRAW_FILE(DRAW, GNUM, FDB, DSPREC)
C
C IF GAME IS NOT CLOSE DON'T SEND DIVISION INFORMATION
C
      IF(DSPSTS .LT. GFINAL) RETURN
C
C LOOP TO PRINT SPORTS DRAW INFORMATION BY DIVISION
C
      DO DIV = 1, DSPDIV
        WRITE(DIVNAM, 100) DIV, DSPDIV
        CALL HEADER_DRWDIV(DRAW, GNUM, DIV, DIVNAM, DSPSHR, DSPSHV, DSPPOL)
        CALL PRINT_DRWDIV(TSPT, DIV, DSPPAD, DSPOSH)
      ENDDO
C
C FORMATS DEFINITION TO PRINT SPORTS DRAW DIVISION
C
100   FORMAT('Sports Div: ', I2.2, '/', I2.2, 3(' '))
C
C THIS IS THE END TO PRINT SPORTS DRAW DIVISION
C
       END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_RESULTS_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 20 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT RESULTS DRAW DIVISION GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_RESULTS_DRWDIV(GNUM, DRAW, FDB)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT RESULTS DRAW DIVISION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DTGREC.DEF'
C
C PARAMETERS DEFINITION TO PRINT RESULTS DRAW DIVISION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DRAW              ! DRAW NUMBER
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
C
C VARIABLES DEFINITION TO PRINT RESULTS DRAW DIVISION
C
      INTEGER * 4 DIV               ! DIVISION COUNTER
C
      CHARACTER * 20 DIVNAM         ! DIVISION NAME
C
C READ DRAW INFORMATION FROM RESULTS GAME FILE
C
      CALL READ_DRAW_FILE(DRAW, GNUM, FDB, DTGREC)
C
C IF GAME IS NOT CLOSE DON'T SEND DIVISION INFORMATION
C
      IF(DTGSTS .LT. GFINAL) RETURN
C
C LOOP TO PRINT RESULTS DRAW INFORMATION BY DIVISION
C
      DO DIV = 1, DTGDIV
        WRITE(DIVNAM, 100) DIV, DTGDIV
        CALL HEADER_DRWDIV(DRAW, GNUM, DIV, DIVNAM, DTGSHR, DTGSHV, DTGPOL)
        CALL PRINT_DRWDIV(TTGL, DIV, DTGPAD, DTGOSH)
      ENDDO
C
C FORMATS DEFINITION TO PRINT RESULTS DRAW DIVISION
C
100   FORMAT('Results Div: ', I2.2, '/', I2.2, 2(' '))
C
C THIS IS THE END TO PRINT RESULTS DRAW DIVISION
C
       END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_PASSIVE_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 20 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT PASSIVE DRAW DIVISION GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_PASSIVE_DRWDIV(GNUM, DRAW, FDB)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT PASSIVE DRAW DIVISION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DPAREC.DEF'
C
C PARAMETERS DEFINITION TO PRINT PASSIVE DRAW DIVISION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DRAW              ! DRAW NUMBER
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
C
C VARIABLES DEFINITION TO PRINT PASSIVE DRAW DIVISION
C
      INTEGER * 4 DIV               ! DIVISION COUNTER
      INTEGER * 4 DPAPOL(PAGDIV)    ! ROLLOVER AMOUNT FOR PASSIVE
      INTEGER * 4 GAMSHV(PAGDIV)    ! GAME SHARE VALUE IN INTEGER * 4
      INTEGER * 4 GAMSHR(PAGDIV)    ! GAME NUMBER OF SHARES
      INTEGER * 4 GAMPAID(PAGDIV)   ! GAME PAID
      INTEGER * 4 GIND              ! GAME INDEX
      INTEGER * 4 TMPSHV            ! TEMPORAL SHARE VALUE
      INTEGER * 4 TMPEXSHV          ! TEMPORAL EXTRA SHARE VALUE
      INTEGER * 4 TOTNUMSER         ! TOTAL NUBER OF SERIE EMISSIONS
C
      CHARACTER * 20 DIVNAM         ! DIVISION NAME
C
      LOGICAL DIVEXTRA              ! DIVISION EXTRA FLAG
C
C FUNCTIONS DEFINITION TO PRINT PASSIVE DRAW DIVISION
C
      INTEGER * 4 PAS_ROUND_VALUE   ! PASSIVE ROUND VALUE
C
C READ DRAW INFORMATION FROM PASSIVE GAME FILE
C
      CALL READ_DRAW_FILE(DRAW, GNUM, FDB, DPAREC)
C
C IF GAME IS NOT CLOSE DON'T SEND DIVISION INFORMATION
C
      IF(DPASTS .LT. GFINAL) RETURN
C
C SET IF WE HAVE TO DISPLAY NORMAL OR EXTRAORDINARY DIVISION.
C
      DIVEXTRA = .FALSE.
      GIND = GNTTAB(GAMIDX, GNUM)
      IF(GIND .EQ. PSBPOP .OR. DPAEMT .EQ. EM_EXT) DIVEXTRA = .TRUE.
C
C LOOP TO PRINT LOTO DRAW INFORMATION BY DIVISION
C
      DO DIV = 1, DPADIV
        TOTNUMSER = DPANUMSER
        TMPSHV = PAS_ROUND_VALUE(DPASHV(DIV))
        TMPEXSHV = 0
        IF(DIV .LE. PAGEDV) TMPEXSHV = PAS_ROUND_VALUE(DPAEXSHV(DIV))
        WRITE(DIVNAM, 100) DIV, DPADIV
C
	IF(DIVEXTRA .AND. DIV .LE. PAGEDV .AND. TMPEXSHV .NE. 0) THEN
          TOTNUMSER = TOTNUMSER - 1
        ENDIF
C
        GAMSHV(DIV) = TMPSHV
        GAMPAID(DIV) = DPAPAD(DIV)
        GAMSHR(DIV) = DPASHR(DIV) * DPANOFFRA * TOTNUMSER 
        DPAPOL(DIV) = DPASHR(DIV) * TMPSHV * TOTNUMSER
C
	IF(DIVEXTRA .AND. DIV .LE. PAGEDV .AND. TMPEXSHV .NE. 0) THEN
          GAMSHV(DIV) = GAMSHV(DIV) + TMPEXSHV
          GAMPAID(DIV) = GAMPAID(DIV) + DPAEXPAD(DIV)
          GAMSHR(DIV) = GAMSHR(DIV) + DPAEXPAD(DIV) * DPANOFFRA * 1
          DPAPOL(DIV) = DPAPOL(DIV) + DPAEXSHR(DIV) * TMPEXSHV * 1 
        ENDIF
C
        CALL HEADER_DRWDIV(DRAW, GNUM, DIV, DIVNAM, GAMSHR, GAMSHV, DPAPOL)
        CALL PRINT_DRWDIV(TPAS, DIV, GAMPAID, GAMSHV)
      ENDDO
C
C FORMATS DEFINITION TO PRINT PASSIVE DRAW DIVISION
C
100   FORMAT('Passive Div: ', I2.2, '/', I2.2, 2(' '))
C
C THIS IS THE END TO PRINT PASSIVE DRAW DIVISION
C
       END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_JOKER_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 26 / 03 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT JOKER DRAW DIVISION GSALES LOADER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_JOKER_DRWDIV(GNUM, DRAW, FDB)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT JOKER DRAW DIVISION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DKKREC.DEF'
C
C PARAMETERS DEFINITION TO PRINT JOKER DRAW DIVISION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DRAW              ! DRAW NUMBER
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
C
C VARIABLES DEFINITION TO PRINT JOKER DRAW DIVISION
C
      INTEGER * 4 DIV               ! DIVISION NUMBER
C
      CHARACTER * 20 DIVNAM         ! DIVISION NAME
C
C READ DRAW INFORMATION FROM JOKER GAME FILE
C
      CALL READ_DRAW_FILE(DRAW, GNUM, FDB, DKKREC)
C
C IF GAME IS NOT CLOSE DON'T SEND DIVISION INFORMATION
C
      IF(DKKSTS .LT. GFINAL) RETURN
C
C LOOP TO PRINT JOKER DRAW INFORMATION BY DIVISION
C
      DO DIV = 1, DKKDIV
        WRITE(DIVNAM, 100) DIV, DKKDIV
        CALL HEADER_DRWDIV(DRAW, GNUM, DIV, DIVNAM, DKKSHR, DKKSHV, DKKPOL)
        CALL PRINT_DRWDIV(TKIK, DIV, DKKPAD, DKKSHV)
      ENDDO
C
C FORMATS DEFINITION TO PRINT JOKER DRAW DIVISION
C
100   FORMAT('Joker Div: ', I2.2, '/', I2.2, 4(' '))
C
C THIS IS THE END TO PRINT JOKER DRAW DIVISION
C
       END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_DRWDIV
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 26 / 03 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT GENERAL DRAW DIVISION
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_DRWDIV(GTYP, DIV, GAMPAID, GAMOFSHR)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT GENERAL DRAW DIVISION
C
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
C
C PARAMETERS DEFINITION TO PRINT GENERAL DRAW DIVISION
C
      INTEGER * 4 GTYP              ! GAME TYPE
      INTEGER * 4 DIV               ! DIVISION NUMBER
      INTEGER * 4 GAMPAID(*)        ! GAME PAID
      INTEGER * 4 GAMOFSHR(*)       ! GAME OFF LINE SHARES 
C
C VARIABLES DEFINITION TO PRINT GENERAL DRAW DIVISION
C
      INTEGER * 4 POS               ! POSITION TO WRITE IN FILE REGISTER
C
      CHARACTER * 6 WINOFFTICK      ! WINNING OFF LINE TICKET COUNT
C
C WRITE WINNING OFF LINE TICKET COUNT FOR SPORTS AND RESULTS GAMES
C
      WINOFFTICK = '      '
      IF(GTYP .EQ. TSPT .OR. GTYP .EQ. TTGL) THEN
        WRITE(WINOFFTICK, 100) GAMOFSHR(DIV)
      ENDIF
C
C CALCULATE INITIAL POSITION IN THE REGISTER TO WRITE
C
      POS = FILRECLNG + 1
C
C WRITE INFORMATION IN THE REGISTER
C
      WRITE(FILREC(POS:POS + 18), 200)
     *
     *             GAMPAID(DIV),            ! PAID TICKET COUNT
     *             WINOFFTICK,              ! WINNING OFF LINE TICKET COUNT
     *             '      '                 ! PAID OFF LINE TICKET COUNT
C
      FILRECLNG = FILRECLNG + 6 + 6 + 6
C
C WRITE INFORMATION TO GSALES LOADER AND ADD ONE TO FILE REGISTER COUNTER
C
      WRITE(IDFIL, 300) FILREC(1:FILRECLNG)
      FILRECCNT = FILRECCNT + 1
C
C FORMATS DEFINITION TO PRINT GENERAL DRAW DIVISION
C
100   FORMAT(I6.6)
200   FORMAT(I6.6, A6, A6)
300   FORMAT(A)
C
C THIS IS THE END TO PRINT GENERAL DRAW DIVISION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: OPEN_GAME_FILE
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 31 / 05 / 2001
C
C ******************************************************************************
C
C FUNCTION GET IDENTIFICATION FILE AND OPEN GAME FILE
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE OPEN_GAME_FILE(GNUM, FDB)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO OPEN GAME FILE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:DLTREC.DEF'
      INCLUDE 'INCLIB:DKKREC.DEF'
      INCLUDE 'INCLIB:DPAREC.DEF'
      INCLUDE 'INCLIB:DTGREC.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
C
C PARAMETERS DEFINITION TO OPEN GAME FILE
C
      INTEGER * 4 GNUM                ! GAME NUMBER
      INTEGER * 4 FDB(7)              ! FILE DESCRIPTOR BLOCK
C 
C VARIABLES DEFINITION TO OPEN GAME FILE
C
      INTEGER * 4 GTYP                 ! GAME TYPE
      INTEGER * 4 GAMIDFIL             ! GAME IDENTIFICATION FILE
C
C GET FREE LUN FOR GAME FILE AND OPEN IT  
C
      GAMIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(GAMIDFIL, GAMFIL, GNUM)
C
C GET GAME TYPE
C
      GTYP = GNTTAB(GAMTYP, GNUM)
C
C INITIATE FILE DESCRIPTOR BLOCK ACORDING WITH GAME TYPE
C
      IF(GTYP .EQ. TKIK) CALL IOINIT(FDB, GAMIDFIL, DKKSEC * 256)
      IF(GTYP .EQ. TLTO) CALL IOINIT(FDB, GAMIDFIL, DLTSEC * 256)
      IF(GTYP .EQ. TSPT) CALL IOINIT(FDB, GAMIDFIL, DSPSEC * 256)
      IF(GTYP .EQ. TTGL) CALL IOINIT(FDB, GAMIDFIL, DTGSEC * 256)
      IF(GTYP .EQ. TPAS) CALL IOINIT(FDB, GAMIDFIL, DPASEC * 256)
C
C THIS IS THE END TO OPEN GAME FILE
C
      END

