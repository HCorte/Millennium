C
C SUBROUTINE PC_START_TIME
C $Log:   GXAFXT:[GOLS]PC_START_TIME.FOV  $
C  
C     Rev 1.0   17 Apr 1996 14:23:02   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 17:16:44   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - pc_start_trap.for **
C
C
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE PC_START_TIME(PARAM)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:PCCOM.DEF'
	INCLUDE 'INCLIB:PCEVN.DEF'
C
	INCLUDE '($IODEF)'
        INCLUDE '($SSDEF)'
        INCLUDE '($SYSSRVNAM)'
C
C
	INTEGER*4 STATUS
	INTEGER*4 PARAM
C
	INTEGER*4 DELAY(2)
	INTEGER*4 INIT/-1/
	CHARACTER   CURTIM*30		!ASC TIME
C
	EXTERNAL PC_TIMTRAP
C
	IF(IABS(PARAM).LT.1 .OR. IABS(PARAM).GT.NUMMES) THEN
	  TYPE *,'INVALID PC_START_TIME   MESSAGE # ',PARAM
	  RETURN
	ENDIF
C
C PROCESS AS REGULAR TIMER TRAP
C
	IF(PARAM.GT.0) THEN
C
C CALCULATE TIME OFFSET FOR TIMER TRAP. THIS SHOULD BE DONE ONLY IF
C TIMER VALUE HAS CHANGED OR THE FIRST TIME THROUGH
C
	  IF(PC_INIT(PARAM).EQ.-1) THEN
            WRITE(CURTIM,9000) INTVAL(PARAM)/1000,
     *	                       MOD(INTVAL(PARAM),1000)
9000        FORMAT('0000 00:00:',I2.2,'.',I3.3)
            STATUS=SYS$BINTIM(CURTIM,PC_DELAY(1,PARAM))
            IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
	    PC_INIT(PARAM)=0
	  ENDIF
C
C ENABLE TIMER TRAP
C
          STATUS=SYS$SETIMR(,PC_DELAY(1,PARAM),
     *			     PC_TIMTRAP,PC_PARAM(PARAM),0)
          IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
C
C IF PARAMETER IS NEGATIVE, CALL SHORT TIMER DELAY
C
	ELSE
C
C SET UP THE SHORT DELAY ONCE
C
	  IF(INIT.EQ.-1) THEN
            WRITE(CURTIM,9000) TIMSHORT/1000,MOD(TIMSHORT,1000)
            STATUS=SYS$BINTIM(CURTIM,DELAY)
            IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
	    INIT=0
	  ENDIF
C
C ENABLE TIMER TRAP
C
          STATUS=SYS$SETIMR(,DELAY,PC_TIMTRAP,PC_PARAM(IABS(PARAM)),0)
          IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
	ENDIF
C
	RETURN
	END
