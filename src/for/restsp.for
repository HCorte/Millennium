C SUBROUTINE RESTSP
C  
C     Rev 1.0   17 Apr 1996 14:44:22   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C     Rev 1.6   16 Jan 1996 14:40:22   RXK
C  RFSS 95190. Multiplier 6 for TSPPOL introduced
C     Rev 1.5   16 Mar 1994  8:26:08   HXK
C  FIXED INCORRECT FASTSETS.
C     Rev 1.4   03 Mar 1994 15:21:24   JXP
C  Clear out hash suppression pools at beginning of sales
C     Rev 1.2   25 Feb 1994 19:10:24   HXK
C  PITKA LIABILITY LIMITATIONS CHANGE.
C     Rev 1.1   13 Jan 1994 14:32:44   JXP
C  Clear TSPWTL - win liability table.
C     Rev 1.0   21 Jan 1993 17:30:44   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C V01 29-JUN-92 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C V01 01-AUG-90 XXX  RELEASED FOR VAX
C
C SUBROUTINE TO RESTORE TOTO SELECT POOLS DURING RUNSYS POOL FILE
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE RESTSP(GAMN)
	IMPLICIT NONE
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:HASHMEM.DEF'
	INCLUDE 'INCLIB:RECTPF.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:TSLCOM.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
C
	INTEGER*2    DATE(LDATE_LEN)
	INTEGER*4    ROWNRS(6),TAB1X2(6),FDB(7)
	INTEGER*4    INDEX,GIND,DRAW,BEGSAL,ST,ROW,COL,SEC
	INTEGER*4    OFFSET,NUMROW,GAMN,I,K,LENGTH
	INTEGER*4    OUT
	LOGICAL      OUT_COMB/.TRUE./
C
C DECLARE FLAGS AND DEFINE TABLES
C
	INDEX=1
C
C GET GAME INDEX AND DRAW NUMBER AND BEGINNING SALES DAY
C
	GIND=GNTTAB(GAMIDX,GAMN)
	DRAW=DAYDRW(GAMN)
	BEGSAL=TSLBSD(GIND)
C
C CLEAR THE DAILY POOLS
C
	CALL FASTSET(0,TSPATL,ATSNPA*ATSTOP*NUMAGT*NUMTSL)
	CALL FASTSET(0,TSPWTL,ATSNPA*ATSTOP*NUMAGT*NUMTSL)
	CALL FASTSET(0,HASH_AGT,HASHLEN_AGT)
C
C CHECK IF THIS IS FIRST DAY OF THE DRAW
C IF THE FIRST DAY, CREATE A POOL FILE AND CLEAR IT
C ELSE READ FROM POOL FILE AND STUFF MEMORY
C
	IF(DAYCDC.EQ.BEGSAL) THEN
	   CALL CRTFIL(TSLPFN(1,GIND),TPFSEC,ST)
	   IF(ST.NE.0) THEN
	      WRITE(5,900) TSLPFN(1,GIND),ST
	      PAUSE
	   ENDIF
C
	   TSPCDC(GIND)=0
	   TSPDRW(GIND)=DRAW
	   TSPBEG(GIND)=TSLBSD(GIND)
	   TSPEND(GIND)=TSLESD(GIND)
C
	   DO 110 ROW=1,TSLRWS(GIND)
	      DO 100 COL=1,3
	         TSPPOL(TRACNT,ROW,COL,GIND)=0
	         TSPPOL(DOLAMT,ROW,COL,GIND)=0
	         TSPLOK(ROW,COL,GIND)=0
100	      CONTINUE
110	   CONTINUE
C
C CLEAR LIABILITY POOLS FOR COMBINATIONS OF 3
C
	   CALL FASTSET(0,HASH_DIR,HASH_NUM_COMB3)
C
C CLEAR LIABILITY POOLS FOR COMBINATIONS OF 4,5,&6
C
	   CALL FASTSET(0,HASH_TAB,HASHLEN)
C
C CLEAR LIABILITY SUPPRERSSION POOLS FOR COMBINATIONS OF 3
C
	   CALL FASTSET(0,HASH_DIR_SUP,HASH_NUM_COMB3*2)
C
C CLEAR LIABILITY SUPPRERSSION POOLS FOR COMBINATIONS OF 4,5,&6
C
	   CALL FASTSET(0,HASH_TAB_SUP,2*HASH_RECORDS*HASH_NUM_BLOCKS)
C
C CLEAR ROW / MARK SUPPRESSION
C
	   CALL FASTSET(0,HASH_ROW_SUP,40*3)
C
C CLEAR 2 ROW COMBINATION SUPPRESSION 
C
	   CALL FASTSET(0,HASH_COMB_SUP,40*40)
C
	ELSE
C
	   CALL OPENQW(1,TSLPFN(1,GIND),4,0,0,ST)
	   CALL IOQINIT(FDB,1,TPFBUF*256)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),1,ST,0)
	      CALL GPAUSE
	   ENDIF
C
	   SEC = 1
	   CALL READQIO(FDB,SEC,TPFREC,TPFLEN*4,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF
C
C MAKE SURE WE HAVE THE CORRECT POOL FILE ON DISK
C
	   IF(DAYCDC.NE.TPFCDC+1) THEN
	      DATE(VCDC)=TPFCDC
	      CALL LCDATE(DATE)
	      WRITE(5,901) (DATE(K),K=7,13)
	      CALL GPAUSE
	   ENDIF
C
	   TSPCDC(GIND)=TPFCDC
	   TSPDRW(GIND)=TPFDRW
	   TSPBEG(GIND)=TPFBEG
	   TSPEND(GIND)=TPFEND
C
	   DO 200 ROW=1,TSLRWS(GIND)
	      DO 190 COL=1,3
	         TSPPOL(TRACNT,ROW,COL,GIND)=TPFPOL(INDEX)
	         TSPPOL(DOLAMT,ROW,COL,GIND)=6*TPFPOL(INDEX+1)
	         TSPLOK(ROW,COL,GIND)=TPFPOL(INDEX+2)
	         INDEX=INDEX+3
190	      CONTINUE
200	   CONTINUE
C
C READ DIRECT ACCESS POOLS FOR COMBINATIONS OF 3
C
	   SEC = SEC + (TPFBUF*256/SECSIZE) + 1
	   LENGTH = HASH_NUM_COMB3 * 4
	   CALL READQIO(FDB,SEC,HASH_DIR,LENGTH,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF
C
C READ HASH POOL FOR COMBINATIONS OF 4,5 & 6
C
	   SEC = SEC + (LENGTH/SECSIZE) + 1
	   LENGTH = HASHLEN * 4
	   CALL READQIO(FDB,SEC,HASH_TAB,LENGTH,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF
C
C CLEAN OUT "OLD" COMBINATIONS ON TOP 30 LIST
C
	   TYPE*,IAM(),'Cleaning out old combinations on Toto Select Top 30'
	   OUT = 0
	   DO 300 ROW=1,30
	      OFFSET=TSLTOP(1,ROW,GIND)
	      NUMROW=IAND(TSLTOP(2,ROW,GIND),15)
	      IF (OFFSET.NE.0.AND.NUMROW.GE.1.AND.NUMROW.LE.6) THEN
	         CALL OFFODDS(OFFSET,NUMROW,ROWNRS,TAB1X2)
	         DO 310 I=1,NUMROW
		    IF(ROWNRS(I).LT.1.OR.ROWNRS(I).GT.MAXSRW.OR.
     *		       TSLSTA(ROWNRS(I),GIND).NE.GAMOPN) THEN
	               TSLTOP(1,ROW,GIND)=0
	               TSLTOP(2,ROW,GIND)=0
		       OUT = OUT + 1
 		       GOTO 300
	            ENDIF
310	         CONTINUE
	      ELSE
	         TSLTOP(1,ROW,GIND)=0  ! this should never be
	         TSLTOP(2,ROW,GIND)=0  ! executed if everything works
	      ENDIF
300	   CONTINUE

C
C READ DIRECT ACCESS POOLS FOR COMBINATIONS OF 3 SUPPRESSIONS
C
	   SEC = SEC + (LENGTH/SECSIZE) + 1
	   LENGTH = HASH_NUM_COMB3 * 2 * 4
	   CALL READQIO(FDB,SEC,HASH_DIR_SUP,LENGTH,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF
C
C READ HASH POOL FOR COMBINATIONS OF 4,5 & 6
C
	   SEC = SEC + (LENGTH/SECSIZE) + 1
	   LENGTH = HASHLEN * 4
	   CALL READQIO(FDB,SEC,HASH_TAB_SUP,LENGTH,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF

C
C READ DIRECT ACCESS POOLS FOR ROW / MARK SUPPRESSIONS
C
	   SEC = SEC + (LENGTH/SECSIZE) + 1
	   LENGTH = MAXSRW * 3 * 4
	   CALL READQIO(FDB,SEC,HASH_ROW_SUP,LENGTH,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF
C
C READ HASH POOL FOR ROW SUPPRESSIONS
C
	   SEC = SEC + (LENGTH/SECSIZE) + 1
	   LENGTH = MAXSRW * MAXSRW * 4
	   CALL READQIO(FDB,SEC,HASH_COMB_SUP,LENGTH,ST)
	   IF(ST.NE.0) THEN
	      CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	      CALL GPAUSE
	   ENDIF

C
C CLEAN OUT "OLD" COMBINATIONS ON TOP WIN 100 LIST
C
	   TYPE*,IAM(),'Cleaning out old combinations on Win Top 100'
	   OUT = 0
	   DO ROW=1,100 
	      OFFSET=TSLWTOP(1,ROW,GIND)
	      NUMROW=IAND(TSLWTOP(2,ROW,GIND),15)
	      IF (OFFSET.NE.0.AND.NUMROW.GE.1.AND.NUMROW.LE.6) THEN
	         CALL OFFODDS(OFFSET,NUMROW,ROWNRS,TAB1X2)
		 OUT_COMB=.TRUE.
	         DO I=1,NUMROW
		    IF(ROWNRS(I).GE.1.AND.ROWNRS(I).LE.MAXSRW.AND.
     *		       TSLSTA(ROWNRS(I),GIND).EQ.GAMOPN) OUT_COMB=.FALSE.
	         END DO
	         IF(OUT_COMB) THEN
		     TSLWTOP(1,ROW,GIND)=0
		     TSLWTOP(2,ROW,GIND)=0
		     OUT = OUT + 1
		 ENDIF
	      ELSE
	         TSLWTOP(1,ROW,GIND)=0  ! this should never be
	         TSLWTOP(2,ROW,GIND)=0  ! executed if everything works
	      ENDIF
	    END DO
C
	TYPE*,IAM(),OUT,' Combination(s) Taken Out From Toto Select Top 30'
C
	ENDIF
C
C POOLS ARE LOADED RETURN TO RESET
C
	CALL CLOSEQFIL(FDB)
	RETURN
C
900	FORMAT(1X,5A4,' Allocation error - ',Z8)
901	FORMAT(1X,'Toto Select pool file last updated on ',7A2)
	END
