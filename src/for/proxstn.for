C
C SUBROUTINE PROXSTN
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]PROXSTN.FOV                                  $
C  $Date::   17 Apr 1996 14:32:54                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - x2exe.for;1 **
C
C
C ========================================================
C PROXSTN.FTN
C
C V02  9-MAR-94 JWE Add broadcat server code BCST
C V01 24-OCT-89 MBK-MRM ORIGINAL RELEASE
C
C ENCODE STN LAYER MESSAGE TO GO OUT
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE PROXSTN(TRABUF,MESSAGE,ORIGINAL,RESPOND,
     *	                   LENGTH,BUF)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:X2STMES.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
C
	INTEGER*4   STN, BUF
	INTEGER*4   MESSAGE(*)
	INTEGER*4   ORIGINAL(*)
	INTEGER*2   LENGTH
	LOGICAL     RESPOND
C
	RESPOND=.FALSE.
C
C SET THE COUNTERS AND FLAGS
C
	STN=TRABUF(TXSTN)
	IF(STN.GE.1.AND.STN.LE.X2X_STATIONS)THEN
	   X2XS_ALARM_INDEX(STN)=TRABUF(TXIDX)
	   X2XS_ALARM_TIME(STN)=TRABUF(TTIM)
	   X2XS_ALARM_STATION=STN
	   X2XS_ALARM_TOTAL=X2XS_ALARM_TOTAL+1
	ENDIF
C
C PROCESS FIRST THOSE THAT YOU WOULDN'T KNOW HOW TO PROCESS.
C ONLY X2XMGR KNOWS THAT YOU HAVE TO DO SOMETHING DIFFERENT.
C
	IF(TRABUF(TXPTL).EQ.X2ERR_BADTRM) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_BADSTN) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_STTN_PROTOCOL) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_STTN_INV_CMD) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_STTN_INV_TYPE) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_STNLEN) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_RELAY) THEN
C
	      CALL X2STRIP(BUF,TRABUF(TXLAY),LENGTH)
	      HPRO(TRCODE,BUF)=TYPX2X_RELAY
C
C***  ELSEIF(TRABUF(TXPTL).EQ.X2ERR_CONFREQ) THEN ;STANDARD PROCESSING
C
C***  ELSEIF(TRABUF(TXPTL).EQ.X2ERR_STATREP) THEN ;STANDARD PROCESSING
C
C***  ELSEIF(TRABUF(TXPTL).EQ.X2ERR_PORTREQ) THEN ;STANDARD PROCESSING
C
C***  ELSEIF(TRABUF(TXPTL).EQ.X2ERR_VALREQ) THEN  ;STANDARD PROCESSING
C
C***  ELSEIF(TRABUF(TXPTL).EQ.X2ERR_RESET) THEN   ;STANDARD PROCESSING
C
	ELSEIF(TRABUF(TXPTL).EQ.X2ERR_SDTU) THEN
C
	      CALL X2RESSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
	ELSE
C
C NOW PROCESS AS YOU KNOW BEST (DON'T CONSIDER THOSE CONDITIONS WHICH
C HAPPENED TO BE DESCRIBED ABOVE)
C
C
	IF(TRABUF(TXSSDTU).EQ.X2STMES_DATATYPE_CMD_UP) THEN
C
	   IF(TRABUF(TXSCC).EQ.X2STMES_CONF_REQ) THEN
C
C GENERAL STATION CONFIGURATION
C
	      CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	   ELSEIF(TRABUF(TXSCC).EQ.X2STMES_STAT_REP) THEN
C
C STATION STAT REPORT CAME
C
	      CALL X2STSREP(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	   ELSEIF(TRABUF(TXSCC).EQ.X2STMES_PORT_REQ) THEN
C
C PORT CONFIGURATION REQUEST
C
	      CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	   ELSEIF(TRABUF(TXSCC).EQ.X2STMES_VAL_REQ) THEN
C
C CONNECTION VALIDITY RESPONSE
C
	      CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
	   ELSEIF(TRABUF(TXSCC).EQ.X2STMES_RELAY_REQ) THEN
C
C BROADCAST CONFIGURATION REQUEST
C
	      CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	      RESPOND=.TRUE.
C
         ELSEIF(TRABUF(TXSCC).EQ.X2STMES_BCST_REQ) THEN
C
C BROADCAST SERVER (BCST) CONFIGURATION REQUEST                          V05
C
            CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
            RESPOND=.TRUE.
C
	   ENDIF
C
	ELSEIF(TRABUF(TXSSDTU).EQ.X2STMES_DATATYPE_RESET .OR.
     *	       TRABUF(TXSSDTU).EQ.X2STMES_DEF_CONF_REQ) THEN
C
C HELP AFTER RESET WILL BE REQUESTED
C
	   CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
	   RESPOND=.TRUE.
C
C
C SET STATION TO DISABLE FOR NIGHT GAME
C
C..........NOTE: THIS CODE MAY BE A SPECIAL CASE FOR STL
C..........IN ORDER TO DISABLE PHASE 1 SPECTRA TERMINALS
C
           IF(X2X_GAME_MODE .EQ. X2X_GAMEM_NIGHT) THEN
             IF(TRABUF(TXSSDTU).EQ.X2STMES_DATATYPE_RESET) THEN
               CALL ISBYTE(X2XS_DISABLED,IX2XS_STATE,STN-1)
             ENDIF
           ENDIF
C
C
C     THIS IS A NEW UPLINE HELP REQUEST (TYPE 243 OR 245)
C
        ELSEIF(TRABUF(TXSSDTU).EQ.X2STMES_DATATYPE_RESET2 .OR.
     *         TRABUF(TXSSDTU).EQ.X2STMES_DATATYPE_DEFAULT_CONF2) THEN
C
C HELP AFTER RESET WILL BE REQUESTED
C
C          THIS CODE WAS INTRODUCED TO HANDLE X28 GVT'S. IT'S PURPOSE
C          TO DISABLE STATIONS DURING NIGHT MODE BY SETTING THE ME FLAG
C          THIS WILL ONLY BE DONE FOR UPLINE HELP REQUESTS. ANY OTHER 
C          UPLINE MESSAGE WILL CAUSE A NAAS MESSAGE TO BE SENT.
C
           IF(X2X_GAME_MODE .EQ. X2X_GAMEM_NIGHT) THEN
             IF(TRABUF(TXSSDTU).EQ.X2STMES_DATATYPE_RESET2) THEN
               CALL ISBYTE(X2XS_DISABLED,IX2XS_STATE,STN-1)
             ENDIF
           ENDIF
C
           CALL X2OUTSTN(TRABUF,MESSAGE,ORIGINAL,LENGTH)
           RESPOND=.TRUE.
C
	ENDIF
	ENDIF
C
	RETURN
	END
