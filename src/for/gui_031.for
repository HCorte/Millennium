C GUI_031.FOR
C
C V02 12-MAR-2010 RXK TCLM replaced with TRET, commission for TRET removed.
C V01 06-FEB-2001 HXK Initial release AlphaGOLS
C
C INVOICE DATA REQUEST
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2001 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C This subroutine returns GUI FUNCTION 31 - Invoicing Data 
C 
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)    OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	     MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUI_031(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:RECAGT.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'

	INCLUDE 'INCLIB:GUIMPRM.DEF'
	INCLUDE 'INCLIB:GUIARGS.DEF'
	INCLUDE 'INCLIB:GUIFIL.DEF'
C
C
	BYTE	    OUTBUF(*)
	INTEGER*4   MES_LEN,RET_CODE
	CHARACTER*14 SPACES
C
	INTEGER*4   NUM_COLS,NUM_ROWS
        INTEGER*4   GNUM,GIND,GTYP,ST
        INTEGER*4   AGTNO,CLKNO
	INTEGER*4   DUMMY
C
	INTEGER*2   I2TEMP
	BYTE	    I1TEMP(2)
	EQUIVALENCE(I2TEMP,I1TEMP)
C
C       ! parameters
	INTEGER*4   GAMIND
        INTEGER*4   CANIND,CLMIND,DSCIND,SALIND,VALIND
        INTEGER*4   REFIND,TKCIND,LENIND
        PARAMETER   (GAMIND=MAXGAM)
        PARAMETER   (CANIND=GAMIND+1)
        PARAMETER   (CLMIND=GAMIND+2)
        PARAMETER   (DSCIND=GAMIND+3)
        PARAMETER   (SALIND=GAMIND+4)
        PARAMETER   (VALIND=GAMIND+5)
        PARAMETER   (REFIND=GAMIND+6)
        PARAMETER   (TKCIND=GAMIND+7)
        PARAMETER   (LENIND=TKCIND)
C
        ! arguments
        INTEGER*4  TER                     !
C        INTEGER*4  LTER                    !

        INTEGER*4 CURAMT(LENIND),WEKAMT(LENIND),LSTAMT(LENIND)
        INTEGER*4 CURCNT(LENIND),WEKCNT(LENIND),LSTCNT(LENIND)
        INTEGER*4 COMAMT(2)
        INTEGER*4 SCOM(2,3), VCOM(2,3), ADJUST(2,3), AMTDUE(2,3)
        INTEGER*4 POSDUE(2,2), WCOM(2,3)
        INTEGER*4 STTRANSP,CERR,TRANSP

        ! parameters
        INTEGER*4  INDVTAB(AGAMLEN,MAXGAM) !
        INTEGER*4  NETSAL                  !
        INTEGER*4  GAM                     !
        INTEGER*4  DAY                     !
        INTEGER*4  I                       !

	INTEGER*4  GNUMREQ

        LOGICAL    ALLON
        INTEGER*4  CLERKON
	CHARACTER  CZERO
	DATA       CZERO/Z0/
C
	RET_CODE = 0	
	SPACES = ' '	
	CALL GUI_GETPARAMS(OUTBUF,ST)
	IF(ST.NE.0) THEN
	    RET_CODE = 11
	    RETURN
	ENDIF
	AGTNO = GUI_ARGVAL(1)
        TER   = GUI_ARGVAL(2)       
        GNUMREQ  = GUI_ARGVAL(3)

	GNUM = GNUMREQ
	IF(GNUM.LT.1.OR.GNUM.GT.MAXGAM) GNUM = 0
	IF(GNUM.NE.0) THEN
	   GTYP = GNTTAB(GAMTYP,GNUM)
	   GIND = GNTTAB(GAMIDX,GNUM)
	   IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) THEN
	      RET_CODE = 11
	      RETURN
	   ENDIF
	   IF(GIND.LT.1.OR.GIND.GT.MAXIND) THEN
	      RET_CODE = 11
	      RETURN
	   ENDIF
	ENDIF
C
	IF(TER.EQ.0) THEN
	   CALL FIND_AGENT(AGTNO,TER,ST)
	   IF(ST.NE.0) THEN
	      RET_CODE = 11
	      RETURN
	   ENDIF
	ENDIF
C
	IF(TER.LT.1.OR.TER.GT.NUMAGT) THEN
	   RET_CODE = 11
	   RETURN
	ENDIF
C
	CLKNO = 0

C Force always to read ASF
C
C        IF(LTER.EQ.TER .AND. TER.NE.0)GOTO 120
C        LTER = TER
C
        ALLON=.TRUE.
        CALL GETCLERK(TER,CLKNO,1,INDVTAB)  !check this call
        CLERKON=0
C
        CALL READW(ASFFDB,TER,ASFREC,ST)
        IF(ST.NE.0) THEN
	    CALL OPS('Failed to read ASF file',ST,TER)
	    RET_CODE = 11
            RETURN
        ENDIF
        DO I=1,512
            IF(ASFBYT(I).EQ.CZERO) ASFBYT(I)=' '
        END DO
C
C
120     CONTINUE

        CALL FASTSET(0,CURAMT,LENIND)
        CALL FASTSET(0,WEKAMT,LENIND)
        CALL FASTSET(0,LSTAMT,LENIND)
        CALL FASTSET(0,CURCNT,LENIND)
        CALL FASTSET(0,WEKCNT,LENIND)
        CALL FASTSET(0,LSTCNT,LENIND)
        CALL FASTSET(0,SCOM,6)
        CALL FASTSET(0,VCOM,6)
        CALL FASTSET(0,WCOM,6)
        CALL FASTSET(0,AMTDUE,6)
        CALL FASTSET(0,POSDUE,4)
        CALL FASTSET(0,ADJUST,6)
C
C TODAYS SALES
C
        DO 125 GAM=1,MAXGAM
           GTYP=GNTTAB(GAMTYP,GAM)
           GIND=GNTTAB(GAMIDX,GAM)
           IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 125
           CURCNT(GAM)=CURCNT(GAM)+AGTGAM(GSCNT,GAM,TER)-
     *                             AGTGAM(GCCNT,GAM,TER)
           CURAMT(GAM)=CURAMT(GAM)+AGTGAM(GSAMT,GAM,TER)-
     *                             AGTGAM(GCAMT,GAM,TER)
           CURCNT(SALIND)=CURCNT(SALIND)+AGTGAM(GSCNT,GAM,TER)-
     *                         AGTGAM(GCCNT,GAM,TER)
           CURAMT(SALIND)=CURAMT(SALIND)+AGTGAM(GSAMT,GAM,TER)-
     *                         AGTGAM(GCAMT,GAM,TER)
           CURCNT(VALIND)=CURCNT(VALIND)+AGTGAM(GVCNT,GAM,TER)
           CURAMT(VALIND)=CURAMT(VALIND)+AGTGAM(GVAMT,GAM,TER)
           CURCNT(CANIND)=CURCNT(CANIND)+AGTGAM(GCCNT,GAM,TER)
           CURAMT(CANIND)=CURAMT(CANIND)+AGTGAM(GCAMT,GAM,TER)
           CURCNT(CLMIND)=CURCNT(CLMIND)+AGTGAM(GCLCNT,GAM,TER)
           CURAMT(CLMIND)=CURAMT(CLMIND)+AGTGAM(GCLAMT,GAM,TER)
           CURCNT(DSCIND)=CURCNT(DSCIND)+AGTGAM(GDCNT,GAM,TER)
           CURAMT(DSCIND)=CURAMT(DSCIND)+AGTGAM(GDAMT,GAM,TER)
           CURCNT(REFIND)=CURCNT(REFIND)+AGTGAM(GRCNT,GAM,TER)
           CURAMT(REFIND)=CURAMT(REFIND)+AGTGAM(GRAMT,GAM,TER)
           CURAMT(TKCIND)=CURAMT(TKCIND)+AGTGAM(GTKCHG,GAM,TER)
           NETSAL=AGTGAM(GSAMT,GAM,TER)-AGTGAM(GCAMT,GAM,TER)
           CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,SCOM(1,1),GTYP,GIND,TER)
           IF(TSBIT(AGTTAB(AGTTYP,TER),AGTNCM).NE.0) THEN
             SCOM(1,1)=0
             SCOM(2,1)=0
           ENDIF
125     CONTINUE
        DO 135 I=1,15
           IF(ASFLGR(LGRCDC,I).NE.DAYCDC) GOTO 135
           CALL ADDI8I8(ADJUST,ASFLGR(LGRAMTU,I),BETUNIT)
135     CONTINUE
C
C SUM CLERKS ALSO FOR TODAY
C
        IF(P(CLRKACT).EQ.0) THEN
          DO 140 GAM=1,MAXGAM
             GTYP=GNTTAB(GAMTYP,GAM)
             GIND=GNTTAB(GAMIDX,GAM)
             IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 140
             CURCNT(GAM)=CURCNT(GAM)+INDVTAB(GSCNT,GAM)-
     *                               INDVTAB(GCCNT,GAM)
             CURAMT(GAM)=CURAMT(GAM)+INDVTAB(GSAMT,GAM)-
     *                               INDVTAB(GCAMT,GAM)
             CURCNT(SALIND)=CURCNT(SALIND)+INDVTAB(GSCNT,GAM)-
     *                     INDVTAB(GCCNT,GAM)
             CURAMT(SALIND)=CURAMT(SALIND)+INDVTAB(GSAMT,GAM)-
     *                     INDVTAB(GCAMT,GAM)
             CURCNT(VALIND)=CURCNT(VALIND)+INDVTAB(GVCNT,GAM)
             CURAMT(VALIND)=CURAMT(VALIND)+INDVTAB(GVAMT,GAM)
             CURCNT(CANIND)=CURCNT(CANIND)+INDVTAB(GCCNT,GAM)
             CURAMT(CANIND)=CURAMT(CANIND)+INDVTAB(GCAMT,GAM)
             CURCNT(CLMIND)=CURCNT(CLMIND)+INDVTAB(GCLCNT,GAM)
             CURAMT(CLMIND)=CURAMT(CLMIND)+INDVTAB(GCLAMT,GAM)
             CURCNT(DSCIND)=CURCNT(DSCIND)+INDVTAB(GDCNT,GAM)
             CURAMT(DSCIND)=CURAMT(DSCIND)+INDVTAB(GDAMT,GAM)
             CURCNT(REFIND)=CURCNT(REFIND)+INDVTAB(GRCNT,GAM)
             CURAMT(REFIND)=CURAMT(REFIND)+INDVTAB(GRAMT,GAM)
             CURAMT(TKCIND)=CURAMT(TKCIND)+INDVTAB(GTKCHG,GAM)
             NETSAL=INDVTAB(GSAMT,GAM)-INDVTAB(GCAMT,GAM)
             CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,SCOM(1,1),GTYP,GIND,TER)
             IF(TSBIT(AGTTAB(AGTTYP,TER),AGTNCM).NE.0) THEN
                SCOM(1,1)=0
                SCOM(2,1)=0
             ENDIF
140       CONTINUE
        ENDIF
        DUMMY=0
        CALL GETCOM(CURAMT(VALIND),TVAL,GAM,COMAMT,VCOM(1,1),DUMMY,DUMMY,DUMMY)
        CALL ADDI8I4(AMTDUE(1,1),CURAMT(SALIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,1),CURAMT(VALIND),VALUNIT)
        CALL SUBI8I4(AMTDUE(1,1),CURAMT(REFIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,1),CURAMT(DSCIND),BETUNIT)
        CALL ADDI8I8(AMTDUE(1,1),ADJUST(1,1),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,1),SCOM(1,1),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,1),VCOM(1,1),BETUNIT)
        CALL ADDI8I4(AMTDUE(1,1),CURAMT(TKCIND),BETUNIT)
        CALL ADDI8I4(POSDUE(1,1),CURAMT(SALIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,1),CURAMT(VALIND),VALUNIT)
        CALL SUBI8I4(POSDUE(1,1),CURAMT(REFIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,1),CURAMT(DSCIND),BETUNIT)
C
C INVOICE TO DATE SALES
C
        CALL FASTMOV(CURAMT,WEKAMT,LENIND)
        CALL FASTMOV(CURCNT,WEKCNT,LENIND)
        SCOM(1,2)=SCOM(1,1)
        SCOM(2,2)=SCOM(2,1)
        ADJUST(1,2)=ADJUST(1,1)
        ADJUST(2,2)=ADJUST(2,1)
        DO 200 DAY=1,9
        DO 200 GAM=1,MAXGAM
           IF(ASFDAT(ASFCDC,DAY).LE.ASFINV(ASFEND,1)) GOTO 200
           IF(ASFDAT(ASFCDC,DAY).EQ.DAYCDC)           GOTO 200
           GTYP=GNTTAB(GAMTYP,GAM)
           GIND=GNTTAB(GAMIDX,GAM)
           IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 200
           WEKCNT(GAM)=WEKCNT(GAM)+ASFDAY(GSCNT,GAM,DAY)-
     *                             ASFDAY(GCCNT,GAM,DAY)
           WEKAMT(GAM)=WEKAMT(GAM)+ASFDAY(GSAMT,GAM,DAY)-
     *                             ASFDAY(GCAMT,GAM,DAY)
           WEKCNT(SALIND)=WEKCNT(SALIND)+ASFDAY(GSCNT,GAM,DAY)-
     *                         ASFDAY(GCCNT,GAM,DAY)
           WEKAMT(SALIND)=WEKAMT(SALIND)+ASFDAY(GSAMT,GAM,DAY)-
     *                         ASFDAY(GCAMT,GAM,DAY)
           WEKCNT(VALIND)=WEKCNT(VALIND)+ASFDAY(GVCNT,GAM,DAY)
           WEKAMT(VALIND)=WEKAMT(VALIND)+ASFDAY(GVAMT,GAM,DAY)
           WEKCNT(CANIND)=WEKCNT(CANIND)+ASFDAY(GCCNT,GAM,DAY)
           WEKAMT(CANIND)=WEKAMT(CANIND)+ASFDAY(GCAMT,GAM,DAY)
           WEKCNT(CLMIND)=WEKCNT(CLMIND)+ASFDAY(GCLCNT,GAM,DAY)
           WEKAMT(CLMIND)=WEKAMT(CLMIND)+ASFDAY(GCLAMT,GAM,DAY)
           WEKCNT(DSCIND)=WEKCNT(DSCIND)+ASFDAY(GDCNT,GAM,DAY)
           WEKAMT(DSCIND)=WEKAMT(DSCIND)+ASFDAY(GDAMT,GAM,DAY)
           WEKCNT(REFIND)=WEKCNT(REFIND)+ASFDAY(GRCNT,GAM,DAY)
           WEKAMT(REFIND)=WEKAMT(REFIND)+ASFDAY(GRAMT,GAM,DAY)
           WEKAMT(TKCIND)=WEKAMT(TKCIND)+ASFDAY(GTKCHG,GAM,DAY)
           NETSAL=ASFDAY(GSAMT,GAM,DAY)-ASFDAY(GCAMT,GAM,DAY)
           CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,SCOM(1,2),GTYP,GIND,TER)
           IF(TSBIT(AGTTAB(AGTTYP,TER),AGTNCM).NE.0) THEN
              SCOM(1,2)=0
              SCOM(2,2)=0
           ENDIF
200     CONTINUE
        DUMMY=0
        CALL GETCOM(WEKAMT(VALIND),TVAL,GAM,COMAMT,VCOM(1,2),DUMMY,DUMMY,DUMMY)
        DO 210 I=1,15
           IF(ASFLGR(LGRCDC,I).LE.ASFINV(ASFEND,1)) GOTO 210
           IF(ASFLGR(LGRCDC,I).EQ.DAYCDC)           GOTO 210
        CALL ADDI8I8(ADJUST(1,2),ASFLGR(LGRAMTU,I),BETUNIT)
210     CONTINUE
        CALL ADDI8I4(AMTDUE(1,2),WEKAMT(SALIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,2),WEKAMT(VALIND),VALUNIT)
        CALL SUBI8I4(AMTDUE(1,2),WEKAMT(REFIND),BETUNIT)
        CALL SUBI8I4(AMTDUE(1,2),WEKAMT(DSCIND),BETUNIT)
        CALL ADDI8I8(AMTDUE(1,2),ADJUST(1,2),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,2),SCOM(1,2),BETUNIT)
        CALL SUBI8I8(AMTDUE(1,2),VCOM(1,2),BETUNIT)
        CALL ADDI8I4(AMTDUE(1,2),WEKAMT(TKCIND),BETUNIT)
        CALL ADDI8I4(POSDUE(1,2),WEKAMT(SALIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,2),WEKAMT(VALIND),VALUNIT)
        CALL SUBI8I4(POSDUE(1,2),WEKAMT(REFIND),BETUNIT)
        CALL SUBI8I4(POSDUE(1,2),WEKAMT(DSCIND),BETUNIT)
C
C LAST INVOICE SALES
C
        DO 300 GAM=1,MAXGAM
           GTYP=GNTTAB(GAMTYP,GAM)
           IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 300
           LSTCNT(GAM)=LSTCNT(GAM)+ASFBIL(GSCNT,GAM,1)-
     *                             ASFBIL(GCCNT,GAM,1)
           LSTAMT(GAM)=LSTAMT(GAM)+ASFBIL(GSAMT,GAM,1)-
     *                             ASFBIL(GCAMT,GAM,1)
           LSTCNT(SALIND)=LSTCNT(SALIND)+ASFBIL(GSCNT,GAM,1)-
     *                         ASFBIL(GCCNT,GAM,1)
           LSTAMT(SALIND)=LSTAMT(SALIND)+ASFBIL(GSAMT,GAM,1)-
     *                         ASFBIL(GCAMT,GAM,1)
           LSTCNT(VALIND)=LSTCNT(VALIND)+ASFBIL(GVCNT,GAM,1)
           LSTAMT(VALIND)=LSTAMT(VALIND)+ASFBIL(GVAMT,GAM,1)
           LSTCNT(CANIND)=LSTCNT(CANIND)+ASFBIL(GCCNT,GAM,1)
           LSTAMT(CANIND)=LSTAMT(CANIND)+ASFBIL(GCAMT,GAM,1)
           LSTCNT(CLMIND)=LSTCNT(CLMIND)+ASFBIL(GCLCNT,GAM,1)
           LSTAMT(CLMIND)=LSTAMT(CLMIND)+ASFBIL(GCLAMT,GAM,1)
           LSTCNT(DSCIND)=LSTCNT(DSCIND)+ASFBIL(GDCNT,GAM,1)
           LSTAMT(DSCIND)=LSTAMT(DSCIND)+ASFBIL(GDAMT,GAM,1)
           LSTCNT(REFIND)=LSTCNT(REFIND)+ASFBIL(GRCNT,GAM,1)
           LSTAMT(REFIND)=LSTAMT(REFIND)+ASFBIL(GRAMT,GAM,1)
           LSTAMT(TKCIND)=LSTAMT(TKCIND)+ASFBIL(GTKCHG,GAM,1)
300     CONTINUE
C
C ADDED OFFLINE VALIDATION AMOUNT (TOTAL PER AGENT)
C
        LSTAMT(VALIND)=LSTAMT(VALIND)+ASFINV(ASFOFFPAY,1)       !ONLINE + OFFLINE
C
C TRANSPORTES
C
        TRANSP = 0
        IF (LSTAMT(SALIND).GT.0) THEN
           CALL ASCBIN(ASFINF,SSTTP,LSTTP,STTRANSP,CERR)
           IF (STTRANSP.EQ.1) THEN
              TRANSP = P(VALCT1)
           ELSEIF (STTRANSP.EQ.2) THEN
              TRANSP = P(VALCT2)      
           ELSEIF (STTRANSP.EQ.3) THEN
              TRANSP = P(VALCT3)       
           ENDIF
        ENDIF

        SCOM(1,3)=ASFINV(ASFSCMU,1)
        SCOM(2,3)=ASFINV(ASFSCMP,1)
        VCOM(1,3)=ASFINV(ASFVCMU,1)
        VCOM(2,3)=ASFINV(ASFVCMP,1)
        WCOM(1,3)=ASFINV(ASFWCMU,1)
        WCOM(2,3)=ASFINV(ASFWCMP,1)
        CALL ADDI8I8(ADJUST(1,3),ASFINV(ASFPADU,1),BETUNIT)
        CALL ADDI8I8(ADJUST(1,3),ASFINV(ASFADJU,1),BETUNIT)
        CALL ADDI8I4(ADJUST(1,3),TRANSP,BETUNIT)
C***    IF(TSBIT(AGTTAB(AGTTYP,TER),AGTNCM).NE.0) THEN
C         CALL FASTSET(0,SCOM,6)
C         CALL FASTSET(0,VCOM,6)
C       ENDIF
        AMTDUE(1,3)=ASFINV(ASFDUEU,1)
        AMTDUE(2,3)=ASFINV(ASFDUEP,1)
C
C
C ENCODE AGENT FINANCIAL OUTPUT
C
C INITIALIZE OUTPUT 
C
	CALL GUIARG_INIT()
C
	NUM_COLS = 47
	NUM_ROWS = 1
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
	CALL GUIARG_CHAR(OUTBUF,%REF(ASFBYT(SAGNO)),LAGNO)  !lagno = 7
	CALL GUIARG_BYTE(OUTBUF,GNUM)
	CALL GUIARG_INT4(OUTBUF,TER)
	CALL GUIARG_CHAR(OUTBUF,%REF(ASFBYT(SNAME)),LNAME)  !lname = 27

	IF(GNUM.NE.0) THEN
	   ! CALL GUIARG_INT4(OUTBUF,CURCNT(GNUM))
	   ! CALL GUIARG_MONY(OUTBUF,CURAMT(GNUM))
	   CALL GUIARG_INT4(OUTBUF,WEKCNT(GNUM))
	   CALL GUIARG_MONY(OUTBUF,WEKAMT(GNUM))
	   CALL GUIARG_INT4(OUTBUF,LSTCNT(GNUM))
	   CALL GUIARG_MONY(OUTBUF,LSTAMT(GNUM))
	ELSE
	   ! CALL GUIARG_INT4(OUTBUF,CURCNT(SALIND))
	   ! CALL GUIARG_MONY(OUTBUF,CURAMT(SALIND))
	   CALL GUIARG_INT4(OUTBUF,WEKCNT(SALIND))
	   CALL GUIARG_MONY(OUTBUF,WEKAMT(SALIND))
	   CALL GUIARG_INT4(OUTBUF,LSTCNT(SALIND))
	   CALL GUIARG_MONY(OUTBUF,LSTAMT(SALIND))
	ENDIF

	! CALL GUIARG_INT4(OUTBUF,CURCNT(SALIND))
	! CALL GUIARG_MONY(OUTBUF,CURAMT(SALIND))
	CALL GUIARG_INT4(OUTBUF,WEKCNT(SALIND))
	CALL GUIARG_MONY(OUTBUF,WEKAMT(SALIND))
	CALL GUIARG_INT4(OUTBUF,LSTCNT(SALIND))
	CALL GUIARG_MONY(OUTBUF,LSTAMT(SALIND))

	! CALL GUIARG_INT4(OUTBUF,CURCNT(DSCIND))
	! CALL GUIARG_MONY(OUTBUF,CURAMT(DSCIND))
	CALL GUIARG_INT4(OUTBUF,WEKCNT(DSCIND))
	CALL GUIARG_MONY(OUTBUF,WEKAMT(DSCIND))
	CALL GUIARG_INT4(OUTBUF,LSTCNT(DSCIND))
	CALL GUIARG_MONY(OUTBUF,LSTAMT(DSCIND))

	! CALL GUIARG_INT4(OUTBUF,CURCNT(CANIND))
	! CALL GUIARG_MONY(OUTBUF,CURAMT(CANIND))
	CALL GUIARG_INT4(OUTBUF,WEKCNT(CANIND))
	CALL GUIARG_MONY(OUTBUF,WEKAMT(CANIND))
	CALL GUIARG_INT4(OUTBUF,LSTCNT(CANIND))
	CALL GUIARG_MONY(OUTBUF,LSTAMT(CANIND))

	! CALL GUIARG_INT4(OUTBUF,CURCNT(VALIND))
	! CALL GUIARG_MONY(OUTBUF,CURAMT(VALIND))
	CALL GUIARG_INT4(OUTBUF,WEKCNT(VALIND))
	CALL GUIARG_MONY(OUTBUF,WEKAMT(VALIND))
	CALL GUIARG_INT4(OUTBUF,LSTCNT(VALIND))
	CALL GUIARG_MONY(OUTBUF,LSTAMT(VALIND))

	! CALL GUIARG_INT4(OUTBUF,CURCNT(CLMIND))
	! CALL GUIARG_MONY(OUTBUF,CURAMT(CLMIND))
	CALL GUIARG_INT4(OUTBUF,WEKCNT(CLMIND))
	CALL GUIARG_MONY(OUTBUF,WEKAMT(CLMIND))
	CALL GUIARG_INT4(OUTBUF,LSTCNT(CLMIND))
	CALL GUIARG_MONY(OUTBUF,LSTAMT(CLMIND))

	! CALL GUIARG_INT4(OUTBUF,CURCNT(REFIND))
	! CALL GUIARG_MONY(OUTBUF,CURAMT(REFIND))
	CALL GUIARG_INT4(OUTBUF,WEKCNT(REFIND))
	CALL GUIARG_MONY(OUTBUF,WEKAMT(REFIND))
	CALL GUIARG_INT4(OUTBUF,LSTCNT(REFIND))
	CALL GUIARG_MONY(OUTBUF,LSTAMT(REFIND))

	CALL GUIARG_MONY(OUTBUF,SCOM(1,2))
	CALL GUIARG_MONY(OUTBUF,SCOM(1,3))
	CALL GUIARG_MONY(OUTBUF,ADJUST(1,2))
	CALL GUIARG_MONY(OUTBUF,ADJUST(1,3))
	CALL GUIARG_MONY(OUTBUF,AMTDUE(1,2))
	CALL GUIARG_MONY(OUTBUF,AMTDUE(1,3))
	CALL GUIARG_MONY(OUTBUF,WCOM(1,3))

	CALL GUIARG_INT4(OUTBUF,ASFITINV(ASFITSCNT))
	CALL GUIARG_MONY(OUTBUF,ASFITINV(ASFITSAMT))
	CALL GUIARG_INT4(OUTBUF,ASFITINV(ASFITVCNT))
	CALL GUIARG_MONY(OUTBUF,ASFITINV(ASFITVAMT))
	CALL GUIARG_MONY(OUTBUF,ASFITINV(ASFITDUE))
	CALL GUIARG_MONY(OUTBUF,ASFITINV(ASFITRAMT))
	CALL GUIARG_MONY(OUTBUF,ASFITINV(ASFITSCM) +
     *                          ASFITINV(ASFITPCM))
	CALL GUIARG_MONY(OUTBUF,ASFITINV(ASFITADJ))

C
C FINALLY SET OUTPUT MESSAGE LENGTH 
C
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
C
	END
