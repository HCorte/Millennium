C
C SUBROUTINE DSPE
C
C V31 24-SEP-2013 SCML Handling new accounting platform
C V30 26-AUG-2013 FJG  CR15 SPORTS NEW TEAMS NAME REPORTS
C V29 14-NOW-2010 MAC  TPASAD NEW PASSIVE
C V28 15-APR-2010 RXK  TCTRL,TPASAC set for ePassive
C V27 22-FEB-2001 CS   added TAGTNAM (AGENT NAME).
C V26 22-SEP-2000 UXN  TYPAGTINF added.
C V25 27-FEB-1997 RXK  (C9) used for miscellanious sales, (CA) used for petty 
C                      cash   
C V24 30-JAN-1997 HXK  Check for invalid terminal number
C V23 13-JAN-1997 GPK  Rita's fix
C V22 05-DEC-1996 HXK  Updated for Finland IPS
C V21 21-MAY-1996 HXK  Addition of segmented signon (Rita)
C V20 21-MAY-1996 HXK  Updates from Mike Pindrik, Siew Mun Wo for X.25 / TEBE
C V19 11-DEC-1994 HXK  Added Total Key Txn
C V18 08-JAN-1994 HXK  ADDED ODDS REPORTS FOR SCORE, WIINERSTIP.
C V17 02-SEP-1993 SXH  Invoice report is subtype 9
C V16 01-SEP-1993 SXH  Added TSINV for INVOICE REPORT
C V15 10-AUG-1993 HXK  PUT IN TVLST FOR TERMINAL PEOPLE
C V14 10-AUG-1993 HXK  GET VAKIO MATCH LIST AS 6,6
C V13 06-AUG-1993 HXK  CHANGED TOLST TO TGLST
C V12 04-AUG-1993 GXA  Added Fractioning/Unfractioning.
C V11 03-AUG-1993 GXA  Added Fractioning and Unfractioning.
C V10 13-JUL-1993 CXK  Changed Control and Text message types to be 3,4 and 3,5.
C V09 05-JUL-1993 HXK  ADDED POPULARITY LIST
C V08 27-JUN-1993 HXK  ADDE MISCELLANEOUS SALES AND PETTY CASH
C V07 25-JUN-1993 HXK  ADDED INSTANT SALES, VALIDATIONS
C V06 17-MAY-1993 HXK  Added Opinion Polling.
C V05 26-FEB-1996 wsm  Renamed LBACK to TLBACK for loopback.
C V04 17-MAY-1993 HJK  ADDED OPINION POLL
C V03 07-AUG-1992 GCAN ADDED CHECK FOR NOT SIGNED ON IN CASE OF
C                      CONTROLL,TEXT,ORDER,SERVICE MESSAGES.
C V02 19-NOV-1991 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C SUBROUTINE TO DECODE SPECIAL FUNCTION INPUT MESSAGE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1995 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE DSPE(MESTAB,TRABUF,MESLEN,TCODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:CHKSUMCM.DEF'
C
	BYTE	    MESTAB(*)
	INTEGER*4   TEMP, TEMP1, TEMP2
	INTEGER*4   ENCMES, ENCACT, MYCHKSUM, CHKLEN, TYP, SUBTYP
	INTEGER*2   MESLEN,TCODE
C
	INTEGER*4   JUL			!Julian date for Unfraction transaction.
	INTEGER*4   SER			!Serial# for Unfraction transaction.
	INTEGER*4   CDIG		!Check digit for Unfraction transaction.
	INTEGER*4   DUMMY 		!Dummy variable.
	INTEGER*4   CDC			!CDC date for Unfraction transaction.
	INTEGER*4   CERR		!Serial# conversion error.
	INTEGER*4   WAGSER		!Wager Serial# returned for Unfrac trans
	INTEGER*4   INPVER		!INPVER Function.
C
C GET TRANSACTION NUMBER
C
D	TYPE*,IAM(),'>>> DSPE'
	TEMP = ZEXT(MESTAB(1))
	TRABUF(TTRN) = IAND(TEMP,15)
C
C GET TYPE / SUBTYPE
C
	TEMP = ZEXT(MESTAB(2))
	SUBTYP = IAND(TEMP,15)
	TYP = ISHFT(TEMP,-4)
D	TYPE*,IAM(),'>>> 0 TYPE/SUBTYPE:',TYP,SUBTYP
C
C GET CHECKSUM
C
	TEMP1 = ZEXT(MESTAB(3))
	TEMP2 = ZEXT(MESTAB(4))
	TRABUF(TCHK) = ISHFT(TEMP1,8) + TEMP2
C
C
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 0)	TRABUF(TSFUN) = TSON
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 1)	TRABUF(TSFUN) = TTERSTS
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 2)	TRABUF(TSFUN) = TFAULT
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 3)	TRABUF(TSFUN) = TTKTRQ
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 4)  TRABUF(TSFUN) = TCTRL   !CONTROL REQUES
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 5)	TRABUF(TSFUN) = TTEXT   !TEXT REQUEST
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 6)  TRABUF(TSFUN) = TGAMBL  !GAME BLOCK REQ
	IF(TYP.EQ. 3.AND.SUBTYP.EQ. 7)  TRABUF(TSFUN) = TCDURQ  !CDU TEXT REQ
	IF(TYP.EQ. 3.AND.SUBTYP.EQ.10)  TRABUF(TSFUN) = TCTRL   !TPAS CONTROL
	IF(TYP.EQ. 3.AND.SUBTYP.EQ.15)	TRABUF(TSFUN) = TSOFF
	IF(TYP.EQ. 5)			TRABUF(TSFUN) = TLOAD
	IF(TYP.EQ. 6.AND.SUBTYP.EQ. 1)	TRABUF(TSFUN) = TGREP
	IF(TYP.EQ. 6.AND.SUBTYP.EQ. 2)  TRABUF(TSFUN) = TJACK   !JACKPOT
	IF(TYP.EQ. 6.AND.SUBTYP.EQ. 3)  TRABUF(TSFUN) = TSREP
	IF(TYP.EQ. 6.AND.SUBTYP.EQ. 4)  TRABUF(TSFUN) = TINFO   !NEWS
	IF(TYP.EQ. 6.AND.SUBTYP.EQ. 5)  TRABUF(TSFUN) = TAGTNAM !AGT NAME
        IF(TYP.EQ. 6.AND.SUBTYP.EQ. 6)  TRABUF(TSFUN) = TVLST   !GAME INFO 1X2
        IF(TYP.EQ. 6.AND.SUBTYP.EQ. 7)  TRABUF(TSFUN) = TOLST   !ODDS INFO
        IF(TYP.EQ. 6.AND.SUBTYP.EQ. 8)  TRABUF(TSFUN) = TPASAC  !PASSIVE ACCOUNTING
        IF(TYP.EQ. 6.AND.SUBTYP.EQ. 9)  TRABUF(TSFUN) = TSINV   !INVOICE REPORT
C-----------------------------------------------------------------------
C V31| Adding new accounting platform
C-----------------------------------------------------------------------
C        IF(TYP.EQ. 6.AND.SUBTYP.EQ.10)  TRABUF(TSFUN) = TPASAD  !PASSIV NEW !V29
        IF(TYP.EQ. 6.AND.SUBTYP.EQ.10)  TRABUF(TSFUN) = TNAP  !New accounting platform
C-----------------------------------------------------------------------
C V31| Adding new accounting platform
C-----------------------------------------------------------------------
        IF(TYP.EQ. 6.AND.SUBTYP.EQ.11)  TRABUF(TSFUN) = TMMES   !NEW TEAM & RESULTS REPORT
	IF(TYP.EQ. 7)			TRABUF(TSFUN) = TEKEY
	IF(TYP.EQ. 8)			TRABUF(TSFUN) = TREPR
CRXK	IF(TYP.EQ.10.AND.SUBTYP.EQ.13)	TRABUF(TSFUN) = TLBACK  
	IF(TYP.EQ.12.AND.SUBTYP.EQ. 1)  TRABUF(TSFUN) = TORDR   !TERM. ORDER
	IF(TYP.EQ.12.AND.SUBTYP.EQ. 2)  TRABUF(TSFUN) = TSERV   !TERM. SERVICE
	IF(TYP.EQ.12.AND.SUBTYP.EQ. 3)  TRABUF(TSFUN) = TDLV    !DELIVERY
	IF(TYP.EQ.12.AND.SUBTYP.EQ. 4)  TRABUF(TSFUN) = TPASS   !GVT PASS NUMBER
        IF(TYP.EQ.12.AND.SUBTYP.EQ. 9)  TRABUF(TSFUN) = TITEMS  !SALE ITEMS
        IF(TYP.EQ.12.AND.SUBTYP.EQ.10)  TRABUF(TSFUN) = TPCSH   !PETTY CASH
CRXK    IF(TYP.EQ.12.AND.SUBTYP.EQ. 8)  TRABUF(TSFUN) = TINSS   !INSTANT SALE
CRXK    IF(TYP.EQ.12.AND.SUBTYP.EQ. 9)  TRABUF(TSFUN) = TINSV   !INSTANT VAL
CRXK    IF(TYP.EQ.12.AND.SUBTYP.EQ.14)  TRABUF(TSFUN) = TTKEY   !TOTAL KEY
        IF(TYP.EQ.12.AND.SUBTYP.EQ.15)  TRABUF(TSFUN) = TPOLL   !OPINION POLL
	IF(TYP.EQ.15.AND.SUBTYP.EQ. 1)  TRABUF(TSFUN) = TFRC    !FRAC. WAGER
	IF(TYP.EQ.15.AND.SUBTYP.EQ.15)  TRABUF(TSFUN) = TUNFRC  !UNFRAC. WAGER
D	TYPE*,IAM(),'>>> 1 TRABUF(TSFUN):',TRABUF(TSFUN)
C
C DECODE UNFRACTION REQUESTS AND GET SERIAL NUMBER.
C
	IF(TRABUF(TSFUN).EQ.TUNFRC) THEN
	   TRABUF(TERR) = INVL
	   CALL DFRAC(MESTAB,JUL,SER,CDIG,DUMMY)
	   CDC = DAYCDC
	   CERR = INPVER(CDC,SER,WAGSER,CDIG)
	   IF(CERR.EQ.0.AND.JUL.EQ.DAYJUL) THEN
	      TRABUF(TSDT1) = WAGSER
	      TRABUF(TERR)  = NOER
	   ENDIF
	ENDIF
C
C CHECK FOR SYSTEM GENERATED TRANSACTIONS
C
	IF(TCODE.EQ.TYPNON) THEN
	  CALL LIB$MOVC3(4,MESTAB(1), TRABUF(TSNEW))
	  TRABUF(TSFUN) = TSLOW
	ENDIF

	IF(TCODE.EQ.TYPHSF) THEN
	  TRABUF(TSFUN)=THASF
	  CALL LIB$MOVC3(24,MESTAB(1), TRABUF(TSDT1))
	ENDIF

	IF(TCODE.EQ.TYPAGTINF) THEN
	  TRABUF(TSFUN) = TAGTINF
	  TRABUF(TSNEW) = ZEXT(MESTAB(1))           ! # of fields to update
	  CALL MOVBYT(MESTAB,2,TRABUF(TSDT1),1,MESLEN-1)
	ENDIF
	IF(TCODE.EQ.TYPCWT) THEN
	  TRABUF(TSFUN)=TCHKWRT
	ENDIF
	IF(TCODE.EQ.TYPSSI) THEN
	  TRABUF(TSFUN)=TISSACK
	ENDIF
        IF(TCODE.EQ.TYPSSU) THEN
          TRABUF(TSFUN)=TISUBAD
        ENDIF
        IF(TCODE.EQ.TYPFPT) THEN
          TRABUF(TSFUN)=TFPT
        ENDIF
D	TYPE*,IAM(),'>>> 2 TRABUF(TSFUN):',TRABUF(TSFUN)
C
 	IF(TRABUF(TSFUN).EQ.TSLOW.OR.
     *     TRABUF(TSFUN).EQ.THASF.OR.
     *     TRABUF(TSFUN).EQ.TAGTINF.OR.
     *     TRABUF(TSFUN).EQ.TEKEY.OR.
     *     TRABUF(TSFUN).EQ.TCHKWRT.OR.
     *     TRABUF(TSFUN).EQ.TISSACK.OR.
     *     TRABUF(TSFUN).EQ.TISUBAD.OR.
     *     TRABUF(TSFUN).EQ.TFPT) THEN
	  TRABUF(TINTRA)=1
	  RETURN
	ENDIF
C
C CHECK IF SPECIAL FUNCTIONS ARE SUPRESSED
C
D	TYPE*,IAM(),'>>> 3 TRABUF(TSFUN):',TRABUF(TSFUN)
	IF(TRABUF(TSFUN).NE.TLOAD.AND.
     *      TRABUF(TSFUN).NE.TSFUN_PATH.AND.
     *      TRABUF(TSFUN).NE.TEKEY) THEN
	   IF(P(SUPSPE).EQ.1) TRABUF(TERR) = SUPR
	   IF(TRABUF(TTER).LT.1 .OR. TRABUF(TTER).GT.NUMAGT) THEN
              TRABUF(TERR) = TBAD
	      GOTO 9000
	   ELSE
      	      IF(TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTSPF))
     *	         TRABUF(TERR) = SUPR
	   ENDIF
	ENDIF
D	TYPE*,IAM(),'>>> 4 TRABUF(TSFUN):',TRABUF(TSFUN)	
C
C CHECK IF TERMINAL IS SIGNED ON
C        
	IF(TRABUF(TSFUN).EQ.TLOAD.OR.TRABUF(TSFUN).EQ.TEKEY.OR.
     *     TRABUF(TSFUN).EQ.TSLOW.OR.TRABUF(TSFUN).EQ.THASF.OR.
     *     TRABUF(TSFUN).EQ.TLBACK.OR.TRABUF(TSFUN).EQ.TSOFF.OR.
     *	   TRABUF(TSFUN).EQ.TSON)				THEN
C NOTHING
	ELSE
	   IF(AGTHTB(AOPSTS,TRABUF(TTER)).NE.SIGNON) TRABUF(TERR) = NOTON
	   GOTO 9000
	ENDIF
D	TYPE*,IAM(),'>>> 5 TRABUF(TSFUN):',TRABUF(TSFUN)	
C
C CHECK MESSAGE CHECKSUM
C
	IF(TRABUF(TSFUN).NE.TSON.AND.TRABUF(TSFUN).NE.TLOAD.AND.
     *	   TRABUF(TSFUN).NE.TSOFF.AND.TRABUF(TSFUN).NE.TTKTRQ.AND.
     *	   TRABUF(TSFUN).NE.TCDURQ.AND.
     *	   TRABUF(TSFUN).NE.TGAMBL.AND.
     *	   TRABUF(TSFUN).NE.TTERSTS.AND.
     *	   TRABUF(TSFUN).NE.TFAULT.AND.
     *     TRABUF(TSFUN).NE.TLBACK.AND.
     *	   TRABUF(TSFUN).NE.TINFO.AND.
     *	   TRABUF(TSFUN).NE.TEKEY) THEN
C
	  IF(P(SUPSUM).EQ.0) THEN
            IF(.NOT.BTEST(AGTTAB(AGTTYP,TRABUF(TTER)),AGTSUM)) THEN
	      I4CCITT = IAND(BASECHKSUM+TRABUF(TTER),'FFFF'X)
C
C PATH-THRU BASECHKSUM IS FFFF SINCE TERMINAL MAY BE SIGNED-OFF
C
	      IF(TRABUF(TSFUN).EQ.TSFUN_PATH) I4CCITT = '0000FFFF'X
C
	      MESTAB(3) = I1CCITT(2)
	      MESTAB(4) = I1CCITT(1)
      	      CHKLEN= MESLEN - 1
	      CALL GETCCITT(MESTAB,1,CHKLEN,MYCHKSUM)
	      IF(MYCHKSUM.NE.TRABUF(TCHK)) TRABUF(TERR)=CBAD
	    ENDIF
	  ENDIF
	ENDIF
D	TYPE*,IAM(),'>>> 6 TRABUF(TSFUN):',TRABUF(TSFUN)	
C
C CHECK FOR DES ERROR
C
	IF(TRABUF(TSFUN).NE.TLOAD.AND.
     *     TRABUF(TSFUN).NE.TEKEY.AND.
     *     TRABUF(TSFUN).NE.TSFUN_PATH.AND.
     *	   P(DESACT).EQ.0) THEN
	  ENCACT=0
	  ENCMES = MESTAB(1)
	  ENCMES=IAND(ENCMES,'08'X)
	  IF(P(DESFLG).EQ.0.AND.
     *	     TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTDES)) ENCACT=1
	  IF(ENCMES.EQ.0.AND.ENCACT.NE.0.OR.
     *	     ENCMES.NE.0.AND.ENCACT.EQ.0) TRABUF(TERR)=DESMOD
	ENDIF
D	TYPE*,IAM(),'>>> 7 TRABUF(TSFUN):',TRABUF(TSFUN)	
C
C
9000    CONTINUE
	IF(TRABUF(TSFUN).EQ.0) TRABUF(TERR)=INVL
	IF(TRABUF(TERR).NE.NOER) TRABUF(TSTAT)=REJT
D	TYPE*,IAM(),'>>> OUT TSTAT/TERR:',TRABUF(TSTAT),TRABUF(TERR)
	RETURN
C
	END
