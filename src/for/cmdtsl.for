C
C SUBROUTINE CMDTSL
C
C V09 20-FEB-1996 HXK  Fix for rev#
C V08 23-NOV-1995 HXK  Merge of post 65 stuff; changes for Double/Couple
C V07 03-MAR-1994 HXK  FIXED BUG IN MESSAGE FOR COMMAND 8.
C V06 01-MAR-1994 HXK  BUG FIX.
C V05 01-MAR-1994 HXK  CHANGED ERRLOG MESSAGE FOR COMMAND 8.
C V04 01-MAR-1994 HXK  ADDED ROW SUPPRESSION TOGGLE COMMANDS.
C V03 21-JAN-1993 DAB  Initial Release
C                      Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                      DEC Baseline
C V02 13-JUL-1992 GCAN ADDED CLOSING DATE CHANGE COMMAND.
C                      AND SENDING OF UNSO MESSAGE FOR ROW STATUS CHANGE.
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C SUBROUTINE TO PROCESS TOTO SELECT GAME COMMANDS
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	SUBROUTINE CMDTSL(TRABUF,MESS)
	IMPLICIT NONE
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:TSLCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
        INCLUDE 'INCLIB:HASHMEM.DEF'
	INTEGER*4 MESS(EDLEN)
	INTEGER*4 CMDNUM,GIND,ROW,COL,TEMP
	INTEGER*4 GAMMAP(2),GNUM

        INTEGER*4 HROW(6),SUP,OFFSET,NUM_ROWS,NEXT_REC,NEXT_BLOCK,PSTAT,X

	INTEGER*2 I2TEMP(2)
	EQUIVALENCE (TEMP,I2TEMP)
C
C
C
	CMDNUM=TRABUF(TCMNUM)
	GOTO (10,20,30,40,50,60,70,80,90,100) CMDNUM
	GOTO 1000
C
C CHANGE TOTO SELECT GAME STATUS
C
10	CONTINUE
	GIND=TRABUF(TCMDT1)
	TRABUF(TCMOLD)=TSLSTS(GIND)
	TSLSTS(GIND)=TRABUF(TCMNEW)
        TEMP=TSLREV(GIND)
        I2TEMP(1)=I2TEMP(1)+7
        TSLREV(GIND)=TEMP
        IF(TRABUF(TCMNEW).EQ.GAMBFD) CALL CLRSUM
	MESS(2)=TECMD
	MESS(3)=3
	MESS(6)=GIND
	MESS(9)=TRABUF(TCMOLD)
	MESS(10)=TRABUF(TCMNEW)
	RETURN
C
C CHANGE ROW STATUS
C
20	CONTINUE
	GIND=TRABUF(TCMDT1)
	ROW =TRABUF(TCMDT2)
	TRABUF(TCMOLD)=TSLSTA(ROW,GIND)
	TSLSTA(ROW,GIND)=TRABUF(TCMNEW)
        TEMP=TSLREV(GIND)
        I2TEMP(1)=I2TEMP(1)+7
        TSLREV(GIND)=TEMP
	IF(TRABUF(TCMNEW).EQ.GAMBFD) THEN
	  CALL CLRSUM
	  TSLCTM(ROW,GIND)=TRABUF(TTIM)
	  CALL BSET(TSLTIM(ROW,GIND),1)
	ENDIF
	MESS(2)=TECMD
	MESS(3)=8
	MESS(6)=GIND
	MESS(9)=ROW
	MESS(10)=TRABUF(TCMOLD)
	MESS(11)=TRABUF(TCMNEW)
	GAMMAP(1) = 0
	GAMMAP(2) = 0
	GNUM = GTNTAB(TTSL,GIND)
	CALL BSET(GAMMAP,GNUM)
	CALL SUBCNTRL(GAMMAP,0)
	RETURN
C
C CHANGE LOKPOOL FOR ROWS
C
30	CONTINUE
	GIND=TRABUF(TCMDT1)
	ROW =TRABUF(TCMDT2)
	COL =TRABUF(TCMDT3)
	TRABUF(TCMOLD)=TSPLOK(ROW,COL,GIND)
	TSPLOK(ROW,COL,GIND)=TRABUF(TCMNEW)
	MESS(2)=TECMD
	MESS(3)=11
	MESS(6)=GIND
	MESS(9)=ROW
	MESS(10)=COL
	MESS(11)=TRABUF(TCMOLD)
	MESS(12)=TRABUF(TCMNEW)
	RETURN
C
C CHANGE ROW CLOSING TIME
C
40	CONTINUE
	GIND=TRABUF(TCMDT1)
	ROW =TRABUF(TCMDT2)
	TRABUF(TCMOLD)=TSLTIM(ROW,GIND)
	TSLTIM(ROW,GIND)=TRABUF(TCMNEW)
	MESS(2)=TECMD
	MESS(3)=12
	MESS(6)=GIND
	MESS(9)=ROW
	MESS(10)=TRABUF(TCMOLD)
	MESS(11)=TRABUF(TCMNEW)
	RETURN
C
C CHANGE ROW CLOSING DATE (CHECK IF TODAY, IF NOT SET TIME BIT)
C
50	CONTINUE
	GIND = TRABUF(TCMDT1)
	ROW  = TRABUF(TCMDT2)
	TRABUF(TCMOLD) = TSLDAT(ROW,GIND)
	TSLDAT(ROW,GIND) = TRABUF(TCMNEW)
	IF(TSLTIM(ROW,GIND).GE.'40000000'X) THEN 
	   TSLTIM(ROW,GIND) = TSLTIM(ROW,GIND) - '40000000'X
	ENDIF
	IF(TSLSTA(ROW,GIND).NE.GAMOPN.OR.
     *     TSLTIM(ROW,GIND).EQ.0.OR.
     *     TSLDAT(ROW,GIND).NE.DAYCDC) THEN
	   TSLTIM(ROW,GIND) = TSLTIM(ROW,GIND) + '40000000'X
	ENDIF
	MESS(2) = TECMD
	MESS(3) = 18
	MESS(6) = GIND
	MESS(9) = ROW
	MESS(10)= TRABUF(TCMOLD)
	MESS(11)= TRABUF(TCMNEW)
	GAMMAP(1) = 0
	GAMMAP(2) = 0
	GNUM = GTNTAB(TTSL,GIND)
	CALL BSET(GAMMAP,GNUM)
	CALL SUBCNTRL(GAMMAP,0)
	RETURN
C
C TOGGLE ROW SUPPRESSION STATE
C
60      CONTINUE
        GIND=TRABUF(TCMDT1)
        HROW(1) = TRABUF(TCMDT2)
        SUP = TRABUF(TCMDT3)
        IF(HASH_ROW_SUP(HROW(1),SUP).EQ.HASH_CLOSE) THEN
              HASH_ROW_SUP(HROW(1),SUP)=HASH_OK
              TRABUF(TCMNEW)=HASH_OK
              TRABUF(TCMOLD)=HASH_CLOSE
        ELSE
              HASH_ROW_SUP(HROW(1),SUP)=HASH_CLOSE
              TRABUF(TCMNEW)=HASH_CLOSE
              TRABUF(TCMOLD)=HASH_OK
        ENDIF
        MESS(2)=TECMD
        MESS(3)=8
        MESS(6)=GIND
        MESS(9)=HROW(1)
        MESS(10)=TRABUF(TCMOLD)
        MESS(11)=TRABUF(TCMNEW)
        RETURN

C
C TOGGLE ROW COMBINATION SUPPRESSION STATE
C
70	CONTINUE
        GIND=TRABUF(TCMDT1)
        HROW(1) = TRABUF(TCMDT2)
        HROW(2) = TRABUF(TCMDT3)
        IF(HASH_COMB_SUP(HROW(1),HROW(2)).EQ.HASH_CLOSE) THEN
              HASH_COMB_SUP(HROW(1),HROW(2))=HASH_OK
              HASH_COMB_SUP(HROW(2),HROW(1))=HASH_OK
              TRABUF(TCMNEW)=HASH_OK
              TRABUF(TCMOLD)=HASH_CLOSE
        ELSE
              HASH_COMB_SUP(HROW(1),HROW(2))=HASH_CLOSE
              HASH_COMB_SUP(HROW(2),HROW(1))=HASH_CLOSE
              TRABUF(TCMNEW)=HASH_CLOSE
              TRABUF(TCMOLD)=HASH_OK
        ENDIF
        MESS(2)=TECMD
        MESS(3)=8
        MESS(6)=GIND
        MESS(9)=HROW(1)
        MESS(10)=TRABUF(TCMOLD)
        MESS(11)=TRABUF(TCMNEW)
        RETURN
C
C TOGGLE COMBINATION SUPPRESSION STATE
C
80	CONTINUE
        GIND=TRABUF(TCMDT1)
        OFFSET = TRABUF(TCMDT2)
        NUM_ROWS = TRABUF(TCMDT3)
        IF(NUM_ROWS.LE.3) THEN
           IF(HASH_DIR_SUP(1,OFFSET).EQ.HASH_CLOSE) THEN
              HASH_DIR_SUP(1,OFFSET)=HASH_OK
              TRABUF(TCMNEW)=HASH_OK
              TRABUF(TCMOLD)=HASH_CLOSE
           ELSE
              HASH_DIR_SUP(1,OFFSET)=HASH_CLOSE
              TRABUF(TCMNEW)=HASH_CLOSE
              TRABUF(TCMOLD)=HASH_OK
           ENDIF
        ELSE
           CALL HASHGET(OFFSET,NUM_ROWS,X,NEXT_REC,NEXT_BLOCK,PSTAT)
           IF(PSTAT.EQ.HASH_RETURN_OK) THEN
              IF(HASH_TAB_SUP(1,NEXT_REC,NEXT_BLOCK).EQ.HASH_CLOSE)THEN
                 HASH_TAB_SUP(1,NEXT_REC,NEXT_BLOCK)=HASH_OK
                 TRABUF(TCMNEW)=HASH_OK
                 TRABUF(TCMOLD)=HASH_CLOSE
              ELSE
                 HASH_TAB_SUP(1,NEXT_REC,NEXT_BLOCK)=HASH_CLOSE
                 TRABUF(TCMNEW)=HASH_CLOSE
                 TRABUF(TCMOLD)=HASH_OK
              ENDIF
           ELSE
              ! combination not played yet
              TRABUF(TCMNEW)=0
              TRABUF(TCMOLD)=0
           ENDIF
        ENDIF
        MESS(2)=TECMD
        MESS(3)=8
        MESS(6)=GIND
        MESS(9)=NUM_ROWS
        MESS(10)=TRABUF(TCMNEW)
        MESS(11)=TRABUF(TCMOLD)
        RETURN

C
C PUT NEXT COMMAND HERE
C
90	CONTINUE
100	CONTINUE
C
C INVALID COMMAND NUMBER
C
1000	CONTINUE
	TRABUF(TSTAT)=REJT
	TRABUF(TERR)=INVL
	MESS(2)=TECMD
	MESS(3)=1
	MESS(4)=TRABUF(TCMTYP)
	MESS(5)=TRABUF(TCMNUM)
	RETURN
	END
