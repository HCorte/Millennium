C SUBROUTINE SAVTSP
C  
C     Rev 1.0   17 Apr 1996 14:50:58   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C     Rev 1.4   02 Feb 1996 15:27:34   RXK
C  Rfss 95190. Values of TSPPOL/6 rounded, not cut.
C     Rev 1.3   16 Jan 1996 14:41:06   RXK
C  RFSS 95190. Multiplier 6 for TSPPOL introduced
C     Rev 1.2   28 Feb 1994 22:39:46   JXP
C     Rev 1.1   25 Feb 1994 19:11:24   HXK
C  PITKA LIABILITY LIMITATIONS CHANGE.
C     Rev 1.0   21 Jan 1993 17:34:04   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C V01 30-JUN-92 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C V01 01-AUG-90 XXX  RELEASED FOR VAX
C
C SUBROUTINE TO SAVE TOTO SELECT POOLS DURING STOPSYS TO ITS POOL FILE
C
C CALLING SEQUENCE:
C     CALL SAVTSP(GNUM)
C
C INPUT
C     GNUM - GAME NUMBER
C
C OUTPUT
C     NONE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE SAVTSP(GNUM)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:HASHMEM.DEF'
	INCLUDE 'INCLIB:RECTPF.DEF'
	INCLUDE 'INCLIB:TSLCOM.DEF'
C
C DECLARE FLAGS AND DEFINE TABLES
C
	INTEGER*4 FDB(7)
	INTEGER*4 GNUM, INDEX, GIND, SEC, ST, ROW, COL
	INTEGER*4 LENGTH
        INTEGER*4 MOD6
C
	INDEX=1                           !INDEX FOR MOVING THROUGH REC
C
C GET GAME INDEX
C
	GIND=GNTTAB(GAMIDX,GNUM)
C
C OPEN TOTO SELECT POOL FILE AND SET UP I/O
C
	CALL OPENQW(3,TSLPFN(1,GIND),4,0,0,ST)
	CALL IOQINIT(FDB,3,TPFBUF*256)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),1,ST,0)
	   CALL GPAUSE
	ENDIF
C
C READ FIRST RECORD TO REBUILD.
C
	SEC = 1
	CALL READQIO(FDB,SEC,TPFREC,TPFLEN*4,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
C TAKE POOLS AND LOOK FLAGS FROM TSLCOM AND PUT IN TPFREC
C
	TPFGAM=GIND
	TPFCDC=DAYCDC                     !UPDATE HEADER RECORD
	TPFDRW=DAYDRW(GNUM)               !TOTOSELECT DRAW NUMBER
	TPFBEG=TSLBSD(GIND)
	TPFEND=TSLESD(GIND)
	DO 200 ROW=1,TSLRWS(GIND)
	   DO 190 COL=1,3
	      TPFPOL(INDEX  )=TSPPOL(TRACNT,ROW,COL,GIND)
              MOD6=MOD(TSPPOL(DOLAMT,ROW,COL,GIND),6)
              IF(MOD6.LE.2) MOD6=0
              IF(MOD6.GT.2) MOD6=1
	      TPFPOL(INDEX+1)=TSPPOL(DOLAMT,ROW,COL,GIND)/6+MOD6
	      TPFPOL(INDEX+2)=TSPLOK(ROW,COL,GIND)
	      INDEX=INDEX+3
190	   CONTINUE
200	CONTINUE
C
C WRITE UPDATED HEADER RECORD BACK TO POOL FILE
C
	CALL WRITEQIO(FDB,SEC,TPFREC,TPFLEN*4,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),3,ST,1)
	   CALL GPAUSE
	ENDIF
C
C WRITE UPDATED POOLS FOR COMBINATIONS OF 3 TO FILE
C
	SEC = SEC + (TPFBUF*256/SECSIZE) + 1 
	LENGTH = HASH_NUM_COMB3*4
	CALL WRITEQIO(FDB,SEC,HASH_DIR,LENGTH,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
C WRITE HASH POOL FOR COMBINATIONS OF 4,5 & 6
C
	SEC = SEC + (LENGTH/SECSIZE) + 1
	LENGTH = HASHLEN*4
	CALL WRITEQIO(FDB,SEC,HASH_TAB,LENGTH,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
C WRITE HASH POOL FOR COMBINATIONS OF 3 SUPPRESSIONS
C
	SEC = SEC + (LENGTH/SECSIZE) + 1 
	LENGTH = HASH_NUM_COMB3*2*4
	CALL WRITEQIO(FDB,SEC,HASH_DIR_SUP,LENGTH,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
C WRITE HASH POOL FOR COMBINATIONS OF 4,5 & 6 SUPPRESSIONS
C
	SEC = SEC + (LENGTH/SECSIZE) + 1
	LENGTH = HASHLEN*4
	CALL WRITEQIO(FDB,SEC,HASH_TAB_SUP,LENGTH,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
C WRITE UPDATED POOLS FOR ROW / MARK SUPPRESSIONS
C
	SEC = SEC + (LENGTH/SECSIZE) + 1
	LENGTH = MAXSRW*3*4
	CALL WRITEQIO(FDB,SEC,HASH_ROW_SUP,LENGTH,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
C WRITE UPDATED POOLS FOR ROW SUPPRESSIONS
C
	SEC = SEC + (LENGTH/SECSIZE) + 1
	LENGTH = MAXSRW*MAXSRW*4
	CALL WRITEQIO(FDB,SEC,HASH_COMB_SUP,LENGTH,ST)
	IF(ST.NE.0) THEN
	   CALL FILERR(TSLPFN(1,GIND),2,ST,1)
	   CALL GPAUSE
	ENDIF
C
	CALL CLOSEQFIL(FDB)
	RETURN
	END
