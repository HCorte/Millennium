C  GXSRC:OISON.FOR
C  
C V35 13-MAY-1999 UXN STRTIM CHANGED TO STARTIM
C V34 07-MAR-1997 RXK Flushtime sent changed back from h,m,0 to seconds 
C                     from midnight
C V33 26-FEB-1997 RXK Set agent flush time only if P(FLSTIM)>0 
C V32 30-JAN-1997 WPW Send P(VALPAMT) in dimes.
C V31 29-JAN-1997 RXK Unit for agent flushtime is minute 
C V30 28-JAN-1997 HXK LOTGEN changes for IPS
C V29 16-JAN-1997 HXK Revbyted a few things
C V28 16-JAN-1997 HXK Change REDMAX, REDMIN from nickels to dimes for IPS
C V27 11-JAN-1997 HXK Various fixes for IPS release
C V26 05-DEC-1996 HXK Updated for Finland IPS pre-release
C V25 01-FEB-1995 JJOLY UPDATED TO MATCH NEW ERROR MESSAGE MAPPING
C V24 28-JAN-1995 JJOLY ADDED LOGIG TO SET OPTION FLAG '40'X FOR CHAIN INVOICES
C V23 18-JAN-1995 JJOLY CORRECTED LOGIC THAT SET AGTPASCDC ON FIRST SIGN ON
C V22 18-JAN-1995 JJOLY CORRECTED THE SETTING OF THE MANAGER PASS NUMBER BIT
C V21 17-JAN-1995 JJOLY SET FLSTIM IN SETPAR NOT OISON
C V20 17-JAN-1995 DJO Changed to support the GVTSAV flag.
C V19 16-JAN-1995 JJOLY UPDATED TO USE VAL UNITS FOR VALPAMT AND TIERLIM
C V18 15-JAN-1995 DJO Changed to send a flag to the terminal for first 
C                     signon attempts.
C V17 10-JAN-1995 DJO Changed to update the GVTS_INSTALLED variable if 
C                     AGTISF is set.
C V16 27-DEC-1994 DJO Updates as a result of shakedown testing for install 
C                     system.
C V15 27-AUG-1994 MCM ADDED CHAIN AND DIVISION AGENT NUMBER AND MANAGER 
C                     PASS NUMBER
C V14 27-JUL-1994 MCM ADDED GVT ESTABLISHMENT TO OPTIONS FLAG
C V13 14-JUL-1994 MCM ADDED MANAGER PASSWORD SUPPRESSION 
C V12 06-JUL-1994 MCM DO NOT CLEAR THE REQUEST INVOICE BIT DONE IN REPORT 
C                     REQUEST
C V11 29-JUN-1994 MCM ADDED REQUEST INVOICE FLAG
C V10 21-JUN-1994 MCM ADDED MANAGER SIGNED ON AND PASSWORD EXPIRATION FLAGS
C V09 08-JUN-1994 MCM CHANGED OPERATIONAL STATUS AND PASSNUMBER OFFSET 
C                     FROM A HALFWORD TO A BYTE
C V08 21-DEC-1993 SYSTEM Initial revision.
C V07 05-JUN-1993 GAP ADDED GVT SIGN ON COUNT
C V06 04-MAY-1993 MCM RELEASED FOR GEORGIA
C V05 26-Oct-1992 ceb Put in new "FERGUSON" time.
C V04 10-FEB-1992 JPJ ADDED (GVT)
C V03 05-FEB-1992 NJA ADDED (GVT REVBYT)
C V02 04-FEB-1992 NJA ADDED (2 BYTE CHECKSUM)
C V01 13-NOV-1991 JPJ RELEASED FOR VAX (INSTANTS)
C
C SUBROUTINE TO BUILD INSTANT SIGN-ON OUTPUT MESSAGES.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1996 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE OISON(TRABUF,OUTTAB,OUTLEN)
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:INSCOM.DEF'
        INCLUDE 'INCLIB:DESTRA.DEF'
        INCLUDE 'INCLIB:TASKID.DEF'
        INCLUDE 'INCLIB:CHKSUMCM.DEF'
C
        INTEGER*4 MYCHKSUM, CHKLEN, IND
        INTEGER*4 ERRTYP, ERRCOD
        INTEGER*4 CHKDIG, SEED
C
        BYTE      OUTTAB(*)
        INTEGER*2 OUTLEN
C
        INTEGER*4   I4TEMP
        INTEGER*2   I2TEMP(2)
        LOGICAL     FIRST_SON
        LOGICAL     FIRST/.TRUE./
        BYTE        I1TEMP(4)
        EQUIVALENCE (I4TEMP,I2TEMP,I1TEMP)
C
        DATA ERRTYP/Z90/
C
C SET SEED FOR RANDOMLY GENERATED FLUSHTIME
C
        IF(FIRST) THEN
           SEED=20000*INT(SECNDS(0.0))+1
           FIRST = .FALSE.
        ENDIF
C
C CONTROL AND SEQUENCE NUMBER
C
        OUTTAB(1) = '20'X+TRABUF(TTRN)
C
C IF TRANSACTION STATUS IS NOT GOOD
C BUILD ERROR MESSAGE.
C
        IF(TRABUF(TSTAT).NE.GOOD.AND.TRABUF(TERR).NE.BCRS) GOTO 8000
C
C UPDATE GOOD SIGNON
C

        TRABUF(TINEW)=SIGNON
        AGTHTB(AOPSTS,TRABUF(TTER))=TRABUF(TINEW)
        AGTHTB(AGTPASOFF,TRABUF(TTER))=TRABUF(TISGN)
        AGTTAB(AGTOCL,TRABUF(TTER))=AGTTAB(AGTNCL,TRABUF(TTER))
        AGTTAB(AGTNCL,TRABUF(TTER))=TRABUF(TISGN)
        FIRST_SON=.FALSE.
        IF(AGTHTB(AGTCDC,TRABUF(TTER)).EQ.0) THEN
          AGTHTB(AGTCDC,TRABUF(TTER))=DAYCDC
          IF(TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTISF).NE.0) THEN
            FIRST_SON=.TRUE.
            GVTS_INSTALLED=GVTS_INSTALLED + 1
          ENDIF
        ENDIF
C
C TYPE AND SUBTYPE
C
        OUTTAB(2) = 'D9'X
C
C TIME
C
        IND=5
        I4TEMP=TRABUF(TTIM)
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(3)
        IND=IND+3
C
C JULIAN DATE
C
        I4TEMP=DAYJUL
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        IND=IND+2
C
C SERIAL NUMBER AND CHECK DIGITS
C
        CALL OUTGEN(TRABUF(TCDC),TRABUF(TSER),I4TEMP,CHKDIG)
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(3)
        OUTTAB(IND+3) = CHKDIG
        IND=IND+4
C
C INSTANT RESULT CODE ONE
C
        IF(TRABUF(TIERR).EQ.INOER) ERRCOD=0
        IF(TRABUF(TIERR).NE.INOER) ERRCOD=1
        OUTTAB(IND+0) = ERRCOD
        IND=IND+1
C
C INSTANT RESULT CODE TWO
C
        OUTTAB(IND+0) = 0
        IF(TRABUF(TIERR).NE.INOER) OUTTAB(IND+0) = TRABUF(TIERR)
        IND=IND+1
C
C CDC DATE
C
        I4TEMP = DAYCDC
        OUTTAB(IND+0) = I1TEMP(2)
        OUTTAB(IND+1) = I1TEMP(1)
        IND=IND+2
C
C START TIME
C
        I4TEMP = P(STARTIM)
        OUTTAB(IND+0) = I1TEMP(3)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(1)
        IND=IND+3
C
C END TIME
C
        I4TEMP = P(ENDTIM)
        OUTTAB(IND+0) = I1TEMP(3)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(1)
        IND=IND+3
C
C FLUSH TIME    
C                    
        I4TEMP = 0
        IF(P(FLSTIM).NE.0) THEN
           I4TEMP = P(FLSTIM) + INT((P(ENDTIM)-P(FLSTIM)-600)*RAN(SEED))
        ENDIF
        AGTHTB(AGTFLS,TRABUF(TTER))=I4TEMP/60 
        OUTTAB(IND+0) = I1TEMP(3)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(1)
        IND=IND+3
C
C SIGN ON COUNT
C
        I4TEMP = AGTHTB(ASONCT,TRABUF(TTER)) 
        OUTTAB(IND+0) = I1TEMP(1)
        IND=IND+1
C
C BATCH SIZE
C
        OUTTAB(IND+0) = P(BCHSIZ)
        IND=IND+1
C
C FORWARD COUNT
C
        OUTTAB(IND+0) = P(FWDCNT)
        IND=IND+1
C
C AGENT NUMBER
C
        I4TEMP = TRABUF(TAGT)
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(3)
        OUTTAB(IND+3) = I1TEMP(4)
        IND=IND+4
C
C NODE NUMBER
C
        I4TEMP = TRABUF(TTER)
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(3)
        OUTTAB(IND+3) = I1TEMP(4)
        IND=IND+4
C
C CLERK NUMBER
C
        I4TEMP = TRABUF(TAGT)
        OUTTAB(IND+0) = I1TEMP(4)
        OUTTAB(IND+1) = I1TEMP(3)
        OUTTAB(IND+2) = I1TEMP(2)
        OUTTAB(IND+3) = I1TEMP(1)
        IND=IND+4
C
C PASS NUMBER
C
        I4TEMP = AGTTAB(APSNUM,TRABUF(TTER))
        OUTTAB(IND+0) = I1TEMP(2)
        OUTTAB(IND+1) = I1TEMP(1)
        IND=IND+2
C
C LOCATION ID
C
        I4TEMP = 0
        OUTTAB(IND+0) = I1TEMP(4)
        OUTTAB(IND+1) = I1TEMP(3)
        OUTTAB(IND+2) = I1TEMP(2)
        OUTTAB(IND+3) = I1TEMP(1)
        IND=IND+4
C
C BIT MAP TABLE (OPTION FLAG) (NOT USED)
C NOW USED TO TELL THE TERMINAL THAT THIS IS THE FIRST SIGNON FOR A GVT
C
        I4TEMP=0
        IF(FIRST_SON) I4TEMP=1       !TELL TERMINAL IT'S THE FIRST SIGNON
        OUTTAB(IND+0) = I1TEMP(1)
        IND=IND+1
C
C 8 DIGIT ACTIVATION CODE
C
        I4TEMP = P(GVTAUTH)
        OUTTAB(IND+0) = I1TEMP(4)
        OUTTAB(IND+1) = I1TEMP(3)
        OUTTAB(IND+2) = I1TEMP(2)
        OUTTAB(IND+3) = I1TEMP(1)
        IND=IND+4
C
C VALIDATION PRINT PARAMETER
C
        OUTTAB(IND+0) = P(VALPRNT)
        IND=IND+1
C
C ACTIVATION PRINT PARAMETER
C
        OUTTAB(IND+0) = P(ACTPRNT)
        IND=IND+1
C
C SETTLEMENT PRINT PARAMETER
C
        OUTTAB(IND+0) = P(SETPRNT)
        IND=IND+1
C
C RETURN PRINT PARAMETER
C
        OUTTAB(IND+0) = P(RETPRNT)
        IND=IND+1
C
C DELIVERY PRINT PARAMETER
C
        OUTTAB(IND+0) = P(DELPRNT)
        IND=IND+1
C
C VALIDATION PRINT AMOUNT
C
        I4TEMP = P(VALPAMT)/2
        OUTTAB(IND+0) = I1TEMP(2)
        OUTTAB(IND+1) = I1TEMP(1)
        IND=IND+2
C
C LOW TIER LIMIT  (SENT IN DOLLARS)
C
        OUTTAB(IND+0) = P(TIERLIM)/10
        IND=IND+1
C
C HOTLINE NUMBER
C
        I4TEMP = P(HOTPHN)
        OUTTAB(IND+0) = I1TEMP(4)
        OUTTAB(IND+1) = I1TEMP(3)
        OUTTAB(IND+2) = I1TEMP(2)
        OUTTAB(IND+3) = I1TEMP(1)
        IND=IND+4
C
C INTELLIGENT TIME INTERVAL (SECONDS)
C
        OUTTAB(IND+0) = P(GVTTIM)
        IND=IND+1
C
C REDEMPTION MINIMUM
C
        IF(AGTTAB(AGTRMN,TRABUF(TTER)).NE.0) THEN
           I4TEMP = AGTTAB(AGTRMN,TRABUF(TTER))
        ELSE
           I4TEMP = P(REDIMN)*(100/DYN_VALUNIT) !5 PENNY UNITS
        ENDIF
        I4TEMP = I4TEMP/2  !converting to dimes for IPS system
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(3)
        OUTTAB(IND+3) = I1TEMP(4)
        IND=IND+4
C
C REDEMPTION MAXIMUM
C
        IF(AGTTAB(AGTRMX,TRABUF(TTER)).NE.0) THEN
           I4TEMP = AGTTAB(AGTRMX,TRABUF(TTER))
        ELSE
           I4TEMP = P(REDDEF)*(100/DYN_VALUNIT) !5 PENNY UNITS
        ENDIF
        I4TEMP = I4TEMP/2   !converting to dimes for IPS system
        OUTTAB(IND+0) = I1TEMP(1)
        OUTTAB(IND+1) = I1TEMP(2)
        OUTTAB(IND+2) = I1TEMP(3)
        OUTTAB(IND+3) = I1TEMP(4)
        IND=IND+4
C
C GET CLERK NUMBER AND TERMINAL LANGUAGE
C
        I4TEMP = ISHFT(AGTTAB(AGTNCL,TRABUF(TTER)),4)
     *           +AGTHTB(AGTLANG,TRABUF(TTER))
        OUTTAB(IND+0) = I1TEMP(1)
        IND=IND+1
C
C OPTIONS FLAG
C
        I4TEMP=0
C
C MANAGER SIGNED ON
C
        IF(TRABUF(TISGN).EQ.2) I4TEMP=I4TEMP+'01'X
C
C PASSWORD EXPIRED IF FIRST SIGN ON SET FIRST CDC OF PASSWORD TO TODAY
C
        IF(AGTHTB(AGTPASCDC,TRABUF(TTER)).LE.0) THEN
          AGTHTB(AGTPASCDC,TRABUF(TTER))=DAYCDC
        ENDIF
C
        IF(AGTHTB(AGTPASCDC,TRABUF(TTER))+P(PASSEXP).LE.DAYCDC) THEN
          I4TEMP=I4TEMP+'02'X
        ENDIF
C
C REQUEST INVOICE FLAG
C
	IF(P(AUTOINV).EQ.0.AND.AGTHTB(ASONCT,TRABUF(TTER)).EQ.1.AND.
     *     AGTHTB(AINRPT,TRABUF(TTER)).EQ.1) THEN
          I4TEMP=I4TEMP+'04'X
        ENDIF
C
C SUPPRESS MANAGER PASSWORD CHECK
C
        IF(P(SUPMGR).NE.0) THEN
          I4TEMP=I4TEMP+'08'X
        ELSE
          IF(.NOT.TSBIT(AGTBTB(AGTPAR,TRABUF(TTER)),AGTPPAS)) 
     *      I4TEMP=I4TEMP+'08'X
        ENDIF
C
C GVT ESTABLISHMENT FLAG
C
        IF(P(GVTEST).NE.0) I4TEMP=I4TEMP+'10'X
C
C GVT SAVE PHONE NUMBER IN EEROM FLAG
C
        IF(P(GVTSAV).NE.0) I4TEMP=I4TEMP+'20'X
C
C REQUEST CHAIN SUMMARY REPORT (IF PART OF CHAIN AND NOT A FRANCHISE)
C
        IF(TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTINV).AND.
     *    (AGTHTB(AGTCHN,TRABUF(TTER)).GT.0.AND.
     *    AGTHTB(AGTCHN,TRABUF(TTER)).LE.NUMAGT).AND.
     *    .NOT.TSBIT(AGTBTB(AGTPAR,AGTHTB(AGTCHN,TRABUF(TTER))),AGTFCH))
     *    I4TEMP = I4TEMP + '40'X
C
        OUTTAB(IND+0) = I4TEMP
        IND=IND+1
C
C CHAIN NUMBER
C
        IF(AGTHTB(AGTCHN,TRABUF(TTER)).GE.1.AND.
     *     AGTHTB(AGTCHN,TRABUF(TTER)).LE.NUMAGT) THEN
          I4TEMP = AGTTAB(AGTNUM,AGTHTB(AGTCHN,TRABUF(TTER)))
        ELSE
          I4TEMP = 0
        ENDIF
        OUTTAB(IND+0) = I1TEMP(4)
        OUTTAB(IND+1) = I1TEMP(3)
        OUTTAB(IND+2) = I1TEMP(2)
        OUTTAB(IND+3) = I1TEMP(1)
        IND=IND+4
C
C CHAIN PASS NUMBER
C
        IF(AGTHTB(AGTCHN,TRABUF(TTER)).GE.1.AND.
     *     AGTHTB(AGTCHN,TRABUF(TTER)).LE.NUMAGT) THEN
          I4TEMP = AGTTAB(APSNUM,AGTHTB(AGTCHN,TRABUF(TTER)))
        ELSE
          I4TEMP = 0
        ENDIF
        OUTTAB(IND+0) = I1TEMP(2)
        OUTTAB(IND+1) = I1TEMP(1)
        IND = IND + 2
C
C DIVISION NUMBER
C
        IF(AGTHTB(AGTDIV,TRABUF(TTER)).GE.1.AND.
     *     AGTHTB(AGTDIV,TRABUF(TTER)).LE.NUMAGT) THEN
          I4TEMP = AGTTAB(AGTNUM,AGTHTB(AGTDIV,TRABUF(TTER)))
        ELSE
          I4TEMP = 0
        ENDIF
        OUTTAB(IND+0) = I1TEMP(4)
        OUTTAB(IND+1) = I1TEMP(3)
        OUTTAB(IND+2) = I1TEMP(2)
        OUTTAB(IND+3) = I1TEMP(1)
        IND=IND+4
C
C DIVISION PASS NUMBER
C
        IF(AGTHTB(AGTDIV,TRABUF(TTER)).GE.1.AND.
     *     AGTHTB(AGTDIV,TRABUF(TTER)).LE.NUMAGT) THEN
          I4TEMP = AGTTAB(APSNUM,AGTHTB(AGTDIV,TRABUF(TTER)))
        ELSE
          I4TEMP = 0
        ENDIF
        OUTTAB(IND+0) = I1TEMP(2)
        OUTTAB(IND+1) = I1TEMP(1)
        IND = IND + 2
C
C MANAGER PASS NUMBER
C
        I4TEMP = AGTTAB(APSNUM+1,TRABUF(TTER))
        OUTTAB(IND+0) = I1TEMP(2)
        OUTTAB(IND+1) = I1TEMP(1)
        IND = IND + 2
        OUTLEN=IND-1
        GOTO 9000
C
C ERROR IN REPORT REQUEST FROM TERMINAL
C
8000    CONTINUE
        TRABUF(TSTAT)=REJT
        TRABUF(TINEW)=SIGNOF
        AGTHTB(AOPSTS,TRABUF(TTER))=SIGNOF
        OUTTAB(2) = ERRTYP
        OUTTAB(5) = TRABUF(TERR)
        OUTLEN=5
C
C CALCULATE CHECKSUM
C
9000    CONTINUE
        I4CCITT = TRABUF(TCHK)
        OUTTAB(3) = I1CCITT(2)
        OUTTAB(4) = I1CCITT(1)
        CHKLEN=OUTLEN-1
        CALL GETCCITT(OUTTAB,1,CHKLEN,MYCHKSUM)
        I4CCITT = MYCHKSUM
        OUTTAB(3) = I1CCITT(2)
        OUTTAB(4) = I1CCITT(1)
        RETURN
        END
