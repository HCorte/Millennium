C
C SUBROUTINE FULLCHK
C $Log:   GXAFXT:[GOLS]FULLCHK.FOV  $
C  
C     Rev 1.0   17 Apr 1996 13:16:06   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 16:21:52   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - sptchk.for **
C
C
C     FULLCHK(SYSBET,WIN,NUMROWS,HISHR,SHARES)
C     IN:
C     SYSBET - SYSTEM BET
C     WIN    - WINNING DATA [can now include WINNUM_CANEVENT (i.e. 3) for cancels]
C     OUT:
C     SHARES TABLE UPDATED WITH NEW SHARES
C     HISHR - SET TO HIGHEST SHARES WON
C
C     NOTE: in WIN array the winning values are represented as:
C           Home win  (1) = 1
C           Tie       (X) = 2
C           Away win  (2) = 4
C           Cancelled (C) = 3
C
C     IF YOUR WINNER'S CRITERIAS CHANGE, YOU WILL HAVE TO MODIFY
C     FULLCHK ROUTINES. WINNING CRITIRIAS IN BETWEEN !!!!+ AND !!!!-
C     CURRENTLY FULLCHK WILL USE CRITERIAS BELOW:
C        - ONLY HIGHEST SHARE IS CALCULATED
C        - IF MATCH NUMROWS WIN, MATCH NUMROWS-1 WIN SHARES ARE CALCULATED.
C          1 ADDITIONAL SHARE IS THEN ADDED TO MATCH 11 SHARES!!!
C          HISHR WILL BE THEN SET TO 11
C        - ONLY SHARES HIGHER THAN HISHR ARE ACCOUNTED FOR. HISHR
C          IS INCREASED IF HISHR IS .LT.11 AND IF NEW SHARES
C          GREATER THAN HISHR
C
CFOR FULL SYSTEM BET CALCULATING NR OF SHARES IS RELATIVELY SIMPLE:
C        - NR OF MATCHES OF HIGH SHARES:
C       N = (2**NUMBER_MISSED_DUBLES)*(3**NUMBER_MISSED_TRIPLES)
C        - SMALLER SHARES:
C       N1 = N * (BINOMIAL(NR_MATCH,EXTRA_MISS)*
C                (NR_MATCHED_DUBLES+2*NR_MATCHED_TRIPLES)
C        WHERE BINOMIAL(X,Y) IS BINOMIAL FUNCTION OF X OVER Y
C        AND EXTRA_MISS IS.LE.(NR_MATCHED_DUBLES+NR_MATCHED_TRIPLES)
C
C    FOR CANCELLED ROWS: EITHER SET AS AWARDING ALL PLAYED MARKS
C    ON THAT ROW, OR AWARDING JUST ONE MARK ON THAT ROW. A FLAG
C    (I.E. A PARAMTER) IS USED TO INDICATE WHICH OF THESE IS IMPLEMENTED.
C       - PARAMETER ALLMKS=.TRUE. OR ALLMKS=.FALSE.
C
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE FULLCHK(SYSBET,WIN,NUMROWS,HISHR,SHARES)
C     +++++++++++++++++++++++++++++++++++
C
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
C
	INTEGER*4 II, FASTBIN, ACTUAL_MISS, EXTRA, MISS, TO_CHOSE
	INTEGER*4 NUM_MISS, BETCNT, BET, OFF, OFF1, NUMROWS
C
	INTEGER*2 SYSBET(*)          !TABLE OF SYSTEM BETS
	INTEGER*4 WIN(*)             !TABLE OF WINS
	INTEGER*4 SHARES(0:NUMROWS)   !SHARES TABLE TO BE UPDATED
	INTEGER*4 HISHR              !HIGHEST SHARE (TO BE UPDATED)
	INTEGER*4 MATCH(0:3),MATCH0(0:3),MATCHC(0:3)  !MATCHES,NON MATCHES,CANCELLED EVENTS
C         OFFSETS:    0 - ALL, 1 - BET 1, 2 - BET 2, 3 - MATCH 3
	INTEGER*4 CNTMARK(0:15) /0,1,1,2,1,2,2,3, !# OF MARKS IN BET
     *	                          0,1,1,2,1,2,2,3/
C
C     IF U CHANGE NUMROWS UPDATE POWER OF 2 (POWER2) AND POWER OF 3
C     (POWER3) TABLES.
C
	INTEGER*4 POWER2(0:16) /1,2,4,8,16,32,64,128,256,512,1024,
     *	                      2048,4096,8192,16384,32768,65536/
C
C     PRODUCT OF CANCELLED ROWS (A.K.A. EVENTS) PLAYED [P_CROWS]
C     e.g. if row 1 and row 2 cancelled ticket played is 1X2,1X,1,1,1,...,1
C     then 'product of cancelled rows' is 3*2 = 6
C
        INTEGER*4 P_CROWS
C
C     MATCH ALL MARKS OR MATCH JUST ONE MARK FOR CANCELLED ROWS (EVENTS)
C
        LOGICAL    ALLMKS
        PARAMETER (ALLMKS = .TRUE.)  !true => all marks, false => 1 mark only
C
C     INIT MATCHES, NON MATCHES, CANCEL MATCHES OF SINGLES, DOUBLES AND TRIPLES
C
	MATCH(0)=0
	MATCH(1)=0
	MATCH(2)=0
	MATCH(3)=0
C
	MATCH0(0)=0
	MATCH0(1)=0
	MATCH0(2)=0
C
        MATCHC(0)=0
        MATCHC(1)=0
        MATCHC(2)=0
        MATCHC(3)=0
C
	OFF1=1
        P_CROWS=1
	DO 30, OFF=1,NUMROWS
C
	   BET=SYSBET(OFF)
C
	   BETCNT=CNTMARK(BET)
C
           IF(WIN(OFF).EQ.WINNUM_CANEVENT) THEN   !event cancelled
              MATCH(BETCNT)=MATCH(BETCNT)+1
              MATCHC(BETCNT)=MATCHC(BETCNT)+1
              IF(ALLMKS) P_CROWS = P_CROWS*BETCNT
           ELSE
	      IF (CNTMARK(WIN(OFF)).GT.1) BETCNT=CNTMARK(WIN(OFF))
	      IF(IAND(BET,WIN(OFF)).NE.0) THEN
	         MATCH(BETCNT)=MATCH(BETCNT)+1
	      ELSE
	         MATCH0(BETCNT)=MATCH0(BETCNT)+1
	      ENDIF
           ENDIF
30	CONTINUE
	MATCH(0)=MATCH(1)+MATCH(2)+MATCH(3)    !TOTAL MATCHES
	IF (MATCH(0).GT.HISHR) HISHR=MATCH(0)
	MATCH0(0)=MATCH0(1)+MATCH0(2)           !TOTAL NON MATCHES
	NUM_MISS=POWER2(MATCH0(2))                !TOTAL NON MATCH BETS
	SHARES(MATCH(0))=SHARES(MATCH(0))+(NUM_MISS*P_CROWS) !INCREASE HIGH SHARES
C
C     GENERAL FORMULA TO FIND SMALLER SHARES WINNERS:
C
C***       EXTRA=(2**0)*BINOMIAL(MATCH(2),MISS)*BINOMIAL(MATCH(3),0)+
C***       +(2**1)*BINOMIAL(MATCH(2),MISS-1)*BINOMIAL(MATCH(3),1)+
C***       +(2**2)*BINOMIAL(MATCH(2),MISS-2)*BINOMIAL(MATCH(3),2)+
C***       +(2**3)*BINOMIAL(MATCH(2),MISS-3)*BINOMIAL(MATCH(3),3)+
C***       + + +
C***       +(2**MISS)*BINOMIAL(MATCH(2),0)*BINOMIAL(MATCH(3),MISS)
C***       EXTRA=EXTRA*(2**MATCH0(2))
C
	TO_CHOSE=MATCH(2)+MATCH(3)-(MATCHC(2)+MATCHC(3))
	DO 60, MISS=1,TO_CHOSE
	   EXTRA=0
	   DO 50, ACTUAL_MISS=0,MISS
	      IF ((MATCH(2)-MATCHC(2)).LT.MISS-ACTUAL_MISS.OR.
     *	          (MATCH(3)-MATCHC(3)).LT.ACTUAL_MISS)          GOTO 50
	      EXTRA=EXTRA+POWER2(ACTUAL_MISS)*FASTBIN((MATCH(2)-MATCHC(2)),
     *	         MISS-ACTUAL_MISS)*FASTBIN((MATCH(3)-MATCHC(3)),ACTUAL_MISS)
50	   CONTINUE
	   EXTRA=EXTRA*NUM_MISS*P_CROWS
	   SHARES(MATCH(0)-MISS)=SHARES(MATCH(0)-MISS)+EXTRA
60	CONTINUE
C
C
	IF (SPSTST.GE.0) RETURN   !IF NOT DISPLAYING INDIVIDUAL SHARES
	TYPE 9000,'s',(SYSBET(II),II=1,NUMROWS)
	TYPE 9001,' w ',(WIN(II),II=1,NUMROWS)
	TYPE 9002,'m',MATCH,' m0',MATCH0,' t ',NUM_MISS
9000	FORMAT(1X ,A,4(1X,4I1))
9001	FORMAT(1X,T25,A,4(1X,4I1))
9002	FORMAT(1X,T50,A,4I3,A,4I3,A,I4)
	RETURN
	END
