C
C SUBROUTINE LOGOUT
C
C V11 26-NOV-2020 SCML NEW TERMINAL PROJECT - Added support for OLM
C V10 29-NOV-2013 FRP  Send UNSO to all MXS (1 buffer)
C V09 06-JAN-2011 FJG  MILLENNIUM MXSRV
C V08 29-OCT-2000 UXN  TYPTBS removed.
C V07 04-SEP-2000 UXN  TYPE* removed for DMPDBG
C V06 11-MAR-1997 WPW  Display the error message when no tebe buffers available.
C V05 30-JAN-1991 KWP  DON'T QUE TO OUTQUE ANYMORE!!! ONLY X2X ALLOWED
C V04 01-AUG-1990 XXX  RELEASED FOR VAX
C V03 26-APR-1990 WS   CHANGES FOR X2X BROADCAST MESSAGES
C V02 15-NOV-1989 WS   CHANGES TO INCLUDE X21/X25 SUBSYSTEM
C V01 01-FEB-1989 XXX  INITIAL RELEASE FOR SWEDEN
C
C SUBROUTINE TO DEQUEUE TRANSACTIONS FROM LOGGER QUEUE
C AND QUEUE THEM TO THE COMMUNICATIONS OUTPUT QUEUE IF
C THEY HAVE BEEN LOGGED TO DISK.
C
C
C
C
C CALLING SEQUENCE:
C     CALL LOGOUT(NUMOUT,HISER,HIPPI,MESS)
C INPUT
C     NUMOUT - DEQUEUEING LIMIT. (NUMBER OF TRANSACTIONS
C               QUEUED IN LOGGER QUEUE BEFORE LOGGER RUN.)
C     HISER   - HIGHEST SERIAL NUMBER LOGGED TO DISK.
C     HIPPI   - HIGHEST SERIAL NUMBER LOGGED VIA PPI
C     MESS    - LOGGER MESSAGE BUFFER
C
C IF TRANSACTION SERIAL NUMBER IS GREATER THAN HISER OR
C IF TRANSACTION SERIAL NUMBER IS GREATER THAN HIPPI,
C THEN REQUE TRANSACTION TO LOGGER OUTPUT QUEUE.
C OTHERWISE:
C  IF THIS IS THE LIVE SYSTEM, QUEUE TRANSACTION TO COMMUNICATIONS
C  OUTPUT QUEUE.
C
C  IF THIS IS NOT THE LIVE SYSTEM, RELEASE THE BUFFER.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE LOGOUT(NUMOUT,HISER,HIPPI)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:ENCCOM.DEF'
	INCLUDE 'INCLIB:QUECOM.DEF'
	INCLUDE 'INCLIB:X2STMES.DEF'
	INCLUDE 'INCLIB:X2XREL.DEF'
C
C
	LOGICAL DMPDBG
	INTEGER*4 OUT_LEN, MES_NUM, FORMAT, MES_DEST
	INTEGER*4 TERMINAL, ST, TYPE, BUF, I, HIPPI, HISER
	INTEGER*4 NUMOUT, STATUS
C
C
	INTEGER*4   I4TEMP
	INTEGER*2   I2TEMP(2)
	BYTE        I1TEMP(4)
	EQUIVALENCE (I4TEMP,I2TEMP,I1TEMP)
C
C
	DMPDBG=.FALSE.
	DO 10 I=1,NUMOUT
	CALL DQUTRA(LOG,BUF)
	IF(BUF.EQ.0) GOTO 20
C
C IF SIMULATOR TRANSACTION THE QUEUE IT TO THE INPUT QUEUE
C
        IF(HPRO(TRCODE,BUF).EQ.TYPREG .AND.
     *     HPRO(SIMMOD,BUF).EQ.-999)THEN
          IF(P(SIMLAT).EQ.0.AND.P(SYSTYP).EQ.LIVSYS) THEN
            HPRO(TERNUM,BUF)=HPRO(TERNUM,BUF)+1
            IF(HPRO(TERNUM,BUF).GT.HPRO(SIMHTR,BUF))THEN
              HPRO(TERNUM,BUF)=HPRO(SIMLTR,BUF)
	    ENDIF
            CALL ABL(BUF,QUETAB(1,DIS),STATUS)
          ELSE
	    IF(P(XXDEBUG).EQ.0) THEN      !IF DEBUGGER MODE
	        IF(P(XXDTRLN).EQ.0) DMPDBG=.TRUE.
	        IF(P(XXDTRLN).LT.0) THEN
	           IF(ABS(P(XXDTRLN)).EQ.HPRO(LINENO,BUF))DMPDBG=.TRUE.
	        ENDIF
	        IF(P(XXDTRLN).GT.0) THEN
	           IF(P(XXDTRLN).EQ.HPRO(TERNUM,BUF)) DMPDBG=.TRUE.
	        ENDIF
	        IF(DMPDBG) CALL PRTOUT(BUF)
	    ENDIF
            CALL RELBUF(BUF)
          ENDIF
          GOTO 10
        ENDIF
C
C DECREMENT LOGGER QUEUE COUNT THEN CHECK SERIAL
C NUMBER AGAINST HIGHEST LOGGED SERIAL NUMBER.
C
	IF(MOD(PRO(SERIAL,BUF),SYSOFF).LE.MOD(HISER,SYSOFF).AND.
     *	   MOD(PRO(SERIAL,BUF),SYSOFF).LE.MOD(HIPPI,SYSOFF)) THEN
	  TYPE=HPRO(TRCODE,BUF)
	  IF(P(SYSTYP).NE.LIVSYS.OR.
     *	  (TYPE.NE.TYPCOM.AND.TYPE.NE.TYPREG.AND.
     *	   TYPE.NE.TYPUNS.AND.TYPE.NE.TYPBRO.AND.
     *	   TYPE.NE.TYPDEL.AND.TYPE.NE.TYPX2X_PRO)) THEN
	    CALL RELBUF(BUF)
	  ELSE
	    IF (HPRO(ENCOVR,BUF).NE.0)
     *	       PRO(INPTAB,BUF)=IAND(PRO(INPTAB,BUF),'FFFFFFF7'X)
	    IF (HPRO(MSGNUM,BUF).NE.0.OR.HPRO(OUTLEN,BUF).LT.10)
     *	        PRO(INPTAB,BUF)=IAND(PRO(INPTAB,BUF),'FFFFFFF7'X)
	    IF(P(XXDEBUG).EQ.0) THEN      !IF DEBUGGER MODE
	        IF(P(XXDTRLN).EQ.0) DMPDBG=.TRUE.
	        IF(P(XXDTRLN).LT.0) THEN
	           IF(ABS(P(XXDTRLN)).EQ.HPRO(LINENO,BUF))DMPDBG=.TRUE.
	        ENDIF
	        IF(P(XXDTRLN).GT.0) THEN
	           IF(P(XXDTRLN).EQ.HPRO(TERNUM,BUF)) DMPDBG=.TRUE.
	        ENDIF
	        IF(DMPDBG) CALL PRTOUT(BUF)
	    ENDIF
C
            IF(P(SUPWEL) .EQ. 1) CALL PRTWEL(BUF) !demorar mais deque x segundos
C
	    TERMINAL=HPRO(TERNUM,BUF)
	    CALL TRNTRACE(BUF,-1)    !GEN TRACE TRANS
*	

		IF (HPRO(TRCODE,BUF).EQ.TYPREG) THEN
		  CALL OPSTXT('So HPRO(TRCODE,BUF) --- LogOut  -----> TYPREG')  	
	      CALL ABL(BUF,GAME_OUTQUE,ST)
	    ELSE
C
C SEND TO SPECIFIC TERMINAL
C
		  IF (TERMINAL.GT.0) THEN
C			IF (HPRO(PRCSRC,BUF) .EQ. MXS_COM) THEN
C				CALL ABL(BUF,OLM,ST)
C			ELSE
                IF(BTEST(AGTTAB(AGTTYP,TERMINAL),AGTMXT)) THEN    !MXSRV
                  HPRO(PRCSRC,BUF)=MXS_COM                        !MXSRV
                ENDIF                                             !MXSRV
	        CALL ABL(BUF,GAME_OUTQUE,ST)
	      ELSE
C
C BROADCAST
C
	         IF (HPRO(X2X_DEST,BUF).NE.0) THEN
	            IF (X2X_GAME_STATE.EQ.X2X_GAMES_UP) THEN
	               CALL X2ADDPRO(BUF)
	            ELSE
	               CALL RELBUF(BUF)
	            ENDIF
	         ELSE
C
C SEND BUFFER TO ALL MXS TERMINALS
C
                    IF (HPRO(PRCSRC,BUF).EQ.MXS_COM) THEN     ! MXSRV
                       CALL QUETRA(MXS,BUF)                   ! MXSRV
                    ELSE
C
C START RELAY PROCESS NOW
C
	               MES_DEST=X2STMES_RELAYF_DS_TERM !DEST. TERMS
	               FORMAT=X2XR_APPA_CHAIN
	               IF (TYPE.EQ.TYPUNS) THEN
	                  FORMAT=X2XR_APPA_ALL_NO_FORMAT
	               ENDIF
	               MES_NUM=HPRO(MSGNUM,BUF)
	               OUT_LEN=HPRO(OUTLEN,BUF)
	               CALL X2RSTART(PRO(1,BUF),0,0,-1,MES_NUM,
     *	               OUT_LEN,PRO(OUTTAB,BUF),MES_DEST,FORMAT,-1)
C-	               CALL X2RADDBF(BUF)
	               CALL RELBUF(BUF)
                    ENDIF
	         ENDIF
	      ENDIF
	    ENDIF
C******	    IF(ST.NE.0) THEN
C******	      IF(ST.LT.0) THEN
C******	        MESS(2)=TECOM
C******	        MESS(3)=7
C******	        MESS(4)=HPRO(QUENUM,BUF)
C******	        MESS(5)=BUF
C******	        CALL QUEMES(MESS)
C******	        CALL RELBUF(BUF)
C******	      ELSE
C******	        CALL QUETRA(LOG,BUF)
C******	      ENDIF
C******	    ENDIF
	  ENDIF
	ELSE
	  CALL QUETRA(LOG,BUF)
	ENDIF
10	CONTINUE
C
20	CONTINUE
	RETURN
	END
