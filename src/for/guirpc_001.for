C
C SUBROUTINE GUIRPC_001
C
C V06 08-NOV-2000 UXN Cleaned up.
C V05 24-JUN-2000 ANDY Start of Changes for Rolldown
C V04 18-APR-2000 AMY USE COMMONS FOR LOCATION OF ASF
C V03 07-APR-2000 XXX MOVED RPC PARAMETERS TO SERVCOM
C V02 28-JAN-2000 AMY CHANGED ERROR COUNT SENDING LENGTH FROM I*2 TO I*4
C V01 06-JAN-2000 AMY Initial revision.
C  
C GUIRPC_001.FOR
C
C This subroutine returns the terminal snapshot.
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)	OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUIRPC_001(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESNET.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:X2XSTN.DEF'
	INCLUDE 'INCLIB:X2XSCL.DEF'
	INCLUDE 'INCLIB:X2XTER.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:RECAGT.DEF'
	INCLUDE 'INCLIB:DISKIO.DEF'
	INCLUDE 'INCLIB:GUIMCOM.DEF'
	INCLUDE 'INCLIB:GUIFIL.DEF'
C
	BYTE		OUTBUF(*)
	INTEGER*4	MES_LEN,RET_CODE,TERM
C
	INTEGER*4	J,ST,SSTATE,TSTATE
	INTEGER*4	TOTTERA,TOTTERC
	INTEGER*4	NUM_COLS,NUM_ROWS
C
	BYTE		I1TEMP(4)
	INTEGER*2	I2TEMP(2)
	INTEGER*4	I4TEMP
	EQUIVALENCE	(I1TEMP,I2TEMP,I4TEMP)
C
	CHARACTER*8 LETTERS
	BYTE		BLETTER(8)
	EQUIVALENCE (BLETTER,LETTERS)
C
	CHARACTER*12 X2LETTERS
	BYTE		BX2LETTER(12)
	EQUIVALENCE (BX2LETTER,X2LETTERS)
C
	INTEGER*4	ACTERM	!Function
C
C  GET TERMINAL NUMBER 
C
	CALL MOVBYT(OUTBUF,10,I1TEMP,1,4)
	TERM = I4TEMP
C
C  IF INVALID TERMINAL NUMBER, RETURN WITH ERROR
C
	IF (TERM.LT.1.OR.TERM.GT.X2X_TERMS) THEN
	  RET_CODE = 11
	  RETURN
	ENDIF
	IF (AGTTAB(AGTNUM,TERM).EQ.0) THEN
	  RET_CODE = 11
	  RETURN
	ENDIF
C
C READ THE AGENT RECORD
C
	CALL READW(ASFFDB, TERM, ASFREC, ST)
	IF (ST .NE. 0) THEN
	  CALL OPS('Failed to read ASF file',ST,TERM)
	  RET_CODE = 11
	  RETURN
	ENDIF
C
C READ THE TERMINAL RECORD.
C
	CALL READW(X2TERFDB,TERM,X2XTER_REC,ST)
	IF(ST.NE.0) THEN
	  CALL OPS('Failed to read X2XTER.FIL',ST,TERM)
	  RET_CODE = 11
	  RETURN
	ENDIF
C
C READ THE STATION RECORD.
C
	CALL READW(X2STNFDB,X2XTER_STN,X2XSTN_REC,ST)
	IF(ST.NE.0) THEN
	  CALL OPS('Failed to read X2XSTN.FIL',ST,X2XTER_STN)
	  RET_CODE = 11
	  RETURN
	ENDIF
C
C READ THE STATION CLASS RECORD.
C
	CALL READW(X2SCLFDB,X2XSTN_STNCLS,X2XSCL_REC,ST)
	IF(ST.NE.0) THEN
	  CALL OPS('Failed to read X2XSCL.FIL',ST,X2XSTN_STNCLS)
	  RET_CODE = 11
	  RETURN
	ENDIF
C
C Build RPC message
C
	CALL RPCARG_INIT() ! use RPC format
C
	NUM_COLS = 15
	NUM_ROWS = 1
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
C
	CALL GUIARG_INT4(OUTBUF,AGTTAB(AGTNUM,TERM))   ! AGENT NUMBER
	CALL GUIARG_INT4(OUTBUF,X2XTER_STN)            ! STATION NUMBER

	CALL ILBYTE(SSTATE,IX2XS_STATE,X2XTER_STN-1)
	CALL GUIARG_INT4(OUTBUF,SSTATE)                ! STATION STATE

	I4TEMP=X2XS_ACK_CNT(X2XTER_STN)
	CALL GUIARG_INT4(OUTBUF,I4TEMP)                ! ACK COUNT

	I4TEMP=X2XS_RESET_CNT(X2XTER_STN)
	CALL GUIARG_INT4(OUTBUF,I4TEMP)                ! RESET COUNT

	TOTTERC = 0
	TOTTERA = 0
	DO J = 1, X2X_MAXPORT
	  I4TEMP=X2XS_NUM_TERMS(J,X2XTER_STN)
	  TOTTERC = TOTTERC + I4TEMP 
	  I4TEMP=ACTERM(X2XTER_STN,J)
	  TOTTERA = TOTTERA + I4TEMP 
	ENDDO
	CALL GUIARG_INT4(OUTBUF,TOTTERC)      ! TERMINALS CONFIGURED IN SAME STN
	CALL GUIARG_INT4(OUTBUF,TOTTERA)      ! TERMINALS ACTIVE IN SAME STATION

	CALL ILBYTE(TSTATE,IX2XT_STATE,TERM-1)
	CALL GUIARG_INT4(OUTBUF,TSTATE)       ! TERMINAL STATE

	CALL GUIARG_INT4(OUTBUF,P(NXTTRA))    ! TRANSACTION COUNT

	I4TEMP=X2XS_LAST_ERR_CODE(X2XTER_STN)
	CALL GUIARG_INT4(OUTBUF,I4TEMP)       ! LAST ERROR

	I4TEMP=X2XS_ERR_CNT(X2XTER_STN)
	CALL GUIARG_INT4(OUTBUF,I4TEMP)       ! ERROR COUNT

	CALL GUIARG_CHAR(OUTBUF,%REF(ASFBYT(SDROP)),2) ! DROP
	CALL GUIARG_CHAR(OUTBUF,%REF(ASFBYT(SGFID)),2) ! GVT FAMILY ID

	X2LETTERS = X2XSCL_DESC
	CALL GUIARG_CHAR(OUTBUF,%REF(X2XSCL_DESC),12)  ! STATION CLASS NAME

	CALL GUIARG_BYTE(OUTBUF,RPCNULL)       ! TEXT DESCRIPTOR
C
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
	END
