C SUBROUTINE WIN_WINLOD
C
C V04 14-MAR-2000 UXN RECORD(1) usage added for function 1 and 4
C                     (NEED_TCF logic added)
C V03 14-JAN-1999 GPW STOPSYS OPTIMIZATION
C V02 13-FEB-1996 RXK Rfss 256, change of a format
C V01 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C
C SUBROUTINE TO LOAD VLF/TCF RECORDS TO DRAW FILES
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE WIN_WINLOD(FUN,RECORD)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESLOG.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
C
        INTEGER*4 NAMVLW(5),NAMTCW(5)                              !V01
	INTEGER*4 K, TBLOCK, VBLOCK, TIND, VIND, ST, TCFCNT, VLFCNT
	INTEGER*4 VLFBUF(72,113),TCFBUF(48,170),VFDB(7),TFDB(7)
	INTEGER*4 VLFREC(8192),TCFREC(8192),RECORD(*),FUN
	EQUIVALENCE(VLFREC(1),VLFBUF(1,1))
	EQUIVALENCE(TCFREC(1),TCFBUF(1,1))
	DATA VLFREC/8192*0/,TCFREC/8192*0/
	DATA VLFCNT/0/,TCFCNT/0/
C
C
	IF(FUN.EQ.1) GOTO 100      !OPEN FILES
	IF(FUN.EQ.2) GOTO 200      !WRITE VLF RECORD
	IF(FUN.EQ.3) GOTO 300      !WRITE TCF RECORD
	IF(FUN.EQ.4) GOTO 400      !CLOSE FILES
C
C OPEN FILES
C
100	CONTINUE

        CALL WINGETW('WINTSK  ',NAMVLW,NAMTCW)                    !V01
	CALL OPENW(VLW,NAMVLW,4,0,0,ST)
	CALL IOINIT(VFDB,VLW,128*256)
	IF(ST.NE.0) CALL FILERR(NAMVLW,1,ST,0)
C
C
	IF (RECORD(1).EQ.1)  THEN
	   CALL OPENW(TCW,NAMTCW,4,0,0,ST)
	   CALL IOINIT(TFDB,TCW,128*256)
	   IF(ST.NE.0) CALL FILERR(NAMTCW,1,ST,0)
	ENDIF
C
C
	VIND=1
	TIND=1
	VBLOCK=0
	TBLOCK=0
	RETURN
C
C WRITE VLF RECORD
C
200	CONTINUE
	VLFCNT=VLFCNT+1
	CALL FASTMOV(RECORD,VLFBUF(1,VIND),72)
	VIND=VIND+1
	IF(VIND.GT.113) THEN
	  VBLOCK=VBLOCK+1
	  CALL WRITEW(VFDB,VBLOCK,VLFREC,ST)
	  IF(ST.NE.0) CALL FILERR(NAMVLW,3,ST,VBLOCK)
	  CALL FASTSET(0,VLFREC,8192)
	  VIND=1
	ENDIF
	RETURN
C
C WRITE RECORD TO CARRYOVER FILE
C
300	CONTINUE
	TCFCNT=TCFCNT+1
	CALL FASTMOV(RECORD,TCFBUF(1,TIND),48)
	TIND=TIND+1
	IF(TIND.GT.170) THEN
	  TBLOCK=TBLOCK+1
	  CALL WRITEW(TFDB,TBLOCK,TCFREC,ST)
	  IF(ST.NE.0) CALL FILERR(NAMTCW,3,ST,TBLOCK)
	  CALL FASTSET(0,TCFREC,8192)
	  TIND=1
	ENDIF
	RETURN
C
C CLOSE FILES
C
400	CONTINUE
	VBLOCK=VBLOCK+1
	CALL WRITEW(VFDB,VBLOCK,VLFREC,ST)
	IF(ST.NE.0) CALL FILERR(NAMVLW,3,ST,VBLOCK)
	CALL CLOSEFIL(VFDB)
	WRITE(6,900) IAM(),VLFCNT,(NAMVLW(K),K=1,5)
C
C
	IF (RECORD(1).EQ.1)  THEN
	   TBLOCK=TBLOCK+1
	   CALL WRITEW(TFDB,TBLOCK,TCFREC,ST)
	   IF(ST.NE.0) CALL FILERR(NAMTCW,3,ST,TBLOCK)
	   CALL CLOSEFIL(TFDB)
	   WRITE(6,900) IAM(),TCFCNT,(NAMTCW(K),K=1,5)
	ENDIF
C
	RETURN
C
900	FORMAT(1X,A,1X,I8,' records loaded to ',5A4)
	END
