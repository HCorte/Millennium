C
C SUBROUTINE X2SNDSTN
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]X2SNDSTN.FOV                                 $
C  $Date::   17 Apr 1996 16:34:56                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - x2sndbuf.for;2 **
C
C V04 08-sep-95 DAS ADDED X2X_COMTSK TO CALL TO X2MSGEDT
C V03 31-JUL-95 DAS ADDED X2CNVDRP
C V02 29-DEC-94 WJK MOVE UNSOLICITED STATION CONNECT AND DISCONNECT FROM GLOBAL
C                   TO STATION CLASS
C V01 19-JUL-94 WS MULTINETWORK CHANGES - Integrate UK changes 
C		   into X2X Baseline
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C X2SNDSTN(BUFFER,MESSAGE,TERMINAL_NO,STATION_NO,MESSAGE_LEN,
C          DEST_LAYER,TOTAL_LENGTH,MES_NUM,CONNCTL_OVR,STATUS)
C     IN:
C        MESSAGE     - MESSAGE TO SEND
C        TERMINAL_NO - TERMINAL NUMBER
C        STATION_NO  - STATION NUNMBER
C        MESSAGE_LEN - MESSAGE LENGTH
C        DEST_LAYER  - DESTINATION FLAG
C        MES_NUM     - MESSAGE NUMBER FROM MESSAGE COMMON
C        CONNCTL_OVR - CONNECTION CONTROL
C     OUT:
C        TOTAL_LENGTH- LENGTH OF DATA FILLED IN "BUFFER"
C        BUFFER      - BUFFER FILLED WITH DATA
C        STATUS      - OPERATION STATUS
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE X2SNDSTN(BUFFER,MESSAGE,TERMINAL_NO,STATION_NO,
     *	  MESSAGE_LEN,DEST_LAYER,TOTAL_LENGTH,MES_NUM,CONNCTL_OVR,
     *	  STATUS)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:PRMDLL.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:X2FEMES.DEF'
	INCLUDE 'INCLIB:X2STMES.DEF'
C
	BYTE      BUFFER(0:*)     !ELIMINATE ILBYTE AND ISBYTE
	INTEGER*2 MESSAGE(*)
	INTEGER*4 TERMINAL_NO,STATION_NO,MESSAGE_LEN,DEST_LAYER
	INTEGER*4 STATUS, ADD_LEN, DISCONNECT, ATRIBUTE
	INTEGER*4 FLAG, DROP, PORT, TEMP, CONNCTL_OVR, MES_NUM
	INTEGER*4 TOTAL_LENGTH, BUF_LEN
	CHARACTER CDROP*2
	INTEGER*4 CLASS					      !V01
C
	IF (IAND(X2X_DEBUG,X2X_DEBUG_SUBS).NE.0)
     *	    TYPE *,'X2SNDSTN ',TERMINAL_NO,STATION_NO,MESSAGE_LEN,
     *	     DEST_LAYER,MES_NUM,CONNCTL_OVR
	CLASS=X2XS_STNCLS(STATION_NO)			      !V01
	BUFFER(X2STMES_PROTID-1) = X2STMES_PROTID_VAL
	BUFFER(X2STMES_DATATYPE-1) = X2STMES_DATATYPE_DOWN
	TEMP=ZEXT (BX2XS_CONF(STATION_NO))                    !CONFIGURATION
	IF (X2XS_TYPE(STATION_NO).EQ.X2XST_BCST) 	      !V01
     *		     TEMP=0                                   !V01
	BUFFER(X2STMES_CONFCHK-1) = TEMP
	CALL I4TOBUF2(STATION_NO,BUFFER,X2STMES_STATION_NO-1)
C
C     UNSOLICITED/SOLICITED/BROADCAST FLAG
C
	IF (IAND(DEST_LAYER,X2DEST_UNSOLICIT).NE.0) THEN
	   PORT=ZEXT (BX2XT_STATION_PORT(TERMINAL_NO))
  	   CDROP=X2XT_DROP_AD(TERMINAL_NO)
           CALL X2CNVDRP(CDROP,DROP)              !....V03
	   FLAG=X2STMES_UNS
	ELSEIF (IAND(DEST_LAYER,X2DEST_BROADCAST).NE.0) THEN
           PORT=0          !1 IS SUBSTARCTED LATER (SHOULD BE -1,ALL)
	   DROP=0     
	   FLAG=X2STMES_BR
	ELSE
	   PORT=ZEXT (BX2XT_STATION_PORT(TERMINAL_NO))
	   FLAG=X2STMES_RE
  	   CDROP=X2XT_DROP_AD(TERMINAL_NO)
           CALL X2CNVDRP(CDROP, DROP)            !....V03
	ENDIF
	PORT=PORT-1
C
C     CHECK IF SHOULD REQUEST NETWORK DELAY
C
	ATRIBUTE=ZEXT (BX2XS_ATRIBUTE(STATION_NO))
        PORT = IAND(PORT,X2STMES_PORT_MASK)
	IF (IAND(ATRIBUTE,X2XSA_STATS).NE.0) THEN
	   PORT=IOR(PORT,X2STMES_RESPONSE_TIME_FLAG)
	ENDIF
	BUFFER(X2STMES_PORTID-1) = PORT                    !TERMINAL 'ADDRESS'
	BUFFER(X2STMES_TERMID-1) = DROP-1
C
C     DISCONNECT DETERMINED BY PRIORITISED FLAG
C     OVERRIDE, GLOBAL FLAG, STATION FLAG
C
	DISCONNECT=IAND(CONNCTL_OVR,'000000FF'X)
	IF (DISCONNECT.EQ.0) DISCONNECT=X2X_GLOBAL_STATION_DISCONNECT
	IF (DISCONNECT.EQ.0) 
     *      DISCONNECT=ZEXT (BX2XS_STATION_DISCONNECT(STATION_NO))
	IF (DISCONNECT.EQ.0) 				   !V01
     *      DISCONNECT= X2XC_STNDIS(CLASS)		   !V01
C 	** START V02 CHANGE **
C
C	THIS UGLE FIX CHANGES A BROADCAST MESSAGE INTO AND UNSOLICITED MESSAGE
C	WHEN THE UNSOLICITED STATION DISCONNECT IS SET TO DISCONNECT 
C	IMMEDIATELY (7).  THE STATION CODE DOES NOT INTERPRIT THE DISCONNECT
C	MODE FIELD IN THE STATION HEADER WHEN THE BROADCAST BIT IS SET. WHY?
C	I DO NOT KNOW.
C
        IF ((FLAG.EQ.X2STMES_BR).AND.
     *      (IAND(DISCONNECT,'0000000F'X).EQ.7)) THEN
          BUFFER(X2STMES_PORTID-1) = 0                    !TERMINAL 'ADDRESS'
          BUFFER(X2STMES_TERMID-1) = 0
           FLAG=X2STMES_UNS
        ENDIF
C 	** END V02 CHANGE **
	FLAG=IOR(DISCONNECT,FLAG)
	BUFFER(X2STMES_FLAGS-1) = FLAG
C
C     COPY MESSAGE TO TRANSPORT BUFFER, FOR "NUMBERED MESSAGE"
C     YOU SHOULD EDIT MESSAGE FROM MESSAGE COMMON
C
	IF (MES_NUM.EQ.0) THEN
	   CALL MOVTAB2(MESSAGE,BUFFER((((X2STMES_DATA+1)/2)*2)-2),
     *	                               (MESSAGE_LEN+1)/2)
	   TOTAL_LENGTH=X2STMES_DATA+MESSAGE_LEN-1
	   CALL I4TOBUF2(MESSAGE_LEN,BUFFER,X2STMES_MESLEN-1)
	ELSE
	   CALL X2MSGEDT(MESSAGE,BUFFER((((X2STMES_DATA+1)/2)*2)-2),
     *                   MES_NUM,MESSAGE_LEN,ADD_LEN,X2X_COMTSK)
           IF(MES_NUM .EQ. RRESET) THEN
             FLAG = IOR(FLAG,X2STMES_DIS_UNC)
             BUFFER(X2STMES_FLAGS-1)=FLAG
           ENDIF
           BUF_LEN = ADD_LEN
	   TOTAL_LENGTH=X2STMES_DATA+BUF_LEN-1
	   CALL I4TOBUF2(BUF_LEN,BUFFER,X2STMES_MESLEN-1)
	ENDIF
	STATUS=0
	IF (IAND(X2X_DEBUG,X2X_DEBUG_SUBS).NE.0)
     *	    TYPE *,'RET X2SNDSTTN  ',TOTAL_LENGTH
	RETURN
	END
