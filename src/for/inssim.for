C  GXSRC:INSSIM.FOR
C  
C  $Log:   GXAFXT:[GOLS]INSSIM.FOV  $
C  
C V07 06-JUL-2005 FRP Modify for IPS Distribution.
C
C     Rev 1.0   17 Apr 1996 13:38:28   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.6   11 Jan 1995 11:22:00   DJO
C  Changed to use APUBUF to pass the TRABUF to the INSOUT task.
C  
C     Rev 1.5   16 Dec 1994 11:50:32   DJO
C  Changes made to support install request/confirm messages from GVT's.
C  
C     Rev 1.4   22 Sep 1994  8:12:42   MCM
C  BYTE SWAPPING IS NO LONGER NECESSARY ON THE DEC LMS
C  
C     Rev 1.3   30 Mar 1994 10:18:28   MCM
C  SET TCP CONNECTION TO TRUE AND ADD SIMULATION OF GAME TABLES REQUEST
C  
C     Rev 1.2   25 Jan 1994 15:44:06   JPJ
C  Updated procom TERNUM location from 2 bytes to 4 bytes
C  
C     Rev 1.1   03 Jan 1994 20:52:18   SYSTEM
C  Applying PVCS header for automatic revision history
C  
C     Rev 1.0    21 Dec 1993 17:52:54   SYSTEM
C  Initial revision.
C
C
C INSSIM.FOR
C
C V06 07-JUL-92 NJA ADDED (OI BIT IN AGTTYP TO CHECK IF SIGNED ON)
C V05 01-JUN-92 JPJ UPDATED RETRY LOGIC
C V04 20-MAR-92 JPJ ADDED (TRAINING MODE)
C V03 06-FEB-92 JPJ ADDED (GVT)
C V02 04-FEB-92 NJA ADDED (2 BYTE CHECKSUM)
C V01 12-NOV-91 JPJ RELEASED FOR VAX (INSTANTS)
C
C
C INSTANT INPUT TRANSACTIONS PROCESSING TASK
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM INSSIM
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
        INCLUDE 'INCLIB:CRSCOM.DEF'
	INCLUDE 'INCLIB:QUECOM.DEF'
	INCLUDE 'INCLIB:CHKSUMCM.DEF'
	INCLUDE 'INCLIB:APUCOM.DEF'
C
	INTEGER*4 MESS(EDLEN)
	INTEGER*4 ST
	INTEGER*4 TER, BUF, STATUS, ITYP, SALPAS, AGTPAS
	INTEGER*4 TASK, CHNPAS
C
	CALL COPYRITE
	CALL SNIF_AND_WRKSET
C
	TASK=INI
C
	MESS(1)=TASK
5	CONTINUE
	BASECHKSUM=IAND(DAYCDC,'FFFF'X)
        TCP_CONNSTS=TCCONN
C
C
C WAIT FOR SOMETHING TO DO
C IF END OF DAY THEN CALL GSTOP(GEXIT_SUCCESS)
C
10	CONTINUE
	IF(DAYSTS.EQ.DSCLOS) CALL GSTOP(GEXIT_SUCCESS)
	IF(DAYSTS.EQ.DSSUSP) THEN
	  CALL HOLD(0,STATUS)
	  IF(DAYSTS.EQ.DSOPEN) GOTO 5
	  GOTO 10
	ENDIF
	CALL HOLD(0,STATUS)
C
C GET BUFFER NUMBER FROM TOP OF QUEUE.
C IF NO WAGERS QUEUED, GO BACK TO WAIT STATE.
C
20	CONTINUE
	CALL TOPQUE(TASK,BUF)
	IF(BUF.EQ.0) GOTO 10
	SYNTERRCOD=0
C
C DECODE TERMINAL MESSAGE INTO INTERNAL TRANSACTION FORMAT
C
	TER = PRO(TERNUM,BUF)
C
C
	CALL FASTSET(0,TRABUF,TRALEN)
	TRABUF(TTYP)=TCRS
	TRABUF(TSTAT)=GOOD
	TRABUF(TERR)=NOER
	TRABUF(TCDC)=DAYCDC
	TRABUF(TTER)=TER
	TRABUF(TFIL)=0
	TRABUF(TSIZE)=1
	TRABUF(TAGT)=AGTTAB(AGTNUM,TER)
	TRABUF(TGAMIND)=1
	TRABUF(TGAMTYP)=TINS
	TRABUF(TGAM)=GTNTAB(TINS,TRABUF(TGAMIND))
C
	ITYP = BPRO(BINPTAB+2-1,BUF)
	TRABUF(TITYP)=IAND(ITYP,'0F'X)
	IF(TRABUF(TITYP).EQ.IVAL) THEN
	  CALL DIVAL(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.ILOT) THEN
	  CALL DILOT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),AGTPAS,SALPAS)
	ELSE IF (TRABUF(TITYP).EQ.ICAR) THEN
	  CALL DICAR(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),AGTPAS,SALPAS)
	ELSE IF (TRABUF(TITYP).EQ.IQTA) THEN
	  CALL DIRPT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.IINV) THEN
	  CALL DIRPT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.IFIN) THEN
	  CALL DIFIN(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),CHNPAS)
	ELSE IF (TRABUF(TITYP).EQ.IMNU) THEN
	  CALL DIMNU(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.IORD) THEN
	  CALL DIORD(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.ISON) THEN
	  CALL DISON(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.ISOF) THEN
	  CALL DISOF(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.ICNF) THEN
	  CALL DICNF(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.IEST) THEN
	  CALL DIEST(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE IF (TRABUF(TITYP).EQ.IGTB) THEN
	  CALL DIGTB(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IFSESON) THEN
          CALL DIFSESON(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IISS) THEN
          CALL DIISS(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),AGTPAS,SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IOACT) THEN
          CALL DIOACT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	ELSE
	  CALL DIVAL(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
	  TRABUF(TITYP)=IVAL
	  TRABUF(TERR)=SYNT
	ENDIF
C
C
	IF(TRABUF(TITYP).EQ.IVAL) THEN
	  CALL SIMIVAL(PRO(INSTAB,BUF),TRABUF)
 	ELSE IF(TRABUF(TITYP).EQ.ILOT) THEN	
	  CALL SIMILOT(PRO(INSTAB,BUF),TRABUF)
 	ELSE IF(TRABUF(TITYP).EQ.ICAR) THEN	
	  CALL SIMICAR(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IQTA) THEN	
	  CALL SIMIQTA(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IINV) THEN	
	  CALL SIMIINV(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IFIN) THEN	
	  CALL SIMIFIN(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IMNU) THEN	
	  CALL SIMIMNU(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IORD) THEN	
	  CALL SIMIORD(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.ICNF) THEN	
	  CALL SIMICNF(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IGTB) THEN	
	  CALL SIMIGTB(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IFSESON) THEN
	  CALL SIMIFSESON(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IISS) THEN
	  CALL SIMIISS(PRO(INSTAB,BUF),TRABUF)
	ELSE IF(TRABUF(TITYP).EQ.IOACT) THEN
	  CALL SIMIOACT(PRO(INSTAB,BUF),TRABUF)
	ENDIF
C
C QUEUE TRANSACTION TO DISPAT (IF ERROR)
C QUEUE TRANSACTION TO CRSPRO (IF NO ERROR)
C
90	CONTINUE
C
cc        CALL TRALOG(TRABUF,PRO(INPTAB+1,BUF))
	CALL TRALOG(TRABUF,APUBUF(2,BUF))
	PRO(INPTAB,BUF)=TRABUF(TSIZE)
	HPRO(TRCODE,BUF)=TYPCRS
	HPRO(INPLEN,BUF)=OUTLEN_MAX
	CRSCNT(1)=CRSCNT(1)+1
        CALL ABL(BUF,QUETAB(1,DIS),ST)
        CALL DQUTRA(TASK,BUF)
	GOTO 20
	END
