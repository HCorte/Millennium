C
C SUBROUTINE LODCHK
C
C LODCHK.FOR
C 
C V17 01-JAN-2010 FJG ePASSIVE
C V16 05-JAN-2001 CS  PASCOM added.
C V15 29-NOV-2000 UXN TGLCOM ADDED.
C V14 05-JUN-2000 OXK SSOCOM added.
C V13 26-NOV-1999 OXK TSPCOM added.
C V12 13-OCT-1999 RXK World Tour added.
C V11 13-MAY-1999 UXN STRCOM AND STROCOM ADDED.
C V10 17-APR-1996 HXK Release of Finland for X.25, Telephone Betting, 
C                     Instant Pass Thru Phase 1
C V09 10-NOV-1995 HXK Further changes for Double, Couple
C V08 24-APR-1995 HXK Merge of V5 development with March 10th 1995 bible
C V07 22-FEB-1995 HXK yabba dabba doo
C V06 15-OCT-1994 HXK Adding /developing Bingo (15.Oct.94)
C V05 12-OCT-1993 GXA Restore commons in same order as they are saved.
C V04 16-JUN-1993 SXH Added PPPCOM, V65COM, S234COM and SCNCOM
C V03 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V02 07-OCT-1991 MTK INITAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C
C SUBROUTINE TO LOAD SYSTEM COMMONS TO
C CHECKPOINT FILE 0 - CHK0.FIL.
C
C
C CALLING SEQUENCE:
C     CALL LODCHK(CERR)
C
C
C OUTPUT
C     CERR  - ERROR RETURN (0 -NO ERROR, 1 - WRITE ERROR)
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE LODCHK(CERR)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'

	INCLUDE 'INCLIB:LTOCOM.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
	INCLUDE 'INCLIB:TGLCOM.DEF'
	INCLUDE 'INCLIB:KIKCOM.DEF'
C	INCLUDE 'INCLIB:NBRCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
!====== INCLUDE 'INCLIB:TSLCOM.DEF'
!====== INCLUDE 'INCLIB:SCRCOM.DEF'

!====== INCLUDE 'INCLIB:WITCOM.DEF'
!====== INCLUDE 'INCLIB:BNGCOM.DEF'
!====== INCLUDE 'INCLIB:DBLCOM.DEF'
!====== INCLUDE 'INCLIB:CPLCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
!======	INCLUDE 'INCLIB:SLOCOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:CHKPNT.DEF'
C	INCLUDE 'INCLIB:POLCOM.DEF'
!====== INCLUDE 'INCLIB:SSCCOM.DEF'
!====== INCLUDE 'INCLIB:SSPCOM.DEF'
!====== INCLUDE 'INCLIB:TRPCOM.DEF'
!====== INCLUDE 'INCLIB:TROCOM.DEF'
!====== INCLUDE 'INCLIB:STACOM.DEF'
!====== INCLUDE 'INCLIB:STRCOM.DEF'
!====== INCLUDE 'INCLIB:STROCOM.DEF'
!====== INCLUDE 'INCLIB:HASHMEM.DEF'
!====== INCLUDE 'INCLIB:SSOCOM.DEF'
        INCLUDE 'INCLIB:PASCOM.DEF'

        ! arguments
        INTEGER*4  CERR             !

        ! variables
	INTEGER*4  FDB(7)           !
	INTEGER*4  LENGTH           !
	INTEGER*4  BLOCK            !
	INTEGER*4  ST               !
	INTEGER*4  IND              !
C
C ASSIGN CHECKPOINT FILE
C
	CERR=-1
	CALL OPENQW(3,SFNAMES(1,CP0),4,0,0,ST)
	CALL IOQINIT(FDB,3,CHKSEC*256)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),1,ST,0)
	    RETURN
	ENDIF
C
	CHKHEADER(CHKPNTDAY) = 0
	CHKHEADER(CHKPNTSER) = NXTSER
	CHKHEADER(CHKPNTBAL) = NXTSER
	BLOCK=1
	CALL WRITEQW(FDB,BLOCK,CHKHEADER,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),1,ST,0)
	    RETURN
	ENDIF
C
C CHECKPOINT CONCOM
C
	IND=2
	BLOCK=(CHKSEC*256/SECSIZE)+1
	LENGTH=CONCSB*CHKSEC*256
	CALL WRITEQIO(FDB,BLOCK,CONBLK,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	IND=IND+CONCSB
	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT AGENT COMMON
C
	LENGTH=AGTCSB*CHKSEC*256
	CALL WRITEQIO(FDB,BLOCK,AGTBLK,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	IND=IND+AGTCSB
	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT SLOCOM
C
C	LENGTH=SLOCSB*CHKSEC*256
C	CALL WRITEQIO(FDB,BLOCK,SLOBLK,LENGTH,ST)
C	IF(ST.NE.0) THEN
C	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C	    RETURN
C	ENDIF
C	IND=IND+SLOCSB
C	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT LTOCOM
C
	LENGTH=LTOCSB*CHKSEC*256
	CALL WRITEQIO(FDB,BLOCK,LTOBLK,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	IND=IND+LTOCSB
	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT SPTCOM
C
	LENGTH=SPTCSB*CHKSEC*256
	CALL WRITEQIO(FDB,BLOCK,SPTBLK,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	IND=IND+SPTCSB
	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT TGLCOM
C
	LENGTH=TGLCSB*CHKSEC*256
	CALL WRITEQIO(FDB,BLOCK,TGLBLK,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	IND=IND+TGLCSB
	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT KIKCOM
C
	LENGTH=KIKCSB*CHKSEC*256
	CALL WRITEQIO(FDB,BLOCK,KIKBLK,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	IND=IND+KIKCSB
	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT NBRCOM
C
C	LENGTH=NBRCSB*CHKSEC*256
C	CALL WRITEQIO(FDB,BLOCK,NBRBLK,LENGTH,ST)
C	IF(ST.NE.0) THEN
C	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C	    RETURN
C	ENDIF
C	IND=IND+NBRCSB
C	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT SCRCOM
C
C       LENGTH=SCRCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,SCRBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+SCRCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT WITCOM
C
C        LENGTH=WITCSB*CHKSEC*256
C        CALL WRITEQIO(FDB,BLOCK,WITBLK,LENGTH,ST)
C        IF(ST.NE.0) THEN
C            CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C            RETURN
C        ENDIF
C	IND=IND+WITCSB
C        BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT TSLCOM
C
C       LENGTH=TSLCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,TSLBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+TSLCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT BNGCOM
C
C       LENGTH=BNGCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,BNGBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+BNGCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT DBLCOM
C
C       LENGTH=DBLCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,DBLBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+DBLCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT CPLCOM
C
C       LENGTH=CPLCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,CPLBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+CPLCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT SSCCOM
C
C       LENGTH=SSCCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,SSCBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+SSCCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT SSPCOM
C
C       LENGTH=SSPCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,SSPBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+SSPCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT TRPCOM
C
C       LENGTH=TRPCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,TRPBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+TRPCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT TROCOM
C
C       LENGTH=TROCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,TROBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+TROCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT STACOM
C
C       LENGTH=STACSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,STABLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+STACSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT STRCOM
C
C       LENGTH=STRCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,STRBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+STRCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT STROCOM
C
C       LENGTH=STROCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,STROBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+STROCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C
C CHECKPOINT TSPCOM
C
C	LENGTH=TSPCSB*CHKSEC*256
C	CALL WRITEQIO(FDB,BLOCK,TSPBLK,LENGTH,ST)
C	IF(ST.NE.0) THEN
C	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C	    RETURN
C	ENDIF
C	IND=IND+TSPCSB
C	BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT SSOCOM
C
C       LENGTH=SSOCOMCSB*CHKSEC*256
C       CALL WRITEQIO(FDB,BLOCK,SSOCOMBLK,LENGTH,ST)
C       IF(ST.NE.0) THEN
C           CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C           RETURN
C       ENDIF
C       IND=IND+SSOCOMCSB
C       BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT PASCOM
C
        LENGTH=PASCSB*CHKSEC*256
        CALL WRITEQIO(FDB,BLOCK,PASBLK,LENGTH,ST)
        IF(ST.NE.0) THEN
            CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
            RETURN
        ENDIF
        IND=IND+PASCSB
        BLOCK=BLOCK+LENGTH/SECSIZE
C
C CHECKPOINT POLCOM
C
C	LENGTH=POLCSB*CHKSEC*256
C	CALL WRITEQIO(FDB,BLOCK,POLBLK,LENGTH,ST)
C	IF(ST.NE.0) THEN
C	  CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
C	  RETURN
C	ENDIF
C	IND=IND+POLCSB
C	BLOCK=BLOCK+LENGTH/SECSIZE
C
C  SET HEADER INFORMATION
C
	CHKHEADER(CHKPNTSER)=NXTSER
	CHKHEADER(CHKPNTTYP)=CHKPNTREG
	CHKHEADER(CHKPNTDAY)=DAYCDC
	CHKHEADER(CHKGAMLEN)=IND-1
	LENGTH=CHKSEC*256
	CALL WRITEQIO(FDB,1,CHKHEADER,LENGTH,ST)
	IF(ST.NE.0) THEN
	    CALL FILERR(SFNAMES(1,CP0),3,ST,BLOCK)
	    RETURN
	ENDIF
	CALL USRCLOSQ1(3)

	CERR=0

	RETURN
C
	END
