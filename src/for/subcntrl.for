C SUBROUTINE SUBCNTRL
C
C SUBCNTRL.FOR
C
C V20 01-DEC-2000 UXN TOTOGOLO ADDED.
C V19 03-MAR-2000 OXK Vakio changes
C V18 13-OCT-1999 RXK World Tour added.
C V17 17-MAY-1999 UXN  Super Triple added. 
C V16 11-JAN-1999 UXN  PeliSuomi changes.
C V15 15-DEC-1995 HXK  Fixed COUNT
C V14 24-NOV-1995 PXB  Build bug fix.
C V13 23-NOV-1995 HXK  Merge of post 65 stuff; changes for Double/Couple
C V12 15-OCT-1994 HXK  Adding /developing Bingo (15.Oct.94)
C V11 11-AUG-1993 SXH  Fixed bug with RAVI scratches
C V10 09-AUG-1993 SXH  Put IND=5 before calling GAME_OPTIONS
C V09 06-AUG-1993 SXH  Testing RAVI scratches
C V08 02-AUG-1993 GXA  Added #3 of races to the Ravi message.
C V07 14-JUL-1993 GXA  Added TSLIAB to Toto Select message.
C V06 22-JUN-1993 GXA  Changed calling sequence to GAME_OPTIONS.
C V05 19-JUN-1993 GXA  Released for Finland Dec Conversion / Oddset.
C V04 21-JAN-1993 DAB  Initial Release
C                      Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                      DEC Baseline
C V03 10-JUL-1992 GCAN ADDED TOTO SELECT ROW STATUSES.
C V02 09-DEC-1991 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C
C THIS SUBROUTINE BROADCASTS TO NETWORK ALL GAME(S) CONTROL MESSAGES.
C
C CALLING SEQUENCE:
C     CALL SUBCNTRL(GAMMAP,UNSOTYP)
C
C INPUT:
C     GAMMAP  - BITMAP OF GAME NUMBERS
C     UNSOTYP - MESSAGE TYPE
C OUTPUT:
C     NONE
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	SUBROUTINE SUBCNTRL(GAMMAP,UNSOTYP)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:LTOCOM.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
	INCLUDE 'INCLIB:TGLCOM.DEF'
	INCLUDE 'INCLIB:KIKCOM.DEF'
	INCLUDE 'INCLIB:SCRCOM.DEF'
	INCLUDE 'INCLIB:WITCOM.DEF'
	INCLUDE 'INCLIB:TSLCOM.DEF'
        INCLUDE 'INCLIB:NBRCOM.DEF'
        INCLUDE 'INCLIB:BNGCOM.DEF'
        INCLUDE 'INCLIB:DBLCOM.DEF'
        INCLUDE 'INCLIB:CPLCOM.DEF'
        INCLUDE 'INCLIB:SSCCOM.DEF'
        INCLUDE 'INCLIB:TRPCOM.DEF'
        INCLUDE 'INCLIB:STRCOM.DEF'
        INCLUDE 'INCLIB:PASCOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:CHKSUMCM.DEF'
C
	BYTE	    MESTAB(OUTLEN_MAX*4)    !Output Message Table
	BYTE	    TYPSUB		    !Message Type / Subtype.
	BYTE	    HEDTYP		    !Message Control
	BYTE	    I1TEMP(4)		    !Temp. Variable
        BYTE        ROWOPN                  !Row Open parameter
        BYTE        ROWCLSL                 !Row Closed, High low nible.
        BYTE        ROWCANL                 !Row Cancelled, High low nible.
        BYTE        ROWPSTL                 !Row Postponed, High low nible.
C
	INTEGER*4   STSFLGS(MAXSRW)         !Row Status Flags
	INTEGER*4   GNUM		    !Game Number
	INTEGER*4   GIND		    !Game Index
	INTEGER*4   GTYP		    !Game Type
	INTEGER*4   TER			    !Terminal Number.
	INTEGER*4   I4TEMP		    !Temp. Variable
        INTEGER*4   PADROW                  !# of Rows Padded to Even Bytes
        INTEGER*4   ROWOFF                  !Loop index
        INTEGER*4   CHKLEN                  !Lenght to checksum
        INTEGER*4   MYCHKSUM                !Calculated checksum
	INTEGER*4   UNSOTYP		    !Unsolicited Message Type.
	INTEGER*4   GAMMAP(2)		    !Game(s) Bitmap, more than 32 games 
	INTEGER*4   IND, MESLEN, COUNT, I, J, BEGIND, BUF
	INTEGER*4   IDX, ST,TMP
	INTEGER*4   STSTRP(MAXTRPRW,3)
        INTEGER*4   EMISIND,WY,WEEK,YEAR
C
	LOGICAL	    PARTIAL_MSG /.FALSE./   !Build Control complete msg.
C
	EQUIVALENCE (I4TEMP,I1TEMP(1))
C
	DATA	    HEDTYP /Z20/
	DATA	    TYPSUB /ZB4/
        DATA        ROWOPN /Z00/
        DATA        ROWCLSL/Z01/
        DATA        ROWCANL/Z02/
        DATA        ROWPSTL/Z03/
	DATA        BEGIND/5/
C
C SCAN BITMAP AND BROADCAST ALL CONTROL MESSAGES REQUIRED
C
	DO 99000 GNUM = 1,MAXGAM      !FOR ALL BITS IN MAP
	IF(.NOT.TSBIT(GAMMAP,GNUM))GOTO 99000
	IF(DAYDRW(GNUM).LE.0) GOTO 99000
	GTYP = GNTTAB(GAMTYP,GNUM)
	GIND = GNTTAB(GAMIDX,GNUM)
C
C BUILD HEADER
C
	IND = 1
	MESTAB(IND+0) = HEDTYP			!Control
	MESTAB(IND+1) = TYPSUB			!Type / Subtype
	IND = IND + 2
C
C BUILD GENERIC GAME OPTION MESSAGE
C
	TER = -1				!Nothing on agent basis!
        IND = BEGIND
	IF(GTYP.NE.TPAS) CALL GAME_OPTIONS(MESTAB,IND,TER,GNUM,PARTIAL_MSG)	
C
C BUILD APPROPRIATE RESPONSE
C
	IF(GTYP.EQ.TSPT) GOTO  1000
	IF(GTYP.EQ.TTSL) GOTO  2000
	IF(GTYP.EQ.TWIT) GOTO  3000
	IF(GTYP.EQ.TSCR) GOTO  4000
	IF(GTYP.EQ.TLTO) GOTO  5000
	IF(GTYP.EQ.TKIK) GOTO  6000    
	IF(GTYP.EQ.TNBR) GOTO  7000
        IF(GTYP.EQ.TBNG) GOTO 11000
        IF(GTYP.EQ.TDBL) GOTO 12000
        IF(GTYP.EQ.TCPL) GOTO 13000
        IF(GTYP.EQ.TSSC) GOTO 14000
        IF(GTYP.EQ.TTRP) GOTO 15000
        IF(GTYP.EQ.TSTR) GOTO 16000
        IF(GTYP.EQ.TTGL) GOTO 17000
        IF(GTYP.EQ.TPAS) GOTO 18000
C
C MUST BE INVALID GAME
C
	GOTO 99000
C
C BUILD SPORTS SPECIFIC PART OF THE CONTROL MESSAGE
C
1000	CONTINUE
C
C # OF ROWS
C
	MESTAB(IND) = SPTMAX(GIND)
	IND = IND + 1
C
	MESLEN = IND - 1 
	GOTO 10000
C
C BUILD TOTO SELECT SPECIFIC PART OF THE CONTROL MESSAGE
C
2000	CONTINUE
C
	MESTAB(IND) = TSLRWS(GIND)		    !# ACTUAL ROWS
	IND = IND + 1
C
C CHECK STATUSES FOR ALL ROWS AND CREATE BITMAP ACCORDINGLY
C
        PADROW =(TSLRWS(GIND)+1)/2*2                !NUMBER OF ROWS PADDED
        DO ROWOFF=1,PADROW
           STSFLGS(ROWOFF) = ROWCLSL
           IF(TSLSTA(ROWOFF,GIND).EQ.GAMOPN) STSFLGS(ROWOFF) = ROWOPN
           IF(TSLSTA(ROWOFF,GIND).EQ.GAMCAN) STSFLGS(ROWOFF) = ROWCANL
           IF(TSLSTA(ROWOFF,GIND).EQ.GAMBFD) STSFLGS(ROWOFF) = ROWCLSL
           IF(TSLSTA(ROWOFF,GIND).EQ.GAMREF) STSFLGS(ROWOFF) = ROWPSTL
	   TMP = TSLROWTYP(ROWOFF,GIND)
           STSFLGS(ROWOFF) = IOR(ISHFT(TMP,2),STSFLGS(ROWOFF))
	END DO
C
        DO ROWOFF=1,PADROW,2
           I4TEMP=ISHFT(STSFLGS(ROWOFF),4)+STSFLGS(ROWOFF+1)
           MESTAB(IND)=I1TEMP(1)
           IND=IND+1
	END DO
C
        I4TEMP = P(TSLIAB)
        MESTAB(IND+0) = I1TEMP(4)
        MESTAB(IND+1) = I1TEMP(3)
        MESTAB(IND+2) = I1TEMP(2)
        MESTAB(IND+3) = I1TEMP(1)
        IND = IND + 4
C
	MESLEN = IND - 1
	GOTO 10000
C
C BUILD WIN TIP SPECIFIC PART OF THE CONTROL MESSAGE
C
3000	CONTINUE
C
C NUMBER OF ACTUAL ROWS
C
        COUNT=0
        DO I=1,MAXWRW
           IF(WITNMS(1,I,GIND).NE.'    ') COUNT=I
	END DO
        I4TEMP = COUNT                                !NUMBER OF ROWS
        MESTAB(IND) = I1TEMP(1)
        IND = IND + 1
C
C CHECK STATUSES FOR ALL ROWS AND CREATE BITMAP ACCORDINGLY
C
        PADROW =(COUNT+1)/2*2                  !NUMBER OF ROWS PADDED
        DO ROWOFF=1,PADROW
           STSFLGS(ROWOFF) = ROWCLSL
           IF(WITSTA(ROWOFF,GIND).EQ.GAMOPN) STSFLGS(ROWOFF) = ROWOPN
           IF(WITSTA(ROWOFF,GIND).EQ.GAMCAN) STSFLGS(ROWOFF) = ROWCANL
	END DO
C
        DO ROWOFF=1,PADROW,2
           I4TEMP=ISHFT(STSFLGS(ROWOFF),4)+STSFLGS(ROWOFF+1)
           MESTAB(IND)=I1TEMP(1)
           IND=IND+1
	END DO
C
        MESLEN = IND - 1
        GOTO 10000
C
C BUILD SCORE SPECIFIC PART OF THE CONTROL MESSAGE
C
4000	CONTINUE
	MESLEN = IND - 1
	GOTO 10000
C
C BUILD LOTTO SPECIFIC PART OF THE CONTROL MESSAGE
C
5000	CONTINUE
	MESLEN = IND - 1
	GOTO 10000
C
C BUILD KICKER SPECIFIC PART OF THE CONTROL MESSAGE
C
6000    CONTINUE
	MESLEN = IND - 1
	GOTO 10000
C
C BUILD NUMBERS SPECIFIC PART OF THE CONTROL MESSAGE
C
7000    CONTINUE
	MESLEN = IND - 1
	GOTO 10000
C
C BUILD BINGO SPECIFIC PART OF THE CONTROL MESSAGE
C
11000   CONTINUE
        MESLEN = IND - 1
        GOTO 10000
C
C BUILD DOUBLE SPECIFIC PART OF THE CONTROL MESSAGE
C
12000	CONTINUE
C
C PARTIALLY CLOSED COMBINATION 17/18
C
	MESTAB(IND) = DBLPCC(GIND)
	IND = IND + 1
C
C NUMBER OF ACTUAL ROWS
C
        COUNT=0
        DO I=1,MAXDBLRW
           IF(DBLNMS(1,I,GIND).NE.'    ') COUNT=I
	END DO
        I4TEMP = COUNT                                !NUMBER OF ROWS
        MESTAB(IND) = I1TEMP(1)
        IND = IND + 1
C
C CHECK STATUSES FOR ALL ROWS AND CREATE BITMAP ACCORDINGLY
C
        PADROW =(COUNT+1)/2*2                  !NUMBER OF ROWS PADDED
        DO ROWOFF=1,PADROW
           STSFLGS(ROWOFF) = ROWCLSL
           IF(DBLSTA(ROWOFF,GIND).EQ.GAMOPN) STSFLGS(ROWOFF) = ROWOPN
           IF(DBLSTA(ROWOFF,GIND).EQ.GAMCAN) STSFLGS(ROWOFF) = ROWCANL
	END DO
C
        DO ROWOFF=1,PADROW,2
           I4TEMP=ISHFT(STSFLGS(ROWOFF),4)+STSFLGS(ROWOFF+1)
           MESTAB(IND)=I1TEMP(1)
           IND=IND+1
	END DO
C
        MESLEN = IND - 1
        GOTO 10000
C
C BUILD COUPLE SPECIFIC PART OF THE CONTROL MESSAGE
C
13000	CONTINUE
C
C NUMBER OF ACTUAL ROWS EVENT A
C
        COUNT=0
        DO I=1,MAXCPLRW/2
           IF(CPLNMS(1,I,GIND).NE.'    ') COUNT=I
	END DO
        I4TEMP = COUNT                                !NUMBER OF ROWS
        MESTAB(IND) = I1TEMP(1)
        IND = IND + 1
C
C CHECK STATUSES FOR ALL ROWS AND CREATE BITMAP ACCORDINGLY
C
        PADROW =(COUNT+1)/2*2                  !NUMBER OF ROWS PADDED
        DO ROWOFF=1,PADROW
           STSFLGS(ROWOFF) = ROWCLSL
           IF(CPLSTA(ROWOFF,GIND).EQ.GAMOPN) STSFLGS(ROWOFF) = ROWOPN
           IF(CPLSTA(ROWOFF,GIND).EQ.GAMCAN) STSFLGS(ROWOFF) = ROWCANL
	END DO
C
        DO ROWOFF=1,PADROW,2
           I4TEMP=ISHFT(STSFLGS(ROWOFF),4)+STSFLGS(ROWOFF+1)
           MESTAB(IND)=I1TEMP(1)
           IND=IND+1
	END DO
C
C
C NUMBER OF ACTUAL ROWS EVENT B
C
        COUNT=0
        DO I=MAXCPLRW/2+1,MAXCPLRW
           IF(CPLNMS(1,I,GIND).NE.'    ') COUNT=I-(MAXCPLRW/2)
	END DO
        I4TEMP = COUNT                                !NUMBER OF ROWS
        MESTAB(IND) = I1TEMP(1)
        IND = IND + 1
C
C CHECK STATUSES FOR ALL ROWS AND CREATE BITMAP ACCORDINGLY
C
        PADROW =(COUNT+1)/2*2                  !NUMBER OF ROWS PADDED
        DO ROWOFF=1,PADROW
          STSFLGS(ROWOFF) = ROWCLSL
          IF(CPLSTA(ROWOFF+MAXCPLRW/2,GIND).EQ.GAMOPN) STSFLGS(ROWOFF) = ROWOPN
          IF(CPLSTA(ROWOFF+MAXCPLRW/2,GIND).EQ.GAMCAN) STSFLGS(ROWOFF) = ROWCANL
	END DO
C
        DO ROWOFF=1,PADROW,2
           I4TEMP=ISHFT(STSFLGS(ROWOFF),4)+STSFLGS(ROWOFF+1)
           MESTAB(IND)=I1TEMP(1)
           IND=IND+1
	END DO
C
        MESLEN = IND - 1
        GOTO 10000
C
C BUILD SUPERSCORE SPECIFIC PART OF THE CONTROL MESSAGE
C
14000	CONTINUE
C
C NUMBER OF OPEN EVENTS (SETS)
C
        I4TEMP = 0
        DO J=1,3
           IF(SSCEST(J,GIND).EQ.GAMOPN) I4TEMP=I4TEMP+1
        ENDDO
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1
C
C STATUS'S OF SETS
C
        I4TEMP = SSCEST(1,GIND)
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1

        I4TEMP = SSCEST(2,GIND)
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1

        I4TEMP = SSCEST(3,GIND)
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1

	MESLEN = IND - 1
	GOTO 10000
C
C BUILD TODAY'S TRIO SPECIFIC PART OF THE CONTROL MESSAGE
C
15000	CONTINUE
C
C NUMBER OF ROWS
C
	CALL FASTSET(0,STSTRP,3*MAXTRPRW)
        I4TEMP = TRPRWS(1,GIND)
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1

        I4TEMP = TRPRWS(2,GIND)
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1

        I4TEMP = TRPRWS(3,GIND)
        MESTAB(IND)=I1TEMP(1)
        IND=IND+1
C
C STATUS'S OF ROWS
C
        DO I=1,MAXTRPRW
	   DO J=1,3
	      IF(TRPSTA(I,J,GIND).EQ.GAMOPN) THEN
	         STSTRP(I,J) = ROWOPN        	       	   
	      ELSEIF(TRPSTA(I,J,GIND).EQ.GAMCAN) THEN
	         STSTRP(I,J) = ROWCANL        	       	   
	      ELSEIF(TRPSTA(I,J,GIND).LT.GAMOPN) THEN
	         STSTRP(I,J) = ROWCLSL       	       	   
              ENDIF
	   ENDDO		
           I4TEMP=ISHFT(STSTRP(I,1),4) +
     *            ISHFT(STSTRP(I,2),2) +
     *            STSTRP(I,3)
           MESTAB(IND)=I1TEMP(1)
	   IND=IND+1
        ENDDO

	MESLEN = IND - 1
	GOTO 10000
C
C BUILD SUPER TRIPLE SPECIFIC PART OF THE CONTROL MESSAGE
C
16000   CONTINUE
C
C PARTIALLY CLOSED COMBINATION 17/18
C
        MESTAB(IND) = STRPCC(GIND)
        IND = IND + 1
C
C NUMBER OF ACTUAL ROWS
C
        COUNT=0
        DO I=1,MAXSTRRW
           IF(STRNMS(1,I,GIND).NE.'    ') COUNT=I
        END DO
        I4TEMP = COUNT                                !NUMBER OF ROWS
        MESTAB(IND) = I1TEMP(1)
        IND = IND + 1
C
C CHECK STATUSES FOR ALL ROWS AND CREATE BITMAP ACCORDINGLY
C
        PADROW =(COUNT+1)/2*2                  !NUMBER OF ROWS PADDED
        DO ROWOFF=1,PADROW
           STSFLGS(ROWOFF) = ROWCLSL
           IF(STRSTA(ROWOFF,GIND).EQ.GAMOPN) STSFLGS(ROWOFF) = ROWOPN
           IF(STRSTA(ROWOFF,GIND).EQ.GAMCAN) STSFLGS(ROWOFF) = ROWCANL
        END DO
C
        DO ROWOFF=1,PADROW,2
           I4TEMP=ISHFT(STSFLGS(ROWOFF),4)+STSFLGS(ROWOFF+1)
           MESTAB(IND)=I1TEMP(1)
           IND=IND+1
        END DO
C
        MESLEN = IND - 1
	GOTO 10000
C
C
C BUILD TOTOGOLO SPECIFIC PART OF THE CONTROL MESSAGE
C
17000	CONTINUE
C
C # OF ROWS
C
	MESTAB(IND) = TGLMAX(GIND)
	IND = IND + 1
C
	MESLEN = IND - 1 
	GOTO 10000
C
C BUILD PASSIVE SPECIFIC PART OF THE CONTROL MESSAGE
C
18000	CONTINUE
        MESTAB(IND + 0) = GTYP
        MESTAB(IND + 1) = GIND
        MESTAB(IND + 2) = 1
        IND = IND + 3
                
        EMISIND = PASCURDRW(GIND)
C
C DRAW DATE
C
        I4TEMP = PASESD(EMISIND,GIND)
        MESTAB(IND + 0) = I1TEMP(2)
        MESTAB(IND + 1) = I1TEMP(1)
        IND = IND + 2
C
C WEEK,YEAR,PRICE
C
        WY = PASDRAW(EMISIND,GIND)
        CALL GETPASDRW(WY,WEEK,YEAR)
        MESTAB(IND + 0) = WEEK
        MESTAB(IND + 1) = MOD(YEAR,100)
        IND = IND + 2

        I4TEMP = PASPRC(EMISIND,GIND)
        MESTAB(IND + 0) = I1TEMP(2)
        MESTAB(IND + 1) = I1TEMP(1)
        IND = IND + 2
C
C DRAW DESCRIPTION
C
        CALL MOVBYT(PASLITDRW(1,1,GIND),1,MESTAB,IND,24)
        IND = IND + 24

	MESLEN = IND - 1
	GOTO 10000
C
C CALCULATE CHECKSUM
C
10000	CONTINUE
        I4CCITT = 0
        MESTAB(3) = I1CCITT(2)
        MESTAB(4) = I1CCITT(1)
        CHKLEN = MESLEN - 1
        CALL GETCCITT(MESTAB,1,CHKLEN,MYCHKSUM)
        I4CCITT = MYCHKSUM
        MESTAB(3) = I1CCITT(2)
        MESTAB(4) = I1CCITT(1)
C
C GET BUFFER AND BROADCAST MESSAGE
C
	CALL GETBUF(BUF)
	IF(BUF.LE.0) GOTO 99000
C
	HPRO(OUTLEN,BUF) = MESLEN
	HPRO(LINENO,BUF) = -1
	HPRO(PRCSRC,BUF) = 0
	HPRO(TRCODE,BUF) = TYPUNS
	HPRO(TERNUM,BUF) = -1
	HPRO(ENCOVR,BUF) = -1     !OVERRIDE ENCRYPTION
C
	DO IDX = 0,MESLEN-1
	   BPRO(BOUTTAB+IDX,BUF)=MESTAB(IDX+1)
	END DO
        CALL QUETRA(LOG,BUF)
	CALL XWAIT(1,2,ST)
C
99000	CONTINUE
	RETURN
	END
