C
C EURSSUBS.FOR
C
C V01 26-APR-2016 SCML M16 PROJECT
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       SUBROUTINE TO GET ATTACH DATE AND TIME IN EURCOM MEMORY
C
C       INPUT : NONE
C       OUTPUT: NONE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE GET_EURS_ATTACHDATTIM()
C
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:EURCOM.DEF'
C
        CALL ICLOCK(1,EURS_ATTACHTIM)
        CALL GDATE(EURS_ATTACHDAT(2),
     *             EURS_ATTACHDAT(3),
     *             EURS_ATTACHDAT(1))
        IF(EURS_ATTACHDAT(1).LT.77) THEN
          EURS_ATTACHDAT(1) = EURS_ATTACHDAT(1) + 2000
        ELSE
          EURS_ATTACHDAT(1) = EURS_ATTACHDAT(1) + 1900
        ENDIF
C
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       SUBROUTINE TO RESET ATTACH DATE AND TIME IN EURCOM MEMORY
C
C       INPUT : NONE
C       OUTPUT: NONE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE CLR_EURS_ATTACHDATTIM()
C
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:EURCOM.DEF'
C
        CALL FASTSET(0,EURS_ATTACHDAT,8)
        CALL FASTSET(0,EURS_ATTACHTIM,2)
C
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       SUBROUTINE TO GET DETATTACH DATE AND TIME IN EURCOM MEMORY
C
C       INPUT : NONE
C       OUTPUT: NONE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE GET_EURS_DETACHDATTIM()
C
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:EURCOM.DEF'
C
        CALL ICLOCK(1,EURS_DETACHTIM)
        CALL GDATE(EURS_DETACHDAT(2),
     *             EURS_DETACHDAT(3),
     *             EURS_DETACHDAT(1))
        IF(EURS_DETACHDAT(1).LT.77) THEN
          EURS_DETACHDAT(1) = EURS_DETACHDAT(1) + 2000
        ELSE
          EURS_DETACHDAT(1) = EURS_DETACHDAT(1) + 1900
        ENDIF
C
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       SUBROUTINE TO RESET DETATTACH DATE AND TIME IN EURCOM MEMORY
C
C       INPUT : NONE
C       OUTPUT: NONE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE CLR_EURS_DETACHDATTIM()
C
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:EURCOM.DEF'
C
        CALL FASTSET(0,EURS_DETACHDAT,8)
        CALL FASTSET(0,EURS_DETACHTIM,2)
C
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       SUBROUTINE TO UPDATE TIMEOUT TOTALS IN MEMORY
C
C       INPUT : MTYP    - MESSAGE TYPE TIMED OUT
C               MSUBTYP - MESSAGE SUBTYPE TIMED OUT
C       OUTPUT: NONE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE UPD_EURS_TOTTMO(MTYP, MSUBTYP)
C
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:EURCOM.DEF'
C
        INTEGER*4 MTYP, MSUBTYP
C
        IF(MTYP.EQ.0) GOTO 100                                                  !WAGER MESSAGE TYPE
        IF(MTYP.EQ.1) GOTO 200                                                  !VALIDATION MESSAGE TYPE
        IF(MTYP.EQ.6) GOTO 300                                                  !REPORT MESSAGE TYPE
        IF(MTYP.EQ.2) GOTO 400                                                  !CANCELLATION MESSAGE TYPE
C
        RETURN
C
C       WAGER MESSAGE TIMEOUT
C
100     CONTINUE
        EURS_TOTEURTMO = EURS_TOTEURTMO + 1
        EURS_TOTWAGTMO = EURS_TOTWAGTMO + 1
        RETURN
C
C       VALIDATION MESSAGE TIMEOUT
C
200     CONTINUE
        EURS_TOTEURTMO = EURS_TOTEURTMO + 1
        IF(MSUBTYP.EQ.VREG) THEN                                                !REGULAR VALIDATION INQUIRY REQUEST (VIRTUAL AND PHYSICAL TERMINALS)
          EURS_TOTVALTMO = EURS_TOTVALTMO + 1
        ELSEIF(MSUBTYP.EQ.VNDON                                                 !NEW VALIDATION CASH PAYMENT REQUEST (PHYSICAL TERMINALS)
     *    .OR. MSUBTYP.EQ.VMID                                                  !OLD VALIDATION PAYMENT REQUEST (VIRTUAL TERMINALS ONLY)
     *    .OR. MSUBTYP.EQ.VNBNK) THEN                                           !NEW VALIDATION BANK TRANSFER REQUEST (PHYSICAL TERMINALS ONLY)
          EURS_TOTPAYTMO = EURS_TOTPAYTMO + 1
        ENDIF
        RETURN
C
C       REPORT MESSAGE TIMEOUT
C
300     CONTINUE
        EURS_TOTEURTMO = EURS_TOTEURTMO + 1
        IF(MSUBTYP.EQ.3) THEN                                                   !FINANCIAL REPORT (OTHER THAN THE BILLING REPORT)
          EURS_TOTFINTMO = EURS_TOTFINTMO + 1
        ELSEIF(MSUBTYP.EQ.1) THEN                                               !GAME RESULTS REPORT
          EURS_TOTGRRTMO = EURS_TOTGRRTMO + 1
        ELSEIF(MSUBTYP.EQ.10) THEN                                              !BILLING REPORT
          EURS_TOTBILTMO = EURS_TOTBILTMO + 1
        ENDIF
        RETURN
C
C       CANCELLATION MESSAGE TIMEOUT
C
400     CONTINUE
        EURS_TOTEURTMO = EURS_TOTEURTMO + 1
        EURS_TOTCANTMO = EURS_TOTCANTMO + 1
        RETURN
C
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       SUBROUTINE TO UPDATE ALREADY TIMEOUT TOTALS IN MEMORY
C
C       INPUT : MTYP    - MESSAGE TYPE ALREADY TIMED OUT
C               MSUBTYP - MESSAGE SUBTYPE ALREADY TIMED OUT
C       OUTPUT: NONE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE UPD_EURS_TOTATO(MTYP, MSUBTYP)
C
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:EURCOM.DEF'
C
        INTEGER*4 MTYP, MSUBTYP
C
        IF(MTYP.EQ.0) GOTO 100                                                  !WAGER MESSAGE TYPE
        IF(MTYP.EQ.1) GOTO 200                                                  !VALIDATION MESSAGE TYPE
        IF(MTYP.EQ.9) GOTO 300                                                  !ERROR MESSAGE TYPE
        IF(MTYP.EQ.6) GOTO 400                                                  !REPORT MESSAGE TYPE
        IF(MTYP.EQ.2) GOTO 500                                                  !CANCELLATION MESSAGE TYPE
C
        RETURN
C
C       WAGER MESSAGE ALREADY TIMED OUT
C
100     CONTINUE
        EURS_TOTEURATO = EURS_TOTEURATO + 1
        EURS_TOTWAGATO = EURS_TOTWAGATO + 1
        RETURN
C
C       VALIDATION MESSAGE ALREADY TIMED OUT
C
200     CONTINUE
        EURS_TOTEURATO = EURS_TOTEURATO + 1
        IF(    MSUBTYP.EQ.VNREG                                                 !NEW VALIDATION INQUIRY CASH PAYMENT RESPONSE (VIRTUAL/PHYSICAL PRIVILEGED AND NON-PRIVILEGED TERMINALS)
     *    .OR. MSUBTYP.EQ.VNIBO                                                 !NEW VALIDATION INQUIRY BANK TRANSFER ONLY RESPONSE (VIRTUAL/PHYSICAL NON-PRIVILEGED TERMINALS)
     *    .OR. MSUBTYP.EQ.VNINQ) THEN                                           !NEW VALIDATION INQUIRY CASH PAYMENT OR BANK TRANSFER RESPONSE (VIRTUAL/PHYSICAL PRIVILEGED TERMINALS)
          EURS_TOTVALATO = EURS_TOTVALATO + 1
        ELSEIF(MSUBTYP.EQ.15) THEN                                              !VALIDATION INQUIRY/PAYMENT RESPONSE (VIRTUAL/PHYSICAL TERMINALS)
          EURS_TOTVERATO = EURS_TOTVERATO + 1
        ELSEIF(MSUBTYP.EQ.VNDON                                                 !NEW VALIDATION CASH PAYMENT RESPONSE (PHYSICAL TERMINALS ONLY)
     *    .OR. MSUBTYP.EQ.VREG                                                  !OLD VALIDATION REGULAR CASH RESPONSE (VIRTUAL TERMINALS ONLY)
     *    .OR. MSUBTYP.EQ.VNBNK) THEN                                           !NEW VALIDATION BANK TRANSFER RESPONSE (PHYSICAL TERMINALS ONLY)
          EURS_TOTPAYATO = EURS_TOTPAYATO + 1
        ENDIF
        RETURN
C
C       ERROR MESSAGE ALREADY TIMED OUT
C
300     CONTINUE
        EURS_TOTEURATO = EURS_TOTEURATO + 1
        EURS_TOTERRATO = EURS_TOTERRATO + 1
        RETURN
C
C       REPORT MESSAGE TIMEOUT
C
400     CONTINUE
        EURS_TOTEURATO = EURS_TOTEURATO + 1
        IF(MSUBTYP.EQ.3) THEN                                                   !FINANCIAL REPORT (OTHER THAN THE BILLING REPORT)
          EURS_TOTFINATO = EURS_TOTFINATO + 1
        ELSEIF(MSUBTYP.EQ.1) THEN                                               !GAME RESULTS REPORT
          EURS_TOTGRRATO = EURS_TOTGRRATO + 1
        ELSEIF(MSUBTYP.EQ.10) THEN                                              !BILLING REPORT
          EURS_TOTBILATO = EURS_TOTBILATO + 1
        ELSEIF(MSUBTYP.EQ.15) THEN                                              !FINANCIAL ERROR REPORT SUBTYPE
          EURS_TOTFERATO = EURS_TOTFERATO + 1
        ENDIF
        RETURN
C
C       CANCELLATION MESSAGE ALREADY TIMED OUT
C
500     CONTINUE
        EURS_TOTEURATO = EURS_TOTEURATO + 1
        IF(MSUBTYP.EQ.0) THEN                                                   !CANCELLATION NO ERROR SUBTYPE
          EURS_TOTCANATO = EURS_TOTCANATO + 1
        ELSEIF(MSUBTYP.EQ.15) THEN                                              !CANCELLATION ERROR SUBTYPE
          EURS_TOTCERATO = EURS_TOTCERATO + 1
        ENDIF
        RETURN
C
        END
C
C END EURSSUBS.FOR
C
