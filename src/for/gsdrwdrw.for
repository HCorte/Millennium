C
C     FILE   : GSDRWDRW.FOR
C     AUTHOR : J.H.R
C     VERSION: 01            DATE: 13 / 02 / 2001
C
C
C V03 05-DEC-2010 FRP Lotto2 Changes
C V02 12-MAR-2010 RXK INCREASE SPACE FOR RETURN COUNT
C V01 JHR INITIAL RELEASE FOR PORTUGAL PROJECT
C
C GSALES DRAW INFORMATION, THIS PROGRAM RUNS GSALES LOADER FOR DRAW INFORMATION
C ( GENERAL INFORMATION ABOUT DRAWS DATE, NUMBER OF SALES )
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rigth Reserved
C
C     **************************************************************************
C
C THIS PROGRAM RUNS GSALES LOADER FOR DRAWS DRAW
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      PROGRAM GSDRWDRW
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO RUN GSALES LOADER FOR DRAWS DRAW
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C CONSTANT PARAMETERS TO RUN GSALES LOADER FOR DRAWS DRAW
C
      INTEGER * 4 VERSION             ! DRAWS DRAW FILE LOADER VERSION
C
C INITIATE CONSTANT PARAMETERS TO RUN GSALES LOADER FOR DRAWS DRAW
C
      PARAMETER(VERSION = 3)          ! DRAWS DRAW FILE LOADER VERSION
C
C VARIABLES DEFINITION TO RUN GSALES LOADER FOR DRAWS DRAW
C
      INTEGER * 4 GNUM                ! GAME NUMBER
      INTEGER * 4 GIND                ! GAME INDEX
      INTEGER * 4 GTYP                ! GAME TYPE
C
      CHARACTER * 22 FILENAME         ! FILE NAME
C
C INITIATE VARIABLES TO RUN GSALES LOADER FOR DRAWS DRAW 
C
      FILRECCNT = 0
C
C DISPLAY USER INFORMATION ( RUNNING GSALES DRAWS DRAW LOADER )
C
      CALL COPYRITE
      TYPE *, IAM()
      TYPE *, IAM(), 'Running Gsales Draws Draw Loader'
      TYPE *, IAM()
C
C GET GSALES DRAWS DRAW FILE NAME YYYYMMDD_DRAWDIV.FIL
C
      WRITE(FILENAME, 100) GET_YYYYMMDD_CDC(DAYCDC)
C
C IF DRAWS DRAW FILE EXIST, DELETE IT
C
      CALL DELETE_FILE_NAME(FILENAME)
C
C GET FREE IDENTIFICATION FILE NUMBER
C
      IDFIL = GET_FREE_IDFIL(0)
C
C OPEN YYYYMMDD_DRAW.FIL ( ASCII FILE, ALTHOUGH IT'S EXTENSION IS '.FIL' )
C
      CALL OPEN_FILE_NAME(IDFIL, FILENAME)
C
C WRITE DRAWS DRAW LOADER HEADER
C
      CALL GSHEADER(VERSION)
C
C LOOP TO GET ACTIVE GAMES AND WRITE INFORMATION IN FILE
C
      DO 1000 GNUM = 1, MAXGAM
C
C GET GAME TYPE AND GAME INDEX, IF IT'S NOT ACTIVE GAME, GO TO CHECK NEXT GAME
C
        GTYP = GNTTAB(GAMTYP, GNUM)
        GIND = GNTTAB(GAMIDX, GNUM)
        IF(GTYP .LT. 1 .OR. GTYP .GT. MAXTYP) GOTO 1000
        IF(GIND .LT. 1 .OR. GIND .GT. MAXIND) GOTO 1000
C
C CHECK IF IS TODAY WINSEL DAY FOR SELECTED GAME
C
        IF(GSALES_AUTO(GNUM) .EQ. 0) GOTO 1000
C
C PRINT DRAW RESULT TRANSACTION FOR SELECTED GAME
C
        IF(GTYP .EQ. TKIK) CALL PRINT_JOKER_DRAW(GNUM)
        IF(GTYP .EQ. TLTO) CALL PRINT_LOTTO_DRAW(GNUM)
        IF(GTYP .EQ. TSPT) CALL PRINT_SPORTS_DRAW(GNUM)
        IF(GTYP .EQ. TTGL) CALL PRINT_RESULTS_DRAW(GNUM)
        IF(GTYP .EQ. TPAS) CALL PRINT_PASSIVE_DRAW(GNUM)
C
C END OF LOOP TO GET ACTIVE GAMES AND WRITE INFORMATION IN FILE
C
1000    CONTINUE
C
C PRINT FOOTER AND CLOSE YYYYDDMM_DRAW.FIL FILE
C
      CALL GSFOOTER
      CALL USRCLOS1(IDFIL)
C
C DISPLAY MESSAGE TO USER
C
      TYPE *, IAM()
      TYPE *, IAM(), 'Generated Draws Draw GSales File: ', FILENAME
      TYPE *, IAM()
C
C  CREATE GSALES END FILE ( TO GSALES MEANS END OF PROCEDURE )
C
      WRITE(FILENAME, 200) GET_YYYYMMDD_CDC(DAYCDC)
      CALL CREATE_GSALES_END_FILE(FILENAME)
C
C GSALES DRAWS DRAW LOADER ENDS OK
C
      CALL GSTOP(GEXIT_SUCCESS)
C
C FORMATS DEFINITION TO RUN GSALES LOADER FOR DRAWS DRAW
C
100   FORMAT('valx:', A8, '_draw.fil')
200   FORMAT('valx:', A8, '_draw.fin')
C
C THIS IS THE END TO RUN GSALES LOADER FOR DRAWS DRAW
C
       END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT DRAW INFORMATION 
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_DRAW(GNUM, DRWCLO, DRWDAT, DRWTIM, RETCNT, RETAMT)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT DRAW INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'      
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT DRAW INFORMATION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
      INTEGER * 4 DRWCLO            ! DRAW CLOSE DATE
      INTEGER * 4 DRWDAT            ! DRAW DATE
      INTEGER * 4 DRWTIM            ! DRAW TIME
      INTEGER * 4 RETCNT
      INTEGER * 4 RETAMT
C
C VARIABLES DEFINITION TO PRINT DRAW INFORMATION
C
      INTEGER * 4 TRNGTYPE          ! TRANSACTION GAME TYPE
      INTEGER * 4 DRAW              ! DRAW NUMBER ( SANTA CASA FORMAT )
      INTEGER * 4 POS               ! INDEX POSITION TO FILE REGISTER
C
C SET TRANSACTION GAME TYPE ( 1: PASSIVE, 2: ON LINE )
C
      TRNGTYPE = 2
      IF(GNTTAB(GAMTYP, GNUM) .EQ. TPAS) TRNGTYPE = 1
C
C SET DRAW NUMBER ( SANTA CASA FORMAT )
C
      DRAW = GSALES_AUTO(GNUM)
      CALL GET_SANTA_CASA_DRW_NUM(DRAW, GNUM)
C
C WRITE INFORMATION TO FILE REGISTER ( COMMON INFORMATION )
C
      WRITE(FILREC, 100)
     * 
     *   TRNGTYPE,                   ! GAME TYPE
     *   GNUM,                       ! GAME NUMBER
     *   GSALES_AUTO(GNUM),          ! DRAW NUMBER
     *   DRWCLO,                     ! DRAW CLOSE DATE ( CDC )
     *   GET_YYYYMMDD_CDC(DRWCLO),   ! DRAW CLOSE DATE
     *   GET_HHMMSS_TIME(DRWTIM),    ! DRAW CLOSE TIME
     *   DRWDAT,                     ! DRAW DATE ( CDC )
     *   GET_YYYYMMDD_CDC(DRWDAT),   ! DRAW DATE
     *   '      ',                   ! DRAW TIME
     *   MOD(DRAW, 10000),           ! DRAW YEAR
     *   DRAW / 10000                ! DRAW WEEK
C
      FILRECLNG = 1 + 2 + 6 + 4 + 8 + 6 + 4 + 8 + 6 + 4 + 3
C
C SET VARIABLES TO WRITE SPECIAL INFORMATION ( ON LINE / PASSIVE )
C
      POS = FILRECLNG + 1
C
C WRITE INFORMATION FOR ON LINE GAMES 
C
      IF(TRNGTYPE .EQ. 2) THEN
        WRITE(FILREC(POS:POS + 72), 200)
     *
     *     '         ',                     ! TOTAL TICKET NUMBER ON + OFF LINE
     *     '         ',                     ! TOTAL TICKET NUMBER OFF LINE 
     *     PRNT_AMT(TOTDRW(TOTAMTON), 2),   ! TOTAL AMOUNT ON LINE AND OFF LINE
     *     '            ',                  ! TOTAL ROUND AMOUNT
     *     PRNT_AMT(TOTDRW(TOTAMTOF), 2),   ! TOTAL AMOUNT OFF LINE
     *     '       ',                       ! BLANKS FOR NOT PASSIVE GAMES
     *     '            '                   ! BLANKS FOR NOT PASSIVE GAMES

C
        FILRECLNG = FILRECLNG + 9 + 9 + 12 + 12 + 12 + 7 + 12
      ENDIF
C
C WRITE INFORMATION FOR PASSIVE GAMES 
C
      IF(TRNGTYPE .EQ. 1) THEN
        WRITE(FILREC(POS:POS + 72), 300) 
     *
     *     '         ',                  ! TOTAL TICKET NUMBER ON + OFF LINE
     *     '         ',                  ! TOTAL TICKET NUMBER OFF LINE 
     *     PRNT_AMT(TOTDRW(TOTAMTON), 2),! TOTAL AMOUNT ON LINE AND OFF LINE
     *     '            ',               ! TOTAL ROUND AMOUNT
     *     '            ',               ! TOTAL AMOUNT OFF LINE
     *     RETCNT,                       ! TOTAL RETURN COUNT, ONLY PASSIVE    
     *     PRNT_AMT(RETAMT, 2)           ! TOTAL RETURN AMOUNT, ONLY PASSIVE
C
        FILRECLNG = FILRECLNG + 9 + 9 + 12 + 12 + 12 + 7 + 12
      ENDIF
C
C WRITE INFORMATION TO GSALES LOADER AND ADD ONE TO FILE REGISTER COUNTER
C
      WRITE(IDFIL, 400) FILREC(1:FILRECLNG)
      FILRECCNT = FILRECCNT + 1
C
C FORMATS DEFINITION TO PRINT DRAW INFORMATION
C
100   FORMAT(I1.1, I2.2, I6.6, I4.4, A8, A6, I4.4, A8, A6, I4.4, I3.3)
200   FORMAT(A9, A9, 3(A12), A7, A12)
300   FORMAT(A9, A9, 3(A12), I7.7, A12)
400   FORMAT(A)
C
C THIS IS THE END TO PRINT DRAW INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_LOTTO_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT LOTTO DRAW INFORMATION ( TOTAL SALES, TOTAL TICKETS, ETC )
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_LOTTO_DRAW(GNUM)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT LOTTO DRAW INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DLTREC.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT LOTTO DRAW INFORMATION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
C
C VARIABLES DEFINITIONS TO PRINT LOTTO DRAW INFORMATION
C
      INTEGER * 4 GAMIDFIL          ! GAME IDENTIFICATION FILE
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 DUMMY
C
C GET FREE LUN FOR LOTTO GAME FILE AND OPEN IT 
C
      GAMIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(GAMIDFIL, GAMFIL, GNUM)
      CALL IOINIT(FDB, GAMIDFIL, DLTSEC * 256)
C
C READ DRAW INFORMATION FROM LOTTO GAME FILE AND CLOSE FILE
C
      CALL READ_DRAW_FILE(GSALES_AUTO(GNUM), GNUM, FDB, DLTREC)
      CALL CLOSEFIL(FDB)
C
C GET TOTAL SALES INFORMATION ( READ DAF FILE )
C
      CALL GET_SALES_INFORMATION(DLTSAL, LTGENT)
C
C WRITE INFORMATION TO FILE REGISTER
C
      CALL PRINT_DRAW(GNUM, DLTESD, DLTDAT(CURDRW), DLTCTM, DUMMY, DUMMY)
C
C THIS IS THE END TO PRINT LOTTO DRAW INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_SPORTS_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT SPORTS DRAW INFORMATION ( TOTAL SALES, TOTAL TICKETS, ETC )
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_SPORTS_DRAW(GNUM)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT SPORTS DRAW INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT SPORTS DRAW INFORMATION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
C
C VARIABLES DEFINITIONS TO PRINT SPORTS DRAW INFORMATION
C
      INTEGER * 4 GAMIDFIL          ! GAME IDENTIFICATION FILE
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 DUMMY
C
C GET FREE LUN FOR SPORTS GAME FILE AND OPEN IT 
C
      GAMIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(GAMIDFIL, GAMFIL, GNUM)
      CALL IOINIT(FDB, GAMIDFIL, DSPSEC * 256)
C
C READ DRAW INFORMATION FROM SPORTS GAME FILE AND CLOSE FILE
C
      CALL READ_DRAW_FILE(GSALES_AUTO(GNUM), GNUM, FDB, DSPREC)
      CALL CLOSEFIL(FDB)
C
C GET TOTAL SALES INFORMATION ( READ DAF FILE )
C
      CALL GET_SALES_INFORMATION(DSPSAL, SPGENT)
C
C WRITE INFORMATION TO FILE REGISTER
C
      CALL PRINT_DRAW(GNUM, DSPESD, DSPDAT(CURDRW), DSPCTM, DUMMY, DUMMY)
C
C THIS IS THE END TO PRINT SPORTS DRAW INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_RESULTS_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT RESULTS DRAW INFORMATION ( TOTAL SALES, TOTAL TICKETS, ETC )
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_RESULTS_DRAW(GNUM)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT RESULTS DRAW INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DTGREC.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT RESULTS DRAW INFORMATION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
C
C VARIABLES DEFINITIONS TO PRINT RESULTS DRAW INFORMATION
C
      INTEGER * 4 GAMIDFIL          ! GAME IDENTIFICATION FILE
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 DUMMY
C
C GET FREE LUN FOR RESULTS GAME FILE AND OPEN IT 
C
      GAMIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(GAMIDFIL, GAMFIL, GNUM)
      CALL IOINIT(FDB, GAMIDFIL, DTGSEC * 256)
C
C READ DRAW INFORMATION FROM RESULTS GAME FILE AND CLOSE FILE
C
      CALL READ_DRAW_FILE(GSALES_AUTO(GNUM), GNUM, FDB, DTGREC)
      CALL CLOSEFIL(FDB)
C
C GET TOTAL SALES INFORMATION ( READ DAF FILE )
C
      CALL GET_SALES_INFORMATION(DTGSAL, TGGENT)
C
C WRITE INFORMATION TO FILE REGISTER
C
      CALL PRINT_DRAW(GNUM, DTGESD, DTGDAT(CURDRW), DTGCTM, DUMMY, DUMMY)
C
C THIS IS THE END TO PRINT RESULTS DRAW INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_PASSIVE_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT PASSIVE DRAW INFORMATION ( TOTAL SALES, TOTAL TICKETS, ETC )
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_PASSIVE_DRAW(GNUM)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT PASSIVE DRAW INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DPAREC.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT PASSIVE DRAW INFORMATION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
C
C VARIABLES DEFINITIONS TO PRINT PASSIVE DRAW INFORMATION
C
      INTEGER * 4 GAMIDFIL          ! GAME IDENTIFICATION FILE
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 RETCNT,RETAMT
C
C GET FREE LUN FOR PASSIVE GAME FILE AND OPEN IT 
C
      GAMIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(GAMIDFIL, GAMFIL, GNUM)
      CALL IOINIT(FDB, GAMIDFIL, DPASEC * 256)
C
C READ DRAW INFORMATION FROM PASSIVE GAME FILE AND CLOSE FILE
C
      CALL READ_DRAW_FILE(GSALES_AUTO(GNUM), GNUM, FDB, DPAREC)
      CALL CLOSEFIL(FDB)
C
C SET TOTAL RETURN COUNT ( WE ARE USING TOTAL TICKET NUMBER VARIABLE )
C
      RETCNT = DPAFIN(TRACNT,TRET)
C
C SET TOTAL RETURN AMOUNT ( WE ARE USING TOTAL AMOUNT VARIABLE )
C
      RETAMT = DPAFIN(DOLAMT,TRET)
C
C SET ONLINE SALES 
C 
      TOTDRW(TOTTCKON) = DPAFIN(TRACNT,TWAG)
      TOTDRW(TOTAMTON) = DPAFIN(DOLAMT,TWAG)
C
C WRITE INFORMATION TO FILE REGISTER
C
      CALL PRINT_DRAW(GNUM, DPAESD, DPAESD, DPACTM, RETCNT, RETAMT)
C
C THIS IS THE END TO PRINT PASSIVE DRAW INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: PRINT_JOKER_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 26 / 03 / 2001
C
C ******************************************************************************
C
C FUNCTION TO PRINT JOKER DRAW INFORMATION ( TOTAL SALES, TOTAL TICKETS, ETC )
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PRINT_JOKER_DRAW(GNUM)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO PRINT JOKER DRAW INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
      INCLUDE 'INCLIB:DKKREC.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
C PARAMETERS DEFINITION TO PRINT JOKER DRAW INFORMATION
C
      INTEGER * 4 GNUM              ! GAME NUMBER
C
C VARIABLES DEFINITIONS TO PRINT JOKER DRAW INFORMATION
C
      INTEGER * 4 GAMIDFIL          ! GAME IDENTIFICATION FILE
      INTEGER * 4 FDB(7)            ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 SALES(KIGENT)     ! JOKER SALES
      INTEGER * 4 GAM               ! GAME COUNTER
      INTEGER * 4 SALCNT            ! SALES COUNTER
      INTEGER * 4 DUMMY
C
C GET FREE LUN FOR JOKER GAME FILE AND OPEN IT
C
      GAMIDFIL = GET_FREE_IDFIL(1)
      CALL OPEN_SYS_FILE(GAMIDFIL, GAMFIL, GNUM)
      CALL IOINIT(FDB, GAMIDFIL, DKKSEC * 256)
C
C READ DRAW INFORMATION FROM JOKER GAME FILE AND CLOSE FILE
C
      CALL READ_DRAW_FILE(GSALES_AUTO(GNUM), GNUM, FDB, DKKREC)
      CALL CLOSEFIL(FDB)
C
C CALCULATE JOKER OFF LINE SALES
C
      CALL FASTSET(0, SALES, KIGENT)
      DO SALCNT = 1, KIGENT
      	DO GAM = 1, MAXGAM  
          SALES(SALCNT) = SALES(SALCNT) + DKKSAL(SALCNT, GAM)
        ENDDO
      ENDDO 
C
C GET TOTAL SALES INFORMATION ( READ DAF FILE )
C
      CALL GET_SALES_INFORMATION(SALES, KIGENT)      
C
C WRITE INFORMATION TO FILE REGISTER
C
      CALL PRINT_DRAW(GNUM, DKKESD, DKKDAT(CURDRW), DKKCTM, DUMMY, DUMMY)
C
C THIS IS THE END TO PRINT JOKER DRAW INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: GET_SALES_INFORMATION
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 15 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO GET TOTAL SALES INFORMATION BY GAME
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE GET_SALES_INFORMATION(SALES, MAXSALES)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO GET TOTAL SALES INFORMATION BY GAME
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:RECDAF.DEF'
      INCLUDE 'INCLIB:GSALES.DEF'
C
C PARAMETERS DEFINITION TO GET TOTAL SALES INFORMATION BY GAME
C
      INTEGER * 4 SALES(*)         ! TOTAL SALES
      INTEGER * 4 MAXSALES         ! MAXIMUM LENGHT OF SALES ARRAY
C
C VARIABLES DEFINITION TO GET TOTAL SALES INFORMATION BY GAME
C
      INTEGER * 4 SALCNT           ! SALES COUNTER
C
C INITIATE VARIABLES TO GET TOTAL SALES INFORMATION BY GAME
C
      CALL FASTSET(0, TOTDRW, TOTDRWSIZE)
C
C SET TOTAL SALES AMOUNT FOR GAME ( ON LINE AND OFF LINE )
C
      DO SALCNT = 1, MAXSALES
        IF(SALCNT .NE. 2 .AND. SALCNT .NE. MAXSALES) THEN
          TOTDRW(TOTAMTON) = TOTDRW(TOTAMTON) + SALES(SALCNT)
        ENDIF
      ENDDO
C
C SET TOTAL SALES COUTERS ( TICKET COUNTERS )
C
      TOTDRW(TOTTCKON) = 0
C
C SET OFF LINE INFORMATION TO TOTAL DRAWS ( WE DON'T HAVE TOTAL TICKET COUNT )
C
      TOTDRW(TOTTCKOF) = 0          
      TOTDRW(TOTAMTOF) = SALES(2) + SALES(MAXSALES)
C
C ADD TOTAL OFF LINE INFORMATION TO ON LINE INFORMATION
C
      TOTDRW(TOTTCKON) = TOTDRW(TOTTCKON) + TOTDRW(TOTTCKOF)
      TOTDRW(TOTAMTON) = TOTDRW(TOTAMTON) + TOTDRW(TOTAMTOF)
C
C THIS IS THE END TO GET TOTAL SALES INFORMATION BY GAME
C
      END


