C
C V05 11-AUG-2011 RXK Call of COPYRITE added.
C V04 11-APR-2011 RXK Skip the game-loop if game is not defined
C V03 07-DEC-2010 FRP Lotto2 Changes.
C V02 05-NOV-2003 FRP Modify for Batch2 Totobola Changes.
C V01 30-APR-2001 ANG  INITIAL RELEASE FOR PORTUGAL
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1998 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C=======OPTIONS /CHECK=NOOVERFLOW
        PROGRAM PROC_WDRSAP
        IMPLICIT NONE

        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'

        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:LTOCOM.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
	INCLUDE 'INCLIB:TGLCOM.DEF'
	INCLUDE 'INCLIB:KIKCOM.DEF'
        INCLUDE 'INCLIB:PASCOM.DEF'
        INCLUDE 'INCLIB:STANDARD.DEF'
        INCLUDE 'INCLIB:DATBUF.DEF'

        INTEGER*2 DATE(DATLEN)

	INTEGER*4    ST,SAPLUN,GNUM,GTYP,GIND,ENDCDC(MAXGAM),DRWCDC(MAXGAM)
	CHARACTER*20 SAPFILE

	LOGICAL GEN_REPORTS

        CALL COPYRITE

        DATE(VCDC) = DAYCDC
        CALL CDATE(DATE)

C       IF (DATE(VDOW).NE.SATURDAY) THEN
C         CALL GSTOP(GEXIT_SUCCESS)
C       ENDIF

	CALL FASTSET(0,ENDCDC,SIZEOF(ENDCDC)/4)
	CALL FASTSET(0,DRWCDC,SIZEOF(DRWCDC)/4)
	GEN_REPORTS = .FALSE.

	DO 200 GNUM=1,MAXGAM
	    GTYP = GNTTAB(GAMTYP,GNUM)
	    GIND = GNTTAB(GAMIDX,GNUM)
            IF(GTYP.EQ.0.OR.GIND.EQ.0) GOTO 200

	    IF(GTYP.EQ.TLTO .AND. LTOESD(GIND).EQ.DAYCDC) THEN
	      ENDCDC(GNUM) = LTOESD(GIND)
	      DRWCDC(GNUM) = LTODAT(CURDRW,GIND)
	      GEN_REPORTS = .TRUE.
	    ENDIF

	    IF(GTYP.EQ.TSPT .AND. SPTESD(GIND).EQ.DAYCDC)THEN
	      ENDCDC(GNUM) = SPTESD(GIND)
	      DRWCDC(GNUM) = SPTDAT(CURDRW,GIND)
	      GEN_REPORTS = .TRUE.
	    ENDIF

	    IF(GTYP.EQ.TTGL .AND. TGLESD(GIND).EQ.DAYCDC)THEN
	      ENDCDC(GNUM) = TGLESD(GIND)
	      DRWCDC(GNUM) = TGLDAT(CURDRW,GIND)
	      GEN_REPORTS = .TRUE.
	    ENDIF

	    IF(GTYP.EQ.TKIK) THEN
              IF(KIKESD(GIND).EQ.DAYCDC)THEN
	        ENDCDC(GNUM) = KIKESD(GIND)
	        DRWCDC(GNUM) = KIKDAT(CURDRW,GIND)
	        GEN_REPORTS = .TRUE.
	      ENDIF
	    ENDIF
200	CONTINUE

        IF(.NOT.GEN_REPORTS) CALL GSTOP(GEXIT_SUCCESS)

	TYPE*,IAM(),'>>> GENERATE WDRSAP_DAYCDC.ASC <<<'
C
C BUILD FILE NAME
C
	WRITE(SAPFILE,10) DAYCDC

	CALL FIND_AVAILABLE_LUN(SAPLUN,ST)
	IF (ST.NE.0) THEN
	    TYPE*,IAM(),'ERROR GETTING LOGCAL UNIT FOR ',SAPFILE
	    CALL GSTOP(GEXIT_FATAL)
	ENDIF

	OPEN(SAPLUN,
     *       FILE   = SAPFILE,
     *       STATUS = 'NEW',
     *       IOSTAT = ST)

	IF (ST.NE.0) THEN
	    TYPE*,IAM(),'ERROR OPPENING FILE ',SAPFILE
	    CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C GENERATE WDRSAP_DAYCDC.ASC
C
	CALL WRT_SAP(SAPLUN,0,0,0,'HW1')
	DO GNUM=1,MAXGAM
	    IF (DAYDRW(GNUM).GT.0.AND.GNTTAB(GAMTYP,GNUM).NE.TPAS
     *          .AND. ENDCDC(GNUM).EQ.DAYCDC) THEN
		CALL WRT_SAP(SAPLUN,GNUM,DAYDRW(GNUM),DRWCDC(GNUM),'DT ')
	    ENDIF
	ENDDO
	CALL WRT_SAP(SAPLUN,0,0,0,'HW9')
	 
	CALL GSTOP(GEXIT_SUCCESS)
10	FORMAT('FILE:WDRSAP_',I4.4,'.ASC')
	END

C********************************************
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE WRT_SAP(SAPLUN,GNUM,DRAW,DCDC,RECTYP)
        IMPLICIT NONE
C********************************************

        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'

        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:DATBUF.DEF'
        INCLUDE 'INCLIB:STANDARD.DEF'

        INTEGER*2   DATE(DATLEN)
	
	INTEGER*4   IDX_FDB(7),ST,IND,INDDRW
	INTEGER*4   SAPLUN,GNUM,DRAW,DCDC,CNTREC/0/

	INTEGER*4   TOTONILIQ,TOTOFILIQ,TOTONCOM,TOTOFCOM,TOTSAPCOM,TOTCOMRES
	INTEGER*4   TOTWAG,TOTCOM

	INTEGER*4   WEEK,YEAR,GTYP

        CHARACTER*20 FILENAME
        INTEGER*4    IFILNAM(5)
        EQUIVALENCE  (FILENAME,IFILNAM)

        STRUCTURE       /STCAMTDRW/
            INTEGER*8   AMTDRWONL(6,MAXGAM)
            INTEGER*8   COMDRWONL(6,MAXGAM)
            INTEGER*8   AMTDRWOFF(6,MAXGAM)
            INTEGER*8   COMDRWOFF(6,MAXGAM)
        END STRUCTURE

        RECORD /STCAMTDRW/ REGAMTDRW

	CHARACTER*3 RECTYP
C
CC	LOGICAL     FIRST
CC
CC	FIRST = TRUE
CC	IF (FIRST) THEN
CC	    FIRST = .FALSE.
CC
CC	    FILENAME = 'SAPDRWAMT.FIL'
C
CC	    CALL FIDX_OPEN(IDX_FDB,FILENAME,SIZEOF(REGAMTDRW),'OLD',ST)
CC	    IF  (ST.NE.0) CALL FILERR(IFILNAM,OPEN_ERROR,ST,0)
CC	ENDIF
C
	FILENAME = 'SAPDRWAMT.FIL'
C
	IF  (RECTYP.EQ.'HW1') THEN

	    CALL FIDX_OPEN(IDX_FDB,FILENAME,SIZEOF(REGAMTDRW),'OLD',ST)
	    IF  (ST.NE.0) CALL FILERR(IFILNAM,OPEN_ERROR,ST,0)
C
	    DATE(VCDC) = DAYCDC
	    CALL CDATE(DATE)

	    CNTREC = CNTREC + 1
	    WRITE(SAPLUN,10) RECTYP,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY),' '

	ELSEIF (RECTYP.EQ.'DT ') THEN

	    GTYP = GNTTAB(GAMTYP,GNUM)
C
C GET TOTAL SALES FOR THIS DRAW
C
            CALL FIDX_READ(IDX_FDB,1,SIZEOF(REGAMTDRW),REGAMTDRW,ST)
	    IF  (ST.NE.0) CALL FILERR(IFILNAM,READ_ERROR,ST,1)

	    TOTONILIQ = REGAMTDRW.AMTDRWONL(1,GNUM) + REGAMTDRW.AMTDRWONL(2,GNUM)
            TOTOFILIQ = REGAMTDRW.AMTDRWOFF(1,GNUM) + REGAMTDRW.AMTDRWOFF(2,GNUM)
C
C GET INVOICE TOTAL COMISSION FOR SAP
C
	    TOTSAPCOM = ISHFT(REGAMTDRW.COMDRWONL(1,GNUM),-32) +
     *                  ISHFT(REGAMTDRW.COMDRWOFF(1,GNUM),-32)
C
            TOTONCOM = IAND(REGAMTDRW.COMDRWONL(1,GNUM),'00000000FFFFFFFF'X) +
     *                 REGAMTDRW.COMDRWONL(2,GNUM)
C
            TOTOFCOM = IAND(REGAMTDRW.COMDRWOFF(1,GNUM),'00000000FFFFFFFF'X) +
     *                 REGAMTDRW.COMDRWOFF(2,GNUM)

	    CALL GETWEK(DRAW,GNUM,WEEK,YEAR,ST)
C
	    DATE(VCDC) = DCDC
	    CALL CDATE(DATE)
C
            TOTWAG = TOTONILIQ + TOTOFILIQ
	    CNTREC = CNTREC + 1
	    WRITE(SAPLUN,20) '010',GNUM,WEEK,YEAR,TOTWAG,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)

	    IF (GTYP.EQ.TSPT.OR.GTYP.EQ.TTGL) THEN
	       TOTCOM = TOTONCOM  + TOTOFCOM

	       CNTREC = CNTREC + 1
	       WRITE(SAPLUN,20) '030',GNUM,WEEK,YEAR,TOTCOM,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)
	    ELSE
C
C GET FIVE WEEKS AMOUNT
C
	       TOTWAG = 0
	       TOTCOM = 0
	       DO IND=3,6
	          TOTWAG = TOTWAG + REGAMTDRW.AMTDRWONL(IND,GNUM) + REGAMTDRW.AMTDRWOFF(IND,GNUM)
	          TOTCOM = TOTCOM + REGAMTDRW.COMDRWONL(IND,GNUM) + REGAMTDRW.COMDRWOFF(IND,GNUM)
	       ENDDO

	       TOTCOMRES = (TOTONCOM+TOTOFCOM+TOTCOM) - TOTSAPCOM
	       TOTCOMRES = (TOTONCOM + TOTOFCOM) - TOTCOMRES	    !ADDED ADJUST AMOUNT FOR TOTAL COMISSION
	       CNTREC = CNTREC + 1
	       WRITE(SAPLUN,20) '030',GNUM,WEEK,YEAR,TOTCOMRES,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)
C
	       CNTREC = CNTREC + 1
	       WRITE(SAPLUN,20) '015',GNUM,WEEK,YEAR,TOTWAG,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)

	       CNTREC = CNTREC + 1
	       WRITE(SAPLUN,20) '035',GNUM,WEEK,YEAR,TOTCOM,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)
C
C GET LAST FIVE WEEKS AMOUNT
C
	       TOTWAG = 0
	       TOTCOM = 0
	       IND    = 6
	       DO INDDRW=5,2,-1
                  CALL FIDX_READ(IDX_FDB,INDDRW,SIZEOF(REGAMTDRW),REGAMTDRW,ST)
                  IF  (ST.NE.0) CALL FILERR(IFILNAM,READ_ERROR,ST,INDDRW)

	          TOTWAG = TOTWAG + REGAMTDRW.AMTDRWONL(IND,GNUM) + REGAMTDRW.AMTDRWOFF(IND,GNUM)
		  TOTCOM = TOTCOM + REGAMTDRW.COMDRWONL(IND,GNUM) + REGAMTDRW.COMDRWOFF(IND,GNUM)

		  IND = IND - 1
	       ENDDO

	       CNTREC = CNTREC + 1
	       WRITE(SAPLUN,20) '018',GNUM,WEEK,YEAR,TOTWAG,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)

	       CNTREC = CNTREC + 1
	       WRITE(SAPLUN,20) '038',GNUM,WEEK,YEAR,TOTCOM,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY)

	    ENDIF

	ELSEIF (RECTYP.EQ.'HW9') THEN
	    CNTREC = CNTREC + 1
  	    WRITE(SAPLUN,30) RECTYP,CNTREC,' '

	    CLOSE(SAPLUN)

            CALL FIDX_CLOSE(IDX_FDB,ST)
            IF  (ST.NE.0) CALL FILERR(IFILNAM,CLOSE_ERROR,ST,0)
	ENDIF
C
CC        CALL FIDX_CLOSE(IDX_FDB,ST)
CC        IF  (ST.NE.0) CALL FILERR(IFILNAM,CLOSE_ERROR,ST,0)
C	
	RETURN
10	FORMAT(A3,I4,I2.2,I2.2,13(A1))
20	FORMAT(A3,I2.2,I3.3,I4,I13.13,I4,I2.2,I2.2)
30	FORMAT(A3,I6.6,15(A1))

	END
