C
C V01 08-DEC-2000 ANG INITIAL RELEASE FOR PORTUGAL
C
C NOTE: MUST LINK WITH MODULE CONTAINING LOGICAL FUNCTION IS_BLANK
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1993 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C SUBROUTINE GAME_TYPNDX(GNUM,GTYP,GNDX,ST)
C
C THIS SUBROUTINE SHOWS THE USER ALL AVAILABLE GAME NAMES
C AND AFTER PROMPTING THE USER TO SELECT A GAME
C IT RETURNS THE GAME TYPE AND INDEX
C GAME NAMES ARE RETRIEVED FROM THE SCF FILE
C
C INPUTS:
C *NONE*
C
C OUTPUTS:
C  GNUM        GAME NUMBER                            INT*4
C  GTYP        GAME TYPE                              INT*4
C  GNDX        GAME INDEX                             INT*4
C  ST          STATUS, 0=SUCCESS, ELSE FAILURE        INT*4
C
C
	SUBROUTINE GAME_TYPNDX(GNUM,GTYP,GNDX,ST)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:DESPAR.DEF'
	INCLUDE 'INCLIB:RECSCF.DEF'
C
	LOGICAL OPNFLG, IS_BLANK   !LUN OPEN FLAG, IS_BLANK FUNCTION
C
	INTEGER*4 IOS,MAXLUN/30/,THELUN
	INTEGER*4 GNUM, ST, GCNT, GTYP, GNDX, GAMSEL, LANG
	INTEGER*4 FILE(5),FILE2(5)
	INTEGER*4 FDB(7)
	INTEGER*4 GAM_NUM(MAXGAM)
C
	CHARACTER*16 GAME_NAME(MAXGAM)
	EQUIVALENCE(GAME_NAME,SCFLGN)	

	CALL FASTSET(0,GAM_NUM,MAXGAM)
C
C BEFORE OPENING THE SCF FILE, FIND AN AVAILABLE LUN
C
	CALL FIND_AVAILABLE_LUN(THELUN,ST)
	IF(ST.NE.0) GOTO 10000  !FIND LUN ERROR
C
C OPEN THE SCF FILE AND READ THE SCF RECORD
C
	CALL OPENX(THELUN,'SCF.FIL',4,0,0,ST)
	CALL IOINIT(FDB,THELUN,SCFSEC*256)
	IF(ST.NE.0) THEN
	  TYPE*,'Error openning SCF.FIL > ',ST
	  RETURN
	ENDIF

	CALL READW(FDB,1,SCFREC,ST)
	IF(ST.NE.0) THEN
	  TYPE*,'Error reading SCF.FIL > ',ST
	  RETURN
	ENDIF
C
C       RETRIEVE GAME NAMES AND DISPLAY THEM
C
	WRITE(5,905)  !GAME NAMES TITLE
	GCNT = 0      !GAME COUNT FOR NAMED GAMES
	DO GNUM=1,MAXGAM
	  IF(.NOT.IS_BLANK(GAME_NAME(GNUM),16))THEN  !VALID GAME NAME
	    GCNT = GCNT + 1
	    GAM_NUM(GCNT) = GNUM  !STORE GAME NUMBER
	    WRITE(5,910)GCNT,GAME_NAME(GNUM)
	  ENDIF
	END DO
	
	IF(GCNT.EQ.0) THEN  !VALID GAME NAME COUNT = 0
	  TYPE*,'NO GAME NAMES AVAILABLE'
	  ST = -1   !ERROR STATUS
	ELSE   ! GAMES AVAILABLE, PROMPT FOR CHOICE
	  WRITE(5,911)
	  WRITE(5,*)
	  CALL PRMNUM(' Enter option: ',GAMSEL,1,GCNT,ST)
	  IF(ST.LT.0) THEN !ERROR IN PRMNUM
	    ST=-1
	  ELSE IF(ST.EQ.0)THEN  !NO ERRORS IN INPNUM
C
C           RETRIEVE GAME TYPE AND INDEX CORRESPONDING TO 
C           GAME NAME OF USER CHOICE 
C	      
	    GNUM = GAM_NUM(GAMSEL)                 !GAME NUMBER
	    GTYP = SCFGNT(GAMTYP,GAM_NUM(GAMSEL))  !GAME TYPE
	    GNDX = SCFGNT(GAMIDX,GAM_NUM(GAMSEL))  !GAME INDEX
	  ENDIF
	ENDIF !ENDIF(GCNT.EQ.0)

	CALL CLOSEFIL(FDB)  !CLOSE THE SCF FILE
10000	CONTINUE
C
	RETURN
C
C FORMAT STATEMENTS
C
905 	FORMAT(1X,' G A M E S   A V A I L A B L E',/)
910  	FORMAT(1X,I2,' - ',A16)
911     FORMAT(1X,' E - Exit')
	END
