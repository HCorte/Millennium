C MLMRGTCF.FOR
C
C V02 27-APR-99 RXK Lenght of record in TCF is always LMUREC. IAM()'s added. 
C V01 11-JAN-99 GLS INITIAL RELEASE FOR FINLAND (FROM POLAND)
C
C MULTI-FILE MERGE TCF PROGRAM
C PROGRAM TO LOAD CARRYOVERS TO TCF FILE
C IF YOU CHANGE TCF.DRW FILE STRUCTURE, CHANGE POOLBLD
C  
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode Island,
C and contains confidential and trade secret information. It may not be
C transferred from the custody or control of GTECH except as authorized in
C writing by an officer of GTECH. Neither this item nor the information it
C contains may be used, transferred, reproduced, published, or disclosed,
C in whole or in part, and directly or indirectly, except as expressly
C authorized by an officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
C
	PROGRAM MLMRGTCF
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:RECSCF.DEF'
	INCLUDE 'INCLIB:DESLOG.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:HSHCOM.DEF'
        INCLUDE 'INCLIB:STOPCOM.DEF'
        INCLUDE 'INCLIB:MULNAM.DEF'
C
	INTEGER*4  MSIZE, TUBSIZ
	PARAMETER (MSIZE=8000000)
	PARAMETER (TUBSIZ=I4BUCSIZ*7)
C
        INTEGER*4  I4TCWSIZ
        PARAMETER (I4TCWSIZ = 8192)       ! = 32KBYTES
C
	INTEGER*4 FDB(7),NFDB(7)
	INTEGER*4 SCFNAM(2), COUNT, BLOCK,CIND,NIND
	INTEGER*4 K, ST,LOWBKT,HIGHBKT,BUCKET,TCFCNT
	INTEGER*4 TOP,BOT,CURBLK,SECTORS,MAXBKT,MEMFULL,SCANS,S,TOTBLK
        INTEGER*4 TSK, TSKNUM
C
	DATA SCFNAM/'SCF.','FIL '/
C
	INTEGER*4 LODREC(I4TCWSIZ,2)
	INTEGER*4 XOFF,NUMCHUNK,LENGTH
	INTEGER*4 BIGTCF(MSIZE)
	INTEGER*4 NEWBUF(TUBSIZ)
	INTEGER*4 I, II
C
	CALL COPYRITE
	CALL SNIF_AND_WRKSET
C
	CALL OPENW(1,SCFNAM,4,0,0,ST)
	CALL IOINIT(FDB,1,SCFSEC*256)
	IF(ST.NE.0) THEN
	  TYPE*,'SCF.FIL open error > ',ST
	  CALL GPAUSE
	ENDIF
	CALL READW(FDB,1,SCFREC,ST)
	IF(ST.NE.0) THEN
	  TYPE*,'SCF.FIL read error > ',ST
	  CALL GPAUSE
	ENDIF
	CALL CLOSEFIL(FDB)
C
        II=0
        DO I=1,MAXWTSK                        !FIND # OF MRGTCF TODAY
          IF(TCWNBR(I).NE.0) II=II+1
        ENDDO
C
        IF(II.EQ.0) THEN
          TYPE *
          TYPE *,IAM(),'No TCF multi-file merge today'
          TYPE *
	  CALL GSTOP(GEXIT_SUCCESS)
        ENDIF
C
	COUNT=0
	CALL IOPEN(SCFSFN(1,TCC),TCC,LREC*2,LCDC,LSER*2-1,ST)
	IF(ST.NE.0) THEN
	  WRITE(5,900) IAM(),(SCFSFN(K,TCC),K=1,5),ST
	  CALL GPAUSE
	ENDIF
	CALL IINIB(TCC,BIGTCF,MSIZE)
	CALL ITUBSIZE(TCC,TUBSIZ)
 	IF(II.EQ.1) CALL INOCHKS(TCC)         !NO MULTIPLE RECORDS IN ONE RUN
C
C MAIN LOOP
C
      DO 9999 TSK=1,WINCNT
C
        TSKNUM=WINWTSK(TSK)
        IF(TSKNUM.LT.1.OR.TSKNUM.GT.MAXWTSK) WRITE(5,908) IAM(),TSKNUM
        IF(MRGTYP(TSKNUM).NE.MRGALL) GOTO 9999                  !NO MERGE TCF
C
        CALL OPENW(TCW,TCWNAM(1,TSK),4,0,0,ST)
        CALL IOINIT(NFDB,TCW,I4TCWSIZ*4)
        IF(ST.NE.0) THEN
          WRITE(5,900) IAM(),(TCWNAM(K,TSK),K=1,5),ST
          CALL GPAUSE
        ENDIF
C
C ESTIMATE NUMBER OF NEW RECORDS
C
	CALL GETSIZ_USED(TCW,SECTORS)
	TOTBLK=(SECTORS*64)/I4TCWSIZ
	BOT=0
	TOP=TOTBLK+1
20	CONTINUE
	CURBLK=BOT+(TOP-BOT)/2
	IF((TOP-BOT)/2.EQ.0) GOTO 30
	CALL READW(NFDB,CURBLK,LODREC(1,1),ST)
	IF(ST.NE.0) CALL FILERR(TCWNAM(1,TSK),2,ST,CURBLK)
	IF(LODREC(LSER,1).NE.0) THEN
	  BOT=CURBLK
	ELSE
	  TOP=CURBLK
	ENDIF
	GOTO 20
30	CONTINUE
	TCFCNT=CURBLK*(I4TCWSIZ/LREC)
C
C ESTIMATE NUMBER OF RECORDS THAT WILL FIT IN MEMORY BUFFER
C
	MEMFULL=(MSIZE*100)/120
	MEMFULL=MEMFULL-BIGTCF(BUFFRE)
	MEMFULL=MEMFULL/(LREC+1)
C
C ESTIMATE NUMBER OF SCANS REQUIRED TO LOAD ALL WINNERS
C
        COUNT=0
        LOWBKT=0
        HIGHBKT=0
	SCANS=TCFCNT/MEMFULL+1
	CALL IMXBLK(TCC,MAXBKT)
	TYPE*,IAM(),SCANS,' scans required to load winners file'
C
C START FILE SCANS
C AND DETERMINE LOW AND HIGH BUCKET FOR THIS SCAN.
C
	DO 1000 S=1,SCANS
	  TYPE*,IAM(),' performing scan ',S
	  BLOCK=1
	  CIND=1
	  NIND=2
	  LOWBKT=HIGHBKT+1
	  HIGHBKT=((MAXBKT+SCANS-1)/SCANS)*S
C
40	  CONTINUE
	  IF(BLOCK.EQ.1) THEN
	    CALL READW(NFDB,BLOCK,LODREC(1,CIND),ST)
	    IF(ST.NE.0) THEN
	      WRITE(5,902) IAM(),(TCWNAM(K,TSK),K=1,5),ST,BLOCK
	      CALL GPAUSE
	    ENDIF
	    BLOCK=BLOCK+1
	    CALL READNW(NFDB,BLOCK,LODREC(1,NIND),ST)
	    IF(ST.NE.0) THEN
              WRITE(5,902) IAM(),(TCWNAM(K,TSK),K=1,5),ST,BLOCK
              CALL GPAUSE
            ENDIF
	  ELSE
	    CALL WAITFORREAD(NFDB,ST)
            IF(ST.NE.0) THEN
              WRITE(5,902) IAM(),(TCWNAM(K,TSK),K=1,5),ST,BLOCK
              CALL GPAUSE
            ENDIF
	    BLOCK=BLOCK+1
	    CIND=NIND
	    NIND=MOD(CIND,2)+1
	    CALL READNW(NFDB,BLOCK,LODREC(1,NIND),ST)
            IF(ST.NE.0) THEN
              WRITE(5,902) IAM(),(TCWNAM(K,TSK),K=1,5),ST,BLOCK
              CALL GPAUSE
            ENDIF
	  ENDIF
C
	  XOFF = 1
100	  CONTINUE
	  IF(XOFF.GT.I4TCWSIZ-LMUREC+1)GOTO 40
          NUMCHUNK = ISHFT( LODREC(XOFF+LSER-1,CIND),-30 )
             ! LENGTH = (NUMCHUNK+1)*LREC     use this if various length used
          LENGTH = LMUREC                     ! in Finland always max length 
	  IF(LODREC(XOFF+LSER-1,CIND).EQ.0) GOTO 200
	  CALL IGTBLK(LODREC(XOFF+LSER-1,CIND),TCC,BUCKET,NUMCHUNK)
	  IF(BUCKET.LT.LOWBKT) GOTO 50
	  IF(BUCKET.GT.HIGHBKT) GOTO 50
C 
	  COUNT=COUNT+1
	  CALL IWRIBF(LODREC(XOFF,CIND),TCC,BIGTCF,NEWBUF,ST)
	  IF(ST.NE.0) THEN
	    WRITE(5,905) IAM(),(SCFSFN(K,TCC),K=1,5),ST
	    CALL GPAUSE
	  ENDIF
C
50	  CONTINUE
	  XOFF = XOFF + LENGTH
	  GOTO 100
C
C FLUSH MEMORY BUFFER
C
200	  CONTINUE
	  CALL IFLUSH(TCC,BIGTCF,NEWBUF,ST)
          IF(ST.NE.0) THEN
            WRITE(5,905) IAM(),(SCFSFN(K,TCC),K=1,5),ST
            CALL GPAUSE
          ENDIF
1000	CONTINUE
C
        WRITE(5,906) IAM(),TSKWNAM(TSKNUM),
     *                     COUNT,(TCWNAM(K,TSK),K=1,5)
	IF(COUNT.EQ.0) CALL XWAIT(2,2,ST)                              !WAIT
C
        CALL CLOSEFIL(NFDB)
C
        TSKTCFSTS(TSKNUM)=AFTMRGTCF
C
9999  CONTINUE
C
	CALL ICLOSB(TCC,BIGTCF,NEWBUF,ST)
	IF(ST.NE.0) THEN
	  WRITE(5,907) IAM(),(SCFSFN(K,TCC),K=1,5),ST
	  CALL GPAUSE
	ENDIF
C
	TYPE*,IAM(),'TCF multi-file merge complete'
C
	CALL GSTOP(GEXIT_SUCCESS)
C
900	FORMAT(1X,A,1X,5A4,' open error > ',I4)
902	FORMAT(1X,A,1X,5A4,' read error > ',I4,' Block > ',I5)
905	FORMAT(1X,A,1X,5A4,' Iwrite error > ',I4)
906	FORMAT(/1X,A,1X,A8,' > ',I7,' records copied from ',5A4/)
907	FORMAT(1X,A,1X,5A4,' Iclosb error > ',I4)
908     FORMAT(1X,A,1X,'Wrong Winsel Task Number >',I4)
	END
