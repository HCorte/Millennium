C
C SUBROUTINE X2STNPRT
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]X2STNPRT.FOV                                 $
C  $Date::   17 May 1996 11:45:34                                         $
C  $Revision::   1.1                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - vis_x2stnprt.for;1 **
C
C X2STNPRT.FOR
C
C
C X2X Upgrade: 22-FEB-96 wsm Added AGTINF.DEF for Finland.
C
C V03 05-DEC-94 SCD Integrate UK changes into X2X Baseline
C V02 06-FEB-92 DAS ADDED PORT COMMAND
C V01 01-DEC-91 DAS RELEASED FOR VAX (NETHERLANDS)
C
C This subroutine will display all ports defined for a
C station existing on the X2X network subsystem.
C NOTE: all necessary input information has been stored
C in X2VIS by X2LINTER.
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE X2STNPRT(CMDLIN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:X2VIS.DEF'
C
	INTEGER*4   DISDIM                          !Dimension of table
	PARAMETER  (DISDIM  = 6)
	INTEGER*4   DISSIZ
	PARAMETER  (DISSIZ  = X2X_MAXPORT*X2X_MAXTERMS)
C
	INTEGER*4   CMDLIN(20)                      !Input command line
	INTEGER*4   DISCNT                          !Display counter
	INTEGER*4   DISTBL(DISDIM,DISSIZ)           !Display table
	INTEGER*4   PRTIDX,TERIDX,AGTIDX,TIMIDX     !Indices into DISTBL
	INTEGER*4   DRPIDX,STSIDX                   !Indices into DISTBL
	INTEGER*4   MAXDISP                         !Max lines displayed
	INTEGER*4   BEGIDX,CURIDX                   !Display indices
	INTEGER*4   PRT                             !Array indices
	INTEGER*4   PRTSRT,TERSRT,AGTSRT,TIMSRT     !Sort keys
	INTEGER*4   DRPSRT,STSSRT                   !Sort keys
	INTEGER*4   KEY1,KEY2,KEY3                  !Sort keys
	INTEGER*4   LINIDX                          !Print line index
	INTEGER*4   SEC,MIN,HR                      !Time display
	INTEGER*4   STATE                           !Terminal state
	INTEGER*4   DELAY                           !Refresh delay
	INTEGER*4   CMDVALUE(4)                     !Command value
	INTEGER*4   CBUF(CDLEN)                     !Command buffer
        INTEGER*4   CONNID                          !Connection identifier
	INTEGER*4   DROP, TERM, PORT, ST, VALUE, KEYNUM
	INTEGER*4   POS, I, STN, TER, LSTSTN, LSTTIM, LSTPRT
	INTEGER*4   LSTSRT, LSTSEC, LSTHR, LSTMIN
	BYTE	    BDROP(4)
	REAL*8      CMDOPT(2)                       !Command line options
	CHARACTER   C2DROP*2			    !Drop address
	CHARACTER   TERSTATE(0:5)*7                 !Terminal state
	LOGICAL     LOADED      /.FALSE./           !Array loaded flag
	LOGICAL     DISPLAY     /.FALSE./           !Display info flag
C
	EQUIVALENCE (DROP,BDROP,C2DROP)
C
	PARAMETER  (MAXDISP = 14)
	PARAMETER  (PRTIDX  = 1)
	PARAMETER  (TERIDX  = 2)
	PARAMETER  (AGTIDX  = 3)
	PARAMETER  (STSIDX  = 4)
	PARAMETER  (TIMIDX  = 5)
	PARAMETER  (DRPIDX  = 6)
	PARAMETER  (PRTSRT  = 1)
	PARAMETER  (TERSRT  = 2)
	PARAMETER  (AGTSRT  = 3)
	PARAMETER  (STSSRT  = 4)
	PARAMETER  (TIMSRT  = 5)
	PARAMETER  (DRPSRT  = 6)
	PARAMETER  (DELAY   = 60)
C
	DATA        TERSTATE    /'not def','defined',' active',
     *	                         'slowpol','disable','waitmsg'/
 
	DATA        CMDOPT      /'TERstate','BROnum  '/
	DATA        LSTMIN  / 0 /
	DATA        LSTHR   / 0 /
	DATA        LSTSEC  / 0 /
	DATA        LSTSRT  / 0 /
	DATA        LSTTIM  / 0 /
	DATA        LSTSTN  / 0 /
        DATA        LSTPRT  / 0 /
	DATA        CURIDX  / 0 /
	DATA        BEGIDX  / 0 /
	DATA        DISCNT  / 0 /
	DATA        TER     / 0 /
C
C INITIALIZE VARIABLES.
C
	STN=X2FLDINF(XSTNIDX)
	IF(STN.EQ.0) STN=LSTSTN
	IF(STN.LE.0 .OR. STN.GT.X2X_STATIONS) STN=1
	DO 20 I=1,4
	  CMDVALUE(I)=-1
20	CONTINUE
C
C IF AN X2X COMMAND HAS BEEN ENTERED, DO NOT
C CHECK FOR OTHER COMMANDS.
C
	IF(X2SCRN(X2SCRN_INPLEV1,X2SCRN_STNPRT).NE.0 .OR.
     *	   X2SCRN(X2SCRN_INPLEV2,X2SCRN_STNPRT).NE.0 .OR.
     *	   X2SCRN(X2SCRN_INPLEV3,X2SCRN_STNPRT).NE.0) THEN
	  X2SCRN(X2SCRN_INPLEV1,X2SCRN_STNPRT)=0
	  X2SCRN(X2SCRN_INPLEV2,X2SCRN_STNPRT)=0
	  X2SCRN(X2SCRN_INPLEV3,X2SCRN_STNPRT)=0
	  GOTO 100
	ENDIF
C
C CHECK FOR INPUT COMMAND LINE.
C
	POS=1
	CALL KEY(CMDLIN,CMDOPT,2,POS,KEYNUM)
	IF(POS.GT.40) GOTO 100                  !NO INPUT
	IF(KEYNUM.EQ.0) THEN                    !INPUT ERROR
	  WRITE(CLIN23,9923)
	  GOTO 100
	ENDIF
        IF( X2XS_TYPE(STN) .EQ. X2XST_BCST ) THEN	!V03
	  WRITE(CLIN23,9923)				!V03
	  GOTO 100					!V03
	ENDIF						!V03
	CALL NUMB(CMDLIN,POS,VALUE)             !GET VALUE
	IF(VALUE.LT.0) THEN                     !VALUE ERROR
	  WRITE(CLIN23,9924)
	  GOTO 100
	ENDIF
	GOTO (50,60) KEYNUM
	WRITE(CLIN23,9923)
	GOTO 100
C
C TERMINAL STATUS CHANGE.
C
50	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.4.OR.X2FLDINF(XTERIDX).EQ.0) THEN
	  WRITE(CLIN23,9924)
	  GOTO 100
	ENDIF
	CMDVALUE(1)=VALUE
	CALL X2BLDCMD(1,XTER,X2FLDINF(XTERIDX),5,CMDVALUE,2,1,CBUF)
	GOTO 90
C
C BROADCAST A MESSAGE TO A TERMINAL.
C
60	CONTINUE
	IF(VALUE.LT.1.OR.VALUE.GT.256.OR.X2FLDINF(XTERIDX).EQ.0) THEN
	  WRITE(CLIN23,9924)
	  GOTO 100
	ENDIF
	CBUF(1)=5
	CBUF(2)=VALUE
	CBUF(3)=TCSPE
	CBUF(4)=0
	CBUF(5)=X2FLDINF(XTERIDX)
	WRITE(CLIN23,9070) VALUE,X2FLDINF(XTERIDX)
	GOTO 90
C
C QUEUE COMMAND BUFFER TO SYSTEM INPUT QUEUE
C
90	CONTINUE
	CBUF(6)=IDNUM
	CALL VISCMD(CBUF,ST)
	CALL XWAIT(2,1,ST)
C
C IF IT IS TIME TO REFRESH THE SCREEN, SET THE LOADED
C FLAG.
C
100	CONTINUE
	IF(LSTTIM+DELAY.LT.P(ACTTIM) .OR.
     *	   X2FLDINF(XUPDIDX).NE.0) THEN
	  LOADED=.FALSE.
	  X2FLDINF(XSRTIDX)=LSTSRT
	  X2FLDINF(XUPDIDX)=0
	  LSTSTN=0
	ENDIF
C
C IF A DIFFERENT STATION NUMBER FORCE A REFRESH.
C
	IF(STN.NE.LSTSTN) THEN
	  LOADED=.FALSE.
	  X2FLDINF(XSRTIDX)=LSTSRT
	  LSTSTN=0
	  DO 110 I=7,22
	    WRITE(XNEW(  I),9060)
110	  CONTINUE
	ENDIF
C
C LOAD THE DISPLAY TABLE.
C
	IF(.NOT.LOADED) THEN
	  DISCNT=0
	  DO 120 PORT=1,X2X_MAXPORT
	    DO 200 TER=1,X2X_MAXTERMS
	      TERM=X2XS_TERMS(TER,PORT,STN)
	      IF(TERM.NE.0) THEN
	        DISCNT=DISCNT+1
	        DISTBL(PRTIDX,DISCNT)=PORT
	        DISTBL(TERIDX,DISCNT)=TERM
	        DISTBL(AGTIDX,DISCNT)=AGTTAB(AGTNUM,TERM)
	        DISTBL(TIMIDX,DISCNT)=X2XT_TIME(TERM)
	        C2DROP=X2XT_DROP_AD(TERM)
	        DISTBL(DRPIDX,DISCNT)=DROP
CCC	        DISTBL(STSIDX,DISCNT)=STATUS
	      ENDIF
200	    CONTINUE
120	  CONTINUE
	  LOADED=.TRUE.
	  DISPLAY=.TRUE.
C
C CALCULATE TIME LAST UPDATED.
C
	  LSTTIM=P(ACTTIM)
	  LSTSEC=LSTTIM
	  LSTHR=LSTSEC/3600
	  LSTMIN=(LSTSEC-LSTHR*3600)/60
	  LSTSEC=LSTSEC-(LSTHR*3600+LSTMIN*60)
	ENDIF
C
C SORT THE DISPLAY TABLE ACCORDING TO DESIRED INFORMATION.
C DEFAULT TO SAP SORT.
C
	IF(X2FLDINF(XSRTIDX).NE.0) THEN
	  IF(X2FLDINF(XSRTIDX).EQ.TERSRT) THEN
	    KEY1=TERIDX
	    KEY2=0
	    KEY3=0
	  ELSE IF(X2FLDINF(XSRTIDX).EQ.AGTSRT) THEN
	    KEY1=AGTIDX
	    KEY2=0
	    KEY3=0
CCC	  ELSE IF(X2FLDINF(XSRTIDX).EQ.STSSRT) THEN
CCC	    KEY1=STSIDX
CCC	    KEY2=TERIDX
CCC	    KEY3=0
	  ELSE IF(X2FLDINF(XSRTIDX).EQ.TIMSRT) THEN
	    KEY1=TIMIDX
	    KEY2=PRTIDX
	    KEY3=DRPIDX
	  ELSE
	    KEY1=PRTIDX
	    KEY2=DRPIDX
	    KEY3=0
	  ENDIF
	  CALL I4XSORT(DISTBL,DISDIM,DISCNT,KEY1,KEY2,KEY3)
	  LSTSRT=X2FLDINF(XSRTIDX)
	  X2FLDINF(XSRTIDX)=0
	  DISPLAY=.TRUE.
	ENDIF
C
C DISPLAY STARTING AT THE BOTTOM INDEX.
C
	IF(X2FLDINF(XBOTIDX).NE.0) THEN
	  BEGIDX=MAX0(1,DISCNT-MAXDISP)
	  X2FLDINF(XBOTIDX)=0
	  DISPLAY=.TRUE.
C
C DISPLAY STARTING AT THE TOP.
C
	ELSE IF(X2FLDINF(XTOPIDX).NE.0) THEN
	  BEGIDX=1
	  X2FLDINF(XTOPIDX)=0
	  DISPLAY=.TRUE.
C
C DISPLAY FORWARD THE SPECIFIED NUMBER OF SCREENS.
C
	ELSE IF(X2FLDINF(XFORIDX).NE.0) THEN
	  BEGIDX=MIN0(DISCNT,CURIDX+(MAXDISP*X2FLDINF(XFORIDX)))
	  X2FLDINF(XFORIDX)=0
	  DISPLAY=.TRUE.
C
C DISPLAY BACKWARDS THE SPECIFIED NUMBER OF SCREENS.
C
	ELSE IF(X2FLDINF(XBAKIDX).NE.0) THEN
	  BEGIDX=MAX0(1,CURIDX-(MAXDISP*X2FLDINF(XBAKIDX)))
	  X2FLDINF(XBAKIDX)=0
	  DISPLAY=.TRUE.
C
C DISPLAY STARTING AT THE INPUT TERMINAL NUMBER.
C
	ELSE IF(X2FLDINF(XTERIDX).NE.LSTTER) THEN
	  DO 300 I=1,DISCNT
	    IF(DISTBL(TERIDX,I).EQ.X2FLDINF(XTERIDX)) THEN
	      BEGIDX=I
	      GOTO 310
	    ENDIF
300	  CONTINUE
	  BEGIDX=CURIDX
310	  CONTINUE
	  DISPLAY=.TRUE.
	  LSTTER=X2FLDINF(XTERIDX)
C
C DISPLAY STARTING AT THE INPUT PORT NUMBER.
C
	ELSE IF(X2FLDINF(XPRTIDX).NE.LSTPRT) THEN
	  DO 400 I=1,DISCNT
	    IF(DISTBL(PRTIDX,I).EQ.X2FLDINF(XPRTIDX)) THEN
	      BEGIDX=I
	      GOTO 410
	    ENDIF
400	  CONTINUE
	  BEGIDX=CURIDX
410	  CONTINUE
	  DISPLAY=.TRUE.
	  LSTPRT=X2FLDINF(XPRTIDX)
	ENDIF
C
C IF THE DISPLAY FLAG HAS BEEN SET, DISPLAY THE SCREEN
C STARTING AT THE CURRENT BEGINNING POSITION.
C
	IF(DISPLAY) THEN
	  WRITE(CLIN1,9000) STN
	  WRITE(CLIN2,9005) LSTHR, LSTMIN, LSTSEC
	  WRITE(CLIN3,9010)
	  WRITE(CLIN4,9020)
	  WRITE(CLIN5,9030)
	  WRITE(CLIN6,9040)
	  LINIDX=7
C
	  DO 1000 I=MAX0(1,BEGIDX),MIN0(DISCNT,BEGIDX+MAXDISP)
	    PRT=DISTBL(PRTIDX,I)
	    TER=DISTBL(TERIDX,I)
	    DROP=DISTBL(DRPIDX,I)
C
C CALCULATE TIME AND GET TERMINAL STATE.
C
	    SEC=X2XT_TIME(TER)
	    HR=SEC/3600
	    MIN=(SEC-HR*3600)/60
	    SEC=SEC-(HR*3600+MIN*60)
	    CALL ILBYTE(STATE,IX2XT_STATE,TER-1)
C
C OUTPUT INFORMATION.
C
C....TEMP SOLUTION FOR CONN ID
C
            CONNID = ISHFT(X2XT_CONN_ID(TER),-8)
	    WRITE(XNEW(  LINIDX),9050) PRT, C2DROP, TER,
     *	      AGTTAB(AGTNUM,TER), TERSTATE(STATE),
     *	      HR,MIN,SEC,         X2XT_DELAY(TER),
C..  *	      AGTTAB(ALSTRA,TER), X2XT_CONN_ID(TER),
     *	      AGTTAB(ALSTRA,TER), CONNID,
     *	      X2XT_NETWORK_DELAY(TER)
	    LINIDX=LINIDX+1
1000	  CONTINUE
C
C CLEAR ANY UNUSED SLOTS.
C
	  DO 1020 I=LINIDX,22
	    WRITE(XNEW(  I),9060)
1020	  CONTINUE
	  CURIDX=BEGIDX
	  LSTSTN=STN
	ENDIF
C
C PROGRAM EXIT.
C
	RETURN
C
C     ===================== Format Statements ===================
C
9000	FORMAT('Port Snapshot for Station ',I5)				!V03
9005	FORMAT(T65,'Update:',I2.2,':',I2.2,':',I2.2)
9010	FORMAT(T37,'(5)')
9020	FORMAT(T2,'(1)',T14,'(2)',T22,'(3)',T28,'(4)',T37,'Last',
     *	       T45,'Delay in',T56,'Last',T64,'Connect',T75,'Net')
9030	FORMAT(T2,'Port',T8,'Drop',T13,'Term',T21,'Agent',T28,'State',
     *       T37,'Time',T45,'Central',T56,'Serial',T66,'Id',T74,'Delay')
9040	FORMAT(T2,77('='))
9050	FORMAT(T3,I2,T9,A2,T12,I5,T17,I9,T27,A7,T35,I2.2,':',I2.2,':',
     *	       I2.2,T46,I5,T53,I9,T63,Z8,T73,I6)
9060	FORMAT(80(' '))
9070	FORMAT(' Message ',I4,' queued to terminal ',I5)		!V03
9923	FORMAT('Input error ')
9924	FORMAT('Value error  ')
	END
