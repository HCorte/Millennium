C GUI_027.FOR
C
C V04 24-JAN-2011 FJG Out of Bounds issue
C V03 22-MAR-2001 UXN PASSIVE GAME ADDED.
C V02 12-FEB-2001 UXN TOTOGOLO ADDED.
C V01 XX-XXX-XXXX XXX INITIAL RELEASE.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2001 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C This subroutine returns GUI FUNCTION.
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)    OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	     MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUI_027(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:GUIMPRM.DEF'
	INCLUDE 'INCLIB:GUIARGS.DEF'
	INCLUDE 'INCLIB:GUISTR.DEF'
	INCLUDE 'INCLIB:LTOCOM.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
	INCLUDE 'INCLIB:NBRCOM.DEF'
	INCLUDE 'INCLIB:BNGCOM.DEF'
	INCLUDE 'INCLIB:KIKCOM.DEF'
	INCLUDE 'INCLIB:WITCOM.DEF'
	INCLUDE 'INCLIB:CPLCOM.DEF'
	INCLUDE 'INCLIB:TRPCOM.DEF'
	INCLUDE 'INCLIB:DBLCOM.DEF'
	INCLUDE 'INCLIB:STRCOM.DEF'
	INCLUDE 'INCLIB:SCRCOM.DEF'
	INCLUDE 'INCLIB:SSCCOM.DEF'
	INCLUDE 'INCLIB:TGLCOM.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:PASCOM.DEF'
C
C
	BYTE	    OUTBUF(*)
	INTEGER*4   MES_LEN,RET_CODE
C
	INTEGER*4 NUM_COLS,NUM_ROWS
C
        INTEGER*4  GNUM,GIND,GTYP
C
	INTEGER*4  GDATA(3,MAXGAM)
C
	CALL FASTSET(0,GDATA,3*MAXGAM)
	RET_CODE = 0
C
	DO 10 GNUM=1,MAXGAM
	   GTYP = GNTTAB(GAMTYP,GNUM)
	   IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 10
	   GIND = GNTTAB(GAMIDX,GNUM)
	   IF(GIND.LT.1.OR.GIND.GT.MAXIND) GOTO 10
	   IF(GTYP.EQ.TLTO) THEN
	      GDATA(1,GNUM) = LTOESD(GIND)
	      GDATA(2,GNUM) = LTOTIM(GIND)
	      GDATA(3,GNUM) = LTOSTS(GIND)
	   ELSEIF(GTYP.EQ.TSPT) THEN
	      GDATA(1,GNUM) = SPTESD(GIND)
	      GDATA(2,GNUM) = SPTTIM(GIND)
	      GDATA(3,GNUM) = SPTSTS(GIND)
	   ELSEIF(GTYP.EQ.TTGL) THEN
	      GDATA(1,GNUM) = TGLESD(GIND)
	      GDATA(2,GNUM) = TGLTIM(GIND)
	      GDATA(3,GNUM) = TGLSTS(GIND)
	   ELSEIF(GTYP.EQ.TKIK) THEN
	      GDATA(1,GNUM) = KIKESD(GIND)
	      GDATA(2,GNUM) = KIKTIM(GIND)
	      GDATA(3,GNUM) = KIKSTS(GIND)
	   ELSEIF(GTYP.EQ.TBNG) THEN
	      GDATA(1,GNUM) = BNGESD(GIND)
	      GDATA(2,GNUM) = BNGTIM(GIND)
	      GDATA(3,GNUM) = BNGSTS(GIND)
	   ELSEIF(GTYP.EQ.TNBR) THEN
	      GDATA(1,GNUM) = NBRESD(GIND)
	      GDATA(2,GNUM) = NBRTIM(GIND)
	      GDATA(3,GNUM) = NBRSTS(GIND)
	   ELSEIF(GTYP.EQ.TWIT) THEN
	      GDATA(1,GNUM) = WITESD(GIND)
	      GDATA(2,GNUM) = WITTIM(GIND)
	      GDATA(3,GNUM) = WITSTS(GIND)
	   ELSEIF(GTYP.EQ.TCPL) THEN
	      GDATA(1,GNUM) = CPLESD(GIND)
	      GDATA(2,GNUM) = CPLTIM(GIND)
	      GDATA(3,GNUM) = CPLSTS(GIND)
	   ELSEIF(GTYP.EQ.TTRP) THEN
	      GDATA(1,GNUM) = TRPESD(GIND)
	      GDATA(2,GNUM) = TRPTIM(GIND)
	      GDATA(3,GNUM) = TRPSTS(GIND)
	   ELSEIF(GTYP.EQ.TDBL) THEN
	      GDATA(1,GNUM) = DBLESD(GIND)
	      GDATA(2,GNUM) = DBLTIM(GIND)
	      GDATA(3,GNUM) = DBLSTS(GIND)
	   ELSEIF(GTYP.EQ.TSTR) THEN
	      GDATA(1,GNUM) = STRESD(GIND)
	      GDATA(2,GNUM) = STRTIM(GIND)
	      GDATA(3,GNUM) = STRSTS(GIND)
	   ELSEIF(GTYP.EQ.TSCR) THEN
	      GDATA(1,GNUM) = SCRESD(GIND)
	      GDATA(2,GNUM) = SCRTIM(GIND)
	      GDATA(3,GNUM) = SCRSTS(GIND)
	   ELSEIF(GTYP.EQ.TSSC) THEN
	      GDATA(1,GNUM) = SSCESD(GIND)
	      GDATA(2,GNUM) = SSCTIM(GIND)
	      GDATA(3,GNUM) = SSCSTS(GIND)
	   ELSEIF(GTYP.EQ.TPAS) THEN
	     IF(PASCURDRW(GIND).GT.0.AND.PASCURDRW(GIND).LE.PAGEMI) THEN
	       GDATA(1,GNUM) = PASESD(PASCURDRW(GIND),GIND)
	       GDATA(2,GNUM) = PASTIM(PASCURDRW(GIND),GIND)
	       GDATA(3,GNUM) = PASSTS(PASCURDRW(GIND),GIND)
	     ENDIF
	   ELSE 
	      GOTO 10
	   ENDIF
10	CONTINUE		   
C
C INITIALIZE OUTPUT 
C
	CALL GUIARG_INIT()
C
	NUM_COLS = 4
	NUM_ROWS = MAXGAM
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)

        DO 100 GNUM=1,MAXGAM
	   IF(GNTTAB(GAMTYP,GNUM).LE.0) GOTO 100
	   CALL GUIARG_BYTE(OUTBUF,GNUM)
	   CALL GUIARG_DATE(OUTBUF,GDATA(1,GNUM))
	   CALL GUIARG_TIME(OUTBUF,GDATA(2,GNUM))
	   CALL GUIARG_BYTE(OUTBUF,GDATA(3,GNUM))
100	CONTINUE
C
C FINALLY SET OUTPUT MESSAGE LENGTH 
C
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
C
	END
