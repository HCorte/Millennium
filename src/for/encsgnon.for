C
C SUBROUTINE ENCSGNON
C $Log:   GXAFXT:[GOLS]ENCSGNON.FOV  $
C  
C     Rev 1.0   17 Apr 1996 13:04:56   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.2   21 Oct 1993 16:28:08   GXA
C  Applied bug fixes for status checking and queuing to DISPAT.
C  
C     Rev 1.1   15 Jul 1993 13:44:58   GXA
C  Changed location of the pass# to be Terminal Pass#.
C  
C     Rev 1.0   21 Jan 1993 16:13:30   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - encpro.for **
C
C
C********************************************************************
C	CALL ENCSGNON(BUF_NO,STATUS)
C	IN:
C	BUF_NO	-   INCOMING BUFFER
C	OUT:
C	STATUS	-   NON 0 IF ENCRYPTION OPERATION WAS DONE AND TRANSACTION
C		    WAS ALREADY QUEUED TO ENCRYPT
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE ENCSGNON(BUF_NO,STATUS)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:QUECOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:ENCCOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
C
	INTEGER*4 BUF_NO	    !DECRYPTION BUFFER
	INTEGER*4 STATUS
	INTEGER*4 FIRST(NUMAGT) /NUMAGT*-1/
	INTEGER*4 CURRENT_PASS(NUMAGT) /NUMAGT*-1/
	INTEGER*4 PASS/0/, TRM
	INTEGER*4 ST
	INTEGER*4 AGT_MAXPASS
	PARAMETER (AGT_MAXPASS=8)   !!!MAX NO OF PASSWORDS IN AGTCOM
 
	STATUS=0
	TRM=HPRO(TERNUM,BUF_NO)
C
	IF(AGTHTB(AGTPASOFF,TRM).LE.0.OR.
     *     AGTHTB(AGTPASOFF,TRM).GT.AGT_MAXPASS) 
     *     AGTHTB(AGTPASOFF,TRM) = -1
C
C	GET PASSWORD FROM BUFFER
C
	CALL MOVBYTN(PRO(INPTAB,BUF_NO),12,PASS,3,2)
C
C	IF PASSWORD IN BUFFER MATCHES CURRENT PASSOWRD IN AGTCOM
C
	IF (HPRO(TRCODE,BUF_NO).EQ.TYPREG.AND.
     *	     (PASS.EQ.AGTTAB(APSNUM+AGTHTB(AGTPASOFF,TRM)-1,TRM))) THEN
C
	       FIRST(TRM)=-1
	       CURRENT_PASS(TRM)=-1
	ELSE
C
C	      IF NOT ENCRYPT MESSAGE BACK
C	      WE MAY BE ENTERING THIS CODE IN 1 OF 2 CASES:
C		MESSAGE AFETR ENCRYPTION COMES BACK
C		ORIGINAL MESSAGE (AFTER LAST ENCRYPTION/DECRYPTION
C		    WITH WRONG KEY COMES BACK (TYPPAS)
C
C	    IN CASE OF MESSAGE COMING BACK AFTER DECRYPTION, WE HAVE TO
C	    ENCRYPTED BACK USING THE SAME KEY
C	    IN CASE OF MESSAGE COMING BACK AFTER ENCRYPTION, WE SHOULD
C	    POINT TO THE NEXT KEY, ANT TRY TO DECRYPT IS WITH NEW KEY
C
C
C	TRY TO ENCRYPT MESSAGE BACK IF FROM DECRYPTION
C
	      IF (HPRO(TRCODE,BUF_NO).EQ.TYPREG) THEN !IF DECRYPTED
	          HPRO(TRCODE,BUF_NO)=TYPPAS
		  IF (P(DESFLG_TYPE).EQ.DESFLG_HARD) THEN
		    CALL DESENCBF(BUF_NO,ST)
		  ELSE
		    CALL ENCRPTBF(BUF_NO,ST)		!DO ENCRYPTION
		  ENDIF
		  IF (ST.NE.0) CALL ABL(BUF_NO,QUETAB(1,DIS),STATUS)
		  STATUS=-1
	          GOTO 100
	      ENDIF
C
C	TRY TO POINT TO NEXT PASSWORD AND DECRYPT IT
C
C	      ON THE FIRST PASS TAKE PASSWORD OFFSET FROM AGTCOM
C
	      IF(FIRST(TRM).EQ.-1) THEN
	        IF(AGTHTB(AGTPASOFF,TRM).NE.1.AND.
     *             AGTTAB(APSNUM+AGTHTB(AGTPASOFF,TRM)-1,TRM)
     *             .EQ.0) AGTHTB(AGTPASOFF,TRM) = 1
		CURRENT_PASS(TRM)=AGTHTB(AGTPASOFF,TRM)
		FIRST(TRM)=AGTHTB(AGTPASOFF,TRM)
	      ENDIF
C
C	      GENERATE NEXT SIGN ON KEY
C
	      HPRO(TRCODE,BUF_NO)=TYPREG
C
50	      CONTINUE
	      CURRENT_PASS(TRM)=CURRENT_PASS(TRM)+1
C
C	IF CURRENT PASSWORD IS 0 (NO PASSWORD IS SET) CHECK NEXT
C
	      IF(AGTTAB(APSNUM+CURRENT_PASS(TRM)-1,TRM).EQ.0 .AND.
     *           CURRENT_PASS(TRM).LE.AGT_MAXPASS) GOTO 50
C
C	IF REACHED HIGHEST PASSWORD OFFSET
C
	      IF (CURRENT_PASS(TRM).GT.AGT_MAXPASS)  CURRENT_PASS(TRM)=1
C
C      IF CHECKED ALL PASSWORDS ALREADY AND NON FOUND
C
	      IF (CURRENT_PASS(TRM).EQ.FIRST(TRM)) THEN
	            FIRST(TRM)=-1
	            CURRENT_PASS(TRM)=-1
	            GOTO 100
	      ENDIF
C
C	      AND SET NEW KEY IN ENCCOM
C
	      CALL ENCINI1(AGTTAB(APSNUM+CURRENT_PASS(TRM)-1,TRM),TRM)
C
C	REMEMBER CURRENT PASSWORD
C
	      AGTHTB(AGTPASOFF,TRM)=CURRENT_PASS(TRM)
C
C	DECRYPT
C
	      IF (P(DESFLG_TYPE).EQ.DESFLG_HARD) THEN
		CALL DESDECBF(BUF_NO,STATUS)
	      ELSE
		CALL DECRPTBF(BUF_NO,STATUS)
	      ENDIF
C
	      IF (STATUS.NE.0) CALL ABL(BUF_NO,QUETAB(1,DIS),ST) !IF ERROR
C
	      STATUS = -2 !Avoid queuing to DISPAT (Rev 1.2)
C
C     ENCRYPTION KEY IS ALSO REINITIALISED IN SPESRV (SON) AND
C     IN REPROTRA AND IN RESET FOR REPROCESSING
C
	ENDIF
100	CONTINUE
	RETURN
	END
