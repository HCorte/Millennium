C INVRPTSUB.FOR
C 
C V04 15-SEP-10 FJG PostLive changes because SCML considerations
C V03 14-SEP-10 FJG ePassive REDO excluding INVOICE calculation
C V02 13-APR-01 CS  INCLUDED OFFLINE AGENTS INVOICE REPORT
C V01 13-NOV-97 UXN Initial release (produced from INVRPT.FOR)
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1993 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE INVRPTSUB
	IMPLICIT NONE
C
	INCLUDE '(LIB$ROUTINES)'
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:RECAGT.DEF'
	INCLUDE 'INCLIB:ASFREP.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:BANK_REC.DEF'
C
C FUNCTION DEFINITIONS
C
	CHARACTER*2  CVLTYP
	CHARACTER*8  CAGT_NO
C	CHARACTER*18 FORMAT_EURO_VALUE
C
	LOGICAL	  ACHOU
C
	INTEGER*2 DBUF(12)
	INTEGER*4 CANIND,CLMIND,DSCIND,SALIND,VALIND,REFIND
	INTEGER*4 TKCIND
C
	INTEGER*4 GTYP, GAM, SCOM(2)
	INTEGER*4 I, ST, PAGE, LINCNT/60/, COPY
	INTEGER*4 DAT, K, CAN_PAGE/0/
	INTEGER*4 TOT_ADJUST(2)
	INTEGER*4 AGT_ADJUST(2)
	INTEGER*4 TOT_AJUSTE
        INTEGER*4 AGT_RENT 
	INTEGER*4 VWCOM(2),TOT_SCOM(2),CAN_LINCNT/60/,OFF_LINCNT/80/
	INTEGER*4 VCOM(2), WCOM(2)
	INTEGER*4 MAXCNT
	PARAMETER (MAXCNT=MAXTYP+7)
	INTEGER*4 TOT_AMT(MAXCNT)/MAXCNT*0/
	INTEGER*4 TOT_CNT(MAXCNT)/MAXCNT*0/
	INTEGER*4 TOT_VWCOM(2)/2*0/
	INTEGER*4 TOT_AMTDUE(2),TOT_VCOM(2)/2*0/,TOT_WCOM(2)/2*0/
        INTEGER*4 TOT_RENT(2)
	REAL*8 CANPER/0.03D0/
	REAL*8 RTOT_SAL/0.D0/
C
	INTEGER*4    CNT(MAXCNT),AMT(MAXCNT),INVAMT,COD_CENTRAL
	INTEGER*4    INVRPT_LUN,INVCAN_LUN,INVRPTOFF_LUN,SAPFILE_LUN
	INTEGER*4    TP_ACERTO,VR_ACERTO,TRANSPORTE,C_RECEP,CERR,AGT,COD_TRANSP,TOTVR_ACERTO
	INTEGER*4    TOTTRANS,TOTRECEP
C
	INTEGER*4    ZIP_CODE_NUM,WEEK, YEAR, SAP_NUMBER, TERMTYP, DISTLIN, CNTSAP/0/
	CHARACTER*7  C_CENTRAL
	CHARACTER*8  AGTCHAR
C	CHARACTER*18 ESCUDOS_VALUE
	CHARACTER*21 BNK_NIB
	CHARACTER*30 ZIP_CODE_NAME
	CHARACTER*33 BNK_NAME
	CHARACTER*45 STORE_NAME,ADDRESS
        CHARACTER*20 SAPFILE
C
C ENTRY INVRPT_BEGIN
C
	ENTRY INVRPT_BEGIN()
C
	TYPE*,IAM(),'**** INVRPT Agent Invoice Report ****' 
	TYPE*,IAM(),'**** INVRPTOFF OffLine Agent Invoice Report ****'
C
        SALIND=MAXTYP+1
        VALIND=MAXTYP+2
        CANIND=MAXTYP+3
        CLMIND=MAXTYP+4
        DSCIND=MAXTYP+5
	REFIND=MAXTYP+6
	TKCIND=MAXTYP+7
	DAT=DAYCDC
	DBUF(5)=DAT
	CALL CDATE(DBUF)
	COPY=0
	TOTTRANS = 0
	TOTRECEP = 0
C
C OPEN THE REPORT FILE(S)
C
	ST = LIB$GET_LUN(INVRPT_LUN)
	IF(.NOT.ST) CALL LIB$SIGNAL(%VAL(ST))
	CALL ROPEN('INVRPT.REP',INVRPT_LUN,ST)
	IF(ST.NE.0) THEN
	   TYPE*,IAM(),'INVRPT.REP Open error  st - ',ST
	   CALL USRCLOS1(INVRPT_LUN)
	   CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C
	ST = LIB$GET_LUN(INVCAN_LUN)
	IF(.NOT.ST) CALL LIB$SIGNAL(%VAL(ST))
        CALL ROPEN('INVCAN.REP',INVCAN_LUN,ST)
        IF(ST.NE.0) THEN
           TYPE*,IAM(),'INVCAN.REP Open error  st - ',ST
           CALL USRCLOS1(INVCAN_LUN)
           CALL GSTOP(GEXIT_FATAL)
        ENDIF
C
C
	ST = LIB$GET_LUN(INVRPTOFF_LUN)
	IF(.NOT.ST) CALL LIB$SIGNAL(%VAL(ST))
	CALL ROPEN('INVRPTOFF.REP',INVRPTOFF_LUN,ST)
	IF (ST.NE.0) THEN
	   TYPE*,IAM(),'INVRPTOFF.REP Open error  st - ',ST
	   CALL USRCLOS1(INVRPTOFF_LUN)
	   CALL GSTOP(GEXIT_FATAL)
	ENDIF

        WRITE(SAPFILE,10) DAYCDC
10      FORMAT('FILE:WAGSAP_',I4.4,'.ASC')

	ST = LIB$GET_LUN(SAPFILE_LUN)
	IF(.NOT.ST) CALL LIB$SIGNAL(%VAL(ST))
	CALL ROPEN(SAPFILE,SAPFILE_LUN,ST)
	IF (ST.NE.0) THEN
	   TYPE*,IAM(),SAPFILE,' Open error  st - ',ST
	   CALL USRCLOS1(SAPFILE_LUN)
	   CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C WRITE HEADER
C
	CALL FIGWEK(DAYCDC,WEEK,YEAR)
	CNTSAP = CNTSAP + 1
	WRITE(SAPFILE_LUN,100) 'HW1',WEEK,DBUF(VYEAR)+2000,DBUF(VMON),DBUF(VDAY)
100	FORMAT(A3,I2.2,I4,I2.2,I2.2)
C
C	LOAD BANK FILE TO A TABLE
C
	CALL LOAD_BANK_TABLE(ST)
        IF (ST.NE.0) THEN
	   TYPE*,IAM(), 'Error loading BANK TABLE  st - ', ST
	   CALL GSTOP(GEXIT_FATAL)
        ENDIF
C
C
	RETURN
C
C ENTRY INVRPT_UPDATE
C
	ENTRY INVRPT_UPDATE()
C
C CLEAR ACCUMULATORS
C
         CALL FASTSET(0,AMT,MAXTYP+7)
         CALL FASTSET(0,CNT,MAXTYP+7)
C
C SALES DATA FROM FILE
C
	 DO 150 GAM=1,MAXGAM
	      GTYP=GNTTAB(GAMTYP,GAM)
	      IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 150
              IF(GTYP.EQ.TPAS) GOTO 150  ! EXCLUDE PASSIVE GAMES
	      CNT(GTYP)=CNT(GTYP)+ASFBIL(GSCNT,GAM,1)-
     *	                          ASFBIL(GCCNT,GAM,1)
	      AMT(GTYP)=AMT(GTYP)+ASFBIL(GSAMT,GAM,1)-
     *	                          ASFBIL(GCAMT,GAM,1)
	      CNT(SALIND)=CNT(SALIND)+ASFBIL(GSCNT,GAM,1)-
     *	                              ASFBIL(GCCNT,GAM,1)
	      AMT(SALIND)=AMT(SALIND)+ASFBIL(GSAMT,GAM,1)-
     *	                              ASFBIL(GCAMT,GAM,1)
	      CNT(VALIND)=CNT(VALIND)+ASFBIL(GVCNT,GAM,1)
	      AMT(VALIND)=AMT(VALIND)+ASFBIL(GVAMT,GAM,1)
	      CNT(CANIND)=CNT(CANIND)+ASFBIL(GCCNT,GAM,1)
	      AMT(CANIND)=AMT(CANIND)+ASFBIL(GCAMT,GAM,1)
	      CNT(CLMIND)=CNT(CLMIND)+ASFBIL(GCLCNT,GAM,1)
	      AMT(CLMIND)=AMT(CLMIND)+ASFBIL(GCLAMT,GAM,1)
	      CNT(DSCIND)=CNT(DSCIND)+ASFBIL(GDCNT,GAM,1)
	      AMT(DSCIND)=AMT(DSCIND)+ASFBIL(GDAMT,GAM,1)
              CNT(REFIND)=CNT(REFIND)+ASFBIL(GRCNT,GAM,1)
              AMT(REFIND)=AMT(REFIND)+ASFBIL(GRAMT,GAM,1)
	      CNT(TKCIND)=0
	      AMT(TKCIND)=AMT(TKCIND)+ASFBIL(GTKCHG,GAM,1)
150	 CONTINUE
C
C GET TOTAL COMMISION
C
	 SCOM(1)=0
	 SCOM(2)=0
	 VCOM(1)=0
	 VCOM(2)=0
	 WCOM(1)=0
	 WCOM(2)=0
	 VWCOM(1)=0
	 VWCOM(2)=0
	 AGT_ADJUST(1)=0
	 AGT_ADJUST(2)=0
         AGT_RENT=0
	 CALL ADDI8I8(SCOM,ASFINV(ASFSCMU,1),BETUNIT)
	 CALL ADDI8I8(VWCOM,ASFINV(ASFVCMU,1),BETUNIT)
	 CALL ADDI8I8(VWCOM,ASFINV(ASFWCMU,1),BETUNIT)
	 CALL ADDI8I8(VCOM,ASFINV(ASFVCMU,1),BETUNIT)
	 CALL ADDI8I8(WCOM,ASFINV(ASFWCMU,1),BETUNIT)
	 CALL ADDI8I8(AGT_ADJUST,ASFINV(ASFPADU,1),BETUNIT)
	 CALL ADDI8I8(AGT_ADJUST,ASFINV(ASFADJU,1),BETUNIT)
C
C ADD OFFLINE VALIDATIONS
C
	 IF (ASFINV(ASFOFFPAY,1).GT.0) THEN
	    AMT(VALIND)=AMT(VALIND)+ASFINV(ASFOFFPAY,1)
	 ENDIF
C
C WRITE TITLE IF NEEDED
C
	 IF(LINCNT.GT.LINSPP) THEN
	      CALL TITLE('RELACAO DOS RECIBOS',
     *	                 '  INVRPT',1,INVRPT_LUN,PAGE,DAYCDC)
	      WRITE(INVRPT_LUN,900)
              WRITE(INVRPT_LUN,9000)
	     LINCNT=6
	 ENDIF
C
C WRITE CANCEL TITLE IF NEEDED
C
         IF(CAN_LINCNT.GT.LINSPP) THEN
              CALL TITLE('CANCELLATION LIMIT REPORT',
     *                   '  INVCAN',1,INVCAN_LUN,CAN_PAGE,DAYCDC)
              WRITE(INVCAN_LUN,900)
              WRITE(INVCAN_LUN,9000)
             CAN_LINCNT=6
         ENDIF
C
C SET OFFLINE AGENT LINE COUNT
C
         IF  (OFF_LINCNT.GT.LINSPP) THEN
             OFF_LINCNT=0
         ENDIF
C
C WRITE A LINE ON REPORT
C
	 C_RECEP    = ASFINV(ASFCRAMT,1)
	 TOTRECEP   = TOTRECEP + C_RECEP
	 TOT_AJUSTE = AGT_ADJUST(1)*DYN_BETUNIT + AGT_ADJUST(2)
	 TOT_AJUSTE = TOT_AJUSTE - C_RECEP
C
C !TRANSPORTE ONLY IF THE AGENT HAS ACTIVITY
C
	 TRANSPORTE = 0
C	 IF (AMT(SALIND).GT.0) THEN	 
	 IF (ASFINV(ASFACT, 1) .GT. 0) THEN
            CALL ASCBIN(ASFINF, SSTTP, LSTTP, COD_TRANSP, CERR)
	    IF (COD_TRANSP .EQ. 1) THEN
	       TRANSPORTE = P(VALCT1)
	    ELSEIF(COD_TRANSP .EQ. 2) THEN
	       TRANSPORTE = P(VALCT2)
	    ELSEIF(COD_TRANSP .EQ. 3) THEN
	       TRANSPORTE = P(VALCT3)
	    ENDIF
	    TOTTRANS = TOTTRANS + TRANSPORTE
	 ENDIF

	 CALL ASCBIN(ASFINF, SSAPN, LSAPN, SAP_NUMBER, CERR)

	 WRITE(AGTCHAR,FMT='(<LAGNO>(A1))') (ASFBYT(K),K=SAGNO,EAGNO)
	 WRITE(INVRPT_LUN,901) SAP_NUMBER,CAGT_NO(AGTCHAR),
     *			CSMONY(AMT(SALIND),11,BETUNIT),
     *                  CSMONY(TRANSPORTE*-1,11,BETUNIT),
     *			CSMONYI8(AGT_ADJUST,10,BETUNIT),
     *			CNT(CANIND),CSMONY(AMT(CANIND),11,BETUNIT),
     *			CNT(VALIND),CSMONY(AMT(VALIND),11,VALUNIT),
C    *                  CNT(REFIND),CSMONY(AMT(REFIND),11,BETUNIT),
C    *			CNT(CLMIND),CSMONY(AMT(CLMIND),11,VALUNIT),
     *			CSMONYI8(SCOM(1),10,BETUNIT),
C    *                  CSMONYI8(VWCOM(1),9,BETUNIT),
     *			CSMONYI8(ASFINV(ASFDUEU,1),12,BETUNIT)
C    *                  CSMONY(ASFINV(ASFSRV,1),6,BETUNIT)
	 LINCNT=LINCNT+1
C
C WRITE A LINE ON CANCELLATION REPORT
C
	 IF(AMT(CANIND).GT.(AMT(SALIND)*CANPER)) THEN
             WRITE(INVCAN_LUN,901) SAP_NUMBER, CAGT_NO(AGTCHAR),
     *                    CSMONY(AMT(SALIND),11,BETUNIT),
     *                    CSMONY(TRANSPORTE*-1,11,BETUNIT),
     *                    CSMONYI8(AGT_ADJUST,10,BETUNIT),
     *                    CNT(CANIND),CSMONY(AMT(CANIND),11,BETUNIT),
     *                    CNT(VALIND),CSMONY(AMT(VALIND),11,VALUNIT),
C     *                    CNT(REFIND),CSMONY(AMT(REFIND),11,BETUNIT),
C     *                    CNT(CLMIND),CSMONY(AMT(CLMIND),11,VALUNIT),
     *                    CSMONYI8(SCOM(1),10,BETUNIT),
C     *                    CSMONYI8(VWCOM(1),9,BETUNIT),
     *                    CSMONYI8(ASFINV(ASFDUEU,1),12,BETUNIT)
C     *                    CSMONY(ASFINV(ASFSRV,1),6,BETUNIT)
             CAN_LINCNT=CAN_LINCNT+1
	 ENDIF
C
C WRITE A LINE ON THE OFFLINE INVOICE AGENT REPORT (SCML OFFLINE PROCEDURE)
C
         CALL ASCBIN (ASFINF, STTYP, LTTYP, TERMTYP, ST)
C
	 INVAMT = ASFINV(ASFDUEU,1)*DYN_BETUNIT + ASFINV(ASFDUEP,1)
	 CALL ASCBIN(ASFINF, SAGNO, LAGNO, AGT, CERR)
	 IF  (  INVAMT.NE.0 .AND. AGT/100000.GT.0 ) THEN	    !DEBITS OR CREDITS !!
	     CALL MOVBYT(%REF(ASFBYT), SWANB, %REF(BNK_NIB), 1, EWANB-SWANB+1)	    !READ AGENT NIB #
	     CALL GET_BNK_NAME(BNK_NIB(1:4),BNK_NAME,ACHOU)		            !GET BANK NAME WITH AGENT BANK CODE (1:4)
C
	     WRITE(INVRPTOFF_LUN,903) BNK_NAME, BNK_NIB
             OFF_LINCNT=OFF_LINCNT+3
C
	     IF	( INVAMT .LT. 0 ) THEN
	        INVAMT = INVAMT *(-1)
                CVLTYP = 'CR'
	     ELSE
		CVLTYP = '  '
	     ENDIF
	     WRITE(INVRPTOFF_LUN,904) CSMONY(AMT(SALIND),11,BETUNIT),
     *			              CSMONYI8(SCOM(1),9,BETUNIT),
     *		                      CSMONY(TRANSPORTE*-1,9,BETUNIT),
     *			              CSMONY(TOT_AJUSTE,9,BETUNIT),
CC     *			              CSMONYI8(AGT_ADJUST,9,BETUNIT),
     *                                CSMONY(AMT(VALIND),9,VALUNIT),
     *                                CSMONY(INVAMT,12,BETUNIT),
     *                                CVLTYP
             OFF_LINCNT=OFF_LINCNT+4
C
C  EURO IS HERE. SCML DOES NOT WANT ESCUDOS INFORMATION
C
C	     ESCUDOS_VALUE = FORMAT_EURO_VALUE( INVAMT, 'Esc' )
C	     WRITE(INVRPTOFF_LUN,FMT='(62X,A18,A2)') ESCUDOS_VALUE,CVLTYP
             WRITE(INVRPTOFF_LUN,FMT='(10X,A2)') CVLTYP 
             OFF_LINCNT=OFF_LINCNT+1
C
	     CALL FIGWEK(DAT,WEEK,YEAR)	                             !SATURDAY IS THE WEEK DRAW DAY
	     CALL MOVBYT(%REF(ASFBYT),SNAME,%REF(STORE_NAME),1,ENAME-SNAME+1)
	     WRITE(INVRPTOFF_LUN,905) WEEK, '/', YEAR,
     *                                DBUF(VYEAR)+2000, '/', DBUF(VMON), '/', DBUF(VDAY),
     *                                STORE_NAME(1:30),
     *                                STORE_NAME(31:45)
	     OFF_LINCNT=OFF_LINCNT + 4
C
             CALL ASCBIN(ASFINF, SCENR, LCENR, COD_CENTRAL, CERR)     !"CENTRAL DE RECEPCAO" CODE
             CALL ASCBIN(ASFINF, SLIND, LLIND, DISTLIN, CERR)	      !DISTRIBUTION LINE
C
	     WRITE (C_CENTRAL,FMT='(I7.7)') COD_CENTRAL
	     CALL MOVBYT(%REF(ASFBYT),SSTRT,%REF(ADDRESS),1,ESTRT-SSTRT+1)
	     WRITE(INVRPTOFF_LUN,906) CAGT_NO(AGTCHAR),
     *                                DISTLIN, C_CENTRAL(5:7),
     *                                ADDRESS(1:30), ADDRESS(31:45)
	     OFF_LINCNT=OFF_LINCNT + 2
C
             CALL ASCBIN(ASFINF, SSAPN, LSAPN, SAP_NUMBER, CERR)
	     WRITE(INVRPTOFF_LUN,FMT='(10X,I6)' )SAP_NUMBER
	     OFF_LINCNT=OFF_LINCNT + 1
C
	     CALL ASCBIN(ASFINF, SZIPC, LZIPC, ZIP_CODE_NUM, CERR)
	     CALL MOVBYT(%REF(ASFBYT),SZIPA,%REF(ZIP_CODE_NAME),1,EZIPA-SZIPA+1)
	     WRITE(INVRPTOFF_LUN,907) ZIP_CODE_NUM/1000,
     *                                MOD(ZIP_CODE_NUM,1000),ZIP_CODE_NAME
	     OFF_LINCNT=OFF_LINCNT + 18

	 ENDIF
C
C WRITE WAGSAP_DAYCDC.ASC
C
	IF  ( .NOT. TSBIT(TERMTYP,AGTPRV) .AND. INVAMT.NE.0 ) THEN
            CALL ASCBIN(ASFINF, SSAPN, LSAPN, SAP_NUMBER, CERR)
	    CNTSAP = CNTSAP + 1
C
CC	    C_RECEP = ASFINV(ASFCRAMT,1)
C	    
	    TP_ACERTO    = 0
	    VR_ACERTO    = 0
	    TOTVR_ACERTO = AGT_ADJUST(1)*DYN_BETUNIT + AGT_ADJUST(2)
	    IF	( TOTVR_ACERTO.LT.0 ) THEN
		VR_ACERTO = ABS(TOTVR_ACERTO)
		TP_ACERTO = 2		!CREDIT
	    ELSEIF ( TOTVR_ACERTO.GT.0 ) THEN
		VR_ACERTO = TOTVR_ACERTO
		TP_ACERTO = 1		!DEBIT
	    ENDIF
C
	    WRITE(SAPFILE_LUN,200) 'HW2',
     *                             AGT,
     *                             AMT(SALIND),
     *                             SCOM(1),
     *                             AMT(VALIND),
     *                             TP_ACERTO,
     *                             VR_ACERTO,
     *                             TRANSPORTE,
     *                             C_RECEP,
     *			           SAP_NUMBER           
            
200	FORMAT(A3,I7.7,I13.13,I13.13,I13.13,I1,I13.13,I13.13,I13.13,I6.6)
	ENDIF 
C
C UPDATE GRAND TOTALS
C
	 DO 120 I=1,MAXTYP+7
	      TOT_CNT(I) = TOT_CNT(I) + CNT(I)
	      IF(I.EQ.SALIND) THEN
		 RTOT_SAL = RTOT_SAL + AMT(I)
	      ELSE
	         TOT_AMT(I) = TOT_AMT(I) + AMT(I)
	      ENDIF
120	 CONTINUE
	 CALL ADDI8I8(TOT_ADJUST,ASFINV(ASFADJU,1),BETUNIT)
	 CALL ADDI8I8(TOT_ADJUST,ASFINV(ASFPADU,1),BETUNIT)
	 CALL ADDI8I8(TOT_AMTDUE,ASFINV(ASFDUEU,1),BETUNIT)
         CALL ADDI8I4(TOT_RENT,ASFINV(ASFSRV,1),BETUNIT)
	 CALL ADDI8I8(TOT_SCOM,SCOM,BETUNIT)
	 CALL ADDI8I8(TOT_VCOM,VCOM,BETUNIT)
	 CALL ADDI8I8(TOT_WCOM,WCOM,BETUNIT)
         CALL ADDI8I8(TOT_VWCOM,VWCOM,BETUNIT)
	 RETURN
C
C ENTRY INVRPT_END
C
	ENTRY INVRPT_END()
C
C WRITE OUT TOTAL PAGE
C
        CALL TITLE('AGENT INVOICE REPORT',
     *	           '  INVRPT',2,INVRPT_LUN,PAGE,DAYCDC)
	WRITE(INVRPT_LUN,902) CSMONYI8(TOT_ADJUST,12,BETUNIT),
     *		     RTOT_SAL*DYN_BETUNIT/100.D0,
     *	             CSMONY(TOT_AMT(DSCIND),12,BETUNIT),
     *		     CSMONY(TOT_AMT(CANIND),12,BETUNIT),
     *		     CSMONY(TOT_AMT(VALIND),12,VALUNIT),
     *		     CSMONY(TOTTRANS*-1,12,BETUNIT),
     *               CSMONY(TOTRECEP,12,BETUNIT),
C    *		     CSMONY(TOT_AMT(CLMIND),12,VALUNIT),
     *		     CSMONYI8(TOT_SCOM(1),12,BETUNIT),
C    *               CSMONYI8(TOT_VCOM(1),12,BETUNIT),
C    *		     CSMONYI8(TOT_WCOM(1),12,BETUNIT),
C    *		     CSMONY(TOT_AMT(TKCIND),12,BETUNIT),
     *		     CSMONYI8(TOT_AMTDUE(1),12,BETUNIT)
C    *               CSMONYI8(TOT_RENT,12,BETUNIT)
C
C SPOOL REPORTS
C
	CALL USRCLOS1(INVRPT_LUN)
	CALL SPOOL('INVRPT.REP',COPY,ST)
        CALL USRCLOS1(INVCAN_LUN)
        CALL SPOOL('INVCAN.REP',COPY,ST)
	CALL USRCLOS1(INVRPTOFF_LUN)
	CALL SPOOL('INVRPTOFF.REP',COPY,ST)
C
	CNTSAP = CNTSAP + 1
	WRITE(SAPFILE_LUN,300) 'HW9', CNTSAP
300	FORMAT(A3,I6.6)
C
	CALL USRCLOS1(SAPFILE_LUN)
	ST = LIB$FREE_LUN(INVRPT_LUN)
	ST = LIB$FREE_LUN(INVCAN_LUN)
	ST = LIB$FREE_LUN(INVRPTOFF_LUN)
	ST = LIB$FREE_LUN(SAPFILE_LUN)
C
C EURO MIL PROJECT - DELETE INVRPT.REP... EURO WILL CREATE THIS FILE
C	           - DELETE INVRPTOFF.REP... EURO MIL WILL CREATE THIS FILE
C        CALL DFILX('INVRPT.REP', 0, 0, ST)
        CALL DFILX('INVRPTOFF.REP', 0, 0, ST)
	RETURN
C
C FORMAT STATEMENTS
C
C900	FORMAT(31X,'----CANCEL-----',
C     *         1X,'-----CASH------',
C     *         1X,'----REFUND-----',
C     *         1X,'-----CLAIM-----')
C9000    FORMAT(1X,' AGTNUM',2X,'NET SALES',4X,'ADJUST',
C     *         1X,4('CNT      AMOUNT '),
C     *         1X,'  SALCOM   PRZCOM     NET DUE',
C     *         1X,'  RENT')

900	FORMAT(T60,'-CANCELAMENTO--   ---PAGAMENTO---')
9000    FORMAT(T5,'MEDIADOR       REC. ILIQ.   PAG. TRANSP.     ACERTOS   QTD       VALOR   QTD       VALOR',
     *         T97,'COMISSAO      TOTAL A PAGAR')

C9011	FORMAT(1X,A8,A11,A10,4(I4,1X,A11),A10,A9,A12,1X,A6)

901	FORMAT(1X,I6.6,'/',A8,2X,A11,4X,A11,2X,A10,2X,I4,1X,A11,2X,I4,1X,A11,2X,A10,7X,A12)

902	FORMAT(42X,'TOTAL ACERTOS....................    ',A12,/,
     *	       42X,'TOTAL RECEITA....................    ',F12.2,/,
     *	       42X,'TOTAL DESCONTOS..................    ',A12,/,
     *	       42X,'TOTAL CANCELAMENTOS..............    ',A12,/,
     *         42X,'TOTAL PAGAMENTOS.................    ',A12,/,
     *         42X,'TOTAL TRANSPORTES................    ',A12,/,
     *	       42X,'TOTAL CENTRAIS DE RECEPCAO.......    ',A12,/,
C     *         42X,'TOTAL CLAIM AMOUNT...............    ',A12,/,
     *         42X,'TOTAL COMISSAO...................    ',A12,/,
C     *         42X,'TOTAL VALIDATION COMMISSION......    ',A12,/,
C     *	       42X,'TOTAL WINNERS COMMISSION.........    ',A12,/,
C     *	       42X,'TOTAL TICKET CHARGE..............    ',A12,/,
     *         42X,'TOTAL A PAGAR....................    ',A12)
C     *         42X,'TOTAL RENT.......................    ',A12)
C

C OFFLINE REPORT FORMAT'S
C
903	FORMAT(8X,A33,2X,A21,23X)
904     FORMAT(/,/,/,1X,7X,A11,1X,A9,A9,A9,2X,A9,9X,A12,A2)
905     FORMAT(/,/,1X,9X,I2.2,A1,I4.4,3X,I4.4,A1,I2.2,A1,I2.2,11X,A30,13X,/,
     *         41X,A15)
906     FORMAT(1X,10X,A8,5X,I2.2,5X,A3,7X,A30,13X,/,
     *         41X,A15)
907     FORMAT(41X,I4.4,'-',I3.3,1X,A30,12X,/,/,/,/,/,/,/,/,/,/)
	END
C
C	***********************************************************
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE GET_BNK_NAME (BANK, BNK_NAME, ACHOU)
	IMPLICIT   NONE
C	***********************************************************
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:BANK_REC.DEF'

	CHARACTER*(*) BANK
        CHARACTER*(*) BNK_NAME
	LOGICAL	      ACHOU
C
	INTEGER*4     INDBNK

        ACHOU  = .FALSE.
	INDBNK = 1
	DO WHILE (INDBNK.LE.MAXBANKS .AND. .NOT.ACHOU)
           IF (BANK_TAB(INDBNK).BANK.EQ.BANK) THEN
	      BNK_NAME = BANK_TAB(INDBNK).LONG_NAME
              ACHOU = .TRUE.
	   ELSE
	      INDBNK = INDBNK + 1
           ENDIF
	ENDDO
C
C DEFAULT FOR ERROR
C
	IF  ( .NOT. ACHOU ) BNK_NAME = '                                 '

	RETURN
	END
