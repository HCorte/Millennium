C
C V03 29-NOV-2000 UXN Totogola added.
C V02 13-OCT-1999 RXK World Tour added.
C V01 10-JUN-1999 UXN Initial release.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
	PROGRAM FILREP
	IMPLICIT NONE
	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:RECSCF.DEF'
	INCLUDE 'INCLIB:RECDAF.DEF' 
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:RECAGT.DEF'
C
	INTEGER*4 FDB(7),ST
	INTEGER*4 GAM,GTYP,GIND,LAST_DRAW,LAST_CDC
	INTEGER*4 K,CDC
	INTEGER*2 DATE(LDATE_LEN)
C
	COMMON SCFREC
C
	CALL GETSCONF(SCFREC,ST)
	IF(ST.NE.0) CALL GSTOP(GEXIT_FATAL)
C
C Find last STOPSYS date from ASF file.
C
	CALL OPENW(1,SCFSFN(1,ASF),4,0,0,ST)
	CALL IOINIT(FDB,1,ASFSEC*256)
	IF(ST.NE.0) CALL FILERR(SCFSFN(1,ASF),1,ST,0)
	CALL READW(FDB,1,ASFREC,ST)
	IF(ST.NE.0) CALL FILERR(SCFSFN(1,DAF),2,ST,1)
	CALL CLOSEFIL(FDB)
C
C Read DAF file
C	
	CDC = ASFDAT(2,1)
	IF(CDC.LE.0) THEN
	   CALL PRMNUM('Enter last STOPSYS cdc',CDC,1,9999,ST)
	   IF(ST.NE.0) CALL GSTOP(GEXIT_OPABORT)
	ENDIF
C
	CALL OPENW(1,SCFSFN(1,DAF),4,0,0,ST)
	CALL IOINIT(FDB,1,DAFSEC*256)
	IF(ST.NE.0) CALL FILERR(SCFSFN(1,DAF),1,ST,0)
	CALL READW(FDB,CDC,DAFREC,ST)	
	IF(ST.NE.0) CALL FILERR(SCFSFN(1,DAF),2,ST,CDC)
	CALL CLOSEFIL(FDB)
C
C Check all game files.	
C
	WRITE(6,9000) 
	DO 100 GAM = 1, MAXGAM
	   GTYP = SCFGNT(GAMTYP,GAM)
	   GIND = SCFGNT(GAMIDX,GAM)
	   IF(GTYP.LE.0.OR.GTYP.GT.MAXTYP) GOTO 100
	   IF(GIND.LE.0.OR.GIND.GT.MAXIND) GOTO 100
	   CALL CHECK_GAME_FILE(SCFGFN(1,GAM),GTYP,LAST_DRAW)
	   IF(DAFHDR(GAM).LT.0) DAFHDR(GAM) = 0
	   WRITE(6,9001) (SCFLGN(K,GAM),K=1,4),DAFHDR(GAM),LAST_DRAW,
     *                   LAST_DRAW-DAFHDR(GAM)
100	CONTINUE
	WRITE(6,9002)
	CALL CHECK_SYSTEM_FILE(DAF,LAST_CDC,DATE)
	WRITE(6,9003) (SCFSFN(K,DAF),K=1,5),CDC,LAST_CDC,LAST_CDC-CDC,
     *                (DATE(K),K=7,13)
C
9000	FORMAT(T2,'Game',T20,'Current draw',T40,'Max draws',
     *         T60,'Draws available',/,80('='))
9001    FORMAT(T2,4A4,T25,I4,T45,I4,T71,I4)
9002    FORMAT(T2,'File name',T25,'Current CDC',T40,'Max CDC',
     *         T50,'Days left',T60,'Gets full on'/,80('='))
9003    FORMAT(T2,5A4,T32,I4,T43,I4,T55,I4,T59,7A2)
	END
C ============================================================================
C CHECK_SYSTEM_FILE()
C ============================================================================
	SUBROUTINE CHECK_SYSTEM_FILE(ID,LAST_CDC,DATE)
	IMPLICIT NONE
	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:RECSCF.DEF'
	INCLUDE 'INCLIB:RECTEB.DEF'
	INCLUDE 'INCLIB:RECDAF.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
C
	INTEGER*4 ID,LAST_CDC,ST,SIZE,SECTOR
	INTEGER*2 DATE(LDATE_LEN)
	COMMON SCFREC
C
	CALL OPENW(1,SCFSFN(1,ID),4,0,0,ST)
	IF(ST.NE.0) CALL FILERR(SCFSFN(1,ID),1,ST,0)
	CALL VAXGETFSIZ(1,SIZE)
	CLOSE(1)
C
	IF(ID.EQ.DAF) THEN
	   SECTOR = DAFSEC
	ENDIF
	LAST_CDC = SIZE/(SECTOR/2)
	DATE(VCDC) = LAST_CDC
	CALL LCDATE(DATE)
	END   
C ============================================================================
C CHECK_GAME_FILE()
C ============================================================================
	SUBROUTINE CHECK_GAME_FILE(I4NAME,GTYP,LAST_DRAW)
	IMPLICIT NONE
	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'	
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DLTREC.DEF'
	INCLUDE 'INCLIB:DSPREC.DEF'
	INCLUDE 'INCLIB:DTGREC.DEF'
	INCLUDE 'INCLIB:DKKREC.DEF'
	INCLUDE 'INCLIB:DDBREC.DEF'
	INCLUDE 'INCLIB:DSCREC.DEF'
	INCLUDE 'INCLIB:DWIREC.DEF'
	INCLUDE 'INCLIB:DTSREC.DEF'
	INCLUDE 'INCLIB:DSSREC.DEF'
	INCLUDE 'INCLIB:DBNREC.DEF'
	INCLUDE 'INCLIB:DCPREC.DEF'	
	INCLUDE 'INCLIB:DSTREC.DEF'
	INCLUDE 'INCLIB:DTRREC.DEF'	
C
	INTEGER*4 I4NAME(5),GTYP,SIZE
	INTEGER*4 LAST_DRAW,SECTOR,ST
C
	CALL OPENW(1,I4NAME,4,0,0,ST)
	IF(ST.NE.0) CALL FILERR(I4NAME,1,ST,0)
	CALL VAXGETFSIZ(1,SIZE)
	CLOSE(1)
C
	IF(GTYP.EQ.TLTO) THEN
	    SECTOR = DLTSEC
	ELSEIF(GTYP.EQ.TSPT) THEN
	    SECTOR = DSPSEC
	ELSEIF(GTYP.EQ.TTGL) THEN
	    SECTOR = DTGSEC
	ELSEIF(GTYP.EQ.TKIK) THEN
	    SECTOR = DKKSEC
	ELSEIF(GTYP.EQ.TDBL) THEN
	    SECTOR = DDBSEC
	ELSEIF(GTYP.EQ.TSCR) THEN
	    SECTOR = DSCSEC
	ELSEIF(GTYP.EQ.TWIT) THEN
	    SECTOR = DWISEC
	ELSEIF(GTYP.EQ.TTSL) THEN
	    SECTOR = DTSSEC
	ELSEIF(GTYP.EQ.TSSC) THEN
	    SECTOR = DSSSEC
	ELSEIF(GTYP.EQ.TBNG) THEN
	    SECTOR = DBNSEC
	ELSEIF(GTYP.EQ.TCPL) THEN
	    SECTOR = DCPSEC
	ELSEIF(GTYP.EQ.TSTR) THEN
	    SECTOR = DSTSEC
	ELSEIF(GTYP.EQ.TTRP) THEN
	    SECTOR = DTRSEC
	ENDIF
	LAST_DRAW = SIZE/(SECTOR/2)
	END
