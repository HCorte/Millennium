C  GXSRC:CHKFMT.FOR
C  
C  $Log:   GXAGBR:[GOLS]CHKFMT.FOV  $
C  
C     Rev 1.7   14 Jun 2000 15:35:28   NXJ
C  Modifications for GOLS 26
C  
C     Rev 1.6   01 Oct 1997 10:42:46   DXA
C  Added Prize Repayment original cashing data dummy arg.
C  Added Prize Repayment flag to checkwriter message. RFC #1432.
C  
C     Rev 1.5   10 Jan 1996 13:03:30   DJO
C  Changed to send selling serial number info as well as cashing serial info.
C  
C     Rev 1.4   02 Sep 1994 17:19:06   MCM
C  SWAPPING BYTES IS NO LONGER NECESSARY FOR THE DEC LMS
C  
C     Rev 1.3   25 Aug 1994 14:28:02   MCM
C  ADDED GAME NUMBER AS THE LAST 2 BYTES
C  
C     Rev 1.2   25 Jan 1994 15:42:22   JPJ
C  Updated procom TERNUM location from 2 bytes to 4 bytes
C  
C     Rev 1.1   03 Jan 1994 19:53:18   SYSTEM
C  Applying PVCS header for automatic revision history
C  
C     Rev 1.0    21 Dec 1993 17:29:38   SYSTEM
C  Initial revision.
C
C
C
C V04 10-APR-00 LAH ADDED CALL TO GET_CDC_FROM_DRAW AND PASS CDC DATE OF
C                   THE FIRST WINNING DRAW TO IPS (RFC#2821) 
C V03 06-MAY-97 DXA ADDED PRIZE REPAYMENT ORGINAL CASHING DATA DUMMY ARG
C                   ADDED PRIZE REPAYMENT FLAG TO CHECKWRITER MSG
C V02 05-AUG-93 TZK FIXED CHECKWRITER BUG
C V02 19-OCT-92 GAP MODIFIED FOR JACKPOT TYPE.
C V01 18-AUG-92 NJA INITIAL RELEASED FOR TEXAS. 
C
C SUBROUTINE TO BUILD CROSS SYSTEM CHECK WRITER MESSAGE.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
        OPTIONS /CHECK=NOOVERFLOW
C
	SUBROUTINE CHKFMT(TRABUF)
C
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:QUECOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
C
	INTEGER*4 MESSAGE_LENGTH
	PARAMETER (MESSAGE_LENGTH = 50)
C
	INTEGER*4 IND, BUF, AMT, BLEN
	INTEGER*4 CHKJUL, CHKSER, CHKDIG, CDC
C
        INTEGER*4 SELL_AGT
C
	BYTE      B_CHKTAB(MESSAGE_LENGTH)
C
	INTEGER*4   I4TEMP
	INTEGER*2   I2TEMP(2), DATE(12)
	BYTE	    I1TEMP(4)
	EQUIVALENCE (I4TEMP,I2TEMP,I1TEMP)
C
C GET AVAILABLE BUFFER
C
100	CONTINUE
	CALL GETBUF(BUF)
	IF(BUF.EQ.0) THEN
	    RETURN
	ENDIF
C
C SET UP PROCOM BUFFER
C
	HPRO(TRCODE,BUF)=TYPCWT
	HPRO(INPLEN,BUF)=OUTLEN_MAX
	PRO(TERNUM,BUF)=TRABUF(TTER)
C
C SET LENGTH
C
	IND=1
	I4TEMP=MESSAGE_LENGTH
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	IND=IND+2
C
C SET GTECH BUFFER NUMBER
C
	I4TEMP=BUF
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	IND=IND+2
C
C SET GTECH CROSS REFERENCE NUMBER
C
	I4TEMP=TRABUF(TSER)+CHKWRTOFF
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	B_CHKTAB(IND+2) = I1TEMP(3)
	B_CHKTAB(IND+3) = I1TEMP(4)
	IND=IND+4
C
C SET TRANSACTION TYPE CODE
C
        IF(TRABUF(TVCWT).NE.2) TRABUF(TVCWT)=1
	IF(TRABUF(TVCWT).EQ.1) THEN
	   I4TEMP=16        ! SENT TO STRATUS AS 16, LOGGED AS 1
	ELSE	
	   I4TEMP=17        ! SENT TO STRATUS AS 17, LOGGED AS 2
	ENDIF
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	IND=IND+2
C
C SET CDC
C
	I4TEMP=TRABUF(TCDC)
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	IND=IND+2
C
C SET JULIAN DATE (CASHING)
C
	DATE(VCDC)=TRABUF(TCDC)
	CALL CDATE(DATE)
	CHKJUL=DATE(VJUL)
	I4TEMP=CHKJUL
	B_CHKTAB(IND+0)=I1TEMP(1)
	B_CHKTAB(IND+1)=I1TEMP(2)
	IND=IND+2
C
C GET SERIAL NUMBER AND CHECK DIGITS (CASHING INFO)
C
	CALL OUTGEN(TRABUF(TCDC),TRABUF(TSER),CHKSER,CHKDIG)
C
C SET SERIAL NUMBER (CASHING)
C
	I4TEMP=CHKSER
        B_CHKTAB(IND+0) = I1TEMP(1)
        B_CHKTAB(IND+1) = I1TEMP(2)
        B_CHKTAB(IND+2) = I1TEMP(3)
        B_CHKTAB(IND+3) = I1TEMP(4)
        IND=IND+4	
C
C SET CHECK DIGITS (CASHING)
C
        I4TEMP=CHKDIG
        B_CHKTAB(IND+0)=I1TEMP(1)
        B_CHKTAB(IND+1)=I1TEMP(2)
        B_CHKTAB(IND+2)=I1TEMP(3)
        B_CHKTAB(IND+3)=I1TEMP(4)
        IND=IND+4
C
C SET CASHING RETAILER NUMBER
C
	I4TEMP=TRABUF(TAGT)
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	B_CHKTAB(IND+2) = I1TEMP(3)
	B_CHKTAB(IND+3) = I1TEMP(4)
	IND=IND+4
C
C SET SELLING RETAILER NUMBER
C
	IF(TRABUF(TVSTER).GT.0.AND.TRABUF(TVSTER).LT.NUMAGT) THEN
           SELL_AGT = AGTTAB(AGTNUM,TRABUF(TVSTER))
        ELSE
           SELL_AGT = 0
	ENDIF
	I4TEMP =	SELL_AGT
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	B_CHKTAB(IND+2) = I1TEMP(3)
	B_CHKTAB(IND+3) = I1TEMP(4)
	IND=IND+4
C
C SET AMOUNT WON   
C
        AMT=TRABUF(TVPAY)
        I4TEMP=AMT
        B_CHKTAB(IND+0) = I1TEMP(1)
        B_CHKTAB(IND+1) = I1TEMP(2)
        B_CHKTAB(IND+2) = I1TEMP(3)
        B_CHKTAB(IND+3) = I1TEMP(4)
        IND=IND+4
C
C SET GAME
C
	I4TEMP=TRABUF(TGAM)
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
	IND=IND+2
C
C SET DRAW CDC DATE
C
        I4TEMP=CDC
        B_CHKTAB(IND+0)=I1TEMP(1)
        B_CHKTAB(IND+1)=I1TEMP(2)
        IND=IND+2
C
C SET JULIAN DATE (SELLING INFO)
C
	DATE(VCDC)=TRABUF(TVCDC)
	CALL CDATE(DATE)
	CHKJUL=DATE(VJUL)
	I4TEMP=CHKJUL
	B_CHKTAB(IND+0)=I1TEMP(1)
	B_CHKTAB(IND+1)=I1TEMP(2)
	IND=IND+2
C
C GET SERIAL NUMBER AND CHECK DIGITS (SELLING INFO)
C
	CALL OUTGEN(TRABUF(TVCDC),TRABUF(TVSER),CHKSER,CHKDIG)
C
C SET SERIAL NUMBER (SELLING)
C
	I4TEMP=CHKSER
        B_CHKTAB(IND+0) = I1TEMP(1)
        B_CHKTAB(IND+1) = I1TEMP(2)
        B_CHKTAB(IND+2) = I1TEMP(3)
        B_CHKTAB(IND+3) = I1TEMP(4)
        IND=IND+4	
C
C SET CHECK DIGITS (SELLING)
C
        I4TEMP=CHKDIG
        B_CHKTAB(IND+0)=I1TEMP(1)
        B_CHKTAB(IND+1)=I1TEMP(2)
        B_CHKTAB(IND+2)=I1TEMP(3)
        B_CHKTAB(IND+3)=I1TEMP(4)
        IND=IND+4
C
C SET PRIZE REPAYMENT FLAG
C
	I4TEMP=0
	B_CHKTAB(IND+0) = I1TEMP(1)
	B_CHKTAB(IND+1) = I1TEMP(2)
        IND=IND+2
C
C QUEUE TRANSACTION TO CRSPRO
C FIRST BYTE ON INSTAB IS USED FOR CRSPRO
C
	BLEN=MESSAGE_LENGTH
	CALL LIB$MOVC3(BLEN,B_CHKTAB,BPRO(BINSTAB+1,BUF))
	CALL QUETRA(CRS, BUF)
C
C
	RETURN
	END
