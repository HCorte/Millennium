C
C SUBROUTINE UPDATSYS
C $Log:   GXAFXT:[GOLS]UPDATSYS.FOV  $
C  
C     Rev 1.0   17 Apr 1996 15:42:58   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 17:57:46   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - poolsys.for **
C
C
C
C++++++++++++++++++++++++++++++++++++++++++++
C
C    UPDATSYS(BOARD,BITMSK,FROM_CHOSE,TO_CHOSE,GAME,ADD) ;UPDATE POOL
C                                               WITH  SYSTEM BET
C     IN:
C     BOARD    -  BOARD BET
C     BITMSK   -  SYSTEM BET DEFINITION
C     FROM_CHOSE- SO MANY NUMBERS MARKED IN BITMSK
C     TO_CHOSE  - SO MANY NUMBERS CONSTITUTE BASE BET
C     GAME      - GAME NUMBER  (TO FIND CORRESPONDING PAGE #)
C     ADD       - 0 IF OFFSETS SHOULD BE ADDED, -1 IF SHOULD BE
C                 SUBSTRACTED
C
C
C     OUT:
C     POOLS ARE UPDATED FOR THIS COMBINATION
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE UPDATSYS(BOARD,BITMSK,FROM_CHOSE,TO_CHOSE,GAME,ADD)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INTEGER*4 BOARD(*)               !SYSTEM BET BET
	INTEGER*4 BITMSK                 !MASK OF CURRENT BET PROCESSED
	INTEGER*4 FROM_CHOSE             !SO MANY MARKS IN CURRENT DEF
	INTEGER*4 TO_CHOSE               !SO MANY MARKS FOR BASE BET
	INTEGER*4 GAME                   !GAME #
	INTEGER*4 OFFSET, OFF1, OFF, FIRST, FASTBIN, ADD
C
	INTEGER*4 BRD(32)                 !TEMP TO STORE COMBINATIONS
C
	INTEGER*4  CMB_TAB_LEN
	PARAMETER (CMB_TAB_LEN=50000)
C
	INTEGER*2 CMB_TAB(CMB_TAB_LEN) /CMB_TAB_LEN*0/
	INTEGER*4 CMB_TIMES(16,16)  /256*0/
	INTEGER*4 CMB_POINTER(16,16)/256*0/
	INTEGER*4 NEXT_POINTER/1/
	INTEGER*4 ONCE/0/
	INTEGER*4 TIMES
	INTEGER*4 BOARD_DEF(32)    !TO STORE BET DEFINITION
C
	IF (ONCE.EQ.0) THEN
	   NEXT_POINTER=1
	   ONCE=-1
	ENDIF
C
C     CONVERT DEFINITION BITMASK TO BOARD REPRESANTATION
C
	CALL BITBOARD(BITMSK,BOARD_DEF,FROM_CHOSE)
C
C     IF ALL COMBINATIONS NOT FOUND YET, TRY TO FIND THEM
C
	IF (CMB_POINTER(FROM_CHOSE,TO_CHOSE).EQ.0) THEN
	  CALL GETCMB2(CMB_TAB(NEXT_POINTER),FROM_CHOSE,TO_CHOSE)
	  CMB_POINTER(FROM_CHOSE,TO_CHOSE)=NEXT_POINTER
	  CMB_TIMES(FROM_CHOSE,TO_CHOSE)=FASTBIN(FROM_CHOSE,TO_CHOSE)
	  NEXT_POINTER=NEXT_POINTER
     *	                +TO_CHOSE*CMB_TIMES(FROM_CHOSE,TO_CHOSE)
	ENDIF
C
C***  TYPE *,IAM(),' current pointer ',NEXT_POINTER,CMB_POINTER(FROM_CHOSE,
C*** *     TO_CHOSE),' times ',CMB_TIMES(FROM_CHOSE,TO_CHOSE)
C
	FIRST=CMB_POINTER(FROM_CHOSE,TO_CHOSE)
	TIMES=CMB_TIMES(FROM_CHOSE,TO_CHOSE)
C***  TYPE *,IAM(),'B ',(BOARD(I),I=1,10)
C***  TYPE *,IAM(),'B_D ',BOARD_DEF
C
C     PROCESS ALL COMBINATIONS FOR THIS BET
C
	DO 30, OFF=1,TIMES
	   DO 20, OFF1=FIRST,FIRST+TO_CHOSE-1
	      BRD(OFF1-FIRST+1)=BOARD(BOARD_DEF(CMB_TAB(OFF1)))
20	   CONTINUE
	   CALL CMBOFF(BRD,OFFSET,TO_CHOSE)
	   CALL POOLUPD2(OFFSET,GAME,ADD)
C***     TYPE *,IAM(),OFF,' ** '
C*** *       ,(BOARD(BOARD_DEF(CMB_TAB(I))),I=FIRST,FIRST+TO_CHOSE-1)
C*** *          ,' ** ',OFFSET
	   FIRST=FIRST+TO_CHOSE
30	CONTINUE
	END
