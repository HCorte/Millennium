C
C PROGRAM SLOCHK
C $Log:   GXAFXT:[GOLS]SLOCHK.FOV  $
C  
C     Rev 1.0   17 Apr 1996 15:08:12   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 17:38:18   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - slochk.for **
C
C SLOCHK.FOR
C
C V03 09-MAY-91 MP  ADDED CALL TO SNIF_AND_WRKSET
C V02 22-JAN-91 KWP REMOVED LINCOM/TERCOM USE X2XCOM
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM SLOCHK
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:SLOCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:SLOCOM1.DEF'
	LOGICAL OLD
C
	INTEGER*4 OFFSET, REST, TIMES, BUF
	INTEGER*4 T, QUECNT, ST, OFF
	INTEGER*4 COUNT1, COUNT, STN, TSTATE
C
	INTEGER*4 LGOODSIGN(X2X_STATIONS),LTOTALSIGN(X2X_STATIONS)
	INTEGER*4 LLINERR(X2X_STATIONS)
	DATA COUNT/0/,COUNT1/0/
C
	CALL COPYRITE
C V03
	CALL SNIF_AND_WRKSET
C
C
C INITIALIZE SLOW1 AND SLOW2 2 TABLE
C
	DO 10 OFF=1,X2X_TERMS
	  SLOWT1(OFF)=0
	  SLOWT2(OFF)=0
10	CONTINUE
C
	CALL FASTSET(0,LLINERR,X2X_STATIONS)
	CALL FASTSET(0,LINEERRORS,X2X_STATIONS)
	IF(SLOWINTERVAL.EQ.0) SLOWINTERVAL=60
C
C SCAN TERMINAL TABLE FOR SLOW TERMINALS EVERY TWO SECONDS
C
100	CONTINUE
	CALL XWAIT(2,2,ST)
	IF(DAYSTS.NE.DSOPEN) GOTO 10000
	IF(P(SYSTYP).NE.LIVSYS) GOTO 100
	QUECNT=0
	COUNT=COUNT+1
	COUNT1=COUNT1+1
	IF(P(SUPCOM).NE.0) GOTO 120
	CALL FASTSET(0,DEADLINE,X2X_STATIONS)
	CALL FASTSET(0,FLAKYLINE,X2X_STATIONS)
	CALL FASTSET(0,LGOODSIGN,X2X_STATIONS)
	CALL FASTSET(0,LTOTALSIGN,X2X_STATIONS)
C
C
	DO 110 T=1,X2X_TERMS
	  STN=X2XT_STATION_NO(T)
	  IF(STN.LE.0) GOTO 110  !NOT CONFIGURED
C
	  CALL ILBYTE(TSTATE,IX2XT_STATE,T-1)
	  IF(TSTATE.EQ.X2XTS_NOT_DEF .OR.
     *	     TSTATE.EQ.X2XTS_DISABLED) GOTO 110
C
	  OLD=TSBIT(SLOBIT,T)
	  IF(TSTATE.EQ.X2XTS_SLOW_POLL) DEADLINE(STN)=DEADLINE(STN)+1
C
C CHECK FOR RESPONDING TERMINALS
C
	  IF(OLD.AND.TSTATE.NE.X2XTS_SLOW_POLL) THEN
	    SLOWT1(T)=SLOWT1(T)+1
	    CALL BCLR(SLOBIT,T)	       !NO LONGER ON SLOW POLL
	    CALL GETBUF(BUF)
	    IF(BUF.EQ.0) GOTO 120      !OUT OF BUFFERS
	    HPRO(TERNUM,BUF)=T
	    HPRO(TRCODE,BUF)=TYPNON
	    HPRO(INPLEN,BUF)=4
	    PRO(INPTAB,BUF)=1          !RESPONDING
	    CALL QUEINP(BUF,ST)
	    QUECNT=QUECNT+1
	  ENDIF
C
C CHECK FOR NON-RESPONDING TERMINALS
C
	  IF(.NOT.OLD.AND.TSTATE.EQ.X2XTS_SLOW_POLL) THEN
	    SLOWT1(T)=SLOWT1(T)+1
	    CALL BSET(SLOBIT,T)		!ON SLOW POLL
	    CALL GETBUF(BUF)
	    IF(BUF.EQ.0) GOTO 120      !OUT OF BUFFERS
	    HPRO(TERNUM,BUF)=T
	    HPRO(TRCODE,BUF)=TYPNON
	    HPRO(INPLEN,BUF)=4
	    PRO(INPTAB,BUF)=2          !NON-RESPONDING
	    CALL QUEINP(BUF,ST)
	    QUECNT=QUECNT+1
	  ENDIF
	  IF(SLOWT1(T)+SLOWT2(T).GT.1) FLAKYLINE(STN)=FLAKYLINE(STN)+1
	  IF(AGTHTB(AOPSTS,T).EQ.SIGNON) THEN
	     LTOTALSIGN(STN)=LTOTALSIGN(STN)+1
          IF(SLOWT1(T)+SLOWT2(2).LE.1) LGOODSIGN(STN)=LGOODSIGN(STN)+1
	ENDIF
	IF(QUECNT.GT.500) GOTO 120  !HIT LIMIT FOR THIS RUN
110	CONTINUE
C
C UPDATE SLOW COMMON FOR VISION EVERY MINUTE
C
120	CONTINUE
	IF(COUNT.GE.30) THEN
	  DO 200 T=1,X2X_TERMS
	    CALL ILBYTE(TSTATE,IX2XT_STATE,T-1)
  	    IF(TSTATE.EQ.X2XTS_SLOW_POLL) THEN
	      SLOTAB(T)=SLOTAB(T)+1
	    ELSE
	      SLOTAB(T)=0
	    ENDIF
200	  CONTINUE
	  COUNT=0
	ENDIF
C
C     EVERY SLOW INTERVAL TIME MOVE SLOWT1 TABLE TO SLOWT2
C     THAT WILL ENABLE TO KEEP INTERMITTENT INFORMATION STATS
C     FOR SLOWINTERVAL*2 TO SLOW INTERVAL*4 SECS.
C
C
	IF(COUNT1.GE.SLOWINTERVAL) THEN
	  TIMES=X2X_TERMS/2048
	  REST=MOD(X2X_TERMS,2048)
	  DO 210 OFF=1,TIMES
	  OFFSET=(OFF-1)*2048+1
	  CALL FASTMOV(SLOWT1(OFFSET),SLOWT2(OFFSET),2048)
	  CALL FASTSET(0,SLOWT1(OFFSET),2048)
210	  CONTINUE
	  IF(REST.NE.0) THEN
	    OFFSET=TIMES*2048+1
	    CALL FASTMOV(SLOWT1(OFFSET),SLOWT2(OFFSET),REST)
	    CALL FASTSET(0,SLOWT1(OFFSET),REST)
	  ENDIF
	  COUNT1=0
	ENDIF
C
C UPDATE INFORMATION ON DEAD X2X_STATIONS
C
	CALL FASTMOV(FLAKYLINE,FLAKYMODE,X2X_STATIONS)
	CALL FASTMOV(DEADLINE,DEADMODE,X2X_STATIONS)
	CALL FASTMOV(LGOODSIGN,GOODSIGN,X2X_STATIONS)
	CALL FASTMOV(LTOTALSIGN,TOTALSIGN,X2X_STATIONS)
	GOTO 100
C
C
10000	CONTINUE
	CALL GSTOP(GEXIT_SUCCESS)
	END
