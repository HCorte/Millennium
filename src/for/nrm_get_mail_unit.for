C
C SUBROUTINE GET_MAIL_UNIT
C  
C V02 11-Nov-1999 RXK Changed for ALPHA (UXN)
C V01 21-Jan-1993 DAB Initial Release Based on Netherlands Bible, 12/92, and
C                     Comm 1/93 update
C  DEC Baseline
C
C ** Source - nrm_runtsk.for **
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C GET_MAIL_UNIT(UNIT, MBXCHAN)
C
C THIS ROUTINE CREATES A TEMPORARY MAILBOX TO HANDLE TERMINATION MESSAGES
C FROM PROCESSES CREATED WITH SYS$CREPRC SERVICE
C
C INPUT: NONE
C
C OUTPUT:
C	INTEGER*4 UNIT
C	INTEGER*2 MBXCHAN
C
C------------------------------------------------------------------------
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE GET_MAIL_UNIT(UNIT, MBXCHAN)
        IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE '($DVIDEF)'
C
        INTEGER*4   UNIT
        INTEGER*2   MBXCHAN
C
        INTEGER*4   SYS$ASSIGN, SYS$CREMBX, SYS$GETDVIW
C
        INTEGER*4   ITEM_LIST_4(4)
        INTEGER*2   ITEM_LIST_2(8)
        EQUIVALENCE (ITEM_LIST_4,ITEM_LIST_2)
        INTEGER*4   STATUS, IOSB_4(2)
        INTEGER*2   IOSB_2(4)
        EQUIVALENCE (IOSB_4,IOSB_2)
	INTEGER*4   I
	INTEGER*4   LENGTH			! V04
	INTEGER*4   NAM_LEN
C
	INTEGER*4   MBX_NAME_4(5)
	CHARACTER*19   MAIL_BOX_NAME
	EQUIVALENCE (MBX_NAME_4,MAIL_BOX_NAME)
	DATA	    MBX_NAME_4(1)/'MBX_'/
C
C	GET FULL NAME OF THIS PROCESS
C
	CALL GETFULNAM(MBX_NAME_4(2))
C
C	GET RID OF BLANKS
C
	DO 100 I=19,1,-1
	    IF (MAIL_BOX_NAME(I:I) .NE. ' ') GOTO 200
100	CONTINUE
C
200	CONTINUE
	NAM_LEN = I
C
C SETUP THE TEMPORARY MAILBOX FOR INTERTASK MESSAGES.
C IF MAILBOX DOES NOT EXIST, CREATE IT.
C
        STATUS=SYS$ASSIGN(MAIL_BOX_NAME(1:NAM_LEN),MBXCHAN,,)
        IF(.NOT.STATUS) THEN
          STATUS=SYS$CREMBX(%VAL(0),MBXCHAN,,,
     *                      %VAL('FD00'X),,MAIL_BOX_NAME(1:NAM_LEN))     ! V04
          IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
        ENDIF
C
D        TYPE *,IAM(),'MAILBOX CHANNEL ', MBXCHAN
C
        ITEM_LIST_2(1) = 4
        ITEM_LIST_2(2) = DVI$_UNIT
        ITEM_LIST_4(2) = %LOC(UNIT)
        ITEM_LIST_4(3) = %LOC(LENGTH)		  ! V04
        ITEM_LIST_4(4) = 0
 
        STATUS = SYS$GETDVIW (,%VAL(MBXCHAN),,ITEM_LIST_4,IOSB_4,,,)
C
        IF(.NOT.STATUS .OR. .NOT.IOSB_4(1)) THEN
            TYPE *,IAM(),'ERROR FROM GETDVI ', STATUS, IOSB_4(1)
      	    CALL LIB$SIGNAL(%VAL(STATUS))
        ENDIF
D       TYPE *,IAM(),'MAILBOX UNIT ', UNIT
        END
