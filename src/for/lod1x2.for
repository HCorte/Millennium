C
C PROGRAM LOD1X2
C $Log:   GXAFXT:[GOLS]LOD1X2.FOV  $
C  
C     Rev 1.0   17 Apr 1996 13:52:34   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 16:53:28   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - lod1x2.for **
C
C LOD1X2.FOR
C
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C V01 26-APR-90   LOU R.   INITIAL RELEASE FOR DENMARK.
C
C PROGRAM TO CONVERT ASCII DATA FILE CONTAINING DENMARK
C SYSTEM BETS.
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM LOD1X2
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:RECSSF.DEF'
C
	INTEGER*4  MAXDEFS
	PARAMETER (MAXDEFS=39)                !NUMBER OF BETS DEFINED
	INTEGER*4 TABCNT(MAXDEFS)
	INTEGER*4 MRKCNT(MAXDEFS)
	INTEGER*4 DBLCNT(MAXDEFS),TRICNT(MAXDEFS),SNGCNT(MAXDEFS)
	INTEGER*4 ROWTAB(SPGNBR,3541)
	INTEGER*4 FDB(7)
	INTEGER*4 CMD, DOWN, ACCROSS, COUNT, XXX, XX, RECIDX
	INTEGER*4 BETPROC, J, I, IND, MARK, SINGLE, DOUBLE, TRIPLE
	INTEGER*4 REDTYP, TYPCNT, STATUS, SYSNR, STYP, ST, LASTPROC
	LOGICAL MORE,COMPLETE
C
	DATA TABCNT /16,16,144,9,27,27,105,66,281,272,997,2304,3541,
     *	             24,36,24,72,108,27,1458,153,729,729,2513,673,105,
     *	             16,24,108,108,24,44,864,72,34,216,321,129,423/
	DATA MRKCNT /7,11,10,4,6,7,11,7,7,8,12,9,10,26*13/
	DATA DBLCNT /7,11,7,0,0,0,11,3,0,0,4,0,0,
     *	             3,6,4,3,2,0,0,0,0,0,3,0,0,
     *	             5,6,5,2,3,4,4,5,2,3,0,0,0/
	DATA TRICNT /0,0,3,4,6,7,0,4,7,8,8,9,10,
     *	             3,3,4,6,7,8,9,10,11,12,8,10,13,
     *	             4,4,5,6,6,6,6,6,7,7,8,9,11/
	DATA SNGCNT /6,2,3,9,7,6,2,6,6,5,1,4,3,
     *	             7,4,5,4,4,5,4,3,2,1,2,3,0,
     *	             4,3,3,5,4,3,3,2,4,3,5,4,2/
C
	CHARACTER*1 C1RECORD(80)
	CHARACTER*3 C3RECORD(13),C3RECORD2(13,3541)
	CHARACTER*5 C5RECORD(13),C5RECORD2(13,3541)
	INTEGER*4 SPTFIL(4)
	CHARACTER*9 SYSDEF(4)
	EQUIVALENCE (C1RECORD,C3RECORD,C5RECORD)
	EQUIVALENCE (C3RECORD2(1,1),C5RECORD2(1,1))
	DATA SYSDEF/'UNDEFINED','FULL     ',
     *	            'REDUCED  ','U-SYS    '/
	DATA SPTFIL/'XXXX',':SPT','SYS.','FIL '/
C
	CALL COPYRITE
C
C
	TYPE *,'<<<<<<<<<< LOD1X2 01.00 >>>>>>>>>>'
	LASTPROC=0
C
	CALL ROPEN('LOD1X2.REP',7,ST)
	IF(ST.NE.0) THEN
	  TYPE*,' LOD1X2.REP OPEN ERROR ',ST
	  CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
C
	OPEN(4,FILE='FILE1.TXT',IOSTAT=ST,STATUS='OLD',SHARED     )
	IF(ST.NE.0)THEN
	  TYPE *,'FILE1.TXT OPEN ERROR ',ST
	  CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
C
	CALL WIMG(5,'Enter volume name of SPTSYS.FIL ')
	READ(5,904) SPTFIL(1)
C
C READ 1X2 SYSTEM FILE INTO MEMORY
C
	CALL OPENQW(2,SPTFIL,4,0,0,ST)
	IF(ST.NE.0) THEN
	  TYPE*,' SPTSYS.FIL OPEN ERROR ',ST
	  CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
	CALL IOQINIT(FDB,2,SSFSEC*256)
	CALL READQW(FDB,1,SSFREC,ST)
	IF (ST.NE.0) THEN
	  TYPE*,' SPTSYS.FIL READ ERROR ',ST
	  TYPE *,IAM(),'LOD1X2 aborted, file error '
	  CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
C
	SSFFPT=0                   !set system pointer to zero ....
	STYP=NOSYS                 !SYSTEM TYPE
C
C
	CALL INPNUM('Enter System # to load from: ',SYSNR,1,SPGSYS,ST)
	IF (ST.LT.0) GO TO 20000
C
C
C check if system number is already defined ...
C
	IF(SSFATR(SYSNR).NE.NOSYS) THEN
	   TYPE*,' System number ',SYSNR,' already defined '
	   CALL GPAUSE
	ENDIF
C
	STATUS=0
C
	DO 10000 TYPCNT=1,MAXDEFS
C
C DEFINE BET ATTRIBUTES
C
	REDTYP=TABCNT(TYPCNT)
	TRIPLE=TRICNT(TYPCNT)
	DOUBLE=DBLCNT(TYPCNT)
	SINGLE=TABCNT(TYPCNT)               !number of simple bets ...
	MARK=MRKCNT(TYPCNT)
	IND=SSFFPT
C
C FILL TABLE WITH DEFAULTS
C
	DO 100 I=1,SPGNBR
	DO 100 J=1,3541
	  ROWTAB(I,J)=1
100	CONTINUE
C
C READ ASCII REPRENTATION OF THIS BET AND LOAD INTO TABLE
C
C
	BETPROC=1
	RECIDX=1
150	CONTINUE
	COMPLETE=.FALSE.
	MORE=.FALSE.
	READ(4,901) (C1RECORD(XX),XX=1,80)
	IF(C1RECORD(6).EQ.'R'.OR.
     *	   C1RECORD(6).EQ.'U') THEN
	  STYP=REDSYS
	  IF(C1RECORD(6).EQ.'U') STYP=USYS
	  WRITE(5,902) SYSDEF(STYP+1),(C3RECORD(XXX),XXX=1,5)
	  GOTO 150
	ENDIF
	IF(C3RECORD(1).EQ.'***') THEN   !THIS BET COMPLETE LOAD IT
	  COMPLETE=.TRUE.
	  GOTO 250
	ENDIF
	IF(C3RECORD(1).EQ.'END') GOTO 10000
	IF(C3RECORD(1).EQ.'   '.AND.TYPCNT.LE.13) THEN
	  MORE=.TRUE.     !PROCESS THIS CHUNCK FIRST
	  GOTO 250
	ENDIF
	IF(TYPCNT.LE.13.OR.TYPCNT.GT.26) THEN
	  DO 200 COUNT=1,13
	  C3RECORD2(COUNT,RECIDX)=C3RECORD(COUNT)
200	  CONTINUE
	ELSEIF(TYPCNT.GT.13.AND.TYPCNT.LE.26) THEN
	  DO 225 COUNT=1,13
	  C5RECORD2(COUNT,RECIDX)=C5RECORD(COUNT)
225	  CONTINUE
	ENDIF
	RECIDX=RECIDX+1
	GOTO 150
C
250	CONTINUE
	IF(TYPCNT.LE.13) THEN
	  DO 300 ACCROSS=1,10
	  DO 300 DOWN=1,MARK
	  IF(C3RECORD2(ACCROSS,DOWN).EQ.'   ') GOTO 300
	  CALL DEC1X2(C3RECORD2(ACCROSS,DOWN),ROWTAB(DOWN,BETPROC),
     *	    BETPROC,MARK)
	  IF(DOWN.EQ.MARK) BETPROC=BETPROC+1
	  LASTPROC=BETPROC
300	  CONTINUE
	ELSEIF(TYPCNT.GT.13.AND.TYPCNT.LE.26) THEN
	  DO 325 DOWN=1,RECIDX-1
	  DO 325 ACCROSS=1,13
	  CALL DEC1X2X(C5RECORD2(ACCROSS,DOWN),ROWTAB(ACCROSS,BETPROC),
     *	    BETPROC,MARK)
	  IF(ACCROSS.EQ.MARK) BETPROC=BETPROC+1
	  LASTPROC=BETPROC
325	  CONTINUE
	ELSEIF(TYPCNT.GT.26) THEN
	  DO 350 DOWN=1,RECIDX-1
	  DO 350 ACCROSS=1,13
	  CALL DEC1X2(C3RECORD2(ACCROSS,DOWN),ROWTAB(ACCROSS,BETPROC),
     *	    BETPROC,MARK)
	  IF(ACCROSS.EQ.MARK) BETPROC=BETPROC+1
	  LASTPROC=BETPROC
350	  CONTINUE
	ENDIF
	IF(COMPLETE) GOTO 375   !LOAD UP THIS INTO OUR TABLES
	RECIDX=1
	GOTO 150                !GO READ THE NEXT CHUNK OF DATA
375	CONTINUE
	IF(COMPLETE) THEN
	  IF(IND.EQ.0)IND=1
	  SSFATR(SYSNR)=STYP
C
C SET INTO COMMON
C
	  SSFNUM(4,SYSNR)=SPGNBR
	  SSFPTR(SYSNR)=IND              !pointer
	  SSFNUM(1,SYSNR)=1
	  SSFNUM(2,SYSNR)=SSFNUM(1,SYSNR)+TRIPLE
	  SSFNUM(3,SYSNR)=SSFNUM(2,SYSNR)+DOUBLE
	  SSFNUM(5,SYSNR)=SINGLE !number of simple bets ...
C**     SSFTAB(IND)=TABCNT(TYPCNT)     ;# bets
	  SSFTAB(IND)=LASTPROC-1
	  IND=IND+1
C
	  IF(IND.GT.SFTABMAX) THEN
	    TYPE*,' System Table full .... definition not saved '
	    CALL GSTOP(GEXIT_SUCCESS)
	  ENDIF
C
C FILL TABLE IN COMMON
C
	  DO 400 I=1,LASTPROC-1
	  DO 400 J=1,SPGNBR
	  SSFTAB(IND)=ROWTAB(J,I)
	  IND=IND+1
	  IF(IND.GT.SFTABMAX) THEN
	    TYPE*,' System Table full .... definition not saved '
	    CALL GSTOP(GEXIT_SUCCESS)
	  ENDIF
400	  CONTINUE
	  SSFFPT=IND
C
	  WRITE(5,903) SYSNR,SYSDEF(STYP+1),TABCNT(TYPCNT),
     *	     LASTPROC-1,
     *	    TRICNT(TYPCNT),DBLCNT(TYPCNT),SNGCNT(TYPCNT)
	  WRITE(7,903) SYSNR,SYSDEF(STYP+1),TABCNT(TYPCNT),
     *	     LASTPROC-1,
     *	    TRICNT(TYPCNT),DBLCNT(TYPCNT),SNGCNT(TYPCNT)
	  DO 500 I=1,SPGNBR
	  DO 500 J=1,3541
	     ROWTAB(I,J)=1
500	  CONTINUE
	  SYSNR=SYSNR+1
	  RECIDX=1
	  BETPROC=1
C
C MAKE SURE NEXT IS AVAILABLE
C
	  IF(SSFATR(SYSNR).NE.NOSYS) THEN
	     TYPE*,' System number ',SYSNR,' already defined '
	     CALL GSTOP(GEXIT_SUCCESS)
	  ENDIF
	  GOTO 10000
	ENDIF
	RECIDX=1
	GOTO 150
C
C
10000	CONTINUE
20000	CONTINUE
C
	CALL USRCLOS1(     7)
	CALL SPOOL('LOD1X2.REP',1,ST)
	TYPE*,' LOD1X2.REP HAS BEEN SPOOLED '
	TYPE *,' '
C
	TYPE*,' Please check report prior to saving image to file '
	TYPE*,' '
C
600	CONTINUE
	TYPE *,' 1 - save image in the file'
	TYPE *,' E - to abort, i.e., do not save image to file '
	CALL INPNUM('Enter command: ',CMD,1,1,ST)
	IF(ST.LT.0) THEN
	  CALL CLOSEQFIL(FDB)
	  TYPE *,IAM(),'LOD1X2 aborted image not saved'
	  CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
	IF(CMD.EQ.1) GOTO 700
	TYPE *,'Invalid'
	GOTO 600
C
C     UPDATE SPTSYS.FIL
C
700	CONTINUE
	CALL WRITEQW(FDB,1,SSFREC,ST)
	IF (ST.NE.0) THEN
	   TYPE*,' SPTSYS.FIL WRITE ERROR ',ST
	   TYPE *,'LOD1X2 aborted, write error '
	   TYPE *,IAM(),'SPTSYS.FIL not updated'
	   CALL GSTOP(GEXIT_SUCCESS)
	ENDIF
C
	TYPE *,IAM(),'LOD1X2 complete, SPTSYS.FIL updated '
	CALL GSTOP(GEXIT_SUCCESS)
C
C THE FOLLOWINMG FORMATS ARE USED.
C
901	FORMAT(80A1)
902	FORMAT(1X,' PROCESSING ',A9,' BET ',5A3)
903	FORMAT(1X,' CENTRAL SYSTEM # ',I2,' CONVERTED IN COMMON ',/,
     *	   1X,' DEFINED AS ',A9,' SYSTEM WITH ',I5,' COMBINATIONS',/,
     *	   1X,' TRANSLATED FROM ',I5,' BETS FROM ASCII DATA ',/,
     *	   1X,' MADE UP OF ',I2,' TRIPLES ',I2,' DOUBLES ',I4,
     *	   ' SINGLES ',//)
904	FORMAT(A4)
	END
