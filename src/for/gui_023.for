C GUI_023.FOR
C
C V04 20-MAR-2010 RXK SUPRET added.
C V03 16-FEB-2001 UXN CHKTIM, FPTTIM unit chaged to minutes
C V02 03-FEB-2001 HXK FIXED TMF SIZE PERCENTAGE
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2001 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C This subroutine returns GUI FUNCTION.
C
C Input parameters:
C	NONE               
C
C Output parameters:
C
C	BYTE		OUTBUF(*)    OUTPUT MESSAGE
C	INTEGER*4	MES_LEN	     MESSAGE LENGTH
C	INTEGER*4	RET_CODE:
C		0		-  no error, message accepted;
C		value >= 11	-  error number to be sent to Client.
C
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE GUI_023(OUTBUF,MES_LEN,RET_CODE)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:QUECOM.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:GUIMPRM.DEF'
	INCLUDE 'INCLIB:GUIARGS.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
C
C
	BYTE		OUTBUF(*)
	INTEGER*4	MES_LEN,RET_CODE
C
	INTEGER*4 NUM_COLS,NUM_ROWS
C
        INTEGER*4  GNUM
        INTEGER*4  ST,I
	INTEGER*4  WAGERS,VOIDS,VALIDS,RETURNS,PCNT,TMFSIZ
	INTEGER*4  SWAG,SVAL,SCAN,SRET, TIM
	INTEGER*4  BUFF_AVAIL
	INTEGER*8  RMIN,RMAX
C
C
	CALL GUI_GETPARAMS(OUTBUF,ST)
	IF(ST.NE.0) THEN
	    RET_CODE = 11
	    RETURN
	ENDIF
	GNUM = GUI_ARGVAL(1)
	IF(GNUM.LT.0.OR.GNUM.GT.MAXGAM) THEN
	   RET_CODE = 11
	   RETURN
	ENDIF
C
	TMFSIZ = SFSIZES(PTMF)
	TMFSIZ = ((TMFSIZ/(DBLOCK/128))*LBLK)
	IF(TMFSIZ.NE.0) THEN
            PCNT = INT(( DFLOAT(NXTSER)/DFLOAT(TMFSIZ) ) * 100.0D0)
	ELSE
	    PCNT = 0
	ENDIF
C
	WAGERS = 0
        VOIDS  = 0
        VALIDS = 0
        RETURNS = 0

        DO 310 I=1,MAXGAM
            WAGERS = WAGERS + DAYTYP(DOLAMT,TWAG,I)
            VOIDS  = VOIDS  + DAYTYP(DOLAMT,TCAN,I)
            VALIDS = VALIDS + DAYTYP(DOLAMT,TVAL,I)
            RETURNS = RETURNS + DAYTYP(DOLAMT,TRET,I)
310     CONTINUE

	CALL LISTSIZE(FREEQ,BUFF_AVAIL)

C
C BUILD GUI MESSAGE
C
	CALL GUIARG_INIT()
C

	NUM_COLS = 35
	NUM_ROWS = 1
C
C RESULT SET 1
C
	CALL GUIARG_NEXT_SET(OUTBUF,NUM_COLS)
C
	CALL GUIARG_BYTE(OUTBUF,P(TAPESW))
	CALL GUIARG_BYTE(OUTBUF,P(DISKSW))
	CALL GUIARG_BYTE(OUTBUF,P(SYSSTS))
	CALL GUIARG_CHAR(OUTBUF,P(ROMREV),4)

	CALL GUIARG_CHAR(OUTBUF,P(GVTREV),4)
	CALL GUIARG_BYTE(OUTBUF,P(DESFLG))
	CALL GUIARG_INT4(OUTBUF,P(CANTIM))

	TIM = P(CHKTIM)/8/60 ! in minutes	
	CALL GUIARG_INT4(OUTBUF,TIM) 

	TIM = P(FPTTIM)/60          ! in minutes
	CALL GUIARG_INT4(OUTBUF,TIM)
	CALL GUIARG_BYTE(OUTBUF,P(SUPSPE))
	CALL GUIARG_BYTE(OUTBUF,P(SUPFIL))
	CALL GUIARG_BYTE(OUTBUF,P(SUPSUM))

	CALL GUIARG_BYTE(OUTBUF,P(SUPPUD))
	CALL GUIARG_BYTE(OUTBUF,P(SUPSYN))
	CALL GUIARG_BYTE(OUTBUF,P(SUPCOM))
	CALL GUIARG_BYTE(OUTBUF,P(SUPFPT))

	CALL GUIARG_BYTE(OUTBUF,P(SUPINS))
	CALL GUIARG_INT4(OUTBUF,NXTSER)
	CALL GUIARG_INT4(OUTBUF,P(NXTTRA))
	CALL GUIARG_INT4(OUTBUF,PCNT)

	CALL GUIARG_MONY(OUTBUF,WAGERS)
	CALL GUIARG_MONY(OUTBUF,VOIDS)
	CALL GUIARG_MONY(OUTBUF,VALIDS)
	CALL GUIARG_MONY(OUTBUF,RETURNS)

	CALL GUIARG_INT4(OUTBUF,DAYCDC)
	CALL GUIARG_TIME(OUTBUF,P(ACTTIM))
	CALL GUIARG_DATE(OUTBUF,DAYCDC)
C
	IF(GNUM.EQ.0) THEN
           SWAG = P(SUPWAG)
	   SCAN = P(SUPCAN)
	   SVAL = P(SUPVAL)
           SRET = P(SUPRET)
	   RMIN = P(REDIMN)
	   RMAX = P(REDDEF)
	ELSE
	   SWAG = 0
	   SVAL = 0
	   SCAN = 0
           SRET = 0
	   IF(TSBIT(P(SUPGWA),GNUM)) SWAG = 1 
	   IF(TSBIT(P(SUPGCA),GNUM)) SCAN = 1 
	   IF(TSBIT(P(SUPGVA),GNUM)) SVAL = 1 
	   IF(TSBIT(P(SUPGRE),GNUM)) SRET = 1 
	   RMIN = REDMIN(GNUM)
	   RMAX = REDMAX(GNUM)
	ENDIF
	
	CALL GUIARG_BYTE(OUTBUF,SWAG)
	CALL GUIARG_BYTE(OUTBUF,SCAN)
	CALL GUIARG_BYTE(OUTBUF,SVAL)
	CALL GUIARG_BYTE(OUTBUF,SRET)
	CALL GUIARG_MONYI8(OUTBUF,RMIN)
	CALL GUIARG_MONYI8(OUTBUF,RMAX)
	CALL GUIARG_INT4(OUTBUF,BUFF_AVAIL)
	CALL GUIARG_INT4(OUTBUF,NUMPRO)
C
	CALL GUIARG_SET_MESLEN(MES_LEN)
C
	RETURN
C
	END
