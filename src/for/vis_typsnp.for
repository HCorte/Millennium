C
C SUBROUTINE TYPSNP
C  
C V20 16-MAR-2011 GPW NUMAGT=12288
C V19 06-JAN-2011 FJG MILLENNIUM MXSRV
C V18 30-JAN-2001 CAS INCLUDED SCML AGENT TYPES
C V17 18-FEB-1997 HXK Cleaned up hack for AGTXFR
C V16 13-FEB-1997 RXK Some rows of display cleared
C V15 07-FEB-1997 HXK Hack for AGTXFR (temporarily using AGTHCH)
C V14 06-FEB-1997 WPW Command for AGTToi.
C V13 06-FEB-1997 HXK Added AGTXFR 
C V12 31-JAN-1997 WPW On-line terminal (agttoi) value added,
C V11 17-APR-1996 HXK Release of Finland for X.25, Telephone Betting,
C                     Instant Pass Thru Phase 1
C V10 18-OCT-1993 GXA Increased field width for 'VALUE'.
C V09 24-AUG-1993 SXH Changed order of languages
C V08 02-AUG-1993 GXA Changed Languages to be Finish, Swedish and English.
C V07 26-JUL-1993 GXA Removed Comment character from Ticket Message enabling,
C                     Changed Agent# display to use LAGNO.
C V06 13-JUN-1993 HXK added AGTINF.DEF, PRMAGT.DEF
C V05 01-MAR-1993 EBD DAS update 3/1/93 Changing format of ASF file
C V04 09-JUL-1992 GCAN ADDED AGENT RAM SET PARAMETER.
C V03 31-JAN-1992 GCAN ADDED SMAR CARD SON AND LANGUAGE OPTION.
C V02 12-NOV-1991 MTK  INITIAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C
C
C VIS_TYPSNP.FOR
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1997 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE TYPSNP(TER,CLINE,LKEY,LTER,GAM)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
C
	INTEGER*4   MAXPRM
	PARAMETER   (MAXPRM=18)			!Max # of changeable parameters.
C
	INTEGER*4   I, J, ST, GAMMAP, BITMAP, VALUE, KEYNUM, POS
	INTEGER*4   GIND, GTYP, GAM, LTER, LKEY, TER, LANG
C
	REAL*8      K(MAXPRM)
	CHARACTER*9 STAT1(0:1),STAT2(0:1),STAT3(0:1)
	CHARACTER*9 STAT4(0:1),GAMNAM
	CHARACTER   LANGNAME(0:3)*12
	CHARACTER   CZERO
	CHARACTER   CAGTTYP(4)*7	        !SCML AGENT TYPES
	INTEGER*4   IAGTTYP
	INTEGER*4   BUF(CDLEN),FDB(7),CLINE(20),IND(31)
C
	DATA     K/'PRVter  ','CANtim  ','SUPWag  ','SUPCan  ',
     *	           'SUPVal  ','OPStat  ','BROnum  ','DESenc  ',
     *	           'SUPSpe  ','COMMis  ','TKTmes  ','SONsmrt ',
     *		   'LANGuag ','RAMset  ','AGTTBA  ','AGTXFR  ',
     *             'AGTToi  ','AGTMXT  '/
	DATA STAT1/'no       ','yes      '/
	DATA STAT2/'disabled ','enabled  '/
	DATA STAT3/'active   ','supressed'/
	DATA STAT4/'yes      ','no       '/
	DATA CZERO/Z0/
	DATA LANGNAME/'PORTUGUESE  ','**NOT SET** ',
     *		      '**NOT SET** ','**NOT SET** '/
	DATA        CAGTTYP     /'Online ','Offline',
     *                           'Privil.','Banco  '  /
C
	IF(TER.LT.1) TER=LSTTER
	IF(TER.LT.1.OR.TER.GT.NUMAGT) TER=1
	LSTAGT=AGTTAB(AGTNUM,TER)
	LSTTER=TER
C
C GET GAME NUMBER
C
	IF(GAM.LT.1.OR.GAM.GT.MAXGAM) THEN
	  GAMNAM='Global   '
	  GAM=0
	ELSE
	  GTYP=GNTTAB(GAMTYP,GAM)
	  GIND=GNTTAB(GAMIDX,GAM)
	  IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) THEN
	    WRITE(CLIN23,1423) GAM
	    RETURN
	  ENDIF
	  WRITE (GAMNAM,1600) GTNAMES(GTYP),GIND
	ENDIF
C
C GET TYPSNP INPUT
C
	POS=1
	CALL KEY(CLINE,K,MAXPRM,POS,KEYNUM)
	IF(POS.GT.40) GOTO 100                     !NO INPUT
	IF(KEYNUM.EQ.0)GOTO 10                     !INPUT ERROR
	CALL NUMB(CLINE,POS,VALUE)                 !GET VALUE
	IF(VALUE.LT.0)  GOTO 20
C
	BITMAP=AGTTAB(AGTTYP,TER)
	IF(GAM.NE.0) GAMMAP=AGTGAM(GFLAGS,GAM,TER)
	GOTO (35,40,45,50,55,60,65,70,75,80,84,85,86,87,88,89,91,99) KEYNUM
10	CONTINUE
	WRITE(CLIN23,923)
	GOTO 100
20	CONTINUE
	WRITE(CLIN23,1023)
	GOTO 100
C
C CHANGE PRVTER FLAG
C
35	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(VALUE.EQ.1) THEN
	  CALL BSET(BITMAP,AGTPRV)
	ELSE
	  CALL BCLR(BITMAP,AGTPRV)
	ENDIF
	BUF(1)=3
	BUF(2)=BITMAP
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE CANCEL TIME LIMIT DISABLE FLAG
C
40	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(VALUE.EQ.1) THEN
	  CALL BSET(BITMAP,AGTCTM)
	ELSE
	  CALL BCLR(BITMAP,AGTCTM)
	ENDIF
	BUF(1)=3
	BUF(2)=BITMAP
	BUF(3)=TCAGT
	GOTO 90
C
C SUPRESS WAGERING FLAG
C
45	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(GAM.EQ.0) THEN
	  IF(VALUE.EQ.1) THEN
	    CALL BSET(BITMAP,AGTWAG)
	  ELSE
	    CALL BCLR(BITMAP,AGTWAG)
	  ENDIF
	  BUF(1)=3
	  BUF(2)=BITMAP
	ELSE
	  IF(VALUE.EQ.1) THEN
	    CALL BSET(GAMMAP,AGTWAG)
	  ELSE
	    CALL BCLR(GAMMAP,AGTWAG)
	  ENDIF
	  BUF(1)=4
	  BUF(2)=GAMMAP
	  BUF(8)=GAM
	ENDIF
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE SUPRESS CANCELLATION FLAG
C
50	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(GAM.EQ.0) THEN
	  IF(VALUE.EQ.1) THEN
	    CALL BSET(BITMAP,AGTCAN)
	  ELSE
	    CALL BCLR(BITMAP,AGTCAN)
	  ENDIF
	  BUF(1)=3
	  BUF(2)=BITMAP
	ELSE
	  IF(VALUE.EQ.1) THEN
	    CALL BSET(GAMMAP,AGTCAN)
	  ELSE
	    CALL BCLR(GAMMAP,AGTCAN)
	  ENDIF
	  BUF(1)=4
	  BUF(2)=GAMMAP
	  BUF(8)=GAM
	ENDIF
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE SUPRESS VALIDATION FLAG
C
55	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(GAM.EQ.0) THEN
	  IF(VALUE.EQ.1) THEN
	    CALL BSET(BITMAP,AGTVAL)
	  ELSE
	    CALL BCLR(BITMAP,AGTVAL)
	  ENDIF
	  BUF(1)=3
	  BUF(2)=BITMAP
	ELSE
	  IF(VALUE.EQ.1) THEN
	    CALL BSET(GAMMAP,AGTVAL)
	  ELSE
	    CALL BCLR(GAMMAP,AGTVAL)
	  ENDIF
	  BUF(1)=4
	  BUF(2)=GAMMAP
	  BUF(8)=GAM
	ENDIF
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE OPSTAT
C
60	CONTINUE
	IF(VALUE.NE.1.AND.VALUE.NE.3) GOTO 20
	BUF(1)=1
	BUF(2)=VALUE
	BUF(3)=TCAGT
	GOTO 90
C
C PROCESS BROADCAST
C
65	CONTINUE
	IF(VALUE.LT.1.OR.VALUE.GT.256) GOTO 20
	BUF(1)=5
	BUF(2)=VALUE
	BUF(3)=TCSPE
	BUF(4)=0
	WRITE(CLIN23,1323) VALUE,TER
	GOTO 90
C
C DISABLE DES ENCRYPTION FLAG
C
70	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(VALUE.EQ.1) THEN
	  CALL BSET(BITMAP,AGTDES)
	ELSE
	  CALL BCLR(BITMAP,AGTDES)
	ENDIF
	BUF(1)=3
	BUF(2)=BITMAP
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE SUPSPE FLAG
C
75	CONTINUE
	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
	IF(VALUE.EQ.1) THEN
	  CALL BSET(BITMAP,AGTSPF)
	ELSE
	  CALL BCLR(BITMAP,AGTSPF)
	ENDIF
	BUF(1)=3
	BUF(2)=BITMAP
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE COMMISSION FLAG
C
80	CONTINUE
 	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
 	IF(VALUE.EQ.1) THEN
 	  CALL BSET(BITMAP,AGTNCM)
 	ELSE
 	  CALL BCLR(BITMAP,AGTNCM)
 	ENDIF
 	BUF(1)=3
 	BUF(2)=BITMAP
 	BUF(3)=TCAGT
 	GOTO 90
C
C CHANGE SUPRESS TICKET MESSAGE FLAG
C
84	CONTINUE
 	IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
 	IF(VALUE.EQ.1) THEN
 	  CALL BSET(BITMAP,AGTTKM)
 	ELSE
 	  CALL BCLR(BITMAP,AGTTKM)
 	ENDIF
 	BUF(1)=3
 	BUF(2)=BITMAP
	BUF(3)=TCAGT
	GOTO 90
C
C CHANGE SON WITHOUT SMART CARD FLAG
C
85      CONTINUE
        IF(VALUE.NE.0.AND.VALUE.NE.1) GO TO 20
        IF(VALUE.EQ.1) THEN
          CALL BSET(BITMAP,AGTSON)
        ELSE
          CALL BCLR(BITMAP,AGTSON)
        ENDIF
        BUF(1)=3
        BUF(2)=BITMAP
        BUF(3)=TCAGT
        GOTO 90
C
C CHANGE LANGUAGE
C
86	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.2) GOTO 20
	BUF(1) = 5
	BUF(2) = VALUE
	BUF(3) = TCAGT
	LANG = VALUE
	GOTO 90
C
C AGENT RAM SET CHANGE
C
87	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) GOTO 20
	IF(VALUE.EQ.1) THEN
	   CALL BSET(BITMAP,AGTRAM)
	ELSE
	   CALL BCLR(BITMAP,AGTRAM)
	ENDIF
	BUF(1) = 3
	BUF(2) = BITMAP 
	BUF(3) = TCAGT
	GOTO 90
C
C AGENT TELEBETTING SET CHANGE
C
88	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) GOTO 20
	IF(VALUE.EQ.1) THEN
	   CALL BSET(BITMAP,AGTTBA)
	ELSE
	   CALL BCLR(BITMAP,AGTTBA)
	ENDIF
	BUF(1) = 3
	BUF(2) = BITMAP 
	BUF(3) = TCAGT
	GOTO 90
C
C AGENT INSTANT TRANFER ENABLE CHANGE
C
89	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) GOTO 20
	IF(VALUE.EQ.1) THEN
	   CALL BSET(BITMAP,AGTXFR)
	ELSE
	   CALL BCLR(BITMAP,AGTXFR)
	ENDIF
	BUF(1) = 3
	BUF(2) = BITMAP 
	BUF(3) = TCAGT
	GOTO 90
C
C AGENT ONLINE TERMINAL FLAG CHANGE
C
91	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.1) GOTO 20
	IF(VALUE.EQ.1) THEN
	   CALL BSET(BITMAP,AGTTOI)
	ELSE
	   CALL BCLR(BITMAP,AGTTOI)
	ENDIF
	BUF(1) = 3
	BUF(2) = BITMAP 
	BUF(3) = TCAGT
	GOTO 90
C
C CHANGE AGTMXT                         !MXSRV
C
99      CONTINUE
        IF(VALUE.LT.0.OR.VALUE.GT.1) GOTO 20
C
        IF(VALUE.EQ.1) THEN
          CALL BSET(BITMAP,AGTMXT)
        ELSE
          CALL BCLR(BITMAP,AGTMXT)
        ENDIF
        BUF(1)=3
        BUF(2)=BITMAP
        BUF(3)=TCAGT
C
        GOTO 90
C
C QUEUE COMMAND BUFFER TO SYSTEM INPUT QUEUE
C
90	CONTINUE
	BUF(5)=TER
	BUF(6)=IDNUM
	CALL VISCMD(BUF,ST)
	CALL XWAIT(2,1,ST)
C
C
100	CONTINUE
C
C READ AGENTS RECORD
C
	IF(LKEY.EQ.8.AND.LTER.EQ.TER) GOTO 120
	CALL OPENW(1,SFNAMES(1,ASF),0,0,0,ST)
	CALL IOINIT(FDB,1,ASFSEC*256)
	IF(ST.NE.0) THEN
	   CALL USRCLOS1(     1)
	   WRITE(CLIN23,1123) (SFNAMES(J,ASF),J=1,5),ST
	   RETURN
	ENDIF
	CALL READW(FDB,TER,ASFREC,ST)
	IF(ST.NE.0) THEN
	   CALL USRCLOS1(     1)
	   WRITE(CLIN23,1223) (SFNAMES(J,ASF),J=1,5),ST,TER
	   RETURN
	ENDIF
	CALL USRCLOS1(     1)
	DO 110 I=1,512
	   IF(ASFBYT(I).EQ.CZERO) ASFBYT(I)=' '
110	CONTINUE
C
C ENCODE AGENT PARAMETER SNAPSHOT
C
120	CONTINUE
	BITMAP=AGTTAB(AGTTYP,TER)
	DO 130 J=1,31
	   IND(J)=0
	IF(TSBIT(BITMAP,J)) IND(J) = 1
130	CONTINUE
C
C GET GAME FLAGS
C
	IF(GAM.NE.0) THEN
	  GAMMAP=AGTGAM(GFLAGS,GAM,TER)
	  IND(AGTWAG)=0
	  IND(AGTCAN)=0
	  IND(AGTVAL)=0
	  IF(TSBIT(GAMMAP,AGTWAG)) IND(AGTWAG)=1
	  IF(TSBIT(GAMMAP,AGTCAN)) IND(AGTCAN)=1
	  IF(TSBIT(GAMMAP,AGTVAL)) IND(AGTVAL)=1
	ENDIF
C
	LANG = AGTHTB(AGTLANG,TER) 
C
C GET SCML AGENT TYPE
C
	IF  ( TSBIT(AGTTAB(AGTTYP,TER),AGTTON) ) THEN
	    IAGTTYP = 1						    !ONLINE
	    IF	( TSBIT(AGTTAB(AGTTYP,TER),AGTPRV) ) IAGTTYP = 3    !PRIVILEGED
	    IF	( TSBIT(AGTTAB(AGTTYP,TER),AGTBNK) ) IAGTTYP = 4    !BANK
	ELSE
	    IAGTTYP = 2						    !OFFLINE
	ENDIF
C
	WRITE(CLIN1,901)
	WRITE(CLIN2,925)
	WRITE(CLIN3,903) (ASFBYT(J),J=SNAME,ENAME),
     *	                 AGTTAB(AGTNUM,TER),CAGTTYP(IAGTTYP)
	WRITE(CLIN4,904) (ASFBYT(J),J=SSTRT,ESTRT),
     *	                 TER,AGTHTB(AOPSTS,TER)
	WRITE(CLIN5,905) (ASFBYT(J),J=SCITY,ECITY),
     *	                 (ASFBYT(J),J=SXSTN,EXSTN)
	WRITE(CLIN6,906) (ASFBYT(J),J=STELE,ETELE),BITMAP,
     *	                 (ASFBYT(J),J=SDROP,EDROP)
C
        WRITE(CLIN7,907)  K(18),IND(AGTMXT),STAT1(IND(AGTMXT))       !MXSRV
	WRITE(CLIN8,908)  K(16),IND(AGTXFR),STAT1(IND(AGTXFR))
	WRITE(CLIN9,909)  K(15),IND(AGTTBA),STAT1(IND(AGTTBA))
	WRITE(CLIN10,910) K(1),IND(AGTPRV),STAT1(IND(AGTPRV))
	WRITE(CLIN11,911) K(2),IND(AGTCTM),STAT2(IND(AGTCTM))
	WRITE(CLIN12,912) K(3),IND(AGTWAG),STAT3(IND(AGTWAG)),GAMNAM
	WRITE(CLIN13,913) K(4),IND(AGTCAN),STAT3(IND(AGTCAN)),GAMNAM
	WRITE(CLIN14,914) K(5),IND(AGTVAL),STAT3(IND(AGTVAL)),GAMNAM
	WRITE(CLIN15,915) K(8),IND(AGTDES),STAT2(IND(AGTDES))
	WRITE(CLIN16,916) K(9),IND(AGTSPF),STAT3(IND(AGTSPF))
	WRITE(CLIN17,917) K(10),IND(AGTNCM),STAT4(IND(AGTNCM))
	WRITE(CLIN18,918) K(11),IND(AGTTKM),STAT2(IND(AGTTKM))
	WRITE(CLIN19,919) K(12),IND(AGTSON),STAT2(IND(AGTSON))
	WRITE(CLIN20,920) K(13),LANG,LANGNAME(LANG)
	WRITE(CLIN21,921) K(14),IND(AGTRAM),STAT1(IND(AGTRAM))
	WRITE(CLIN22,922) K(17),IND(AGTTOI),STAT1(IND(AGTTOI))
	RETURN
C
C FORMAT STATEMENTS
C
901	FORMAT('Agent Parameter Snapshot')
903	FORMAT('Name',T10,<LNAME>A1,T50,'Agtnum',T60,I<LAGNO>.<LAGNO>,' - ',A7)
904	FORMAT('Address',T10,<LSTRT>A1,T50,'Terminal',T60,I5.5,T69,
     *         '*OPStst',I2)
905	FORMAT(T10,<LCITY>A1,T50,'STN ',T60,<LXSTN>A1,T70,'*BROnum')
906	FORMAT('Phone',T10,<LTELE>A1,T24,'HEXflg: ',Z8.8,T50,'Drop',T60,<LDROP>A1)
C
C
C907     FORMAT(1X,' ','Value in hex: ',Z8.8)
907 	FORMAT(1X,'*',A8,I1,' MXS Terminal.................. ',A9)
908 	FORMAT(1X,'*',A8,I1,' Instant Transfer enabled...... ',A9)
909	FORMAT(1X,'*',A8,I1,' Telephone Betting Terminal.... ',A9)
910	FORMAT(1X,'*',A8,I1,' Privileged terminal........... ',A9)
911	FORMAT(1X,'*',A8,I1,' Cancel time limit override.... ',A9)
912     FORMAT(1X,'*',A8,I1,' Wagering functions............ ',A9,1X,A9)
913     FORMAT(1X,'*',A8,I1,' Cancellation functions........ ',A9,1X,A9)
914     FORMAT(1X,'*',A8,I1,' Validation functions.......... ',A9,1X,A9)
915	FORMAT(1X,'*',A8,I1,' DES  encryption............... ',A9)
916	FORMAT(1X,'*',A8,I1,' Special functions............. ',A9)
917	FORMAT(1X,'*',A8,I1,' Commission.................... ',A9)
918	FORMAT(1X,'*',A8,I1,' Ticket message................ ',A9)
919	FORMAT(1X,'*',A8,I1,' Sign-On without smart card.... ',A9)
920	FORMAT(1X,'*',A8,I1,' Current language.............. ',A12)
921	FORMAT(1X,'*',A8,I1,' Reset Agent Text in RAM....... ',A9)
922	FORMAT(1X,'*',A8,I1,' On-line terminal.............. ',A9)
923	FORMAT('Input error')
1023	FORMAT('Value error')
1123	FORMAT(5A4,' open error ',I4)
1223	FORMAT(5A4,' read error ',I4,' record ',I4)
1323	FORMAT('Message ',I4,' queued to terminal ',I5)
1423	FORMAT('Sorry, game ',I2,' is not active')
1600	FORMAT(A8,I1)
925     FORMAT(80(' '))
	END
