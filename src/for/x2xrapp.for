C
C PROGRAM X2XRAPP
C
C*************************** START X2X PVCS HEADER ****************************
C
C  $Logfile::   GXAFXT:[GOLS]X2XRAPP.FOV                                  $
C  $Date::   17 Apr 1996 16:44:20                                         $
C  $Revision::   1.0                                                      $
C  $Author::   HXK                                                        $
C
C**************************** END X2X PVCS HEADER *****************************
C
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - x2xrapp.for;1 **
C
C X2XRAPP.FOR
C
C V05 17-MAR-96 wsm Replaced hardcoded uns stn disconnect w/ stn class value.
C V04 29-DEC-94 WJK MOVE UNSOLICITED STATION CONNECT AND DISCONNECT FROM GLOBAL
C                   TO STATION CLASS
C V03 19-JUL-94 WS MULTINETWORK CHANGES - Integrate UK changes into X2X Baseline
C V02 05-APR-94 GPR USE X2X_I4_STATION TO DETERMINE STATION AND TERNUM
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C*
C*
C*    X2XRAPP.FTN
C*    -----------
C*
C*    RELAY APPLICATION,
C*
C*    THIS PROGRAM WILL RETRIEVE BUFFERS FROM RELAY APPLICATION
C*    QUEUES
C*
C*    IT WILL FORMAT THE MESSAGE FOR .NON. CHAIN APPLICATION
C*    IT WILL ALSO SET HOST_ID OVERRIDE FIELD
C*
C*    FOR CHAIN APPLICATION IT WILL SET:
C*    DELIVERY DELAY
C*    ACKNOWLEDGEMENT DELAY (TT IS SUPPORTING ONLY ACK DELAY=0)
C*    END OF BROADCAST (EB) FLAG
C*    DESTINATION CODE IN FLAG FIELD
C*    BROADCAST MESSAGE LENGTH
C*    X2XR_STATION_ID FIELDS (FIRST 1 BYTE SET BY X2XREL)
C*    HOST_ID FIELD OVERRIDE IN PROCOM BUFFER, END OF BROADCAST
C*    FLAG IN HOST ID FIELD
C*    MESSAGE SHOULD BE PUT AT  POINTER OF DATA AREA
C*    PROCOM MESSAGE LENGTH SHOULD BE SET TO THE LENGTH OF DATA
C*    IN PROCOM BUFFER EXCLUDING ANY LENGTH IN MESSAGE COMMON
C*
C*
C*    FOR NON CHAIN RELAYS APPLICATION WILL SET:
C*    X2XR_STATION_ID(*,STATION,PROCESS)
C*    HOST_ID OVERRIDE FIELD IN PROCOM
C*    MESSAGE WILL BE PUT AT THE BEGINING OF THE INPTAB IN PROCOM
C*    PROCOM MESSAGE LENGTH SHOULD BE SET TO THE LENGTH OF DATA
C*    IN PROCOM BUFFER EXCLUDING ANY LENGTH IN MESSAGE COMMON
C*    IF DELIVERY_DELAY IS NON ZERO FOR BROADCAST TO ALL MESSAGES
C*    THIS PROGRAM WILL SET THE FLAG AND TIMEOUT FOR THE X2XREL
C*    TO REQUEST NEXT MESSAGE ON TIMEOUT
C*
C*
C*    THERE IS ALSO ANOTHER WAY TO SEND BROADCAST COMMANDS:
C*    USER MAY JUST "RELAY" AND SEND RELAY START WITH DATA TO X2XREL
C*    USER DATA IS IN FORMAT AS FOLLOWS:
C*    HPRO(TRCODE,XXX) - TYPE RELAY COMMAND
C*    DATA PORTION (OUTTAB UP):
C*       PROCESS START *     1
C*       PROCESS NUMBER*     2
C*       STATION/TERM  *    3-6
C*       MESSAGE NUMBER*    7-8
C*       DATA PART LEN *    9-10
C*       DESTINATION   *     11
C*       FORMAT ATRIBUT*     12   ONLY FORMAT_ALL AND FORMAT STN ALL
C*
C*    THIS TYPE OF BROADCAST DRIVING IS VALID ONLY FOR SINGLE MESSAGE
C*    BROADCASTS
C*
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM X2XRAPP
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:X2XREL.DEF'
	INCLUDE 'INCLIB:X2FEMES.DEF'
	INCLUDE 'INCLIB:X2STMES.DEF'
	INTEGER*4  INPTAB2
	PARAMETER (INPTAB2=INPTAB*2-1)
C*
	INTEGER*4 TASK_NAME(2)
	INTEGER*4 STATION_ID(2)
	INTEGER*4 I, DELIVERY_DELAY, DELIVERY_OVR, MES_LEN
	INTEGER*4 MES_NUM, FLAGS, APPLICATION, HOST_ID
	INTEGER*4 DESTINATION, STATION, PROBUF, APP, TO_REDO
	INTEGER*4 PROCESS, ST
C
	CALL COPYRITE
C V02
	CALL SNIF_AND_WRKSET
C
	CALL GETNAM(TASK_NAME)
C
C
C
C SEARCH FOR A VALID OPTION.
C
C
C NOT A VALID START OPTION.
C
C*
C*    WE WILL DEFINE 16 APPLICATION PROCESSES:
C*    (1) DOWNLOAD, IN RELAY FORMAT
C*    (2) DOWNLOAD, IN BROADCAST TO ALL FORMAT
C*    (3) ... (16) SINGLE MESSAGE TO ALL STATIONS
C*
C*    APPLICATIONS 3-16 COULD BE USED FOR SENDING UNSOLICITED
C*    BROADCAST MESSAGES TO DIFFERENT/ALL STATIONS/TERMINALS
C*
C*
C*
C*
	DO 40, PROCESS=1,X2X_RELAY_APPS
	   CALL X2RINI(PROCESS,TASK_NAME)
40	CONTINUE
C*
C*
C*
C*    LOOP TO GET YOUR APPLICATION MESSAGES
C*
50	CONTINUE
	IF (X2X_GAME_STATE.EQ.X2X_GAMES_SHUTDOWN) CALL GSTOP(GEXIT_SUCCESS)
C*
CV03	CALL HOLD(0,ST)          !HOLD YOUR TASK
	CALL XWAIT(100,1,ST)				!V03
60	CONTINUE
	TO_REDO=0
C*
	DO 1000, APP=1,X2X_RELAY_APPS
	   CALL RTL(PROBUF,X2XR_APP_QUEUE(1,APP),ST)
	   IF (ST.EQ.2) GOTO 1000
	   IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)	!V03
     *	      TYPE *,'GOT BUFFER ',PROBUF		!V03
C*
C*       BUFFER TO PROCESS FOUND
C*

C          ***** Start V02 changes *****

           IF (X2X_I4_STATION) THEN
	      STATION=PRO(LINENO,PROBUF)
           ELSE
	      STATION=HPRO(LINENO,PROBUF)
           ENDIF

C          ***** End V02 changes *****

	   DESTINATION=HPRO(X2X_DEST,PROBUF)
	   HOST_ID=HPRO(X2X_HOST_ID,PROBUF)
	   APPLICATION=IAND(HOST_ID,X2FEMES_HOST_ID_PROCESS_MASK)
C*
	   IF (APPLICATION.NE.APP) THEN   !QUEUE CORRUPTED
CV03              IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)
CV03     *	          TYPE *,'BAD APP ',APPLICATION,APP
CV03	      CALL RELBUF(PROBUF)
CV03	      GOTO 1000

	      CALL OPS('QUEUE CORRUPTED BAD APP ',APPLICATION,APP)	!V03
	      CALL RELBUF(PROBUF)					!V03
	      GOTO 60							!V03
	   ENDIF							!V03
	   IF (APP.GE.X2XR_FIRST_COMMON_PROCESS) THEN			!V03
	      CALL OPS('INVALID PROCESS IN X2XRAPP ',APP,PROBUF)	!V03
	      CALL RELBUF(PROBUF)					!V03
	      GOTO 60							!V03
	   ENDIF
C*
	   CALL MOV2TOI4(FLAGS,PRO(INPTAB,PROBUF),X2STMES_RELAY_FLAGS
     *	                                                     -1)
	   CALL MOV4TOI4(STATION_ID(1),PRO(INPTAB,PROBUF),
     *	                           X2STMES_RELAY_ID-1)
	   CALL MOV4TOI4(STATION_ID(2),PRO(INPTAB,PROBUF),
     *	                           X2STMES_RELAY_ID+3)
C*
C*
C*
	   TO_REDO=-1
CV03	   GOTO (100,200,300,400,500,600,600,600,
CV03     *           600,600,600,600,600,600,600,600 ) APP
C
C.....CODE SHOULD GO HERE TO GRACEFULLY STOP THE PROCESS
C
C*
C*    CHAIN DLL
C*
CV03 100	   CONTINUE
CV03	IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)
CV03     *	   TYPE *,'CHAIN DLL '
CV03	   GOTO 210
C*
C*    SEND DLL TO EVERYBODY
C*
CV03 200	   CONTINUE
CV03	IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)
CV03     *	   TYPE *,'ALL DLL '
CV03 210	   CONTINUE
C*
C*    TRY TO GEN NEXT MESSAGE
C*
	   CALL X2RDLOAD(APP,STATION,STATION_ID,FLAGS,
     *	         HOST_ID,MES_NUM,MES_LEN,DELIVERY_OVR,DESTINATION,
     *	         DELIVERY_DELAY)
C*
C*    SETUP HEADER
C*
	   HPRO(MSGNUM,PROBUF)=MES_NUM
	   HPRO(X2X_CONNCTL_OVR,PROBUF)=256*
     *	      (X2X_UNSOLICIT_FE_CONNECT*16)
C V04 *	      +(X2X_UNSOLICIT_STATION_CONNECT*16+
C V04 *	       X2X_UNSOLICIT_STATION_DISCONNEC )
     *        +(X2XC_UNSO_STN_CON(X2XS_STNCLS(STATION))*16+             ! V04
C V05 *         15 )             					! V04
     *          X2XC_UNSO_STN_DIS(X2XS_STNCLS(STATION)) )               ! V05
C
C	UNSO STATION DISCONNECT IS SET TO REMAIN CONNECTED (15) FOR BROADCASTING
C	LOADS.
	   HPRO(X2X_HOST_ID,PROBUF)=HOST_ID
	   HPRO(X2X_DEST,PROBUF)=DESTINATION
	   CALL I4TOBUF4(STATION_ID(1),PRO(INPTAB,PROBUF),
     *	                           X2STMES_RELAY_ID-1)
	   CALL I4TOBUF4(STATION_ID(2),PRO(INPTAB,PROBUF),
     *	                           X2STMES_RELAY_ID+3)
C
C          STN AWAITS TERM RESPONSE AND DOES NOT USE DELIVERY DELAY
C
           CALL I4TOBUF2(0             ,PRO(INPTAB,PROBUF),
     *                           X2STMES_RELAY_DELIVERY_DELAY-1)
	   CALL I4TOBUF2(FLAGS,PRO(INPTAB,PROBUF),X2STMES_RELAY_FLAGS
     *	                                                     -1)
C*
	   X2XR_STATION_ID(1,STATION,APP)=STATION_ID(1)
	   X2XR_STATION_ID(2,STATION,APP)=STATION_ID(2)
	   X2XR_BRO_DELAY(STATION,APP)=0
C*
C*    FOR BROADCAST TO ALL GET RID OF HEADER
C*
	   IF (X2XR_APP_ATRIBUTE(APP).EQ.X2XR_APPA_ALL_NO_FORMAT) THEN
C*
C*          IF ALL SENT FORMAT STOP THE PROCESS AND SEND TO X2XPRO
C*
              IF (IAND(HOST_ID,X2FEMES_HOST_ID_EB_FLAG).NE.0) THEN
	         CALL X2RSTOP(PRO(1,PROBUF),APP,STATION)
	         CALL X2RADDBF(PROBUF)          !QUEUE IT TO X2XREL
	      ELSE
	         X2XR_BRO_DELAY(STATION,APP)=DELIVERY_DELAY*1000 !MSEC
	         HPRO(OUTLEN,PROBUF)=MES_LEN
	         CALL X2RTOTER(HPRO(1,PROBUF)) !NO HEADER FORMAT
	         CALL X2ADDPRO(PROBUF)  !QUEUE TO X2XMGR
	      ENDIF
	   ELSE
C*
	      IF (IAND(FLAGS,X2STMES_RELAYF_EB).NE.0 .AND.
     *	          MES_NUM.EQ.0) HPRO(OUTLEN,PROBUF)=HPRO(OUTLEN,PROBUF)
     *	                                             /OUTLEN_MAX
	      IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)
     *	         TYPE 9010,'HPRO ',(PRO(I,PROBUF),I=OUTTAB,OUTTAB+15)
	      IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)
     *	      TYPE*,'LENGTH,MES_NUM ',HPRO(MSGNUM,PROBUF),
     *               HPRO(OUTLEN,PROBUF)
	      CALL X2ADDPRO(PROBUF)  !QUEUE TO X2XMGR
	   ENDIF
CV03	   GOTO 1000
1000	CONTINUE		     !V03
C*
C*    SEND TERMINAL MESSAGE
C*
CV03 300	   CONTINUE
CV03 400	   CONTINUE
CV03 500	   CONTINUE
CV03 600	   CONTINUE
CV03           IF (IAND(X2X_DEBUG,X2X_DEBUG_X2XRAPP).NE.0)
CV03     *	      TYPE *,'Invalid relay message ',PROBUF
CV03	   CALL RELBUF(PROBUF)
CV03 1000	CONTINUE
C*
	IF (TO_REDO.NE.0) GOTO 60   !LOOP IF SENT ANYTHING
	GOTO 50                     !HOLD SELF
9010	FORMAT(1H ,A,8(1X,Z8))
	END
