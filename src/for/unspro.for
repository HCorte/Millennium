C
C PROGRAM UNSPRO
C $Log:   GXAFXT:[GOLS]UNSPRO.FOV  $
C  
C     Rev 1.0   17 Apr 1996 15:42:42   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 17:57:38   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - unspro.for **
C
C UNSPRO.FOR
C
C V04 07-AUG-92 GCAN CHECK FOR TERMINALS NOT SIGNED ON, IF NOT REJECT.
C V03 03-JUN-92 GCAN ALLOW TO RUN ON SECONDARY (TO LOG TRANS IN TMF)
C V02 30-APR-92 GCAN CHANGED CALLING SEQUENCE TO CALODD (BLDODS).
C                    ALSO SEND BUFFER FOR ODDS REQUEST FROM HERE.
C V01 02-DEV-91 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C
C THIS TASK IS IN CHARGE OF INITIATING BROADCASTS OF ANY
C UNSOLICITED MESSAGE TO ALL TERMINALS. THIS IS PERFORMED ON USER
C SPECIFIED TIME INTERVALS P(***UPD).
C
C THIS TASK WILL BE RELEASED BY TIMER BASED ON THE P(***UPD) TIME OR BY
C DISPATCHER IF A TRANSACTION DEDICATED FOR IT IS RECEIVED. 
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
        PROGRAM UNSPRO
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:CHKSUMCM.DEF'
C
	INTEGER*2   ERRTYP			!Control/Sequence,Error Type
C
	INTEGER*4   TASK			!Task Number
	INTEGER*4   PNUM			!Decoded Parameter #.
	INTEGER*4   TRTYPE			!TRansaction Type (Code)
	INTEGER*4   TYPE			!Decoded Type.
	INTEGER*4   SUBTYPE			!Decoded Subtype.
	INTEGER*4   CHKSUM			!Decoded Checksum (if any)
	INTEGER*4   MESNUM			!Message Number (If used)
	INTEGER*4   BUF				!Procom Buffer #
	INTEGER*4   ST				!Subroutine Return Status.
	INTEGER*4   ERRNUM			!Return Error Number.
	INTEGER*4   MESS(EDLEN)			!Message Buffer.
	INTEGER*4   TER				!Terminal # if any.
	INTEGER*4   SER				!Serial # if any
	INTEGER*4   MYCHKSUM			!Calculted Checksum Value.
	INTEGER*4   CHKLEN			!Lenght to Checksum.
	INTEGER*4   TEMP1, TEMP2		!Temp. Variables.
	INTEGER*4   LOGREC(LREC*3)		!Transaction Log Record.
C
	DATA	    ERRTYP/Z90/
C
C
	CALL COPYRITE
	CALL SNIF_AND_WRKSET
C
C WAIT FOR SOMETHING TO DO
C IF END OF DAY THEN STOP.
C
	TASK = UNS
	MESS(1) = TASK
100	CONTINUE
        BASECHKSUM = IAND(DAYCDC,'FFFF'X)
C
C WAIT FOR SOMETHING TO DO
C IF END OF DAY THEN CALL GSTOP.
C
105	CONTINUE
	IF(DAYSTS.EQ.DSCLOS) CALL GSTOP(GEXIT_SUCCESS)
	IF(DAYSTS.EQ.DSSUSP) THEN
	   CALL HOLD(0,ST)
	   IF(DAYSTS.EQ.DSOPEN) GOTO 100
	   GOTO 105
	ENDIF
	CALL HOLD(0,ST)
C
C GET BUFFER NUMBER FROM TOP OF QUEUE.
C IF NO BUFFERS QUEUED, GO BACK TO WAIT STATE.
C
110	CONTINUE
	CALL TOPQUE(TASK,BUF)
	IF(BUF.EQ.0) GOTO 100
C
C INITIALIZE AND SET LOCAL VARIABLES
C
        SYNTERRCOD = 0
	MESNUM = 0
	ERRNUM = 0
	CALL FASTSET(0,TRABUF,TRALEN)
C
C DECODE BUFFER INTO INTERNAL FORMAT.
C IF INVALID, RELEASE BUFFER (NO TRANSACTION LOGGING)
C
	TRTYPE = HPRO(TRCODE,BUF)
	IF(TRTYPE.NE.TYPUNS.AND.TRTYPE.NE.TYPREG) THEN
	   SYNTERRCOD = 10
	   GOTO 9999
	ENDIF
C
C GET TRANSACTION NUMBER
C
	TEMP1 = ZEXT(BPRO(BINPTAB,BUF))
	TRABUF(TTRN) = IAND(TEMP1,15)
C
C GET TYPE / SUBTYPE
C	
	TYPE = ZEXT(BPRO(BINPTAB+1,BUF))
	SUBTYPE = IAND(TYPE,15)
        TYPE = ISHFT(TYPE,-4)
C
C GET PARAMETER NUMBER (IF INTERNALY GENERATED)
C
	PNUM = PRO(INPTAB+2,BUF)
C
C
	TER = HPRO(TERNUM,BUF)
	SER = PRO(SERIAL,BUF)
C
C IF TERMINAL GENERATED TRANSACTION BUILD SPECIAL FUNCTION TRANSACTION
C
	TRABUF(TSTAT) = GOOD
	TRABUF(TERR)  = NOER
	TRABUF(TTYP)  = TSPE
	TRABUF(TTER)  = TER
	TRABUF(TCDC)  = DAYCDC
	TRABUF(TSIZE) = HPRO(NUMLRC,BUF)
	TRABUF(TSER)  = SER
	TRABUF(TTIM)  = PRO(TSTAMP,BUF)
	IF(TER.GE.1.AND.TER.LE.NUMAGT) TRABUF(TAGT) = AGTTAB(AGTNUM,TER)
C
	IF(TYPE.EQ.11.AND.SUBTYPE.EQ.0)TRABUF(TSFUN)= TODSR
C
C CHECK DECODED INFO.
C IF INTERNALY GENERATED TRANSACTION SET TINTRA.
C
	IF(TRTYPE.EQ.TYPUNS.AND.
     *     PNUM.LT.1.AND.PNUM.GT.NUMPAR) THEN
	   SYNTERRCOD = 20
	   GOTO 9999
	ELSEIF(TRTYPE.NE.TYPREG) THEN
	   TRABUF(TINTRA) = 1
	ENDIF
C
C ERRORS THAT REQUIRE A RESPONSE TO THE TERMINAL
C
	IF(TRTYPE.EQ.TYPREG) THEN 
C
     	   IF(TER.LT.1.OR.TER.GT.NUMAGT) THEN
	      SYNTERRCOD = 100
	      ERRNUM = TBAD
	   ENDIF
C
C CHECK IF AGENT IS SIGNED ON
C
	   IF(AGTHTB(AOPSTS,TER).NE.SIGNON) ERRNUM = NOTON
C
C CHECK MESSAGE CHECKSUM
C
      	   IF(P(SUPSUM).EQ.0) THEN
             IF(.NOT.BTEST(AGTTAB(AGTTYP,TRABUF(TTER)),AGTSUM)) THEN
      	       TEMP1 = ZEXT(BPRO(BINPTAB+2,BUF))
      	       TEMP2 = ZEXT(BPRO(BINPTAB+3,BUF))
      	       CHKSUM    = ISHFT(TEMP1,8) + TEMP2
	       TRABUF(TCHK) = CHKSUM
      	       I4CCITT   = IAND(BASECHKSUM+TER,'FFFF'X)
      	       BPRO(BINPTAB+2,BUF) = I1CCITT(2)
      	       BPRO(BINPTAB+3,BUF) = I1CCITT(1)
      	       CHKLEN = ZEXT(HPRO(INPLEN,BUF)) - 1
      	       CALL GETCCITT(BPRO(BINPTAB,BUF),1,CHKLEN,MYCHKSUM)
C
      	       IF(MYCHKSUM.NE.CHKSUM) THEN
      		 SYNTERRCOD = 110
      		 ERRNUM = CBAD
      	       ENDIF
	     ENDIF
      	   ENDIF
C
	ENDIF
C
C DO NOT CONTINUE IF ERRORS FOUND SO FAR
C
	IF(ERRNUM.NE.0) GOTO 8888
C
C IF UNSOLICITED TYPE SEND TO ALL TERMINALS
C 
	IF(TRTYPE.EQ.TYPUNS) TER = -1
C
C PERFORM APROPRIATE FUNCTIONS
C
	IF(TRTYPE.EQ.TYPUNS.AND.PNUM.EQ.JAKUPD) THEN 		  !Jackpot Msg.
	   IF(P(JAKUPD).LE.0) THEN
	      ERRNUM = SUPR
	   ELSE
      	      CALL BLDJAK(HPRO(OUTLEN,BUF),MESNUM,BPRO(BINPTAB,BUF))
	   ENDIF
C
C
	ELSEIF(TRTYPE.EQ.TYPUNS.AND.PNUM.EQ.TVNUPD) THEN	  !TV News Msg.
	   IF(TSBIT(P(SUPRPT),INFREP).OR.TSBIT(P(SUPRPT),NEWREP)) THEN
	      ERRNUM = SUPR
	   ELSE	   
      	      CALL BLDTVN(HPRO(OUTLEN,BUF),MESNUM,BPRO(BINPTAB,BUF))
	   ENDIF
C
C
	ELSEIF(TRTYPE.EQ.TYPREG.AND.TRABUF(TSFUN).EQ.TODSR) THEN  !Odds Request.
C
C CHECK IF ODDS UPDATES ARE ENABLED 
C
	   IF(P(ODSUPD).LE.0) THEN
	      ERRNUM = SUPR
	   ELSE
C
C IF NO ERRORS SO FAR BUILD MESSAGE
C
	     IF(SYNTERRCOD.EQ.0) THEN
		CALL BLDODS(TRABUF,HPRO(OUTLEN,BUF),BPRO(BINPTAB,BUF))	   
		IF(TRABUF(TERR).NE.NOER) THEN
		   SYNTERRCOD = 120
		   ERRNUM = TRABUF(TERR)
		ENDIF
	     ENDIF
C
	  ENDIF
C
C PUT OTHER FUNCTIONS HERE
C
C
C SET ERROR TO INVALID (DID NOT FIND ANYTHING THAT MATCHED.)
C
	ELSE
	   ERRNUM = INVL
	   SYNTERRCOD = 200
	ENDIF
C
C TRANSFER MESSAGE TO BUFFER
C
8888	CONTINUE
	BPRO(BINPTAB,BUF) = '20'X + TRABUF(TTRN)
	HPRO(MSGNUM,BUF) = MESNUM
	HPRO(TRCODE,BUF) = TRTYPE
	HPRO(TERNUM,BUF) = TER
C
C IF TERMINAL GENERATED TRANSACTION BUILD ERROR TRANSACTION BACK.
C
        IF(TRTYPE.EQ.TYPREG.AND.ERRNUM.NE.0) THEN
           HPRO(OUTLEN,BUF) = 5
           BPRO(BINPTAB+1,BUF) = ERRTYP
	   BPRO(BINPTAB+4,BUF) = ERRNUM
	   TRABUF(TERR) = ERRNUM
	   TRABUF(TSTAT) = REJT
	ENDIF
C
C CALCULATE CHECKSUM
C
        I4CCITT = CHKSUM
 	IF(TRTYPE.EQ.TYPUNS) I4CCITT = 0
        BPRO(BINPTAB+2,BUF) = I1CCITT(2)
        BPRO(BINPTAB+3,BUF) = I1CCITT(1)
        CHKLEN = ZEXT(HPRO(OUTLEN,BUF)) - 1
        CALL GETCCITT(BPRO(BINPTAB,BUF),1,CHKLEN,MYCHKSUM)
        I4CCITT = MYCHKSUM
        BPRO(BINPTAB+2,BUF) = I1CCITT(2)
        BPRO(BINPTAB+3,BUF) = I1CCITT(1)
C
C IF ERROR IN DECODING , DISPLAY ERROR MESSAGE ON THE CONSOLE.
C
9999	CONTINUE
	IF(P(SUPSYN).EQ.0.AND.SYNTERRCOD.NE.0) THEN
	   MESS(2) = TEGEN
	   MESS(3) = 10
	   MESS(4) = SYNTERRCOD
	   MESS(5) = TER
	   MESS(6) = 0
	   MESS(7) = 0
	   MESS(8) = SER
	   CALL QUEMES(MESS)
	ENDIF
C
C LOG TRANSACTION AND QUEUE MESSAGE TO THE OUTPUT QUEUE
C
	IF(TRTYPE.EQ.TYPREG.OR.
     *	  (HPRO(OUTLEN,BUF).GT.0.AND.SYNTERRCOD.EQ.0)) THEN
	   IF(TRTYPE.EQ.TYPREG) THEN
	      CALL TRALOG(TRABUF,LOGREC)
	      CALL WLOG(PRO(SERIAL,BUF),LOGREC,TASK)
	      IF(TRABUF(TINTRA).NE.1) THEN
		 AGTHTB(ATRNUM,TER) = TRABUF(TTRN)
		 AGTHTB(ACHKSM,TER) = -1
	      ENDIF
	   ENDIF
	   IF(TRABUF(TERR).EQ.TBAD) HPRO(ENCOVR,BUF) = -1
	   CALL QUETRA(LOG,BUF)
	ELSE
	   CALL RELBUF(BUF)
	ENDIF
	CALL DQUTRA(TASK,BUF)
C
C GO BACK AND GET MORE
C
	GOTO 110
	END
