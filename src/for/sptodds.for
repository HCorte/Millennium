C SUBROUTINE SPTODDS
C  
C V04 10-NOV-2003 FRP Modify for Batch2 Totobola Changes.
C V03 07-FEB-2000 OXK SPTNUM(4,SYS) replaced with SPGNBR etc (Vakio changes)
C V02 17 Apr 1996 HXK Release of Finland for X.25, Telephone Betting, 
C			Instant Pass Thru Phase 1
C V01 21 Jan 1993 DAB Initial Release
C  			Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  			DEC Baseline
C
C SPTODDS(SYSNR,UBET,DUBLEREQ,NUM_SHARES)   ;ODDS ANALISYS
C
C     IN:
C     SYSNR - SYSTEM NR
C     UBET   - JUST FOR TESTING
C     DUBLEREQ - .LT.0 IF SHOULD GENERATE ALL POSSIBLE DUBLE BETS
C                 WILL CHECK ALL WINNING COMBINATIONS
C                 .GE.0 WILL CHECK ONLY FOR COMBINATIONS THAT MATCH
C                 DUBLES
C                 .EQ.0 WILL CHECK FOR ALL POSSIBLE DUBLES
C                 .EQ.1 OR 2 OR 3 WILL CHEKC ONLY SPECIFIC DUBLE
C     NUM_SHARES - NUMBER OF DIFFERENT SHARES TO DISPLAY
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE SPTODDS(SYSNR,UBET,DUBLEREQ,NUM_SHARES)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:SPTCOM.DEF'
C
	INTEGER*4 SYSNR,HISHR
C
	INTEGER*4  SPGNBR2, MAXODDS
	PARAMETER (SPGNBR2=(SPGNBR+1)/2)
	PARAMETER (MAXODDS=500)
C
	INTEGER*4 UDISPLAY, TOTAL, OFFSET, I, III, II, UNUM, ACTWIN
	INTEGER*4 WON, LASTWIN, ACTDUBLE, OFF, DUBLE, CMB1, CMB
	INTEGER*4 DUBLECMD, NEXT, LASTDUBLE, FIRSTDUBLE, NUM2, NUM3
	INTEGER*4 NUMROWS, NUMRROWS, NUM_SHARES, DUBLEREQ, UBET
C
	INTEGER*4 WIN(SPGNBR)
C
	INTEGER*4 ODDSTAB(SPGNBR,MAXODDS)
	INTEGER*4 ODDSTAB_U(MAXODDS)
	INTEGER*4 ODDSTAB_CNT(MAXODDS)
C  OFFSETS: MATCHALL,MATCHALL-1,MATCHALL-2, # OF U MATCHES, TIMES BET
	INTEGER*4 CURRENTOFF
	INTEGER*2 SYSBET(SPGNBR2)            !SYSTEM BET
	INTEGER*2 USYSBET(SPGNBR2)           !U SYSTEM
	INTEGER*4 DUBLEBET(0:2) /3,5,6/
	INTEGER*4 DUBLETAB(SPGNBR)       !LOCAL DUBLE COMBINATIONS
	INTEGER*4 TAB3(0:2) /1,2,4/
	INTEGER*4 SHARES(0:SPGNBR)
	CHARACTER*1 DSP1(0:4) /' ','1','2',' ','3'/
C
	INTEGER*4 UTAB(SPGNBR)
	INTEGER*4 UCNT(0:SPGNBR)
	INTEGER*4 POWER3(0:16) /1,3,9,27,81,243,729,2187,6561,
     *	  19683,59049,177147,531441,1594323,4782969,14348907,43046721/
	INTEGER*4 POWER2(0:16) /1,2,4,8,16,32,64,128,256,512,1024,
     *	                      2048,4096,8192,16384,32768,65536/
	LOGICAL USYSTEM
C
Cv03	NUMROWS=SPSNUM(4,SYSNR)
	NUMROWS=SPGNBR
	NUMRROWS=1  !SUPER14 (RESULT) ROW
	CALL SPTDSP(SYSNR)               !GET BET INFORMATION FIRST
C
	NUM3=SPSNUM(2,SYSNR)-SPSNUM(1,SYSNR)    !NUMBER OF TRIPLES
	NUM2=SPSNUM(3,SYSNR)-SPSNUM(2,SYSNR)    !NUMBER OF DUBLES
C
	CALL FASTSET(-1,ODDSTAB,MAXODDS*SPGNBR)        !INIT ODDS TABLE
	CALL FASTSET(0,UCNT,SPGNBR+1)             !U MATCHES COUNT
	CURRENTOFF=0                              !# OF DIFF. OUTCOMES
C
	FIRSTDUBLE=0
	LASTDUBLE=0
	NEXT=0
	IF (NUM2.NE.0) LASTDUBLE=POWER3(NUM2)-1
C
	DUBLECMD=DUBLEREQ
	IF (DUBLEREQ.GT.0.AND.DUBLEREQ.LE.3) THEN  !IF NOT FOR ALL
	   FIRSTDUBLE=DUBLEREQ
	   LASTDUBLE=DUBLEREQ
	   DUBLECMD=DUBLEREQ
	ELSEIF (DUBLEREQ.GT.0) THEN
	   TYPE *,'Invalid double bet request'
	ENDIF
C
	CMB=(LASTDUBLE-FIRSTDUBLE+1)*POWER3(NUM3+NUM2)
	CMB1=(LASTDUBLE-FIRSTDUBLE+1)*POWER3(NUM3)*POWER2(NUM2)
	IF (DUBLEREQ.LT.0) THEN
	   WRITE(6,*) 'checking for all combinations of doubles'
	   WRITE(6,*)'processing ',CMB,' bet/winning combinations'
	ELSEIF (DUBLEREQ.EQ.0) THEN
         WRITE(6,*) 'checking for doubles matching winning combination'
	   WRITE(6,*) 'processing ',CMB1,' combinations'
	ELSE
	   WRITE(6,*) 'checking only double combination ',DUBLEREQ
	   WRITE(6,*) 'checking ',CMB1,' combinations'
	ENDIF
C
	DO 100, DUBLE=FIRSTDUBLE,LASTDUBLE  !EXECUTE LOOP FOR ALL DUBLE BETS
C
C     SET SYSTEM BET   (TRIPLE PART)
C
	DO 10, OFF=1,NUM3
	   CALL SETNIBLE(7,SYSBET,OFF)
	   CALL SETNIBLE(TAB3(MOD(UBET,3)),USYSBET,OFF)
	   UTAB(OFF)=TAB3(MOD(UBET,3))
	   UBET=UBET/3
10	CONTINUE
C
C     SET SYSTEM BET (DUBLE PART)
C
	USYSTEM=.FALSE.
	IF (SPSATR(SYSNR).EQ.USYS) USYSTEM=.TRUE.
	ACTDUBLE=DUBLE
	DO 20, OFF=SPSNUM(2,SYSNR),SPSNUM(3,SYSNR)-1
	   CALL SETNIBLE(DUBLEBET(MOD(ACTDUBLE,3)),SYSBET,OFF)
	   DUBLETAB(OFF)=DUBLEBET(MOD(ACTDUBLE,3))
	   ACTDUBLE=ACTDUBLE/3
	   CALL SETNIBLE(TAB3(MOD(UBET,3)),USYSBET,OFF)
	   UTAB(OFF)=TAB3(MOD(UBET,3))
	   UBET=UBET/3
	   IF (USYSTEM.AND.IAND(UTAB(OFF),DUBLETAB(OFF)).EQ.0) GOTO 100
20	CONTINUE
	DO 30, OFF=NUM3+NUM2+1,NUMROWS
C
C     SET REMAINING SINGLES
C
	   CALL SETNIBLE(1,SYSBET,OFF)
30	CONTINUE
C
C     SET SINGLE MATCHES
C
	CALL FASTSET(1,WIN(NUM2+NUM3+1),NUMROWS-NUM3-NUM2) !SINGLES
C
C     GENERATE ALL POSSIBLE WINNING COMBINATIONS
C
	LASTWIN=POWER3(NUM2+NUM3)-1
	DO 90, WON=0,LASTWIN
C
	   ACTWIN=WON
	   UNUM=0
	   DO 40, OFF=NUM3+1,NUM2+NUM3        !SET DUBLES
	      WIN(OFF)=TAB3(MOD(ACTWIN,3))    !NEXT WIN RESULT
	      IF (DUBLECMD.GE.0.AND.IAND(WIN(OFF),DUBLETAB(OFF)).EQ.0)
     *	          GOTO 90
	      ACTWIN=ACTWIN/3
	      IF (SPSATR(SYSNR).EQ.USYS) THEN
	         IF (WIN(OFF).EQ.UTAB(OFF)) UNUM=UNUM+1 !U MARK COUNT
	      ENDIF
40	   CONTINUE
	   DO 50, OFF=1,NUM3                   !SET TRIPLES
	      WIN(OFF)=TAB3(MOD(ACTWIN,3))    !NEXT WIN RESULT
	      ACTWIN=ACTWIN/3
	      IF (SPSATR(SYSNR).EQ.USYS) THEN
	         IF (WIN(OFF).EQ.UTAB(OFF)) UNUM=UNUM+1 !U MARK COUNT
	      ENDIF
50	   CONTINUE
	   CALL SPTCHK(SYSBET,USYSBET,SYSNR,WIN,HISHR,SHARES,NUMROWS,NUMRROWS) !WINSEL
	   NEXT=NEXT+1
         IF(MOD(NEXT,5000).EQ.0) TYPE *,'processing combination ',NEXT
	   IF (SPSTST.NE.0.AND.SPSTST.NE.1) THEN
	   IF (SPSATR(SYSNR).EQ.USYS) THEN
	   TYPE 9100,WON,(DSP1(UTAB(II)),II=1,NUMROWS)
	   TYPE 9101,(DSP1(WIN(III)),III=1,NUMROWS)
	   TYPE 9102,(II,II=NUMROWS,NUMROWS-1,-1)
     *	            ,(SHARES(I),I=NUMROWS,NUMROWS-1,-1),UNUM
9100	   FORMAT(1X,I5,' u ',4(4A1,1X))
9101	   FORMAT('+',T31,' win ',4(4A1,1X))
9102	   FORMAT('+',T55,' share ',3(',',I2.2),': ',3I4,' um ',I2)
	   ELSE
	   TYPE 9151,WON,(DSP1(WIN(III)),III=1,NUMROWS)
	   TYPE 9152,(SHARES(II),II=NUMROWS,NUMROWS-2,-1)
9151	   FORMAT(1X,I5,' win ',16A1)
9152	   FORMAT('+',T45,' shares: ',10I6)
	   ENDIF
	   ENDIF
C
	   DO 70, OFF=1,MAXODDS          !UPDATE ODDS TABLE
	      IF(ODDSTAB(1,OFF).LT.0) THEN    !NEW COMBINATION
	         DO 60, OFFSET=1,NUM_SHARES
	            ODDSTAB(OFFSET,OFF)=SHARES(NUMROWS-OFFSET+1)
60	         CONTINUE
	         ODDSTAB_U(OFF)=UNUM
	         UCNT(UNUM)=UCNT(UNUM)+1
	         ODDSTAB_CNT(OFF)=1
	         CURRENTOFF=CURRENTOFF+1
	         GOTO 90
	      ELSE
	         IF (ODDSTAB_U(OFF).NE.UNUM) GOTO 70
	         DO 65, OFFSET=1,NUM_SHARES
                  IF (ODDSTAB(OFFSET,OFF).NE.SHARES(NUMROWS-OFFSET+1))
     *	            GOTO 70
65	         CONTINUE
	         ODDSTAB_CNT(OFF)=ODDSTAB_CNT(OFF)+1
	         UCNT(UNUM)=UCNT(UNUM)+1
	         GOTO 90
	      ENDIF
70	   CONTINUE
	   TYPE *,'too many outcomes '
	   TYPE *,ODDSTAB
	   RETURN
90	   CONTINUE        !END OF WINNING COMBINATION LOOP
100	CONTINUE           !END OF DIFFERENT DUBLES LOOP
C
C     TRY TO SUMMARISE RESULTS
C
	TOTAL=0
	DO 110, OFF=1,CURRENTOFF
	   TOTAL=TOTAL+ODDSTAB_CNT(OFF)
110	CONTINUE
C
	WRITE (6,*) 'Distribution of ',TOTAL,' possible outcomes'
	DO 120, UDISPLAY=NUM3+NUM2,0,-1 !DISPLAY SORTED BY U MARK MATCH
	DO 120, OFF=1,CURRENTOFF
	   IF (ODDSTAB_U(OFF).EQ.UDISPLAY) THEN
	     IF (SPSATR(SYSNR).EQ.USYS) THEN
C***         WRITE (6,900)(ODDSTAB(II,OFF),II=1,3),ODDSTAB_CNT(OFF)
C*** *            ,UCNT(ODDSTAB_U(OFF)),ODDSTAB_U(OFF)
	      WRITE(6,900) ODDSTAB_CNT(OFF),UCNT(ODDSTAB_U(OFF)),
     *	      ODDSTAB_U(OFF),(((NUMROWS+1)-II),ODDSTAB(II,OFF),
     *	      II=1,NUM_SHARES)
900	      FORMAT(1X,I7,'/',I7,' - U matches ',I2,5X,
     *	      10('* ',I2,'=',I3,1X))
	     ELSE
	       WRITE (6,920)ODDSTAB_CNT(OFF),(((NUMROWS+1)-II),
     *	       ODDSTAB(II,OFF),II=1,NUM_SHARES)
920	       FORMAT(1X,I7,' Times ',5X,10('* ',I2,'=',I3,1X))
	     ENDIF
	   ENDIF
120	CONTINUE
	RETURN
	END
