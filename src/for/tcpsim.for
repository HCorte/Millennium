C TCPSIM.FOR
C
C V01 01-FEB-94 PXN INITIAL RELEASE FOR NETHERLANDS
C V01 01-JUN-93 PXN INITIAL RELEASE FOR IRELAND
C V01 18-NOV-91 KWP INITIAL RELEASE FOR VAX
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM TCPSIM
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PRMPRO.DEF'
	INCLUDE 'INCLIB:CRSCOM.DEF'
	INCLUDE 'INCLIB:TCPEVN.DEF'
C
        INCLUDE '($SYSSRVNAM)'
C
	INTEGER*4   ST,I                !Work variables
	INTEGER*4   STATUS		!Event status
	INTEGER*4   PORT
C
	INTEGER*4 FREBUF, SNDBUF, RCVBUF
C
	INTEGER*4   OPT, TBUF, LEN, BUFID
C
C
	CALL COPYRITE
	TYPE*,IAM(),'*'
	TYPE*,IAM(),'*** TCPSIM    V01  01-FEB-94'
	TYPE*,IAM(),'*'
C
C CREATE THE COMMON EVENT FLAG CLUSTER.
C
        STATUS=SYS$ASCEFC(%VAL(TC_EVNTIMER),TC_EVNNAME,0,0)
        IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
C
100	CONTINUE
	TYPE *,IAM(),' '
	TYPE *,IAM(),' '
	TYPE *,IAM(),'  0:  REDISPLAY'
	TYPE *,IAM(),'  1:  ADD WRITE BUF BUT NO QUEUE'
	TYPE *,IAM(),'  2:  ADD WRITE BUF AND SEND QUEUE'
	TYPE *,IAM(),'  3:  REMOVE BUFFER FROM RECEIVE QUE'
	TYPE *,IAM(),'  4:  DISPLAY TCP PARMS'
	TYPE *,IAM(),'  5:  SHOW QUEUE STATS'
	TYPE *,IAM(),'  6:  SEND OPEN ACTIVE QUEUE TO TCPASST'
	TYPE *,IAM(),'  7:  SEND OPEN PASSIVE QUEUE TO TCPASST'
	TYPE *,IAM(),'  8:  SEND START READS TO TCPASST'
	TYPE *,IAM(),'  9:  SEND DISCONNECT TO TCPASST'
	TYPE *,IAM(),' 10:  DISPLAY CONNECTION STATS'
	TYPE *,IAM(),' 11:  ALLOW CONNECTIONS'
	TYPE *,IAM(),' 12:  DONT ALLOW CONNECTIONS'
	TYPE *,IAM(),' 13:  SEND WRITE QUEUE'
	TYPE *,IAM(),' 14:  SEND STOP QUEUE'
	TYPE *,IAM(),' 15:  DEBUG ON'
	TYPE *,IAM(),' 16:  DEBUG OFF'
	TYPE *,IAM(),' 17:  CONNECT PRI LMS_1'
	TYPE *,IAM(),' 18:  CONNECT BAK LMS_1'
	TYPE *,IAM(),' 19:  SET REMOTE LMS PORT #'
	TYPE *,IAM(),' 20:  SET LAN #'
C
400	CONTINUE
	TYPE *,' '
	CALL PRMNUM('ENTER OPTION  ',OPT,0,20,ST)
	IF(ST.NE.0) CALL GSTOP(GEXIT_OPABORT)
C
	IF(OPT.EQ.0) GOTO 100
	IF(OPT.EQ.1) GOTO 1000
	IF(OPT.EQ.2) GOTO 2000
	IF(OPT.EQ.3) GOTO 3000
	IF(OPT.EQ.4) GOTO 4000
	IF(OPT.EQ.5) GOTO 5000
	IF(OPT.EQ.6) GOTO 6000
	IF(OPT.EQ.7) GOTO 7000
	IF(OPT.EQ.8) GOTO 8000
	IF(OPT.EQ.9) GOTO 9000
	IF(OPT.EQ.10) GOTO 10000
	IF(OPT.EQ.11) GOTO 11000
	IF(OPT.EQ.12) GOTO 12000
	IF(OPT.EQ.13) GOTO 13000
	IF(OPT.EQ.14) GOTO 14000
	IF(OPT.EQ.15) GOTO 15000
	IF(OPT.EQ.16) GOTO 16000
	IF(OPT.EQ.17) GOTO 17000
	IF(OPT.EQ.18) GOTO 18000
	IF(OPT.EQ.19) GOTO 19000
	IF(OPT.EQ.20) GOTO 20000
	GOTO 400
C
C
1000	CONTINUE
	CALL RTL(TBUF,FREQUE,ST)
	IF(ST.EQ.GLIST_STAT_EMPTY) THEN
	  TYPE *,IAM(),'NO TC BUFFERS ON SNDQUE, TRY AGAIN LATER'
	  GOTO 400
	ENDIF
C
C
	CALL PRMNUM('ENTER LENGTH TO WRITE ',LEN,1,MSGLEN,ST)
	IF(ST.NE.0) THEN
	  CALL ABL(TBUF,FREQUE,ST)
	  GOTO 400
	ENDIF
C
	CALL PRMNUM('ENTER BUFFER ID ',BUFID,1,409999999,ST)
	IF(ST.NE.0) THEN
	  CALL ABL(TBUF,FREQUE,ST)
	  GOTO 400
	ENDIF
C
C
	CALL FASTSET(0,TCBUF(TCBUFBEG,TBUF),MSGLEN/4)
	CALL FASTSET(BUFID,TCBUF(TCBUFBEG,TBUF),LEN/4)
C
	TCBUF(TCBUFLEN,TBUF) = LEN
C
	TYPE *,IAM(),'TBUF IS ',TBUF
	TYPE *,IAM(),'LEN IS  ',TCBUF(TCBUFLEN,TBUF)
	TYPE *,IAM(),'ID IS   ',TCBUF(TCBUFBEG,TBUF)
C
	CALL ABL(TBUF,SNDQUE,ST)
	GOTO 400	
C
C
C
2000	CONTINUE
	CALL PRMNUM('ENTER LENGTH TO WRITE ',LEN,1,MSGLEN,ST)
	IF(ST.NE.0) GOTO 400
C
	CALL RTL(TBUF,FREQUE,ST)
	IF(ST.EQ.GLIST_STAT_EMPTY) THEN
	  TYPE *,IAM(),'NO TC BUFFERS ON SNDQUE, TRY AGAIN LATER'
	  GOTO 400
	ENDIF
C
	BUFID=LEN*1000+TBUF
C
C
	CALL FASTSET(0,TCBUF(TCBUFBEG,TBUF),MSGLEN/4)
	CALL FASTSET(BUFID,TCBUF(TCBUFBEG,TBUF),LEN/4)
C
	TCBUF(TCBUFLEN,TBUF) = LEN
	TYPE *,IAM(),'ID IS   ',TCBUF(TCBUFBEG,TBUF)
C
	CALL ABL(TBUF,SNDQUE,ST)
C
	CALL TCPQUEUE(SNDASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 2000
C
C
C
3000	CONTINUE
	CALL RTL(TBUF,RCVQUE,ST)
	IF(ST.EQ.GLIST_STAT_EMPTY) THEN
	  TYPE *,IAM(),'NO TC BUFFERS ON RCVQUE, TRY AGAIN LATER'
	  GOTO 400
	ENDIF
C
	TYPE *,IAM(),'TBUF IS ',TBUF
	TYPE *,IAM(),'LEN IS  ',TCBUF(TCBUFLEN,TBUF)
	TYPE *,IAM(),'STS IS  ',TCBUF(TCBUFSTS,TBUF)
	TYPE *,IAM(),'ERR IS  ',TCBUF(TCBUFERR,TBUF)
	TYPE *,IAM(),'ID  IS  ',TCBUF(TCBUFBEG,TBUF)
C
	CALL ABL(TBUF,FREQUE,ST)
	GOTO 400
C
C
4000	CONTINUE
	TYPE *,IAM(),'TCP_READS      ',TCP_READS
	TYPE *,IAM(),'TCP_READERRS   ',TCP_READERRS
	TYPE *,IAM(),'TCP_READLERR   ',TCP_READLERR
	TYPE *,IAM(),'TCP_READSOUT   ',(TCP_READSOUT(I),I=1,TCMAXREADS)
	TYPE *,IAM(),'TCP_READTBUF   ',(TCP_READTBUF(I),I=1,TCMAXREADS)
	TYPE *,IAM(),'TCP_WRITES     ',TCP_WRITES
	TYPE *,IAM(),'TCP_WRITEERRS  ',TCP_WRITEERRS
	TYPE *,IAM(),'TCP_WRITELERR  ',TCP_WRITELERR
	TYPE *,IAM(),'TCP_WRITENOCS  ',TCP_WRITENOCS
	TYPE *,IAM(),'TCP_WRITESOUT  ',(TCP_WRITESOUT(I),I=1,TCMAXWRITES)
	TYPE *,IAM(),'TCP_WRITETBUF  ',(TCP_WRITETBUF(I),I=1,TCMAXWRITES)
	TYPE *,IAM(),'TCP_CONNECTS   ',TCP_CONNECTS
	TYPE *,IAM(),'TCP_CONNERRS   ',TCP_CONNERRS
	TYPE *,IAM(),'TCP_CONNLERR   ',TCP_CONNLERR
	TYPE *,IAM(),'TCP_DISCONNS   ',TCP_DISCONNS
	TYPE *,IAM(),'TCP_DISCERRS   ',TCP_DISCERRS
	TYPE *,IAM(),'TCP_DISCLERR   ',TCP_DISCLERR
	TYPE *,IAM(),'TCP_CONNSTS    ',TCP_CONNSTS
	TYPE *,IAM(),'TCP_REMPRT     ',TCP_REMPRT
CPXN	CALL GPAUSE
	GOTO 400
C
C
5000	CONTINUE
	CALL LISTSIZE(FREQUE,FREBUF)
	CALL LISTSIZE(SNDQUE,SNDBUF)
	CALL LISTSIZE(RCVQUE,RCVBUF)
	TYPE *,IAM(),'FREQUE: ',FREBUF
	TYPE *,IAM(),'SNDQUE: ',SNDBUF
	TYPE *,IAM(),'RCVQUE: ',RCVBUF
	GOTO 400
C
C
6000	CONTINUE
	CALL TCPQUEUE(ACONASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
7000	CONTINUE
	CALL TCPQUEUE(PCONASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
8000	CONTINUE
	CALL TCPQUEUE(BEGASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
9000	CONTINUE
	CALL TCPQUEUE(DISASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
10000	CONTINUE
	TYPE *,IAM(),'TCP_CONNSTS    ',TCP_CONNSTS
	TYPE *,IAM(),'TCP_CONNOVR    ',TCP_CONNOVR
	TYPE *,IAM(),'TCP_CONTYPE    ',TCP_CONTYPE
	TYPE *,IAM(),'TCP_CONWAIT    ',TCP_CONWAIT
CPXN	CALL GPAUSE
	GOTO 400
C
C
11000	CONTINUE
	TCP_CONNOVR=TCOKAY
	TYPE *,IAM(),'CONNECTIONS ALLOWED'
	GOTO 400
C
C
12000	CONTINUE
	TCP_CONNOVR=TCNOT
	TYPE *,IAM(),'NO CONNECTIONS ALLOWED'
	GOTO 400
C
C
13000	CONTINUE
	CALL TCPQUEUE(SNDASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
14000	CONTINUE
	CALL TCPQUEUE(ENDASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
15000	CONTINUE
	TCP_DEBUG=1
	GOTO 400
C
C
16000   CONTINUE
	TCP_DEBUG=0
	GOTO 400
C
C
17000   CONTINUE
	P(PRMSTR) = 1
	GOTO 400
C
C
18000   CONTINUE
	P(PRMSTR) = 0
	GOTO 400
C
C
19000	CONTINUE
	CALL PRMNUM('ENTER REMOTE LMS PORT #',PORT,1,9999,ST)
	IF(ST.NE.0) GOTO 400
	TCP_REMPRT=PORT
C
	CALL TCPQUEUE(DISASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
C
C
20000	CONTINUE
	TYPE *,IAM(),'0 = .169.(PRIM) , 1 = .168.(SEC) ',TCP_IP_CNT
	TYPE *,IAM()
	CALL PRMNUM('ENTER LAN CONNECTION 0 OR 1 ',PORT,0,1,ST)
	IF(ST.NE.0) GOTO 400
	TCP_IP_CNT=PORT
C
	CALL TCPQUEUE(DISASST,ST)
	IF(ST.NE.0) THEN
	  TYPE *,IAM(),'ERROR QUEUEING TCPASST:  ',ST
	ENDIF
	GOTO 400
C
	END
