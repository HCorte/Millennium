C Subroutine to process the first phase of Wager Fractioning
C
C V07 06-JAN-2011 FJG MILLENNIUM MXSRV
C V06 29-NOV-2000 UXN TOTOGOLA ADDED.
C V05 07-MAR-2000 OXK TRABUF(TSDT4) = NUMTKT added
C V04 01-FEB-2000 UXN FUNIT,FKUNIT removed.
C V03 13-OCT-1999 RXK World Tour added.
C V02 29-JAN-1999 UXN Partially rewritten.
C V01 03-AUG-1993 GXA Initial revision.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE FRACONE(TRABUF,BUF)
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMLOG.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:FRAC.DEF'
C
	INTEGER*4 BUF				!Procom Buffer #.
C
	INTEGER*4 LOGREC(LMUREC)		!Transaction Log Record
	INTEGER*4 WRKBUF(TRALEN)		!Internal Trans Record.
	INTEGER*4 JUL				!Julian Date
	INTEGER*4 SER				!Serial #
	INTEGER*4 CDIG                          !Check Digits.
	INTEGER*4 CDC			        !Current CDC date.
	INTEGER*4 NUMTKT			!Number of Fractioned Tickets
	INTEGER*4 WAGSER			!Wager Serial#.
	INTEGER*4 CERR				!Conversion Error
	INTEGER*4 INPVER			!INPVER Function
	INTEGER*4 ST				!Subroutine Return Status.
	INTEGER*4 TASK				!Current Task
	INTEGER*4 TKTFRC			!
	INTEGER*4 TER				!Terminal #.
C
	BYTE	  I1TEMP(4)			!Temp Variable.
	INTEGER*2 I2TEMP(2)			!Temp Variable.
	INTEGER*4 I4TEMP			!Temp Variable.
	INTEGER*4 GTYP
C
	EQUIVALENCE(I4TEMP,I2TEMP,I1TEMP)
C
C
C SET / CLEAR VARIABLES
C
	TASK = SPE
	ST  = 0
	TRABUF(TERR) = INVL
	TRABUF(TSUBERR) = NOER
	TER = TRABUF(TTER)
C
	HPRO(TRCODE,BUF) = TYPFRA
        HPRO(INPLEN,BUF) = OUTLEN_MAX
C
C DECODE MESSAGE FROM TERMINAL INPUT MESSAGE
C
	CALL DFRAC(BPRO(BINPTAB,BUF),JUL,SER,CDIG,NUMTKT)
C
C CONVERT TO INTERNAL SERIAL #
C
	CDC = DAYCDC
	CERR = INPVER(CDC,SER,WAGSER,CDIG)
	IF(CERR.NE.0.OR.JUL.NE.DAYJUL) GOTO 100
	TRABUF(TSDT1) = WAGSER
C
C CHECK IF FRACTIONS ARE ALLOWED ON AGENT BASIS
C
	IF(BTEST(AGTTAB(AGTTYP,TRABUF(TTER)),AGTFRC)) THEN
	   TRABUF(TERR) = SUPR
	   GOTO 100
	ENDIF
C
C READ WAGER FROM TM FILE AND CONVERT TO INTERNAL FORMAT (WRKBUF)
C
	CALL RLOG(WAGSER,LOGREC,TASK,ST)
	IF(ST.NE.0) GOTO 100
	CALL LOGTRA(WRKBUF,LOGREC)
C
	IF(WRKBUF(TTYP).NE.TWAG) GOTO 100
C
	GTYP = WRKBUF(TGAMTYP)
C
C CHECK FOR RETRY
C
	IF(TRABUF(TTRN).EQ.AGTHTB(ATRNUM,TER).AND.
     *     AGTTAB(ALSTRA,TER).EQ.WRKBUF(TWCSER).AND.
     *     WRKBUF(TSTAT).EQ.FRAC)                    THEN
	   
	   CALL RLOG(WRKBUF(TWCSER),LOGREC,TASK,ST) ! Fraction
           IF(ST.NE.0) GOTO 100
           CALL LOGTRA(WRKBUF,LOGREC)
	   
	   CALL FASTMOV(WRKBUF(TSDT1),TRABUF(TSDT1),14)	   

	   TRABUF(TSTAT)    = REJT
	   TRABUF(TERR)     = RETY
	   PRO(FRA_SIZ,BUF) = 0	! RETRY
	   GOTO 90
	ENDIF
C
	IF(WRKBUF(TSTAT).EQ.FRAC) THEN
	   TRABUF(TERR) = NFRA
	   TRABUF(TSUBERR) = NFRA_AFRA
	   GOTO 100
	ENDIF
C
	IF(WRKBUF(TSTAT).NE.GOOD) THEN
	   TRABUF(TERR) = NFRA
	   TRABUF(TSUBERR) = NFRA_CAND
	   GOTO 100
	ENDIF
C
C CHECK IF AFTER DRAW
C
	CALL CHKCAN(WRKBUF,ST)
	IF(ST.NE.0) THEN
	   TRABUF(TERR) = NFRA
	   TRABUF(TSUBERR) = NFRA_ADRW
	   GOTO 100
	ENDIF
C
C DO NOT ALLOW FRACTIONS OF ANY WAGERS ASSOCIATED WITH BANK ACCOUNTS.
C
	IF(WRKBUF(TWBNKID).NE.0.OR.WRKBUF(TWBNKNM).NE.0) THEN
	   TRABUF(TERR) = NFRA
	   TRABUF(TSUBERR) = NFRA_BNKO
	   GOTO 100
	ENDIF
C
	TKTFRC = WRKBUF(TFRAC) / NUMTKT
	TRABUF(TSDT2) = WRKBUF(TFRAC)
	TRABUF(TSDT3) = TKTFRC
	TRABUF(TSDT4) = NUMTKT
C
C CHECK IF FRACTIONS ADD UP
C
	IF(TKTFRC*NUMTKT.NE.WRKBUF(TFRAC).OR.
     *     NUMTKT.LE.1.OR.NUMTKT.GT.MAXFRC(WRKBUF(TGAM))) THEN
	   TRABUF(TERR) = NFRA
	   TRABUF(TSUBERR) = NFRA_NFRA
	   GOTO 100
	ENDIF
C
	TRABUF(TERR) = NOER
	TRABUF(TSUBERR) = NOER
	PRO(FRA_SIZ,BUF) = WRKBUF(TSIZE)
	PRO(FRA_TKT,BUF) = NUMTKT
90	CONTINUE
	CALL TRALOG(TRABUF,PRO(FRA_WRKTAB,BUF))
	IF(GTYP.EQ.TKIK.OR.GTYP.EQ.TLTO.OR.GTYP.EQ.TSPT.OR.
     *     GTYP.EQ.TTGL) THEN
           PRO(FRA_QUE,BUF) = WAG
C       ELSEIF(GTYP.EQ.TBNG) THEN       !MXSRV
C          PRO(FRA_QUE,BUF) = PPP       !MXSRV
        ELSE 
	   PRO(FRA_QUE,BUF) = ODD	! Everything else goes to ODDPRO
        ENDIF
	RETURN
C
C BUILD OUTPUT MESSAGE IF ERROR, OR BUILD MESSAGE BACK TO US IF OK.
C
100	CONTINUE
	TRABUF(TSTAT) = REJT
	CALL TRALOG(TRABUF,PRO(FRA_WRKTAB,BUF)) ! Send it to SPESRV
	PRO(FRA_QUE,BUF) = SPE
	RETURN
	END
