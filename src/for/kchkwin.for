C
C SUBROUTINE KCHKWIN
C
C V09 29-NOV-2000 UXN TTGL ADDED.
C V08 28-FEB-2000 RXK Promotion ("add 1 free week") added.
C V07 14-JAN-1999 UXN GET_TEBEID ADDED.
C V06 09-SEP-1998 RXK Changed for new Kicker
C V05 04-Oct-1993 HXK WIN=WIN+WIN1 was in the wrong place.
C V04 23-Sep-1993 GXA Only add up kicker winners if number was actually played.
C V03 31-Aug-1993 HXK Allow for second kicker
C V02 22-Aug-1993 GXA Released for Finland Dec Conversion / Oddset.
C V01 21-JAN-1993 DAB Initial Release Based on Netherlands Bible, 12/92,
C                   and Comm 1/93 update.  DEC Baseline
C
C SUBROUTINE TO CHECK IF KICKER TICKET IS A WINNER
C AND UPDATE VALIDATION RECORDS
C
C
C
C     CALL KCHKWIN(TRABUF,V4BUF,WIN)
C INPUT
C          TRABUF - TRANSACTION BODY
C          V4BUF  - VALIDATION RECORD
C OUTPUT
C          V4BUF  - UPDATED FOR NEW WINNER (IF ANY)
C          WIN    - ZERO -> NOT A WINNER
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE KCHKWIN(TRABUF,V4BUF,WIN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:WINCOM.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
	INCLUDE 'INCLIB:VALFIL.DEF'
	INCLUDE 'INCLIB:VDETAIL.DEF'
	LOGICAL CXLED,UPDATE
	INTEGER*4 PRZIND
	INTEGER*4 DIV
	INTEGER*4 KIND
	INTEGER*4 KGAM
	INTEGER*4 GAM
	INTEGER*4 ST
	INTEGER*4 WIN
        INTEGER*4 WIN1
	INTEGER*4 GTYP
	INTEGER*4 GIND
	INTEGER*4 KOFF			!Kicker # Offset.
	INTEGER*4 FRCS			!# of Fractions.
C
C
	UPDATE=.TRUE.
	GOTO 10
C
C ENTRY TO CHECK IF WINNER ONLY (NO UPDATE)
C
	ENTRY KIFWIN(TRABUF,WIN)
	UPDATE=.FALSE.
C
C
10	CONTINUE
	WIN=0
	IF(TRABUF(TWKFLG).EQ.0.AND.TRABUF(TWKFLG2).EQ.0) RETURN
	CXLED=.FALSE.
	ST=TRABUF(TSTAT)
	GAM=TRABUF(TGAM)
	KGAM=TRABUF(TWKGME)
	KIND=GNTTAB(GAMIDX,KGAM)
	GTYP=TRABUF(TGAMTYP)
	GIND=TRABUF(TGAMIND)
C
C
	IF(LKKDRW(KIND).LT.0) RETURN
	IF(ST.NE.GOOD.AND.ST.NE.VOID.AND.
     *	   ST.NE.INCA.AND.ST.NE.EXCH) RETURN
	IF(TRABUF(TWKBEG).GT.LKKDRW(KIND)) RETURN
	IF(TRABUF(TWKEND).LT.LKKDRW(KIND)) RETURN
	IF(TRABUF(TSTAT).EQ.VOID.OR.TRABUF(TSTAT).EQ.INCA) CXLED=.TRUE.
C
C CHECK IF TICKET IS A WINNER
C
	DO 100 KOFF = 0,1	!Loop for two Kicker#'s
C
	WIN1 = KOFF
	CALL KWINLOS(TRABUF,DIV,WIN1)
	IF(TRABUF(TWKFLG+KOFF).EQ.0) WIN1 = 0
        WIN=WIN+WIN1
	IF(WIN1.EQ.0.OR..NOT.UPDATE) GOTO 100 
C
C UPDATE VALIDATION RECORD
C
	IF(V4BUF(VFSSER).NE.0) THEN
	  CALL LOGVAL(VALREC,V4BUF)
	  CALL DLOGVAL(VALREC,VDETAIL)
	ELSE
	  CALL FASTSET(0,VALREC,VALLEN)
	  CALL FASTSET(0,VDETAIL,VPLEN*VMAX)
	ENDIF
C
C
	FRCS = TRABUF(TFRAC)
	IF(FRCS.LT.1) FRCS = MAX(MAXFRC(KGAM),1)
	IF(.NOT.CXLED)
     *	  LKKSHR(DIV,KIND)=LKKSHR(DIV,KIND)+FRCS
	VALREC(VPZOFF)=VALREC(VPZOFF)+1
	PRZIND=VALREC(VPZOFF)
	IF(PRZIND.GT.VMAX) THEN
	  TYPE*,IAM(),' Prize table overflow ',TRABUF(TCDC),TRABUF(TSER)
	  CALL GPAUSE
	  VALREC(VSTAT)=VHOLD
	  VALREC(VPZOFF)=VMAX
	  GOTO 20
	ENDIF
C
C
	IF(KOFF.EQ.0) VDETAIL(VKIK,PRZIND) = 1
	IF(KOFF.EQ.1) VDETAIL(VKI2,PRZIND) = 1
	VDETAIL(VBDR,PRZIND)=0
	VDETAIL(VUPD,PRZIND)=0
	VDETAIL(VDIV,PRZIND)=DIV
	VDETAIL(VSHR,PRZIND)=1
	VDETAIL(VDRW,PRZIND)=LKKDRW(KIND)
	VDETAIL(VPRG,PRZIND)=0
20	CONTINUE
	VALREC(VWCDC)=DAYCDC
C
C UPDATE VALIDATION HEADER IF NEW WINNER
C
	IF(VALREC(VSTAT).EQ.VNOWIN) THEN
	  VALREC(VSCDC)=TRABUF(TCDC)
	  VALREC(VSTER)=TRABUF(TTER)
	  VALREC(VSSER)=TRABUF(TSER)
	  VALREC(VEXP )=TRABUF(TWEND)+ TRABUF(TWADDFW)
	  VALREC(VKEXP)=TRABUF(TWKEND) + TRABUF(TWADDFW)
	  VALREC(VGAM )=TRABUF(TGAM)
	  VALREC(VKGME)=TRABUF(TWKGME)
	  VALREC(VGTYP)=TRABUF(TGAMTYP)
	  VALREC(VGIND)=TRABUF(TGAMIND)
	  VALREC(VFRAC)=TRABUF(TFRAC)
	  VALREC(VBNKNUM)=TRABUF(TWBNKNM)
	  VALREC(VBNKID)=TRABUF(TWBNKID)
	ENDIF
C
        IF(VALREC(VSTAT).EQ.VPRPAY.OR.VALREC(VSTAT).EQ.VPRPOST) THEN
          VALREC(VSTAT)=VPPNPZ
        ELSEIF(VALREC(VSTAT).NE.VHOLD) THEN
          VALREC(VSTAT)=VNOPRZ
        ENDIF
	IF((GTYP.EQ.TSPT.AND.SPDELAY(GIND).EQ.2).OR.
     *     (GTYP.EQ.TTGL.AND.TGDELAY(GIND).EQ.2).OR.
     *     (GTYP.EQ.TLTO.AND.LTDELAY(GIND).EQ.2)) THEN
          IF(VALREC(VSTAT).EQ.VNOPRZ) THEN
            VALREC(VSTAT)=VPOST
	  ELSE
	    VALREC(VSTAT)=VPRPOST
	  ENDIF
	ENDIF
	IF(TRABUF(TSTAT).EQ.VOID) VALREC(VSTAT)=VCXL
	IF(TRABUF(TSTAT).EQ.INCA) VALREC(VSTAT)=VDEL
	CALL DVALLOG(VALREC,VDETAIL)
	CALL VALLOG (VALREC,V4BUF  )
C
100     CONTINUE
C
	RETURN
	END
