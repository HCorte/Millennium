C  GXSRC:INSPRO.FOR
C  
C V30 09-DEZ-2020 SCML New Terminals Project - Olimpo
C V29 05-NOV-2014 SCML Fixed RETRY logic of instant validations (net prize
C                      amount field skipped when matching instant details).
C V28 07-JUN-2005 FRP Modify for IPS Distribution.
C V27 06-OCT-2000 UXN AlphaIPS release. FSE sign-on added.
C V26 08-JUN-2000 UXN Unused variables removed.
C V25 03-Feb-2000 RXK TGAMTYP2 removed.
C V24 22-May-1997 WPW Fix from Rita for retries.
C V23 06-Mar-1997 RXK Cross counters counted only on livsys
C V22 13-Feb-1997 RXK IMNU=instant supply message,
C                     IORD=instant games names request message
C V21 03-Feb-1997 WPW Changes for downloading GVTs.
C V20 28-Jan-1997 RXK Instant transactions counted for Inssnp
C V19 18-Dec-1996 HXK Modified for Finland IPS release
C V18 05-Dec-1996 HXK Updated for Finland IPS pre-release
C V17 03-Feb-1995 CONSOLE GVT WILL GET SIGN-ON ERRORS
C V16 12-Jan-1995 DJO Use PRMSTR to suppress cross system transactions if it 
C                     equals zero.
C V15 11-Jan-1995 DJO Changed to use APUBUF to pass the TRABUF to the INSOUT 
C                     task.
C V14 27-Dec-1994 DJO Updates as a result of shakedown testing for install
C                     system.
C V13 16-Dec-1994 DJO Changes made to support install request/confirm messages
C                     from GVT's.
C V12 08-Oct-1994 DJO Changed to not allow local suppression of financial
C                     reports.
C V11 05-Jul-1994 MCM DO NOT QUEUE TO INSTANT SYSTEM INVOICE HEADER AND FOOTER
C                     INFORMATION REQUEST
C V10 08-Jun-1994 MCM CHANGED OPERATIONAL STATUS FROM A HALFWORD TO A BYTE
C V09 25-Jan-1994 JPJ Updated procom TERNUM location from 2 bytes to 4 bytes
C V08 04-MAY-93 MCM RELEASED FOR GEORGIA
C V07 30-Dec-92 ceb Fixed RETRY logic to handle bigger INSTANT 
C                   validation records without the TIATH field.
C                   RFSS TX1100-59
C V06 07-JUL-92 NJA ADDED (OI BIT IN AGTTYP TO CHECK IF SIGNED ON)
C V05 01-JUN-92 JPJ UPDATED RETRY LOGIC
C V04 20-MAR-92 JPJ ADDED (TRAINING MODE)
C V03 06-FEB-92 JPJ ADDED (GVT)
C V02 04-FEB-92 NJA ADDED (2 BYTE CHECKSUM)
C V01 12-NOV-91 JPJ RELEASED FOR VAX (INSTANTS)
C
C INSTANT INPUT TRANSACTIONS PROCESSING TASK
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, West Greenwich, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
        PROGRAM INSPRO
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:PROCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:DESTRA.DEF'
        INCLUDE 'INCLIB:TASKID.DEF'
        INCLUDE 'INCLIB:PRMLOG.DEF'
        INCLUDE 'INCLIB:QUECOM.DEF'
        INCLUDE 'INCLIB:CHKSUMCM.DEF'
        INCLUDE 'INCLIB:APUCOM.DEF'
C
        INTEGER*4 MESS(EDLEN),LOGREC(LREC*3),WRKBUF(TRALEN)
        INTEGER*4 I, ST, LSTSER
        INTEGER*4 TER, BUF, STATUS, ITYP, SALPAS, AGTPAS
        INTEGER*4 TASK, CHNPAS, TYPE
C
        CALL COPYRITE
        CALL SNIF_AND_WRKSET
C
        TASK=INI
C
        MESS(1)=TASK
5       CONTINUE
        BASECHKSUM=IAND(DAYCDC,'FFFF'X)
C
C WAIT FOR SOMETHING TO DO
C IF END OF DAY THEN CALL GSTOP(GEXIT_SUCCESS)
C
10      CONTINUE
        IF(DAYSTS.EQ.DSCLOS) CALL GSTOP(GEXIT_SUCCESS)
        IF(DAYSTS.EQ.DSSUSP) THEN
          CALL HOLD(0,STATUS)
          IF(DAYSTS.EQ.DSOPEN) GOTO 5
          GOTO 10
        ENDIF
        CALL HOLD(0,STATUS)
C
C GET BUFFER NUMBER FROM TOP OF QUEUE.
C IF NO WAGERS QUEUED, GO BACK TO WAIT STATE.
C
20      CONTINUE
        CALL TOPQUE(TASK,BUF)
        IF(BUF.EQ.0) GOTO 10
        SYNTERRCOD=0
C
C DECODE TERMINAL MESSAGE INTO INTERNAL TRANSACTION FORMAT
C
        TER = HPRO(TERNUM,BUF)
C
        CALL FASTSET(0,TRABUF,TRALEN)
        TRABUF(TTYP)=TCRS
        TRABUF(TSTAT)=GOOD
        TRABUF(TERR)=NOER
        TRABUF(TCDC)=DAYCDC
        TRABUF(TTER)=TER
        TRABUF(TFIL)=0
        TRABUF(TSIZE)=1
        TRABUF(TAGT)=AGTTAB(AGTNUM,TER)
        TRABUF(TGAMIND)=1
        TRABUF(TGAMTYP)=TINS
        TRABUF(TGAM)=GTNTAB(TINS,TRABUF(TGAMIND))
C
C SET UP TRABUF Olimpo serial Number  
C----+------------------------------------------------------------------
C V30| New Terminals Project - Olimpo
C BPRO(CHOLM_OLM) equal to 1 means that comes from the communication channel Olimpo
C other wise comes from X2X or MXS
C----+------------------------------------------------------------------
        IF(BPRO(CHOLM_OLM,BUF) .EQ. 1) THEN
            TRABUF(TVOLMSERL_IL)=PRO(SEROLM_INT_OLM,BUF) !SEROLM=49
            TRABUF(TVOLMSERM_IL)=PRO(SEROLM_INT_OLM+1,BUF)
            TRABUF(TVOLMSERH_IL)=BPRO(SEROLM_OLM+8,BUF)
            TRABUF(TVOLMCOMF_IL)=BPRO(CHOLM_OLM,BUF)
            TRABUF(TGOLMSERL_IL)=PRO(SEROLM_INT_OLM,BUF)
            TRABUF(TGOLMSERM_IL)=PRO(SEROLM_INT_OLM+1,BUF)
            TRABUF(TGOLMSERH_IL)=BPRO(SEROLM_OLM+8,BUF)
            TRABUF(TGOLMMIDL_IL)=PRO(MESSID_INT_OLM,BUF)
            TRABUF(TGOLMMIDH_IL)=BPRO(MESSID_OLM+1,BUF)
            TRABUF(TGOLMCOMF_IL)=BPRO(CHOLM_OLM,BUF)
        ENDIF
C----+------------------------------------------------------------------
C V30| New Terminals Project - Olimpo
C----+------------------------------------------------------------------ 
        ITYP = BPRO(BINPTAB+2-1,BUF)
        TRABUF(TITYP)=IAND(ITYP,'0F'X)
        IF(TRABUF(TITYP).EQ.IVAL) THEN !PARAMETER (IVAL=13) - INSTANT VALIDATION -> 0xDD Validação/Pagamento Prémio LI ---> OIVAL
          CALL DIVAL(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.ILOT) THEN !PARAMETER (ILOT=2 ) - INSTANT LOT (not used)
          CALL DILOT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),AGTPAS,
     *               SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.ICAR) THEN !PARAMETER (ICAR=8 ) - INSTANT CARTON STATUS CHANGE (used) -> 0xD2 Alteração de Estado Maço ----> D8
          CALL DICAR(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),AGTPAS,
     *               SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IQTA) THEN !(IQTA=3 ) - INSTANT QUOTA REPORT
          CALL DIRPT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IINV) THEN !(IINV=4 ) - INSTANT INVENTORY REPORT (not used)
          CALL DIRPT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IFIN) THEN !(IFIN=5 ) - INSTANT FINANCIAL REPORT (not used)
          CALL DIFIN(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),CHNPAS)
        ELSE IF (TRABUF(TITYP).EQ.IMNU) THEN !(IMNU=6 ) - INSTANT SUPPLY ORDER (used?) 0xD6
          CALL DIMNU(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IORD) THEN !(IORD=7 ) - INSTANT GAMES NAMES REQUEST (not used)
          CALL DIORD(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.ISON) THEN !(ISON=9 ) - INSTANT SIGN ON (not used)
          CALL DISON(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.ISOF) THEN !(ISOF=10) - INSTANT SIGN OFF (not used)
          CALL DISOF(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.ICNF) THEN !(ICNF=12) - INSTANT ORDER CONFIRMATION (used?) 0xDC
          CALL DICNF(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IEST) THEN !(IEST=0 ) - INSTANT ESTABLISHMENT (not used)
          CALL DIEST(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IGTB) THEN !(IGTB=15) - GAME TABLE REQUEST (used?) 0xD7
          CALL DIGTB(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE IF (TRABUF(TITYP).EQ.IFSESON) THEN !(IFSESON=11) - FSE SIGN-ON (not used)
          CALL DIFSESON(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IISS) THEN !(IISS=1 ) - INSTANT ISSUE
          CALL DIISS(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF),AGTPAS,
     *               SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IOACT) THEN !(IOACT=14) - INSTANT ORDER-PACK ACTIVATION (used) 0xDE -> OIOACT.FOR
          CALL DIOACT(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
        ELSE
          CALL DIVAL(PRO(INPTAB,BUF),TRABUF,HPRO(INPLEN,BUF))
          TRABUF(TITYP)=IVAL
          TRABUF(TERR)=SYNT
        ENDIF
C
C CHECK IF TRANSACTION TYPE IS SUPRESSED ON
C AGENT AND GLOBAL LEVELS.
C 
C DJO - DON'T LOCALLY SUPPRESS THE FINANCIAL REPORTS.
C
        IF(TRABUF(TITYP).NE.IFIN) THEN
         IF(BTEST(AGTTAB(AGTTYP,TER),AGTINS))   TRABUF(TERR)=SUPR
        ENDIF
        IF(P(SUPINS).NE.0)                      TRABUF(TERR)=SUPR
C
C DJO - SUPPRESS ALL CROSS SYSTEM TRANSACTIONS IF THE 'NO CONNECTION'
C       OPTION IS CHOSEN DURING RESET (I.E. P(PRMSTR)=0)
C
        TYPE=TRABUF(TITYP)
        IF(TYPE.EQ.ISON.OR.TYPE.EQ.ISOF.OR.TYPE.EQ.IEST.OR.
     *     TYPE.EQ.IIMSG) GOTO 30
        IF(TYPE.EQ.IFIN) THEN
           IF(TRABUF(TRTYP).EQ.IINVF.OR.
     *        TRABUF(TRTYP).EQ.IINVH.OR.
     *        TRABUF(TRTYP).EQ.IVCLRK) GOTO 30
        ENDIF
        IF(P(PRMSTR).EQ.0)                      TRABUF(TERR)=SUPR
30      CONTINUE
C
C IF GVT INSTALL MESSAGE THEN CHECK IF SUPRESSED
C
        IF(TRABUF(TITYP).EQ.IIMSG) THEN
          IF(P(SUPIMSG).NE.0)  TRABUF(TERR)=SUPR
        ENDIF
C
C CHECK FOR TRAINING MODE
C
        IF(TRABUF(TERR).EQ.NOER.AND.TRABUF(TITYP).NE.IEST) THEN
          IF(BTEST(AGTTAB(AGTTYP,TER),AGTTRN)) TRABUF(TERR)=TRIN
        ENDIF
C
C CHECK SYSTEM STATUS
C
        IF(P(SYSSTS).EQ.SYSDOR)  TRABUF(TERR)=SDOR
C
C IF NOT SIGNED ON.
C
        IF(TRABUF(TITYP).NE.ISON.AND.
     *     TRABUF(TITYP).NE.IEST.AND.
     *     TRABUF(TITYP).NE.IIMSG.AND.
     *     AGTHTB(AOPSTS,TER).NE.SIGNON)
     *     TRABUF(TERR)=NOTON
        IF(TRABUF(TERR).NE.NOER) TRABUF(TSTAT)=REJT
C
C IF TERMINAL RETRY, AND TRANSACTION STATUS IS GOOD, AND
C TRANSACTION SEQUENCE NUMBER MATCHES THE LAST SEQUENCE
C NUMBER FOR THIS TERMINAL, CONTINUE RETRY PROCESSING, ELSE
C PROCESS AS NORMAL.
C
        IF(HPRO(SIMMOD,BUF).EQ.-999) GOTO 80    !NO RETRIES FOR SIM
        IF(TRABUF(TSTAT).EQ.GOOD.AND.
     *    TRABUF(TTRN).EQ.AGTHTB(ATRNUM,TER)) THEN
          LSTSER=AGTTAB(ALSTRA,TER)
          CALL RLOG(LSTSER,LOGREC,TASK,ST)
          IF(ST.NE.0) GOTO 80
          CALL LOGTRA(WRKBUF,LOGREC)
C
C CHECK FOR MATCHING HEADER INORMATION
C
          IF(WRKBUF(TTYP)   .NE.TCRS)               GOTO 80
          IF(WRKBUF(TITYP)  .NE.TRABUF(TITYP))      GOTO 80
          IF(WRKBUF(TTRN)   .NE.TRABUF(TTRN))       GOTO 80
          IF(WRKBUF(TGAMTYP).NE.TRABUF(TGAMTYP))    GOTO 80
          IF(WRKBUF(TAGT)   .NE.TRABUF(TAGT))       GOTO 80
          IF(WRKBUF(TSTAT)  .NE.TRABUF(TSTAT))      GOTO 80
C
C NO RETRY FOR THESE INSTANT TYPES
C
          IF(TRABUF(TITYP).EQ.IQTA.OR.TRABUF(TITYP).EQ.IINV.OR. 
     *       TRABUF(TITYP).EQ.IFIN.OR. 
     *       TRABUF(TITYP).EQ.ISON.OR.TRABUF(TITYP).EQ.ISOF.OR. 
     *       TRABUF(TITYP).EQ.IEST.OR.TRABUF(TITYP).EQ.IGTB.OR.
     *       TRABUF(TITYP).EQ.IIMSG.OR.TRABUF(TITYP).EQ.IORD.OR.
     *       TRABUF(TITYP).EQ.IFSESON) 
     *       GOTO 80
C
C CHECK THAT ALL INSTANT DETAIL MATCHES
C
          DO 40 I=STRINS,TRALEN !check up to data provided by terminal         	
C----+------------------------------------------------------------------
C V29| Skip net prize amount field
C----+------------------------------------------------------------------
C             IF(TRABUF(TITYP).EQ.IVAL .AND.I.GE.TIPCKSTS1) GOTO 50
             IF(TRABUF(TITYP).EQ.IVAL) THEN
               IF(I.EQ.TINETPRZ) GOTO 40 !Skip net prize amount field
               IF(I.GE.TIPCKSTS1) GOTO 50
             ENDIF
C----+------------------------------------------------------------------
C V29| Skip net prize amount field
C----+------------------------------------------------------------------
             IF(TRABUF(TITYP).EQ.ILOT .AND.I.GE.TLAMT)  GOTO 50
             IF(TRABUF(TITYP).EQ.ICAR .AND.I.GE.TCCNT)  GOTO 50
             IF(TRABUF(TITYP).EQ.ICNF .AND.I.GT.TIINV3) GOTO 50
             IF(TRABUF(TITYP).EQ.IMNU .AND.I.EQ.TSORD)  GOTO 40 !Do not check (response info)
             IF(TRABUF(TITYP).EQ.IMNU .AND.I.EQ.TSINF)  GOTO 40 !Do not check (response info)
             IF(TRABUF(TITYP).EQ.IMNU .AND.I.GE.TSEND)  GOTO 50
             IF(TRABUF(TITYP).EQ.IISS .AND.I.GE.TIRES)  GOTO 50
             IF(TRABUF(TITYP).EQ.IOACT.AND.I.GT.TOINV3) GOTO 50
             IF(TRABUF(I).NE.WRKBUF(I)) GOTO 80
40        CONTINUE
C
50        CONTINUE
          TRABUF(TSTAT)=REJT
          TRABUF(TERR )=RETY
C
C PUT ORIGINAL WAGER INTO PROCOM BUFFER FOR RETRY LOGIC IN INSOUT
C
          CALL TRALOG(WRKBUF,PRO(INSTAB,BUF))
          GOTO 90
        ENDIF
C
80      CONTINUE
C
C IF SYNTAX ERROR THEN PRINT ERROR CODE
C ON THE CONSOLE.
C
        IF(P(SUPSYN).EQ.0.AND.SYNTERRCOD.NE.0.AND.
     *     TRABUF(TERR).NE.NOTON) THEN
          MESS(2)=TEGEN
          MESS(3)=10
          MESS(4)=SYNTERRCOD
          MESS(5)=TER
          MESS(6)=TRABUF(TGAMTYP)
          MESS(7)=TRABUF(TGAMIND)
          MESS(8)=TRABUF(TSER)
          CALL QUEMES(MESS)
        ENDIF
C
C SET UP CROSS SYSTEM BUFFER
C
        IF(TRABUF(TSTAT).NE.GOOD) GOTO 90
        IF(TRABUF(TITYP).EQ.IVAL) THEN
          CALL CRVAL(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.ILOT) THEN
          CALL CRLOT(PRO(INSTAB,BUF),TRABUF,BUF,AGTPAS,SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.ICAR) THEN
          CALL CRCAR(PRO(INSTAB,BUF),TRABUF,BUF,AGTPAS,SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IQTA) THEN
          CALL CRRPT(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.IINV) THEN
          CALL CRRPT(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.IFIN) THEN
          IF(TRABUF(TRTYP).EQ.IINVF.OR.TRABUF(TRTYP).EQ.IINVH.OR.
     *       TRABUF(TRTYP).EQ.IVCLRK) GOTO 90
          CALL CRRPT(PRO(INSTAB,BUF),TRABUF,BUF,CHNPAS)
        ELSE IF (TRABUF(TITYP).EQ.IMNU) THEN
          CALL CRMNU(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.IORD) THEN
          CALL CRORD(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.ICNF) THEN
          CALL CRCNF(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.IGTB) THEN
          CALL CRGTB(PRO(INSTAB,BUF),TRABUF,BUF)
        ELSE IF (TRABUF(TITYP).EQ.IFSESON) THEN
          CALL CRFSESON(PRO(INSTAB,BUF),TRABUF,BUF,SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IISS) THEN
          CALL CRISS(PRO(INSTAB,BUF),TRABUF,BUF,AGTPAS,SALPAS)
        ELSE IF (TRABUF(TITYP).EQ.IOACT) THEN
          CALL CROACT(PRO(INSTAB,BUF),TRABUF,BUF)
        ENDIF
C
C QUEUE TRANSACTION TO DISPAT (IF ERROR)
C QUEUE TRANSACTION TO CRSPRO (IF NO ERROR)
C
90      CONTINUE
C
        IF(TRABUF(TITYP).EQ.IFSESON.AND.TRABUF(TIFSETYP).NE.0) GOTO 95 !NO FSE 
        IF(TRABUF(TSTAT).EQ.GOOD.AND.TRABUF(TITYP).NE.ISOF.AND.
     *     TRABUF(TITYP).NE.IEST.AND.
     *     TRABUF(TITYP).NE.ISON.AND.
     *     TRABUF(TITYP).NE.IIMSG.AND.
     *    (TRABUF(TITYP).EQ.IFIN.AND.(TRABUF(TRTYP).NE.IINVF.AND.
     *     TRABUF(TRTYP).NE.IINVH.AND.TRABUF(TRTYP).NE.IVCLRK))) THEN
           IF(CRSCNT(1)-CRSCNT(2).GT.P(MAXCRS))   TRABUF(TERR)=SUPR
        ENDIF
95	CONTINUE
        IF(TRABUF(TERR).NE.NOER) TRABUF(TSTAT)=REJT
        CALL TRALOG(TRABUF,APUBUF(2,BUF))
        PRO(INPTAB,BUF)=TRABUF(TSIZE)
        HPRO(TRCODE,BUF)=TYPCRS
        HPRO(INPLEN,BUF)=OUTLEN_MAX
        IF(TRABUF(TSTAT).NE.GOOD      .OR.
     *     TRABUF(TITYP).EQ.ISOF      .OR.
     *     TRABUF(TITYP).EQ.IEST      .OR.
     *     TRABUF(TITYP).EQ.ISON      .OR.
     *     TRABUF(TITYP).EQ.IIMSG     .OR.
     *     (TRABUF(TITYP).EQ.IFIN    .AND. 
     *      (TRABUF(TRTYP).EQ.IINVF   .OR.
     *       TRABUF(TRTYP).EQ.IINVH   .OR.
     *       TRABUF(TRTYP).EQ.IVCLRK)).OR.
C     *     TRABUF(TITYP).EQ.IORD      .OR.
     *     (TRABUF(TITYP).EQ.IFSESON.AND.TRABUF(TIFSETYP).NE.0)) THEN
           CALL ABL(BUF,QUETAB(1,DIS),ST)
           CALL DQUTRA(TASK,BUF)
        ELSE
           IF(P(SYSTYP).EQ.LIVSYS) CRSCNT(1)=CRSCNT(1)+1
           CALL QUETRA(CRS, BUF)
           CALL DQUTRA(TASK,BUF)
        ENDIF
C        DAYCRS(TRABUF(TITYP)+1) = DAYCRS(TRABUF(TITYP)+1) +1
        GOTO 20
        END

