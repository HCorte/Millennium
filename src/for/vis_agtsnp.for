C SUBROUTINE AGTSNP
C
C V21 16-MAR-2011 GPW NUMAGT=12288
C V20 12-MAR-2010 RXK ePassive changes
C V19 30-JAN-2001 CAS INCLUDED SCML AGENT TYPES
C V18 15-JUN-2000 OXK CLEANUP W/ WARNINGS=ALL
C V17 18 Mar 1997 RXK Display as default summaries of agent (it used to be 
C			for the active clerk)
C V16 06 Mar 1997 RXK Financial inf displayed per game, game number 0 used 
C			for totals  
C V15 13 Feb 1997 RXK Some rows of display cleared 
C V14 17 May 1996 HXK Update from Wojtek, Siew Mun
C V13 24 Apr 1995 HXK Merge of V5 development with March 10th 1995 bible
C V12 02 Mar 1995 HXK Changed commission calculation for V5
C V11 24 Jan 1994 JXP Display 7 characters for agent number
C V10 04 Nov 1993 HXK RESTORE VALDOL FOR 5 PENNY UNITS OF AGTRMX.
C V09 01 Nov 1993 HXK REMOVE VALDOL FOR REDMAX.
C V08 27 Sep 1993 GXA Corrected Refund Counts.
C V07 03 Aug 1993 SXH Released for Finland
C V06 11 Jun 1993 HXK rearranged AGTCOM.def, AGTCOM.def includes.
C V05 01 Mar 1993 EBD DAS update 3/1/93;  Changing format of ASF file
C V04 23-OCT-1991 GCAN INITIAL RELEASE FOR THE NETHERLANDS
C			CHAGED TO ACCESS GAMES BY GAME NUMBER.
C V03 12-MAR-1991 JPJ INITIAL RELEASE FOR MARYLAND
C V02 15-FEB-1991 WOL USES NEW CHARACTER CMONY ROUTINES
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C AGENT FINANCIAL SNAPSHOT
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
	SUBROUTINE AGTSNP(AGT,DAT,CLINE,LAGT,GNUMDSP)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:VISCOM.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
C
        ! parameters
	INTEGER*4   CANIND,CLMIND,DSCIND,SALIND,VALIND
	INTEGER*4   REFIND,LENIND
	PARAMETER   (CANIND=MAXGAM+1)
	PARAMETER   (CLMIND=MAXGAM+2)  !returns
	PARAMETER   (DSCIND=MAXGAM+3)
	PARAMETER   (SALIND=MAXGAM+4)
	PARAMETER   (VALIND=MAXGAM+5)
	PARAMETER   (REFIND=MAXGAM+6)
	PARAMETER   (LENIND=REFIND)
C
        ! arguments
        INTEGER*4  AGT                     !
        INTEGER*4  DAT                     !
        INTEGER*4  CLINE(20)               !
        INTEGER*4  LAGT                    !
	INTEGER*4  GNUMDSP		   !Game # to display sales for.

        ! parameters
	INTEGER*4  INDVTAB(AGAMLEN,MAXGAM) !
        INTEGER*4  ADJUST(2)               !
	INTEGER*4  GINDDSP		   !Game index to display sales for.
	INTEGER*4  GTYPDSP		   !Game type to display sales for.
	INTEGER*4  AMTDUE(2)               !
	INTEGER*4  COMAMT(2)               !
	INTEGER*4  NETSAL                  !
	INTEGER*4  GTYP                    !
	INTEGER*4  GAM                     !
	INTEGER*4  TKC                     !
	INTEGER*4  TCOM(2)                 !
	INTEGER*4  DAY                     !
	INTEGER*4  I                       !
	INTEGER*4  J                       !
	INTEGER*4  ST                      !
	INTEGER*4  CLRKNUM                 !
	INTEGER*4  KEYNUM                  !
	INTEGER*4  POS                     !
	INTEGER*4  VALUE                   !
	INTEGER*4  INLIMIT                 !
	INTEGER*4  CCOM(2)                 !
	INTEGER*4  VALDOL                  !
	INTEGER*4  DOLVAL                  !

	INTEGER*4  BUF(CDLEN)              !
	INTEGER*4  FDB(7)                  !
	INTEGER*4  CNT(LENIND)             !
	INTEGER*4  AMT(LENIND)             !
        INTEGER*4  DUMMY                   !
        INTEGER*4  GIND                    !
 
        INTEGER*4  FROM,UNTIL              
        INTEGER*4  CARTEL,CERR

	INTEGER*2  DBUF(LDATE_LEN)         !

	REAL*8     K(8)                    !

	CHARACTER   CAGTTYP(4)*7	   !SCML AGENT TYPES
	INTEGER*4   IAGTTYP
C
	CHARACTER   CZERO                  !
	CHARACTER*8 REPMOD(2)              !

	DATA K/'OPStat  ','PASnum  ','MGRnum  ','BROnum  ',
     *	       'REDMAX  ','UNUSED  ','SUMmary ','CLErk   '/

	DATA REPMOD/'CLERK   ','SUMMARY '/

	DATA CZERO/Z0/,VALUE/0/
	DATA CAGTTYP     /'Online ','Offline',
     *                    'Privil.','Banco  '  /
C
C
	IF(AGT.LT.1.OR.AGT.GT.NUMAGT) AGT=1
	LSTAGT = AGTTAB(AGTNUM,AGT)
C
C CHECK INPUTED GAME NUMBER, DECODE GAME TYPE AND INDEX.
C
	IF(GNUMDSP.LT.0.OR.GNUMDSP.GT.MAXGAM) GNUMDSP=0
        IF(GNUMDSP.NE.0) THEN
	   GTYPDSP = GNTTAB(GAMTYP,GNUMDSP)
	   GINDDSP = GNTTAB(GAMIDX,GNUMDSP)
C
	   IF(GTYPDSP.LT.1.OR.GTYPDSP.GT.MAXTYP) THEN
	      WRITE(CLIN23,1523) GNUMDSP
	      RETURN
	   ENDIF
        ENDIF
C
C GET AGTSNP INPUT
C
	POS=1
	INLIMIT=6
	IF(P(CLRKACT).EQ.0) INLIMIT=8
	IF(DAT.LT.0) DAT=DAYCDC
	CALL KEY(CLINE,K,INLIMIT,POS,KEYNUM)
	IF(KEYNUM.EQ.7.OR.KEYNUM.EQ.8) GOTO 5
	IF(POS.GT.40) GOTO 100                     !NO INPUT
	IF(KEYNUM.EQ.0)GOTO 10                     !INPUT ERROR
	CALL NUMB(CLINE,POS,VALUE)                 !GET VALUE
	IF(VALUE.LT.0)  GOTO 20
C
5	CONTINUE
	GOTO (30,40,45,50,60,10,80,85) KEYNUM
10	CONTINUE
	WRITE(CLIN23,923)
	GOTO 100
20	CONTINUE
	WRITE(CLIN23,1023)
	GOTO 100
C
C CHANGE OPSTAT
C
30	CONTINUE
	IF(VALUE.LT.SIGNOF.OR.VALUE.GT.SERVFD) GOTO 20
	BUF(1)=1
	BUF(2)=VALUE
	BUF(3)=TCAGT
	BUF(5)=AGT
	BUF(6)=IDNUM
	GOTO 90
C
C CHANGE PASS NUMBER
C
40	CONTINUE
	IF(VALUE.LT.0.OR.VALUE.GT.9999) GOTO 20
	BUF(1)=2
	BUF(2)=VALUE
	BUF(3)=TCAGT
	BUF(4)=1
	BUF(5)=AGT
	BUF(6)=IDNUM
	GOTO 90
C
C CHANGE MANAGER NUMBER (NOT USED)
C
45      CONTINUE
        IF(VALUE.LT.0.OR.VALUE.GT.9999) GOTO 20
        BUF(1)=2
        BUF(2)=VALUE
        BUF(3)=TCAGT
        BUF(4)=2
        BUF(5)=AGT
        BUF(6)=IDNUM
        GOTO 90
C
C PROCESS BROADCAST
C
50	CONTINUE
	IF(VALUE.LT.1.OR.VALUE.GT.256) GOTO 20
	BUF(1)=5
	BUF(2)=VALUE
	BUF(3)=TCSPE
	BUF(4)=0
	BUF(5)=AGT
	BUF(6)=IDNUM
	WRITE(CLIN23,1323) VALUE,AGT
	GOTO 90
C
C CHANGE REDMAX NUMBER
C
60      CONTINUE
        IF(VALUE.LT.0.OR.VALUE.GT.9999999) GOTO 20
        BUF(1)=6
        BUF(2)=DOLVAL(VALUE)
        BUF(3)=TCAGT
        BUF(4)=1
        BUF(5)=AGT
        BUF(6)=IDNUM
        GOTO 90
C
C CHANGE INQLEV NUMBER (NOT USED)
Cv18 commented out since not used...
CV1870      CONTINUE
CV18        IF(VALUE.LT.0.OR.VALUE.GT.9999999) GOTO 20
CV18        BUF(1)=7
CV18        BUF(2)=DOLVAL(VALUE)
CV18        BUF(3)=TCAGT
CV18        BUF(4)=1
CV18        BUF(5)=AGT
CV18        BUF(6)=IDNUM
CV18        GOTO 90
C
C SUM UP FOR ALL CLERKS FOR THIS AGENT
C
80	CONTINUE
	ALLON=.TRUE.
	CLRKNUM=AGTHTB(AGTPASOFF,AGT)
	CALL GETCLERK(AGT,CLRKNUM,1,INDVTAB)
	CLERKON=0
	GOTO 120
C
C SET FOR INDIVIDUAL CLERK ONLY
C
85	CONTINUE
	ALLON=.FALSE.
	CALL FASTSET(0,INDVTAB,AGAMLEN*MAXGAM)
	CLERKON=AGTHTB(AGTPASOFF,AGT)
	GOTO 120
C
C
C QUEUE COMMAND BUFFER TO SYSTEM INPUT QUEUE
C
90	CONTINUE
	CALL VISCMD(BUF,ST)
	CALL XWAIT(2,1,ST)
C
C
100	CONTINUE
C
C READ AGENTS RECORD
C
        IF(LAGT.EQ.AGT) GOTO 120
C
	CALL OPENW(1,SFNAMES(1,ASF),0,0,0,ST)
	CALL IOINIT(FDB,1,ASFSEC*256)
	IF(ST.NE.0) THEN
	    CALL USRCLOS1(     1)
	    WRITE(CLIN23,1123) (SFNAMES(J,ASF),J=1,5),ST
	    RETURN
	ENDIF

CRXK	ALLON=.FALSE.
CRXK	CLERKON=AGTHTB(AGTPASOFF,AGT)
	ALLON=.TRUE.
	CLRKNUM=AGTHTB(AGTPASOFF,AGT)
	CALL GETCLERK(AGT,CLRKNUM,1,INDVTAB)
	CLERKON=0
C
	CALL READW(FDB,AGT,ASFREC,ST)
	IF(ST.NE.0) THEN
	    CALL USRCLOS1(     1)
	    WRITE(CLIN23,1223) (SFNAMES(J,ASF),J=1,5),ST,AGT
	    RETURN
	ENDIF

	CALL USRCLOS1(     1)
	DO I=1,512
	    IF(ASFBYT(I).EQ.CZERO) ASFBYT(I)=' '
        END DO
C
        CARTEL=0
        CALL ASCBIN(ASFINF,SCHAN,LCHAN,CARTEL,CERR)
C
120	CONTINUE
        CALL FASTSET(0,AMT,LENIND)
        CALL FASTSET(0,CNT,LENIND)
        TCOM(1)=0
        TCOM(2)=0
        CCOM(1)=0
        CCOM(2)=0
        ADJUST(1)=0
        ADJUST(2)=0
        TKC=0

	DBUF(5)=DAT
	CALL LCDATE(DBUF)
	IF(DAT.EQ.DAYCDC) GOTO 160
C
C IF NOT TODAYS SALES THEN GET SALES DATA FROM FILE
C
	DO DAY=1,9
	    IF(ASFDAT(ASFCDC,DAY).EQ.DAT) GOTO 140
        END DO
	WRITE(CLIN23,1423) (DBUF(J),J=7,13)
	RETURN
C
C
140	CONTINUE
        IF(GNUMDSP.EQ.0) THEN
           FROM=1
           UNTIL=MAXGAM
        ELSE
           FROM=GNUMDSP
           UNTIL=GNUMDSP
        ENDIF
	DO 150 GAM=FROM,UNTIL
	    GTYP=GNTTAB(GAMTYP,GAM)
            GIND=GNTTAB(GAMIDX,GAM)
	    IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 150

	    CNT(GAM)=CNT(GAM)+ASFDAY(GSCNT,GAM,DAY)-
     *	                      ASFDAY(GCCNT,GAM,DAY)
	    AMT(GAM)=AMT(GAM)+ASFDAY(GSAMT,GAM,DAY)-
     *	                      ASFDAY(GCAMT,GAM,DAY)

	    CNT(SALIND)=CNT(SALIND)+ASFDAY(GSCNT,GAM,DAY)-
     *	                            ASFDAY(GCCNT,GAM,DAY)
	    AMT(SALIND)=AMT(SALIND)+ASFDAY(GSAMT,GAM,DAY)-
     *	                            ASFDAY(GCAMT,GAM,DAY)

	    CNT(VALIND)=CNT(VALIND)+ASFDAY(GVCNT,GAM,DAY)
	    AMT(VALIND)=AMT(VALIND)+ASFDAY(GVAMT,GAM,DAY)

	    CNT(CANIND)=CNT(CANIND)+ASFDAY(GCCNT,GAM,DAY)
	    AMT(CANIND)=AMT(CANIND)+ASFDAY(GCAMT,GAM,DAY)

     	    CNT(CLMIND)=CNT(CLMIND)+ASFDAY(GCLCNT,GAM,DAY)
	    AMT(CLMIND)=AMT(CLMIND)+ASFDAY(GCLAMT,GAM,DAY)

	    CNT(DSCIND)=CNT(DSCIND)+ASFDAY(GDCNT,GAM,DAY)
	    AMT(DSCIND)=AMT(DSCIND)+ASFDAY(GDAMT,GAM,DAY)

	    CNT(REFIND)=CNT(REFIND)+ASFDAY(GRCNT,GAM,DAY)
	    AMT(REFIND)=AMT(REFIND)+ASFDAY(GRAMT,GAM,DAY)

	    TKC=TKC+ASFDAY(GTKCHG,GAM,DAY)
	    NETSAL=ASFDAY(GSAMT,GAM,DAY)-ASFDAY(GCAMT,GAM,DAY)
	    CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,TCOM,GTYP,GIND,AGT)
	    ALLON=.TRUE.
150	CONTINUE

        DUMMY=0
        CALL GETCOM(AMT(VALIND),TVAL,GAM,COMAMT,CCOM,DUMMY,DUMMY,DUMMY)
	DO 155 I=1,15
	    IF(ASFLGR(LGRCDC,I).NE.DAT) GOTO 155
	    CALL ADDI8I8(ADJUST,ASFLGR(LGRAMTU,I),BETUNIT)
155	CONTINUE
	GOTO 180
C
C TODAYS SALES
C
C
160	CONTINUE
C
C IF LAST CLERK SIGNED ON NOT SAME AS CURRENT ONE SIGNED ON AND
C IN CLERK MODE CLEAR SUMMARY TABLE.
C
	IF(P(CLRKACT).EQ.0) THEN
	    IF(CLERKON.NE.AGTHTB(AGTPASOFF,AGT).AND.(.NOT.ALLON)) THEN
	        CALL FASTSET(0,INDVTAB,AGAMLEN*MAXGAM)
	        CLERKON=AGTHTB(AGTPASOFF,AGT)
	    ENDIF
	    IF(CLERKON.NE.AGTHTB(AGTPASOFF,AGT).AND.ALLON) THEN
	        CLERKON=0
	        CLRKNUM=AGTHTB(AGTPASOFF,AGT)
	        CALL GETCLERK(AGT,CLRKNUM,1,INDVTAB)
	    ENDIF
	    IF(.NOT.(ALLON)) THEN
	        CALL FASTSET(0,INDVTAB,AGAMLEN*MAXGAM)
	    ENDIF
	ENDIF
C
C
        IF(GNUMDSP.EQ.0) THEN
           FROM=1
           UNTIL=MAXGAM
        ELSE
           FROM=GNUMDSP
           UNTIL=GNUMDSP
        ENDIF
C
	DO 170 GAM=FROM,UNTIL
	    GTYP=GNTTAB(GAMTYP,GAM)
            GIND=GNTTAB(GAMIDX,GAM)
	    IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 170

	    CNT(GAM)=CNT(GAM)+AGTGAM(GSCNT,GAM,AGT)-
     *	                      AGTGAM(GCCNT,GAM,AGT)
	    AMT(GAM)=AMT(GAM)+AGTGAM(GSAMT,GAM,AGT)-
     *	                      AGTGAM(GCAMT,GAM,AGT)

	    CNT(SALIND)=CNT(SALIND)+AGTGAM(GSCNT,GAM,AGT)-
     *	                            AGTGAM(GCCNT,GAM,AGT)
	    AMT(SALIND)=AMT(SALIND)+AGTGAM(GSAMT,GAM,AGT)-
     *	                            AGTGAM(GCAMT,GAM,AGT)

	    CNT(VALIND)=CNT(VALIND)+AGTGAM(GVCNT,GAM,AGT)
	    AMT(VALIND)=AMT(VALIND)+AGTGAM(GVAMT,GAM,AGT)

	    CNT(CANIND)=CNT(CANIND)+AGTGAM(GCCNT,GAM,AGT)
	    AMT(CANIND)=AMT(CANIND)+AGTGAM(GCAMT,GAM,AGT)

	    CNT(CLMIND)=CNT(CLMIND)+AGTGAM(GCLCNT,GAM,AGT)
	    AMT(CLMIND)=AMT(CLMIND)+AGTGAM(GCLAMT,GAM,AGT)

	    CNT(DSCIND)=CNT(DSCIND)+AGTGAM(GDCNT,GAM,AGT)
	    AMT(DSCIND)=AMT(DSCIND)+AGTGAM(GDAMT,GAM,AGT)

	    CNT(REFIND)=CNT(REFIND)+AGTGAM(GRCNT,GAM,AGT)
	    AMT(REFIND)=AMT(REFIND)+AGTGAM(GRAMT,GAM,AGT)

	    TKC=TKC+AGTGAM(GTKCHG,GAM,AGT)
	    NETSAL=AGTGAM(GSAMT,GAM,AGT)-AGTGAM(GCAMT,GAM,AGT)
	    CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,TCOM,GTYP,GIND,AGT)
170	CONTINUE
        DUMMY=0
        CALL GETCOM(AMT(VALIND),TVAL,GAM,COMAMT,CCOM,DUMMY,DUMMY,DUMMY)
C
C GET ADJUSTMENT AMOUNT FROM FILE
C
	DO 173 I=1,15
	    IF(ASFLGR(LGRCDC,I).NE.DAT) GOTO 173
	    CALL ADDI8I8(ADJUST,ASFLGR(LGRAMTU,I),BETUNIT)
173	CONTINUE
C	ADJUST(1)=AGTTAB(AGTADU,AGT)
C	ADJUST(2)=AGTTAB(AGTADP,AGT)
C
C ADD UP FROM CLERK FILE
C
	IF(P(CLRKACT).EQ.0) THEN
	    DO 175 GAM=FROM,UNTIL
	        GTYP=GNTTAB(GAMTYP,GAM)
                GIND=GNTTAB(GAMIDX,GAM)
	        IF(GTYP.LT.1.OR.GTYP.GT.MAXTYP) GOTO 175

	        CNT(GAM)=CNT(GAM)+INDVTAB(GSCNT,GAM)-
     *	                          INDVTAB(GCCNT,GAM)
	        AMT(GAM)=AMT(GAM)+INDVTAB(GSAMT,GAM)-
     *	                          INDVTAB(GCAMT,GAM)

	        CNT(SALIND)=CNT(SALIND)+INDVTAB(GSCNT,GAM)-
     *	                                INDVTAB(GCCNT,GAM)
	        AMT(SALIND)=AMT(SALIND)+INDVTAB(GSAMT,GAM)-
     *	                                INDVTAB(GCAMT,GAM)

	        CNT(VALIND)=CNT(VALIND)+INDVTAB(GVCNT,GAM)
	        AMT(VALIND)=AMT(VALIND)+INDVTAB(GVAMT,GAM)

	        CNT(CANIND)=CNT(CANIND)+INDVTAB(GCCNT,GAM)
	        AMT(CANIND)=AMT(CANIND)+INDVTAB(GCAMT,GAM)

    	        CNT(CLMIND)=CNT(CLMIND)+INDVTAB(GCLCNT,GAM)
	        AMT(CLMIND)=AMT(CLMIND)+INDVTAB(GCLAMT,GAM)

	        CNT(DSCIND)=CNT(DSCIND)+INDVTAB(GDCNT,GAM)
	        AMT(DSCIND)=AMT(DSCIND)+INDVTAB(GDAMT,GAM)

	        CNT(REFIND)=CNT(REFIND)+INDVTAB(GRCNT,GAM)
	        AMT(REFIND)=AMT(REFIND)+INDVTAB(GRAMT,GAM)

	        TKC=TKC+INDVTAB(GTKCHG,GAM)
	        NETSAL=INDVTAB(GSAMT,GAM)-INDVTAB(GCAMT,GAM)
	        CALL GETCOM(NETSAL,TWAG,GAM,COMAMT,TCOM,GTYP,GIND,AGT)
175	    CONTINUE
	ENDIF
C
C
180	CONTINUE
	IF(TSBIT(AGTTAB(AGTTYP,AGT),AGTNCM).NE.0) THEN
	  TCOM(1)=0
	  TCOM(2)=0
	  CCOM(1)=0
	  CCOM(2)=0
	ENDIF
	AMTDUE(1)=0
	AMTDUE(2)=0
        CALL ADDI8I4(AMTDUE,AMT(SALIND),BETUNIT)
	CALL SUBI8I4(AMTDUE,AMT(VALIND),VALUNIT)
	CALL SUBI8I4(AMTDUE,AMT(REFIND),BETUNIT)
	CALL SUBI8I4(AMTDUE,AMT(DSCIND),BETUNIT)
	CALL ADDI8I8(AMTDUE,ADJUST,BETUNIT)
 	CALL ADDI8I4(AMTDUE,TKC,BETUNIT)
	CALL SUBI8I8(AMTDUE,TCOM,BETUNIT)
	CALL SUBI8I8(AMTDUE,CCOM,BETUNIT)
C
C GET SCML AGENT TYPE
C
	IF  ( TSBIT(AGTTAB(AGTTYP,AGT),AGTTON) ) THEN
	    IAGTTYP = 1						    !ONLINE
	    IF	( TSBIT(AGTTAB(AGTTYP,AGT),AGTPRV) ) IAGTTYP = 3    !PRIVILEGED
	    IF	( TSBIT(AGTTAB(AGTTYP,AGT),AGTBNK) ) IAGTTYP = 4    !BANK
	ELSE
	    IAGTTYP = 2						    !OFFLINE
	ENDIF
C
C ENCODE AGENT FINANCIAL SNAPSHOT
C
C
	WRITE(CLIN1,901) (DBUF(J),J=7,13)
	WRITE(CLIN2,902) (ASFBYT(J),J=SNAME,ENAME),
     *	                  AGTTAB(AGTNUM,AGT),CAGTTYP(IAGTTYP)
	WRITE(CLIN3,903) (ASFBYT(J),J=SSTRT,ESTRT),AGT
	WRITE(CLIN4,904) (ASFBYT(J),J=SCITY,ECITY),
     *	                 (ASFBYT(J),J=SXSTN,EXSTN)
	WRITE(CLIN5,905) (ASFBYT(J),J=SCONT,ECONT),
     *	                 (ASFBYT(J),J=SDROP,SDROP+1)
	WRITE(CLIN6,906) (ASFBYT(J),J=STELE,ETELE)

	WRITE(CLIN7,9073)
	IF(P(CLRKACT).EQ.0) THEN
	    IF(.NOT.ALLON) THEN
	        WRITE(CLIN7,9071) REPMOD(1),AGTHTB(AGTPASOFF,AGT)
	    ELSE
	        WRITE(CLIN7,9072) REPMOD(2)
	    ENDIF
	ENDIF

	WRITE(CLIN8,908) AGTTAB(ALSTRA,AGT)
        IF(GNUMDSP.NE.0) THEN         
	   WRITE(CLIN9,9091) GTNAMES(GTYPDSP),GINDDSP,CNT(GNUMDSP),
     *	   		     CSMONY(AMT(GNUMDSP),11,BETUNIT),
     *	                     AGTTAB(ALSWAG,AGT)
        ELSE
	   WRITE(CLIN9,909) 'Total   ',
     *                       CNT(SALIND),CSMONY(AMT(SALIND),11,BETUNIT),
     *	                     AGTTAB(ALSWAG,AGT)
        ENDIF 

C	WRITE(CLIN10,9073)
	WRITE(CLIN11,911) CNT(SALIND),CSMONY(AMT(SALIND),11,BETUNIT),
     *                    CARTEL
	WRITE(CLIN12,912) CNT(VALIND),CSMONY(AMT(VALIND),11,VALUNIT),
     *                    AGTHTB(ACHLNK,AGT)
	WRITE(CLIN13,913) CNT(CANIND),CSMONY(AMT(CANIND),11,BETUNIT),
     *	                  AGTTAB(APSNUM,AGT)
	WRITE(CLIN14,914) CNT(CLMIND),CSMONY(AMT(CLMIND),11,VALUNIT)
	WRITE(CLIN15,915) CNT(REFIND),CSMONY(AMT(REFIND),11,VALUNIT)
	WRITE(CLIN16,916) CMONYI8(TCOM(1),12,BETUNIT),
     *	                  AGTHTB(AOPSTS,AGT)
	WRITE(CLIN17,917) CMONYI8(CCOM(1),12,BETUNIT),
     *                    CSMONY(AGTTAB(AGTRMX,AGT), 14, VALUNIT)
	WRITE(CLIN18,918) CSMONYI8(ADJUST,12,BETUNIT),
     *                    VALDOL(AGTTAB(AGTRMN,AGT))
        WRITE(CLIN19,919) CSMONY(TKC,12,BETUNIT)
	WRITE(CLIN20,920) CSMONYI8(AMTDUE(1),12,BETUNIT)
	WRITE(CLIN21,9073)
	WRITE(CLIN22,9073)

	RETURN
C
C FORMAT STATEMENTS
C
901	FORMAT('Agent financial data for ',7A2)
902	FORMAT('Name',T10,<LNAME>A1,T50,'Agtnum',T60,I7.7,' - ',A7)
903	FORMAT('Address',T10,<LSTRT>A1,T50,'Terminal',T60,I5.5)
904	FORMAT(T10,<LCITY>A1,T50,'Stn num',T60,5A1)
905	FORMAT('Contact',T10,<LCONT>A1,T50,'Drop adr',T60,2A1)
906	FORMAT('Phone',T10,<LTELE>A1)
9071	FORMAT(16X,'<< MODE >> ',A8,' ID ',I4)
9072	FORMAT(16X,'<< MODE >> ',A8,10(' '))
9073    FORMAT(80(' '))
908	FORMAT(16X,'Count',6X,'Amount',16X,'Last Transaction ',I10)
909	FORMAT(A8,5X,I8,1X,A11,16X,'Last Wager',7X,I10)
9091	FORMAT(A8,1X,I1,1X,2X,I8,1X,A11,16X,'Last Wager',7X,I10)
910     FORMAT('Psv. Dvl.   ',1X,I8,1X,A11)
911	FORMAT('Net Sales   ',1X,I8,1X,A11,17X,' Cartel  ',6X,I8)
912     FORMAT('Cashes      ',1X,I8,1X,A11,17X,' Chnlnk  ',6X,I8)
913	FORMAT('Cancels     ',1X,I8,1X,A11,17X,'*PASnum  ',6X,I8)
914	FORMAT('Returns     ',1X,I8,1X,A11,17X,'*BROnum  ')
915	FORMAT('Refunds     ',1X,I8,1X,A11,17X)
916	FORMAT('Sales Commission',5X,A12,17X,'*OPStat  ',6X,I8)
917	FORMAT('Cash Commission ',5X,A12,17X,'*REDMAX  ',A14)
918	FORMAT('Adjustment      ',5X,A12,17X,' REDMIN  ',6X,I8)
919	FORMAT('Ticket charge   ',5X,A12,17X,'         ')
920     FORMAT('Amount due      ',5X,A12,17X,'         ')
923	FORMAT('Input error')
1023	FORMAT('Value error')
1123	FORMAT(5A4,' open error ',I4)
1223	FORMAT(5A4,' read error ',I4,' record ',I4)
1323	FORMAT('Message ',I4,' queued to agent ',I4)
1423	FORMAT('Sales data for ',7A2,' not in file')
1523	FORMAT('Game number ',I2,' is not active')

	END
