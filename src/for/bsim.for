C
C PROGRAM BSIM
C
C V06 10-FEB-2000 UXN Bingo message format changed.
C V05 27-NOV-1994 HXK Independent of Bingo Game Rev
C V04 07-NOV-1994 HXK Changed Bingo A,B bet layout
C V03 19-OCT-1993 LMK CREATED A VALID W1BUF (LOTTO 1 WAGER)
C V02 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1995 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS	/CHECK=NOOVERFLOW
	PROGRAM BSIM
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:PROCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:BNGCOM.DEF'
C
	INTEGER*4  TOTMSG
	PARAMETER (TOTMSG=24)
C
	INTEGER*4 I, N, EXT, LOTER, E, DFLAG, TOT
	INTEGER*4 VALFLG, K, JUL1, SER1, CDG1, JUL2, SER2
	INTEGER*4 CDG2, MAXBUF, TER, BUF, ST, J
C
	INTEGER*4 I4TEMP
	INTEGER*2 I2TEMP(2)
	BYTE      I1TEMP(4)
	EQUIVALENCE (I4TEMP,I2TEMP,I1TEMP)
C
	INTEGER*4 W4BUF(24,TOTMSG),PER(TOTMSG),L(TOTMSG)
	BYTE W1BUF(96,TOTMSG)
	EQUIVALENCE (W1BUF,W4BUF)
C
	DATA W1BUF/
C
C BINGO 1 WAGER
C
     *    Z21,Z00,Z00,Z00,Z00,Z0C, Z10,Z11,Z00,Z00,
     *    86*0,
C
C LOTTO 1 WAGER
     *    Z23,Z01,Z78,Z47,Z00,Z10,Z11,ZB2,Z30,Z04,
     *    Z03,Z01,ZEA,Z04,Z03,Z80,Z00,Z58,Z2D,Z12,
     *    Z30,Z73,ZFE,Z7E,ZD6,ZFB,Z8A,Z00,Z14,Z1E,
     *    Z11,ZC9,Z34,Z9A,Z21,Z40,Z48,Z31,ZC4,ZA4,
     *    Z47,Z30,Z14,Z38,Z40,Z28,Z1C,Z21,Z00,Z00,
     *    Z00,Z00,Z00,Z00,Z00,41*0,
C
C TOTO 1
C
     *   Z21,Z02,Z00,Z00,Z00,Z10,Z1C,Z40,Z03,Z00,
     *   Z83,Z98,Z11,Z11,Z11,Z11,Z11,Z11,Z11,Z11,
     *   Z11,Z11,Z11,Z11,Z22,Z22,Z22,Z22,Z22,Z22,
     *   Z44,Z44,Z44,Z44,Z44,Z44,Z12,Z12,Z12,Z12,
     *   Z12,Z12,Z12,Z12,Z12,Z12,Z12,Z12,Z14,Z14,
     *   Z14,Z14,Z14,Z14,Z11,Z11,Z11,Z11,Z11,Z11,
     *   Z22,Z22,Z22,Z22,Z22,Z22,Z44,Z44,Z44,Z44,
     *   Z44,Z44,Z12,Z12,Z12,Z12,Z12,Z12,Z22,Z22,
     *   Z22,Z22,Z22,Z22,Z00,Z00,Z00,Z00,Z00,Z00,
     *   6*0,
C
C 4 DIGIT NUMBERS
C
     *   Z21,Z04,Z00,Z00,Z00,Z00,Z20,Z11,Z00,ZA1,
     *   Z12,Z34,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,
     *   76*0,
C
C 1ST VALIDATION PROGRAM
C
     *   Z20,Z10,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z10,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 2ND VALIDATION PROGRAM
C
     *   Z20,Z11,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z11,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 3RD VALIDATION PROGRAM
C
     *   Z20,Z12,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z12,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 4TH VALIDATION PROGRAM
C
     *   Z20,Z13,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z13,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 5TH VALIDATION PROGRAM
C
     *   Z20,Z14,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z14,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 6TH VALIDATION PROGRAM
C
     *   Z20,Z15,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z15,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 7TH VALIDATION PROGRAM
C
     *   Z20,Z16,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z16,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 8TH VALIDATION PROGRAM
C
     *   Z20,Z17,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z17,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C 9TH VALIDATION PROGRAM
C
     *   Z20,Z18,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z18,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
C
C10TH VALIDATION PROGRAM
C
     *   Z20,Z19,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0,
     *   Z20,Z19,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,Z00,84*0/
C
	DATA L/35,49,11,11,20*12/
C
C
	CALL COPYRITE
C
	TYPE *,IAM(),'BSIM  SIMULATOR'
	TYPE *,IAM()
C
C

        I4TEMP = 0
C
C
	P(SUPWAG)=0
	P(SUPCAN)=0
	P(SUPVAL)=0
	P(DESFLG)=1
	P(SIMLAT)=0
	P(SUPSUM)=1
C***	P(SUPPUD)=0
	P(CHKTIM)=48000
C***	P(REDMIN)=10000
C***	P(REDMAX)=10000
C
C Sign on  all terminals
C
	DO 10 I=1,NUMAGT
	  AGTHTB(AOPSTS,I)=SIGNON
C***	  AGTTAB(AGTTYP,I)=16777216
C***	  AGTTAB(AGTGAM,I)=0
10	CONTINUE
	TYPE *,IAM(),'ALL AGENTS HAVE BEEN SIGNED ON'
C
	CALL FASTSET(0, PER, TOTMSG)
C
	CALL INPNUM('Enter number of buffers ',N,1,NUMPRO,EXT)
	IF(EXT.LT.0) CALL GSTOP(GEXIT_OPABORT)
C
	CALL INPNUM('Enter low terminal number: ',LOTER,1,NUMAGT,E)
	IF(E.LT.0) CALL GSTOP(GEXIT_OPABORT)
C***	CALL INPNUM('SUPDIS ',P(SUPDIS),0,1,E)
C***	CALL INPNUM('SUPPUD ',P(SUPPUD),0,1,E)
C***	CALL INPNUM('LOGTIM ',P(LOGTIM),1,50,E)
C***	CALL INPNUM('NUMLOG ',P(180),1,100,E)
C***	CALL INPNUM('CHKTIM ',P(CHKTIM),0,2 000 000 000,E)
C***	CALL INPNUM('VALLOG ',P(181),1,50,E)
C***	CALL INPNUM('WAGLOG ',P(180),1,50,E)
C***	CALL INPNUM('DISPLAY 0 NO  1 YES ',DFLAG,0,1,E)
C
	DFLAG=0
C
15	CONTINUE
	CALL INPNUM('Enter number of BINGO 1 bets  ',PER(1),0,N,EXT)
	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C***	CALL INPNUM('Enter number of LOTTO 1 bets  ',PER(2),0,N,EXT)
C***	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C***	CALL INPNUM('Enter number of Toto 1 bets  ',PER(3),0,N,EXT)
C***	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C***	CALL INPNUM('Enter number of Toto 2 bets  ',PER(4),0,N,EXT)
C***	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C***	CALL INPNUM('Enter number for VALPRO       ',PER(5),0,N,EXT)
C***	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C
C**	CALL INPNUM('Enter number of validations #1',PER(7),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #2',PER(9),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #3',PER(11),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #4',PER(13),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #5',PER(15),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #6',PER(17),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #7',PER(19),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #8',PER(21),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C**	CALL INPNUM('Enter number of validations #9',PER(23),0,N,EXT)
C**	IF(EXT.NE.0) CALL GSTOP(GEXIT_OPABORT)
C
	PER(5)=PER(5)/2         !VAL #2
	PER(6)=PER(5)
	PER(7)=PER(7)/2         !VAL #3
	PER(8)=PER(7)
	PER(9)=PER(9)/2         !VAL #4
	PER(10)=PER(9)
	PER(11)=PER(11)/2       !VAL #5
	PER(12)=PER(11)
	PER(13)=PER(13)/2       !VAL #6
	PER(14)=PER(13)
	PER(15)=PER(15)/2       !VAL #7
	PER(16)=PER(15)
	PER(17)=PER(17)/2
	PER(18)=PER(17)
	PER(19)=PER(19)/2
	PER(20)=PER(19)
	PER(21)=PER(21)/2
	PER(22)=PER(21)
	PER(23)=PER(23)/2
	PER(24)=PER(23)
 
	TOT=0
	VALFLG=0
	DO 280 K = 1,TOTMSG
	  IF(K.GE.5 .AND. PER(K).NE.0)VALFLG=1
	  TOT = TOT+PER(K)
280	CONTINUE
 
	IF(TOT.NE.N) THEN
	  TYPE *,'TOT = ',TOT
	  TYPE*,'Total not equal ',N
	  GOTO 15
	ENDIF
C
C
	JUL1=03
	SER1=07644799
	CDG1=091
C
	JUL2=03
	SER2=03165356
	CDG2=206
C
	IF(VALFLG.EQ.1)THEN
C***	  CALL INPNUM('ENTER 1ST SRL # FOR VALIDATIONS ',SER1,1,
C***     *                         99999999,ST)
C***	  IF(ST.NE.0)CALL GSTOP(GEXIT_OPABORT)
C***	  CALL INPNUM('ENTER 2ND SRL # FOR VALIDATIONS ',SER2,1,
C***     *                         99999999,ST)
C***	  IF(ST.NE.0)CALL GSTOP(GEXIT_OPABORT)
	ENDIF
C
C
C MOVE VALIDATION SERIAL NUMBER INTO W4BUF
C
	DO 100 I=5,23,2
	  CALL NMOVBYT(JUL1,3,W4BUF(1,I),7,2)
	  CALL NMOVBYT(SER1,2,W4BUF(1,I),9,3)
	  CALL ISBYTE(CDG1,W4BUF(1,I),12-1)
100	CONTINUE
C
	DO 200 I=6,24,2
	  CALL NMOVBYT(JUL2,3,W4BUF(1,I),7,2)
	  CALL NMOVBYT(SER2,2,W4BUF(1,I),9,3)
	  CALL ISBYTE(CDG2,W4BUF(1,I),12-1)
200	CONTINUE
C
	MAXBUF=-1
	DO 300 I=1,TOTMSG
	  IF(PER(I).GT.MAXBUF) MAXBUF=PER(I)
300	CONTINUE
C
	TER=LOTER
C
C ALTERNATE LOTTO, VAL1, VAL2
C
C **** SET CMDFRZ SO DISPAT DOESN'T START UNTIL WE ARE DONE QUEUEING ****
C
	P(CMDFRZ) = 1
C
	DO 400 K=1,MAXBUF
	DO 500 I=1,TOTMSG
C
	IF(K.GT.PER(I)) GOTO 500
16	CALL GETBUF(BUF)
	IF(BUF.LE.0) THEN
	  TYPE*,'BUFFER ALLOCATION ERROR ',I,K
	  CALL XWAIT(50,1,ST)
	  GOTO 16
	ENDIF
C
C
	HPRO(SIMLTR,BUF)=TER
	HPRO(SIMHTR,BUF)=TER
	HPRO(SIMMOD,BUF)=-999
	HPRO(TERNUM,BUF)=TER
	HPRO(INPLEN,BUF)=L(I)
	HPRO(TRCODE,BUF)=TYPREG
C
	DO 20 J=1,9
	  PRO(INPTAB+J-1,BUF)=W4BUF(J,I)
20	CONTINUE
	PRO(INPTAB+10 ,BUF)=0   !blank out the word in the buffer after bet
C
	I1TEMP(1) = ISHFT(TER,-8)
	I1TEMP(2) = IAND (TER,'FF'X)
C
C	BPRO(BINPTAB+3,BUF) = I1TEMP(1)
C	BPRO(BINPTAB+4,BUF) = I1TEMP(2)
C
	IF(DFLAG.EQ.1) THEN
	  TYPE *,'TYPE=',I,'    CNT=',K,'    PROBUF=',BUF
	  CALL PRTOUT(BUF)
	  TYPE *,' '
	  TYPE *,' '
	ENDIF
C
	CALL QUEINP(BUF,ST)
	TER=TER+1
	IF(TER.GT.NUMAGT)TER=1
500	CONTINUE
400	CONTINUE
C
	P(CMDFRZ) = 0
C
	CALL GSTOP(GEXIT_SUCCESS)
	END
