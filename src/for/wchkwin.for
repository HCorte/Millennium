C
C SUBROUTINE WCHKWIN
C
C V06 03-JUL-2000 UXN Refund too late played tickets.
C V05 14-JAN-1999 UXN GET_TEBEID ADDED.
C V04 18-JAN-1994 HXK ADDED LWIWPO UPDATING.
C V03 11-JAN-1994 HXK INITIALIZE NETAMT, TAXAMT, SET DETAILS, BANK NUMS
C V02 03-JAN-1994 HXK ADDED WINS, REFUNDS COUNTS AND AMOUNTS.
C V01 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C
C SUBROUTINE TO CHECK IF WINNERS TIP TICKET IS A WINNER
C AND UPDATE VALIDATION RECORDS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE WCHKWIN(TRABUF,V4BUF,WIN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
	INCLUDE 'INCLIB:WINCOM.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
	INCLUDE 'INCLIB:VALFIL.DEF'
	INCLUDE 'INCLIB:VDETAIL.DEF'
C
	INTEGER*4 WINTAB(2,TWWBMAX)
	INTEGER*4 WIN, ST, GIND, AMTWON, TOTWON
	INTEGER*4 I, PRZIND, TAXAMT, NETAMT
        INTEGER*4 NAMT, TAMT
	LOGICAL CXLED, PRVFLG, HLDFLG
        INTEGER*4 AWNTAB(2,NUMAGT)
        COMMON/BIGWIN/ AWNTAB
	LOGICAL*4   LATEFLG
C
C
	WIN=0
	TOTWON=0
        NETAMT=0
        TAXAMT=0
	PRVFLG = .FALSE.
	CXLED  = .FALSE.
	HLDFLG = .FALSE.
	ST=TRABUF(TSTAT)
	GIND=TRABUF(TGAMIND)
	IF(LWIDRW(GIND).LT.0) RETURN
	IF(ST.NE.GOOD.AND.ST.NE.VOID.AND.
     *	   ST.NE.INCA.AND.ST.NE.EXCH) RETURN
	IF(TRABUF(TWBEG).GT.LWIDRW(GIND)) RETURN
	IF(TRABUF(TWEND).LT.LWIDRW(GIND)) RETURN
	IF(TRABUF(TSTAT).EQ.VOID.OR.TRABUF(TSTAT).EQ.INCA) CXLED=.TRUE.
C
C CHECK FOR CANCELLED GAME/ROW
C
	LATEFLG = .FALSE.
	IF(WREFUND(GIND)) THEN
	  IF(.NOT.CXLED) THEN
	       LATEFLG = LWILAT(LATCDC,GIND).GT.0.AND.
     *                   (LWILAT(LATCDC,GIND).LT.TRABUF(TCDC).OR.
     *                    (LWILAT(LATCDC,GIND).EQ.TRABUF(TCDC).AND.
     *                     LWILAT(LATTIM,GIND).LT.TRABUF(TTIM)))
               CALL GETREF(TRABUF,WINTAB,WIN,LATEFLG)
	  ENDIF
	ENDIF

	IF(LWISTS(GIND).GE.GAMENV .AND. .NOT.LATEFLG) THEN
           CALL WWINLOS(TRABUF,WINTAB,WIN)
	ENDIF
C
C UPDATE VALIDATION RECORD
C
	IF(WIN.EQ.0) RETURN
	IF(V4BUF(VFSSER).NE.0) THEN
	  CALL LOGVAL(VALREC,V4BUF)
	  CALL DLOGVAL(VALREC,VDETAIL)
	ELSE
	  CALL FASTSET(0,VALREC,VALLEN)
	  CALL FASTSET(0,VDETAIL,VPLEN*VMAX)
	ENDIF
C
C
	DO 1000 I=1,WIN
	AMTWON=WINTAB(1,I)
	IF(WINTAB(2,I).NE.0) THEN
	  LWIREF(GIND)=LWIREF(GIND)+AMTWON
          IF(WINTAB(1,I).EQ.0) THEN  !REFUNDS ONLY
             LWIWRO(1,PRWON,GIND)=LWIWRO(1,PRWON,GIND) + 1
             LWIWRO(2,PRWON,GIND)=LWIWRO(2,PRWON,GIND) + AMTWON
          ENDIF
          LWIWRA(1,PRWON,GIND)=LWIWRA(1,PRWON,GIND) + 1
          LWIWRA(2,PRWON,GIND)=LWIWRA(2,PRWON,GIND) + AMTWON
	  LWIWON(GIND)=LWIWON(GIND)+AMTWON
          LWIWPR(1,PRWON,GIND)=LWIWPR(1,PRWON,GIND) + 1
          LWIWPR(2,PRWON,GIND)=LWIWPR(2,PRWON,GIND) + AMTWON
	ENDIF
C
C
	VALREC(VPZOFF)=VALREC(VPZOFF)+1
	PRZIND=VALREC(VPZOFF)
	IF(PRZIND.GT.VMAX) THEN
	  TYPE*,IAM(),' Prize table overflow ',TRABUF(TCDC),TRABUF(TSER)
	  CALL GPAUSE
	  HLDFLG = .TRUE.
	  VALREC(VPZOFF)=VMAX
	  GOTO 20
	ENDIF
C
C
	VDETAIL(VKIK,PRZIND)=0
        VDETAIL(VKI2,PRZIND)=0
        VDETAIL(VPRG,PRZIND)=0
	VDETAIL(VREF,PRZIND)=0
	VDETAIL(VBDR,PRZIND)=0
	VDETAIL(VDIV,PRZIND)=0
	VDETAIL(VUPD,PRZIND)=1
	VDETAIL(VSHR,PRZIND)=AMTWON
	IF(WINTAB(2,I).NE.0) VDETAIL(VREF,PRZIND)=1
	VDETAIL(VDRW,PRZIND)=LWIDRW(GIND)
20	CONTINUE
	IF(WINTAB(2,I).NE.0) THEN
	  VALREC(VRAMT)=VALREC(VRAMT)+AMTWON
	ELSE
	  TOTWON=TOTWON+AMTWON
	ENDIF
1000	CONTINUE
C
C UPDATE VALIDATION HEADER IF NEW WINNER
C
	IF(VALREC(VSTAT).EQ.VNOWIN) THEN
	  VALREC(VSCDC)=TRABUF(TCDC)
	  VALREC(VSTER)=TRABUF(TTER)
	  VALREC(VSSER)=TRABUF(TSER)
	  VALREC(VEXP )=TRABUF(TWEND)
	  VALREC(VKEXP)=TRABUF(TWKEND)
	  VALREC(VGAM )=TRABUF(TGAM)
	  VALREC(VKGME)=TRABUF(TWKGME)
	  VALREC(VGTYP)=TRABUF(TGAMTYP)
	  VALREC(VGIND)=TRABUF(TGAMIND)
          VALREC(VFRAC)=TRABUF(TFRAC)
          VALREC(VBNKID)=TRABUF(TWBNKID)
          VALREC(VBNKNUM)=TRABUF(TWBNKNM)
	ENDIF
C
C GET TAXES AND SET PRIV PAY FLAG
C AND UPDATE BIG WINNER COMMISSION TABLE
C
        IF(.NOT.CXLED.AND.TOTWON.NE.0) THEN
          LWIWON(GIND)=LWIWON(GIND)+TOTWON
          IF(TOTWON.GT.LWIHST(GIND)) LWIHST(GIND)=TOTWON
          DO 2000 I = 1,WIN
             AMTWON = WINTAB(1,I)
             IF(WINTAB(2,I).EQ.0) THEN
                LWIWPR(1,PRWON,GIND) = LWIWPR(1,PRWON,GIND) + 1
                LWIWPR(2,PRWON,GIND) = LWIWPR(2,PRWON,GIND) + AMTWON
                LWIWPO(1,PRWON,GIND) = LWIWPO(1,PRWON,GIND) + 1
                LWIWPO(2,PRWON,GIND) = LWIWPO(2,PRWON,GIND) + AMTWON
                CALL GETTAX(AMTWON,TAMT,NAMT)
                NETAMT = NETAMT + NAMT
                TAXAMT = TAXAMT + TAMT
             ENDIF
2000      CONTINUE
          IF(NETAMT.GT.REDMAX(TRABUF(TGAM))) PRVFLG=.TRUE.
          LWITAX(GIND)=LWITAX(GIND)+TAXAMT
          IF(HVCLVL.NE.0) THEN
            IF(NETAMT.GE.HVCLVL) THEN
              AWNTAB(1,TRABUF(TTER))=AWNTAB(1,TRABUF(TTER))+1
              AWNTAB(2,TRABUF(TTER))=AWNTAB(2,TRABUF(TTER))+NETAMT
            ENDIF
          ENDIF
          VALREC(VPAMT)=VALREC(VPAMT)+NETAMT
          VALREC(VTAMT)=VALREC(VTAMT)+TAXAMT
        ENDIF
C
	VALREC(VWCDC) = DAYCDC
	VALREC(VSTAT) = VUNCSH
	IF(PRVFLG) VALREC(VSTAT) = VPRPAY
	IF(HLDFLG) VALREC(VSTAT) = VHOLD
	IF(TRABUF(TSTAT).EQ.VOID) VALREC(VSTAT) = VCXL
	IF(TRABUF(TSTAT).EQ.INCA) VALREC(VSTAT) = VDEL
	CALL DVALLOG(VALREC,VDETAIL)
	CALL VALLOG (VALREC,V4BUF  )
	RETURN
	END
