C SUBROUTINE LOGGAM
C
C LOGGAM.FOR
C
C V47 08-DEC-2010 HXK TOTOLOTO DRAW COUNTER (CCC)
C V46 19-NOV-2010 MAC LUCKY NUMBER
C                 FJG JACKPOT POST GAME
C V45 13-DEC-2000 UXN TOTOBOLA & TOTOGOLO cleaned up.
C V44 28-NOV-2000 JHR Added results game type.
C V43 30-JUN-2000 UXN Refund for too late played oddset games added.
C V42 11-MAY-2000 OXK *SPL added to TLTO and TKIK (for promotion money)
C V41 25-APR-2000 UXN LKKPOL stored in I8
C V40 25-FEB-2000 OXK LSPRUL, LSPRDV, LSPFIX, LSPROD added.
C V39 03-FEB-2000 RXK BINGO subphases added.
C V38 16-JAN-2000 OXK %SPEVN added (Vakio changes)
C V37 13-OCT-1999 RXK World Tour added.
C V36 20-JUL-1999 PXO Changed DSPFAC to DSPPRP, DSPCUT to DSPPRN,
C                     LSPFAC to LSPPRP and LSPCUT to LSPPRN
C V35 07-JUL-1999 PXO Changed DLTFAC to DLTPRP, DLTCUT to DLTPRN,
C                     LLTFAC to LLTPRP and LLTCUT to LLTPRN
C V34 28-MAY-1999 UXN DTRCMB added. DTRHLD, DTRWIN restructured.
C V33 13-MAY-1999 UXN Super Triple added. Also DDBCMB and DCPCMB added.
C V32 23-DEC-1997 RXK Super Score and Today's Triple added.
C V31 27-NOV-1997 UXN CHANGES FOR PITKA. (ROWTYP field added)
C V30 17-NOV-1997 UXN EXTRA DRAW FOR LOTTO ADDED.   
C V29 17-APR-1996 HXK Release of Finland for X.25, Telephone Betting, 
C                     Instant Pass Thru Phase 1
C V28 28-NOV-1995 HXK Batch of changes for Double/Couple release
C V27 23-NOV-1995 PXB Added event status for couple game
C V26 10-NOV-1995 HXK Further changes for Double, Couple
C V25 07-NOV-1995 HXK Changes for Double, Couple install
C V24 06-NOV-1995 PXB Super double and Todays Couple added.
C V23 17-JUL-1995 HXK Various bug fixes, etc. for Ravi batch
C V22 29-MAY-1995 HXK Popularity list: i) with QP; ii) without QP;
C                     also addition of prognosis maych 4 capability.
C V21 24-APR-1995 HXK Merge of V5 development with March 10th 1995 bible
C V20 18-FEB-1995 HXK Changes for V5 game
C V19 23-OCT-1994 HXK Added DBNPMT, redimensioned other Bingo variables.
C V18 17-OCT-1994 HXK Adjusted DBNMAT,LBNMAT fields
C V17 16-OCT-1994 HXK Added new fields for Winsel, fixed tstgam bugs
C V16 06-OCT-1994 HXK Added subgames to divisions
C V15 02-OCT-1994 HXK Added Bingo
C V14 27-FEB-1994 HXK ADDED WTOP FOR TTSL.
C V13 18-DEC-1993 HXK ADDED FIELDS FOR COUNTS AND AMOUNTS FOR PRIZES/REFUNDS 
C                     WON AND PAID.
C V12 18-OCT-1993 GXA Expanded DTSSBD for Toto Select.
C V11 24-SEP-1993 GXA Expanded DTSWBD, DTSRBD, DTSPBD to hold counts and amount.
C V10 06-SEP-1993 GXA Increased TV-names to be for all rows (Toto Select).
C V09 11-AUG-1993 GXA Added Ballance table by draw to Lotto,Sports,Spede,
C                     Kicker and Ravi.
C V08 17-JUN-1993 GXA Updated Sports, Lotto, Kicker and the Oddset games.
C V07 09-JUN-1993 HXK added Ravi game (V65)
C V06 04-JUN-1993 HXK Added MultiDraw Selected (MDS) table.
C                     (DPPMDS, LPPMDS)
C V05 10-MAY-1993 HXK Added Spede gametype. (TPPP)
C V04 21-JAN-1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V03 02-SEP-1992 GCAN ADDED TOTO SELECT EVETN DATE.
C V02 07-OCT-1991 MTK  INITAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX  RELEASED FOR VAX
C
C SUBROUTINE TO CONVERT GAME DISK RECORD TO LOGICAL FORMAT
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW/EXT
        SUBROUTINE LOGGAM(GTYP,GIND,DSKREC,GAMREC)
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
C
        INCLUDE 'INCLIB:LLTREC.DEF'
        INCLUDE 'INCLIB:DLTREC.DEF'
C
        INCLUDE 'INCLIB:LSPREC.DEF'
        INCLUDE 'INCLIB:DSPREC.DEF'
C
        INCLUDE 'INCLIB:LKKREC.DEF'
        INCLUDE 'INCLIB:DKKREC.DEF'
C
        INCLUDE 'INCLIB:LNBREC.DEF'
        INCLUDE 'INCLIB:DNBREC.DEF'
C
        INCLUDE 'INCLIB:LSCREC.DEF'
        INCLUDE 'INCLIB:DSCREC.DEF'
C
        INCLUDE 'INCLIB:LWIREC.DEF'
        INCLUDE 'INCLIB:DWIREC.DEF'
C
        INCLUDE 'INCLIB:LTSREC.DEF'
        INCLUDE 'INCLIB:DTSREC.DEF'
C
        INCLUDE 'INCLIB:LBNREC.DEF'
        INCLUDE 'INCLIB:DBNREC.DEF'
C
        INCLUDE 'INCLIB:LDBREC.DEF'
        INCLUDE 'INCLIB:DDBREC.DEF'
C
        INCLUDE 'INCLIB:LCPREC.DEF'
        INCLUDE 'INCLIB:DCPREC.DEF'
C
        INCLUDE 'INCLIB:LTRREC.DEF'
        INCLUDE 'INCLIB:DTRREC.DEF'
C
        INCLUDE 'INCLIB:LSSREC.DEF'
        INCLUDE 'INCLIB:DSSREC.DEF'
C
        INCLUDE 'INCLIB:LSTREC.DEF'
        INCLUDE 'INCLIB:DSTREC.DEF'
C
        INCLUDE 'INCLIB:LTGREC.DEF'
        INCLUDE 'INCLIB:DTGREC.DEF'
C
        INTEGER*4 DSKREC(*),GAMREC(*), GIND, GTYP
        EQUIVALENCE (LLTREC,LSPREC,LKKREC,LNBREC,LSCREC,LWIREC,LTSREC,
     *               LBNREC,LDBREC,LCPREC,LTRREC,LSSREC,
     *               LSTREC,LTGREC)
        EQUIVALENCE (DLTREC,DSPREC,DKKREC,DNBREC,DSCREC,DWIREC,DTSREC,
     *               DBNREC,DDBREC,DCPREC,DTRREC,DSSREC,
     *               DSTREC,DTGREC)
C
C
        IF(GIND.LT.1) RETURN
        IF(GTYP.EQ.TLTO) GOTO  1000
        IF(GTYP.EQ.TSPT) GOTO  2000
        IF(GTYP.EQ.TKIK) GOTO  3000
        IF(GTYP.EQ.TNBR) GOTO  4000
        IF(GTYP.EQ.TTSL) GOTO  5000
        IF(GTYP.EQ.TWIT) GOTO  6000
        IF(GTYP.EQ.TSCR) GOTO  7000
        IF(GTYP.EQ.TBNG) GOTO 10000
        IF(GTYP.EQ.TDBL) GOTO 11000
        IF(GTYP.EQ.TCPL) GOTO 12000
        IF(GTYP.EQ.TTRP) GOTO 13000
        IF(GTYP.EQ.TSSC) GOTO 14000
        IF(GTYP.EQ.TSTR) GOTO 15000
        IF(GTYP.EQ.TTGL) GOTO 16000
        RETURN
C
C CONVERT LOTTO GAME RECORD
C
1000    CONTINUE
        IF(GIND.GT.NUMLTO) RETURN
        CALL FASTMOV(GAMREC,LLTREC,LLTRECLEN)
        CALL FASTMOV(DSKREC,DLTREC,DLTLEN)
        LLTSTS(GIND)=DLTSTS
        LLTCTM(GIND)=DLTCTM
        LLTTIM(GIND)=DLTTIM
        LLTDRW(GIND)=DLTDRW
        LLTBSD(GIND)=DLTBSD
        LLTESD(GIND)=DLTESD
        LLTPUP(GIND)=DLTPUP
        LLTUPD(GIND)=DLTUPD
        CALL FASTMOV(DLTDAT,LLTDAT(1,GIND),DATLEN)
        CALL FASTMOV(DLTADV,LLTADV(1,GIND),NUMADV)
        CALL FASTMOV(DLTSAL,LLTSAL(1,GIND),LTGENT)
        CALL FASTMOV(DLTSHV,LLTSHV(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTSHR,LLTSHR(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTPAD,LLTPAD(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTPRG,LLTPRG(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTANU,LLTANU(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTMSR,LLTMSR(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTPOL,LLTPOL(1,GIND),LTGDIV)
        CALL FASTMOV(DLTBRK,LLTBRK(1,GIND),LTGDIV)
        CALL FASTMOV(DLTFRZ,LLTFRZ(1,GIND),LTGDIV)
        CALL FASTMOV(DLTWIN,LLTWIN(1,1,GIND),LTGNBR*MAXBDR)
        CALL FASTMOV(DLTHLD,LLTHLD(1,1,GIND),LTGNBR*MAXBDR)
        CALL FASTMOV(DLTBNM,LLTBNM(1,1,GIND),LTGBON*MAXBDR)
        CALL FASTMOV(DLTBHL,LLTBHL(1,1,GIND),LTGBON*MAXBDR)
        LLTPRP(GIND)=DLTPRP
        LLTPRN(GIND)=DLTPRN
        LLTTAX(GIND)=DLTTAX
        CALL FASTMOV(DLTRES,LLTRES(1,GIND),2)
        LLTAPL(GIND)=DLTAPL
        LLTMIN(GIND)=DLTMIN
        LLTSER(GIND)=DLTSER
        LLTOPA(GIND)=DLTOPA
        LLTPRC(GIND)=DLTPRC
        LLTMAX(GIND)=DLTMAX
        LLTNUM(GIND)=DLTNUM
        LLTBFL(GIND)=DLTBFL
        LLTMLT(GIND)=DLTMLT
        LLTDIV(GIND)=DLTDIV
        CALL FASTMOV(DLTWTB,LLTWTB(1,1,1,GIND),LTGNBR*LTGBET*(LTGBON+1))
        CALL FASTMOV(DLTPER,LLTPER(1,GIND),LTGDIV)
        LLTSPR(GIND)=DLTSPR
        CALL FASTMOV(DLTTSR,LLTTSR(1,1,GIND),LTGDIV*2)
        LLTREV(GIND)=DLTREV
        LLTBDR(GIND)=DLTBDR
        LLTLST(GIND)=DLTLST
        CALL FASTMOV(DLTLSV,LLTLSV(1,1,GIND),LTGDIV*2)
        LLTADW(GIND)=DLTADW
        CALL FASTMOV(DLTLAN,LLTLAN(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTBET,LLTBET(1,GIND),LTGBET)
        CALL FASTMOV(DLTWED,LLTWED(1,GIND),2)
        LLTPAW(GIND)=DLTPAW
        CALL FASTMOV(DLTSTX,LLTSTX(1,1,GIND),LTGDIV*2)
        CALL FASTMOV(DLTASH,LLTASH(1,GIND),LTGDIV)
        CALL FASTMOV(DLTWRF,LLTWRF(1,GIND),10)
        LLTEST(GIND)=DLTEST     
        CALL MOVBYT(DLTMDS,1,LLTMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DLTBAL,LLTBAL(1,GIND),MAXDRW)
	LLTSPL(GIND)=DLTSPL
        CALL FASTMOV(DLTLNM,LLTLNM(1,GIND),MAXBDR)   !V46...
        CALL FASTMOV(DLTLHL,LLTLHL(1,GIND),MAXBDR)
        CALL FASTMOV(DLTLNC,LLTLNC(1,1,GIND),2*LTGDIV)
        LLTLFL(GIND)=DLTLFL
        LLTLDV(GIND)=DLTLDV                          !...V46
	LLTJPG(GIND)=DLTJPG                          !V46 FJG        
	LLTCCC(GIND)=DLTCCC                          !V47 HXK        

        CALL FASTMOV(LLTREC,GAMREC,LLTRECLEN)
        RETURN
C
C CONVERT SPORTS GAME RECORD
C
2000    CONTINUE
        IF(GIND.GT.NUMSPT) RETURN
        CALL FASTMOV(GAMREC,LSPREC,LSPRECLEN)
        CALL FASTMOV(DSKREC,DSPREC,DLTLEN)
        LSPSTS(GIND)=DSPSTS
        LSPCTM(GIND)=DSPCTM
        LSPTIM(GIND)=DSPTIM
        LSPDRW(GIND)=DSPDRW
        LSPBSD(GIND)=DSPBSD
        LSPESD(GIND)=DSPESD
        LSPPUP(GIND)=DSPPUP
        LSPUPD(GIND)=DSPUPD
        CALL FASTMOV(DSPDAT,LSPDAT(1,GIND),DATLEN)
        CALL FASTMOV(DSPADV,LSPADV(1,GIND),NUMADV)
        CALL FASTMOV(DSPSAL,LSPSAL(1,GIND),SPGENT)
        CALL FASTMOV(DSPSHV,LSPSHV(1,GIND),SPGDIV)
        CALL FASTMOV(DSPSHR,LSPSHR(1,GIND),SPGDIV)
        CALL FASTMOV(DSPPOL,LSPPOL(1,GIND),SPGDIV)
        CALL FASTMOV(DSPPAD,LSPPAD(1,GIND),SPGDIV)
        CALL FASTMOV(DSPPRG,LSPPRG(1,GIND),SPGDIV)
        CALL FASTMOV(DSPAFD,LSPAFD(1,GIND),SPGDIV)
        CALL FASTMOV(DSPCSP,LSPCSP(1,GIND),SPGDIV)
        CALL FASTMOV(DSPOSV,LSPOSV(1,GIND),SPGDIV)
        CALL FASTMOV(DSPOSH,LSPOSH(1,GIND),SPGDIV)
        CALL FASTMOV(DSPWIN,LSPWIN(1,GIND),SPGNBR)
        CALL FASTMOV(DSPHLD,LSPHLD(1,GIND),SPGNBR)
        LSPPRP(GIND)=DSPPRP
        LSPPRN(GIND)=DSPPRN
        LSPTAX(GIND)=DSPTAX
        CALL FASTMOV(DSPRES,LSPRES(1,GIND),2)
        LSPAPL(GIND)=DSPAPL
        LSPMIN(GIND)=DSPMIN
        LSPSER(GIND)=DSPSER
        LSPOPA(GIND)=DSPOPA
        LSPPRC(GIND)=DSPPRC
        LSPMAX(GIND)=DSPMAX
        LSPMLT(GIND)=DSPMLT
        LSPDIV(GIND)=DSPDIV
        CALL FASTMOV(DSPMAT,LSPMAT(1,GIND),SPGDIV)
        CALL FASTMOV(DSPPER,LSPPER(1,GIND),SPGDIV)
        LSPSPR(GIND)=DSPSPR
        CALL FASTMOV(DSPTSR,LSPTSR(1,GIND),SPGDIV)
        LSPREV(GIND)=DSPREV
        CALL FASTMOV(DSPNMS,LSPNMS(1,1,1,GIND),(SPNMS_LEN/4)*2*SPGNBR)
        CALL FASTMOV(DSPCLB,LSPCLB(1,GIND),25)
        CALL FASTMOV(DSPASH,LSPASH(1,GIND),SPGDIV)
        LSPFRG(GIND)=DSPFRG
        CALL FASTMOV(DSPWRF,LSPWRF(1,GIND),POSTED)
        LSPBST(GIND)=DSPBST
        CALL MOVBYT(DSPMDS,1,LSPMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DSPBAL,LSPBAL(1,GIND),MAXDRW)
	CALL FASTMOV(DSPEVN,LSPEVN(1,GIND),SPEVN_LEN/4)
        LSPEXT(GIND) = DSPEXT
        CALL FASTMOV(DSPRGT,LSPRGT(1,GIND),2)
	CALL FASTMOV(DSPROD,LSPROD(1,GIND),2)
        CALL FASTMOV(DSPECD,LSPECD(1,GIND),SPGNBR)
C
        LSPMCE(GIND) = DSPMCE
        LSPDCD(GIND) = DSPDCD
        LSPRWD(GIND) = DSPRWD
C
        CALL FASTMOV(LSPREC,GAMREC,LSPRECLEN)
        RETURN
C
C CONVERT KICKER GAME RECORD
C
3000    CONTINUE
        IF(GIND.GT.NUMKIK) RETURN
        CALL FASTMOV(GAMREC,LKKREC,LKKRECLEN)
        CALL FASTMOV(DSKREC,DKKREC,DKKRECLEN)
        LKKSTS(GIND)=DKKSTS
        LKKCTM(GIND)=DKKCTM
        LKKTIM(GIND)=DKKTIM
        LKKDRW(GIND)=DKKDRW
        LKKBSD(GIND)=DKKBSD
        LKKESD(GIND)=DKKESD
        LKKPUP(GIND)=DKKPUP
        LKKUPD(GIND)=DKKUPD
        CALL FASTMOV(DKKDAT,LKKDAT(1,GIND),DATLEN)
        CALL FASTMOV(DKKADV,LKKADV(1,GIND),NUMADV)
        CALL FASTMOV(DKKSAL,LKKSAL(1,1,GIND),KIGENT*MAXGAM)
        CALL FASTMOV(DKKSHR,LKKSHR(1,GIND),KIGDIV)
        CALL FASTMOV(DKKPAD,LKKPAD(1,GIND),KIGDIV)
        CALL FASTMOV(DKKPRG,LKKPRG(1,GIND),KIGDIV)
        CALL FASTMOV(DKKSHV,LKKSHV(1,GIND),KIGDIV)
        CALL FASTMOV(DKKPOL,LKKPOL(1,1,GIND),2*KIGDIV)
        CALL FASTMOV(DKKBRK,LKKBRK(1,GIND),KIGDIV)
        CALL FASTMOV(DKKFRZ,LKKFRZ(1,GIND),KIGDIV)
        LKKTAX(GIND)=DKKTAX
        CALL FASTMOV(DKKRES,LKKRES(1,GIND),2)
        LKKWIN(GIND)=DKKWIN
        LKKHLD(GIND)=DKKHLD
        LKKSER(GIND)=DKKSER
        LKKPRC(GIND)=DKKPRC
        LKKMAX(GIND)=DKKMAX
        LKKDIV(GIND)=DKKDIV
        LKKSPR(GIND)=DKKSPR
        CALL FASTMOV(DKKMAT,LKKMAT(1,1,GIND),KIGDIV*3)
        CALL FASTMOV(DKKPER,LKKPER(1,GIND),KIGDIV)
        CALL FASTMOV(DKKTSR,LKKTSR(1,GIND),KIGDIV)
        LKKREV(GIND)=DKKREV
        CALL FASTMOV(DKKSED,LKKSED(1,GIND),2)
        LKKOCT(GIND)=DKKOCT
        LKKMLT(GIND)=DKKMLT
        CALL FASTMOV(DKKWRF,LKKWRF(1,GIND),10)
        CALL FASTMOV(DKKASH,LKKASH(1,GIND),KIGDIV)
        LKKMIN(GIND)=DKKMIN
        LKKDFF(GIND)=DKKDFF
        CALL MOVBYT(DKKMDS,1,LKKMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DKKBAL,LKKBAL(1,GIND),MAXDRW)
	LKKSPL(GIND)=DKKSPL
        CALL FASTMOV(LKKREC,GAMREC,LKKRECLEN)
        RETURN
C
C CONVERT NUMBERS GAME RECORD
C
4000    CONTINUE
        IF(GIND.GT.NUMNBR) RETURN
        CALL FASTMOV(GAMREC,LNBREC,LNBRECLEN)
        CALL FASTMOV(DSKREC,DNBREC,DNBLEN)
        LNBSTS(GIND)=DNBSTS
        LNBCTM(GIND)=DNBCTM
        LNBTIM(GIND)=DNBTIM
        LNBDRW(GIND)=DNBDRW
        LNBBSD(GIND)=DNBBSD
        LNBESD(GIND)=DNBESD
        LNBPUP(GIND)=DNBPUP
        LNBUPD(GIND)=DNBUPD
        CALL FASTMOV(DNBDAT,LNBDAT(1,GIND),DATLEN)
        CALL FASTMOV(DNBADV,LNBADV(1,GIND),NUMADV)
        CALL FASTMOV(DNBSAL,LNBSAL(1,1,GIND),NUMTOT*NBGPOL)
        CALL FASTMOV(DNBASL,LNBASL(1,1,GIND),NUMTOT*NBGPOL)
        CALL FASTMOV(DNBWON,LNBWON(1,1,1,GIND),NUMTOT*NBGPOL*2)
        CALL FASTMOV(DNBPAD,LNBPAD(1,1,1,GIND),NUMTOT*NBGPOL*2)
        CALL FASTMOV(DNBPRG,LNBPRG(1,1,1,GIND),NUMTOT*NBGPOL*2)
        CALL FASTMOV(DNBPRZ,LNBPRZ(1,1,GIND),NBGPOL*2)
        CALL FASTMOV(DNBWIN,LNBWIN(1,1,GIND),NBGPOL*MAXBDR)
        CALL FASTMOV(DNBHLD,LNBHLD(1,GIND),MAXBDR)
        CALL FASTMOV(DNBLIM,LNBLIM(1,GIND),3)
        LNBSER(GIND)=DNBSER
        LNBMLT(GIND)=DNBMLT
        LNBOPT(GIND)=DNBOPT
        LNBTYP(GIND)=DNBTYP
        LNBPOL(GIND)=DNBPOL
        LNBRES(GIND)=DNBRES
        LNBAPL(GIND)=DNBAPL
        LNBBRK(GIND)=DNBBRK
        LNBROL(GIND)=DNBROL
        LNBREV(GIND)=DNBREV
        LNBMAX(GIND)=DNBMAX
        LNBPRC(GIND)=DNBPRC
        LNBPER(GIND)=DNBPER
        LNBBDR(GIND)=DNBBDR
        LNBTAX(GIND)=DNBTAX
        CALL FASTMOV(LNBREC,GAMREC,LNBRECLEN)
        RETURN
C
C CONVERT TOTO SELECT GAME RECORD
C
5000    CONTINUE
        IF(GIND.GT.NUMTSL) RETURN
        CALL FASTMOV(GAMREC,LTSREC,LTSRECLEN)
        CALL FASTMOV(DSKREC,DTSREC,DTSLEN)
        LTSSTS(GIND)=DTSSTS
        LTSWEK(GIND)=DTSWEK
        CALL FASTMOV(DTSDAT,LTSDAT(1,GIND),MAXSRW)
        LTSDRW(GIND)=DTSDRW
        LTSBSD(GIND)=DTSBSD
        LTSESD(GIND)=DTSESD
        LTSPUP(GIND)=DTSPUP
        LTSUPD(GIND)=DTSUPD
        CALL FASTMOV(DTSCTM,LTSCTM(1,GIND),MAXSRW)
        CALL FASTMOV(DTSTIM,LTSTIM(1,GIND),MAXSRW)
        LTSBRK(GIND)=DTSBRK
        LTSSAL(GIND)=DTSSAL
        LTSPAD(GIND)=DTSPAD
        LTSPRG(GIND)=DTSPRG
        LTSPRF(GIND)=DTSPRF
        LTSREF(GIND)=DTSREF
        LTSWON(GIND)=DTSWON
        CALL FASTMOV(DTSWBD,LTSWBD(1,1,GIND),TSLDIV*NUMTOT)
        CALL FASTMOV(DTSRBD,LTSRBD(1,1,GIND),TSLDIV*NUMTOT)
        CALL FASTMOV(DTSPBD,LTSPBD(1,1,GIND),TSLDIV*NUMTOT)
        CALL FASTMOV(DTSTBD,LTSTBD(1,GIND),TSLDIV)
        CALL FASTMOV(DTSSBD,LTSSBD(1,1,GIND),TSLDIV*NUMTOT)
        CALL FASTMOV(DTSODS,LTSODS(1,1,GIND),MAXSRW*3)
        CALL FASTMOV(DTSWIN,LTSWIN(1,GIND),MAXSRW)
        CALL FASTMOV(DTSHLD,LTSHLD(1,GIND),MAXSRW)
        LTSTAX(GIND)=DTSTAX
        CALL FASTMOV(DTSOTX,LTSOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DTSMID,LTSMID(1,GIND),NUMTOT)
        CALL FASTMOV(DTSUTX,LTSUTX(1,GIND),NUMTOT)
        LTSHST(GIND)=DTSHST
        CALL FASTMOV(DTSORM,LTSORM(1,GIND),NUMTOT)
        CALL FASTMOV(DTSNMS,LTSNMS(1,1,1,GIND),(TNMS_LEN/4)*2*MAXSRW)
        CALL FASTMOV(DTSSTA,LTSSTA(1,GIND),MAXSRW)
        LTSREV(GIND)=DTSREV
        CALL FASTMOV(DTSPFN,LTSPFN(1,GIND),5)
        CALL FASTMOV(DTSTOP,LTSTOP(1,1,GIND),2*30)
        LTSRWS(GIND)=DTSRWS
        LTSCMB(GIND)=DTSCMB
        LTSPRC(GIND)=DTSPRC
        LTSDTE(GIND)=DTSDTE
        CALL FASTMOV(DTSTVC,LTSTVC(1,1,GIND),(TTVC_LEN/4)*MAXSRW)
        CALL MOVBYT(DTSMDS,1,LTSMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DTSWTOP,LTSWTOP(1,1,GIND),2*100)
        CALL MOVBYT(DTSROWTYP,1,LTSROWTYP(1,GIND),1,MAXSRW)
        CALL FASTMOV(LTSREC,GAMREC,LTSRECLEN)
        RETURN
C
C CONVERT WINNERS TIP GAME RECORD
C
6000    CONTINUE
        IF(GIND.GT.NUMWIT) RETURN
        CALL FASTMOV(GAMREC,LWIREC,LWIRECLEN)
        CALL FASTMOV(DSKREC,DWIREC,DWILEN)
        LWISTS(GIND)=DWISTS
        LWIWEK(GIND)=DWIWEK
        LWIDAT(GIND)=DWIDAT
        LWIDRW(GIND)=DWIDRW
        LWIBSD(GIND)=DWIBSD
        LWIESD(GIND)=DWIESD
        LWIPUP(GIND)=DWIPUP
        LWIUPD(GIND)=DWIUPD
        LWICTM(GIND)=DWICTM
        LWITIM(GIND)=DWITIM
        LWISER(GIND)=DWISER
        LWISAL(GIND)=DWISAL
        LWIPAD(GIND)=DWIPAD
        LWIPRG(GIND)=DWIPRG
        LWIPRF(GIND)=DWIPRF
        LWIREF(GIND)=DWIREF
        LWIERF(GIND)=DWIERF
        LWITER(GIND)=DWITER
        LWIWON(GIND)=DWIWON
        CALL FASTMOV(DWIPOL,LWIPOL(1,GIND),2)
        LWITPL(GIND)=DWITPL
        LWITBK(GIND)=DWITBK
        CALL FASTMOV(DWIBRK,LWIBRK(1,GIND),2)
        LWIABW(GIND)=DWIABW
        CALL FASTMOV(DWIODS,LWIODS(1,GIND),4)
        CALL FASTMOV(DWIWIN,LWIWIN(1,GIND),4)
        CALL FASTMOV(DWIHLD,LWIHLD(1,GIND),4)
        LWITAX(GIND)=DWITAX
        CALL FASTMOV(DWIOTX,LWIOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DWIMID,LWIMID(1,GIND),NUMTOT)
        CALL FASTMOV(DWIUTX,LWIUTX(1,GIND),NUMTOT)
        LWIHST(GIND)=DWIHST
        CALL FASTMOV(DWIORM,LWIORM(1,GIND),NUMTOT)
        CALL FASTMOV(DWIENM,LWIENM(1,GIND),WENM_LEN/4)
        CALL FASTMOV(DWIDES,LWIDES(1,GIND),WDES_LEN/4)
        CALL FASTMOV(DWINMS,LWINMS(1,1,GIND),MAXWRW*(WNMS_LEN/4))
        CALL FASTMOV(DWISTA,LWISTA(1,GIND),MAXWRW)
        CALL FASTMOV(DWISBR,LWISBR(1,GIND),MAXWRW)
        LWIREV(GIND)=DWIREV
        CALL FASTMOV(DWIPFN,LWIPFN(1,GIND),5)
        CALL FASTMOV(DWIRTM,LWIRTM(1,GIND),MAXWRW)
        LWIPRC(GIND)=DWIPRC
        LWISPR(GIND)=DWISPR
        CALL FASTMOV(DWITVC,LWITVC(1,GIND),WTVC_LEN/4)
        CALL MOVBYT(DWIMDS,1,LWIMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DWIWRO,LWIWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DWIWRA,LWIWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DWIWPO,LWIWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DWIWPA,LWIWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DWIWPR,LWIWPR(1,1,GIND),NUMTOT*2)
	CALL FASTMOV(DWILAT,LWILAT(1,GIND),NUMLAT)
        CALL FASTMOV(LWIREC,GAMREC,LWIRECLEN)
        RETURN
C
C CONVERT SCORE GAME RECORD
C
7000    CONTINUE
        IF(GIND.GT.NUMSCR) RETURN
        CALL FASTMOV(GAMREC,LSCREC,LSCRECLEN)
        CALL FASTMOV(DSKREC,DSCREC,DSCLEN)
        LSCSTS(GIND)=DSCSTS
        LSCWEK(GIND)=DSCWEK
        LSCDAT(GIND)=DSCDAT
        LSCDRW(GIND)=DSCDRW
        LSCBSD(GIND)=DSCBSD
        LSCESD(GIND)=DSCESD
        LSCPUP(GIND)=DSCPUP
        LSCUPD(GIND)=DSCUPD
        LSCCTM(GIND)=DSCCTM
        LSCTIM(GIND)=DSCTIM
        LSCSER(GIND)=DSCSER
        LSCSAL(GIND)=DSCSAL
        LSCPAD(GIND)=DSCPAD
        LSCPRG(GIND)=DSCPRG
        LSCPRF(GIND)=DSCPRF
        LSCREF(GIND)=DSCREF
        LSCWON(GIND)=DSCWON
        CALL FASTMOV(DSCPOL,LSCPOL(1,GIND),2)
        LSCTPL(GIND)=DSCTPL
        LSCTBK(GIND)=DSCTBK
        CALL FASTMOV(DSCBRK,LSCBRK(1,GIND),2)
        LSCABW(GIND)=DSCABW
        LSCODS(GIND)=DSCODS
        CALL FASTMOV(DSCWIN,LSCWIN(1,GIND),2)
        CALL FASTMOV(DSCHLD,LSCHLD(1,GIND),2)
        LSCTAX(GIND)=DSCTAX
        CALL FASTMOV(DSCFUL,LSCFUL(1,1,GIND),NUMTOT*MAXFUL)
        CALL FASTMOV(DSCOTX,LSCOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DSCMID,LSCMID(1,GIND),NUMTOT)
        CALL FASTMOV(DSCUTX,LSCUTX(1,GIND),NUMTOT)
        LSCHST(GIND)=DSCHST
        CALL FASTMOV(DSCORM,LSCORM(1,GIND),NUMTOT)
        CALL FASTMOV(DSCNM1,LSCNM1(1,GIND),SNMS_LEN/4)
        CALL FASTMOV(DSCNM2,LSCNM2(1,GIND),SNMS_LEN/4)
        LSCREV(GIND)=DSCREV
        LSCTYP(GIND)=DSCTYP
        CALL FASTMOV(DSCPFN,LSCPFN(1,GIND),5)
        LSCPRC(GIND)=DSCPRC
        LSCSPR(GIND)=DSCSPR
        CALL FASTMOV(DSCDES,LSCDES(1,GIND),SDES_LEN/4)
        CALL FASTMOV(DSCTVC,LSCTVC(1,GIND),STVC_LEN/4)
        CALL MOVBYT(DSCMDS,1,LSCMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DSCWRO,LSCWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSCWRA,LSCWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSCWPO,LSCWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSCWPA,LSCWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSCWPR,LSCWPR(1,1,GIND),NUMTOT*2)
	CALL FASTMOV(DSCLAT,LSCLAT(1,GIND),NUMLAT)
        CALL FASTMOV(LSCREC,GAMREC,LSCRECLEN)
        RETURN
C
C CONVERT BINGO GAME RECORD
C
10000   CONTINUE
        IF(GIND.GT.NUMBGO) RETURN
        CALL FASTMOV(GAMREC,LBNREC,LBNRECLEN)
        CALL FASTMOV(DSKREC,DBNREC,DBNLEN)
        LBNSTS(GIND)=DBNSTS
        LBNCTM(GIND)=DBNCTM
        LBNTIM(GIND)=DBNTIM
        LBNDRW(GIND)=DBNDRW
        LBNBSD(GIND)=DBNBSD
        LBNESD(GIND)=DBNESD
        LBNPUP(GIND)=DBNPUP
        LBNUPD(GIND)=DBNUPD
        CALL FASTMOV(DBNDAT,LBNDAT(1,GIND),DATLEN)
        CALL FASTMOV(DBNADV,LBNADV(1,GIND),NUMADV)
        CALL FASTMOV(DBNSAL,LBNSAL(1,GIND),BGOENT)
        CALL FASTMOV(DBNSHV,LBNSHV(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNSHR,LBNSHR(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNPOL,LBNPOL(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNPAD,LBNPAD(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNPRG,LBNPRG(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNANU,LBNANU(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNBRK,LBNBRK(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNOSV,LBNOSV(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNFRZ,LBNFRZ(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNWIN,LBNWIN(1,GIND),BGONBR)
        CALL FASTMOV(DBNHLD,LBNHLD(1,GIND),BGONBR)
        CALL FASTMOV(DBNWAB,LBNWAB(1,GIND),BGONAB)
        CALL FASTMOV(DBNHAB,LBNHAB(1,GIND),BGONAB)
        CALL FASTMOV(DBNWLN,LBNWLN(1,GIND),BGONLN)
        CALL FASTMOV(DBNHLN,LBNHLN(1,GIND),BGONLN)
        LBNFAC(GIND)=DBNFAC
        LBNCUT(GIND)=DBNCUT
        LBNTAX(GIND)=DBNTAX
        CALL FASTMOV(DBNRES,LBNRES(1,GIND),2)
        LBNAPL(GIND)=DBNAPL
        LBNMIN(GIND)=DBNMIN
        LBNSER(GIND)=DBNSER
        LBNOPA(GIND)=DBNOPA
        LBNPRC(GIND)=DBNPRC
        LBNMAX(GIND)=DBNMAX
        LBNMLT(GIND)=DBNMLT
        CALL FASTMOV(DBNDIV,LBNDIV(1,GIND),BGOSUB)
        CALL FASTMOV(DBNMAT,LBNMAT(1,1,GIND),(BGOMAXMAP+2+BGOCOL*BGOROW)*BGOSUB)
        CALL FASTMOV(DBNPER,LBNPER(1,1,GIND),BGODIV*BGOSUB)
        LBNSPR(GIND)=DBNSPR
        CALL FASTMOV(DBNTSR,LBNTSR(1,1,GIND),BGODIV*BGOSUB)
        LBNREV(GIND)=DBNREV
        CALL FASTMOV(DBNASH,LBNASH(1,1,GIND),BGODIV*BGOSUB)
        LBNFRG(GIND)=DBNFRG
        CALL FASTMOV(DBNWRF,LBNWRF(1,GIND),POSTED)
        LBNBST(GIND)=DBNBST
        CALL MOVBYT(DBNMDS,1,LBNMDS(1,GIND),1,MAXMLTD_AVL)
        CALL FASTMOV(DBNBAL,LBNBAL(1,GIND),MAXDRW)
        LBNSED(GIND)=DBNSED
        LBNBAS(GIND)=DBNBAS
        CALL FASTMOV(DBNPHS,LBNPHS(1,GIND),BGOPHS)
        CALL FASTMOV(DBNPHSH,LBNPHSH(1,GIND),BGOPHS)
        CALL FASTMOV(DBN1ST,LBN1ST(1,GIND),BGO1ST)
        LBNWST(GIND)=DBNWST
        LBNWSTH(GIND)=DBNWSTH
        CALL FASTMOV(DBNMAP,LBNMAP(1,1,GIND),BGOMAXMAP*BGOSUB)
        CALL FASTMOV(DBNMPF,LBNMPF(1,1,GIND),BGOMAXMAP*BGOSUB)
        CALL FASTMOV(DBNAMP,LBNAMP(1,1,1,GIND),BGODIV*BGOMAXMAP*BGOSUB)
        CALL FASTMOV(DBNPMT,LBNPMT(1,1,GIND),3*BGOPHS)
        LBNLOB(GIND)=DBNLOB
        LBNWS2(GIND)=DBNWS2
        LBNWS2H(GIND)=DBNWS2H
        CALL FASTMOV(DBNNDF,LBNNDF(1,GIND),BGODIV)
        CALL FASTMOV(DBNNDFH,LBNNDFH(1,GIND),BGODIV)
        CALL FASTMOV(DBNFST,LBNFST(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNOTH,LBNOTH(1,1,GIND),BGODIV*BGOSUB)
        CALL FASTMOV(DBNDNR,LBNDNR(1,GIND),BGODIV)
        LBNNSP(GIND)=DBNNSP
        CALL FASTMOV(DBNSPH,LBNSPH(1,GIND),BGOSPH)
        CALL FASTMOV(DBNSPHH,LBNSPHH(1,GIND),BGOSPH)
        CALL FASTMOV(LBNREC,GAMREC,LBNRECLEN)
        RETURN

C---- Added by Paul Brannigan. - 25-Oct-1995.

C----
C---- CONVERT SUPER DOUBLE GAME RECORD
C----

11000   CONTINUE

        IF(GIND.GT.NUMDBL) RETURN
        CALL FASTMOV(GAMREC,LDBREC,LDBRECLEN)
        CALL FASTMOV(DSKREC,DDBREC,DDBLEN)
        LDBSTS(GIND)=DDBSTS
        LDBWEK(GIND)=DDBWEK
        LDBDAT(GIND)=DDBDAT
        LDBDRW(GIND)=DDBDRW
        LDBBSD(GIND)=DDBBSD
        LDBESD(GIND)=DDBESD
        LDBPUP(GIND)=DDBPUP
        LDBUPD(GIND)=DDBUPD
        LDBCTM(GIND)=DDBCTM
        LDBTIM(GIND)=DDBTIM
        LDBSER(GIND)=DDBSER
        CALL FASTMOV(DDBSAL,LDBSAL(1,GIND),NUMTOT)
        LDBPAD(GIND)=DDBPAD
        LDBPRG(GIND)=DDBPRG
        LDBPRF(GIND)=DDBPRF
        LDBREF(GIND)=DDBREF
        LDBERF(GIND)=DDBERF
        LDBTER(GIND)=DDBTER
        LDBWON(GIND)=DDBWON
        CALL FASTMOV(DDBPOL,LDBPOL(1,GIND),2)
        LDBTPL(GIND)=DDBTPL
        LDBTBK(GIND)=DDBTBK
        CALL FASTMOV(DDBBRK,LDBBRK(1,GIND),2)
        LDBABW(GIND)=DDBABW
        CALL FASTMOV(DDBODS,LDBODS(1,GIND),MAXDBLTI)
        CALL FASTMOV(DDBWIN,LDBWIN(1,1,GIND),2*MAXDBLTI)
        CALL FASTMOV(DDBHLD,LDBHLD(1,1,GIND),2*MAXDBLTI)
        LDBTAX(GIND)=DDBTAX
        CALL FASTMOV(DDBOTX,LDBOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DDBMID,LDBMID(1,GIND),NUMTOT)
        CALL FASTMOV(DDBUTX,LDBUTX(1,GIND),NUMTOT)
        CALL FASTMOV(DDBHST,LDBHST(1,GIND),MAXDBLTI)
        CALL FASTMOV(DDBORM,LDBORM(1,GIND),NUMTOT)
        CALL FASTMOV(DDBENM,LDBENM(1,GIND),DBLENM_LEN/4)
        CALL FASTMOV(DDBDES,LDBDES(1,GIND),DBLDES_LEN/4)
        CALL FASTMOV(DDBNMS,LDBNMS(1,1,GIND),MAXDBLRW*(DBLNMS_LEN/4))
        CALL FASTMOV(DDBSTA,LDBSTA(1,GIND),MAXDBLRW)
        CALL FASTMOV(DDBSBR,LDBSBR(1,GIND),MAXDBLRW)
        LDBREV(GIND)=DDBREV
        CALL FASTMOV(DDBPFN,LDBPFN(1,GIND),5)
        CALL FASTMOV(DDBRTM,LDBRTM(1,GIND),MAXDBLRW)
        LDBPRC(GIND)=DDBPRC
        LDBSPR(GIND)=DDBSPR
        CALL FASTMOV(DDBTVC,LDBTVC(1,GIND),DBLTVC_LEN/4)
        CALL MOVBYT(DDBMDS,1,LDBMDS(1,GIND),1,MAXMLTD_AVL)
        LDBRWS(GIND)=DDBRWS
        CALL FASTMOV(DDBWCP,LDBWCP(1,GIND),MAXDBLTI)
        CALL FASTMOV(DDBWBT,LDBWBT(1,1,GIND),NUMTOT*MAXDBLTI)
        CALL FASTMOV(DDBWRO,LDBWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DDBWRA,LDBWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DDBWPO,LDBWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DDBWPA,LDBWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DDBWPR,LDBWPR(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DDBODT,LDBODT(1,GIND),MAXDBLRW*MAXDBLRW)
        LDBPCC(GIND) = DDBPCC
        LDBCMB(GIND) = DDBCMB
	CALL FASTMOV(DDBLAT,LDBLAT(1,GIND),NUMLAT)
        CALL FASTMOV(DDBFRS,LDBFRS(1,GIND),94)
        CALL FASTMOV(LDBREC,GAMREC,LDBRECLEN)
        RETURN

C----
C---- CONVERT TODAY'S COUPLE GAME RECORD
C----

12000   CONTINUE

        IF(GIND.GT.NUMCPL) RETURN
        CALL FASTMOV(GAMREC,LCPREC,LCPRECLEN)
        CALL FASTMOV(DSKREC,DCPREC,DCPLEN)
        LCPSTS(GIND)=DCPSTS
        LCPWEK(GIND)=DCPWEK
        LCPDAT(GIND)=DCPDAT
        LCPDRW(GIND)=DCPDRW
        LCPBSD(GIND)=DCPBSD
        LCPESD(GIND)=DCPESD
        LCPPUP(GIND)=DCPPUP
        LCPUPD(GIND)=DCPUPD
        LCPCTM(GIND)=DCPCTM
        LCPTIM(GIND)=DCPTIM
        LCPSER(GIND)=DCPSER
        CALL FASTMOV(DCPSAL,LCPSAL(1,GIND),NUMTOT)
        LCPPAD(GIND)=DCPPAD
        LCPPRG(GIND)=DCPPRG
        LCPPRF(GIND)=DCPPRF
        LCPREF(GIND)=DCPREF
        LCPERF(GIND)=DCPERF
        LCPTER(GIND)=DCPTER
        LCPWON(GIND)=DCPWON
        CALL FASTMOV(DCPPOL,LCPPOL(1,GIND),2)
        LCPTPL(GIND)=DCPTPL
        LCPTBK(GIND)=DCPTBK
        CALL FASTMOV(DCPBRK,LCPBRK(1,GIND),2)
        LCPABW(GIND)=DCPABW
        CALL FASTMOV(DCPODS,LCPODS(1,GIND),MAXCPLTI)
        CALL FASTMOV(DCPWIN,LCPWIN(1,1,GIND),2*MAXCPLTI)
        CALL FASTMOV(DCPHLD,LCPHLD(1,1,GIND),2*MAXCPLTI)
        LCPTAX(GIND)=DCPTAX
        CALL FASTMOV(DCPOTX,LCPOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DCPMID,LCPMID(1,GIND),NUMTOT)
        CALL FASTMOV(DCPUTX,LCPUTX(1,GIND),NUMTOT)
        CALL FASTMOV(DCPHST,LCPHST(1,GIND),MAXCPLTI)
        CALL FASTMOV(DCPORM,LCPORM(1,GIND),NUMTOT)
        CALL FASTMOV(DCPENM,LCPENM(1,1,GIND),2*(CPLENM_LEN/4))
        CALL FASTMOV(DCPDES,LCPDES(1,1,GIND),2*(CPLDES_LEN/4))
        CALL FASTMOV(DCPNMS,LCPNMS(1,1,GIND),MAXCPLRW*(CPLNMS_LEN/4))
        CALL FASTMOV(DCPSTA,LCPSTA(1,GIND),MAXCPLRW)
        CALL FASTMOV(DCPEST,LCPEST(1,GIND),2)
        CALL FASTMOV(DCPEVD,LCPEVD(1,GIND),2)
        CALL FASTMOV(DCPEVT,LCPEVT(1,GIND),2)
        CALL FASTMOV(DCPSBR,LCPSBR(1,GIND),MAXCPLRW)
        LCPREV(GIND)=DCPREV
        CALL FASTMOV(DCPPFN,LCPPFN(1,GIND),5)
        CALL FASTMOV(DCPRTM,LCPRTM(1,GIND),MAXCPLRW)
        LCPPRC(GIND)=DCPPRC
        LCPSPR(GIND)=DCPSPR
        CALL FASTMOV(DCPTVC,LCPTVC(1,GIND),CPLTVC_LEN/4)
        CALL MOVBYT(DCPMDS,1,LCPMDS(1,GIND),1,MAXMLTD_AVL)
        LCPRWS(GIND)=DCPRWS
        CALL FASTMOV(DCPWCP,LCPWCP(1,GIND),MAXCPLTI)
        CALL FASTMOV(DCPWBT,LCPWBT(1,1,GIND),NUMTOT*MAXCPLTI)
        CALL FASTMOV(DCPWRO,LCPWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DCPWRA,LCPWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DCPWPO,LCPWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DCPWPA,LCPWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DCPWPR,LCPWPR(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DCPODT,LCPODT(1,GIND),MAXCPLRW/2*MAXCPLRW/2)
	LCPCMB(GIND)=DCPCMB
	CALL FASTMOV(DCPLAT,LCPLAT(1,GIND),NUMLAT)
        CALL FASTMOV(DCPFRS,LCPFRS(1,GIND),95)
        CALL FASTMOV(LCPREC,GAMREC,LCPRECLEN)
        RETURN
C----
C---- CONVERT TODAY'S TRIO GAME RECORD
C----

13000   CONTINUE

        IF(GIND.GT.NUMTRP) RETURN
        CALL FASTMOV(GAMREC,LTRREC,LTRRECLEN)
        CALL FASTMOV(DSKREC,DTRREC,DTRLEN)
        LTRSTS(GIND)=DTRSTS
        LTRWEK(GIND)=DTRWEK
        LTRDAT(GIND)=DTRDAT
        LTRDRW(GIND)=DTRDRW
        LTRBSD(GIND)=DTRBSD
        LTRESD(GIND)=DTRESD
        LTRPUP(GIND)=DTRPUP
        LTRUPD(GIND)=DTRUPD
        LTRCTM(GIND)=DTRCTM
        LTRTIM(GIND)=DTRTIM
        LTRSER(GIND)=DTRSER
        CALL FASTMOV(DTRSAL,LTRSAL(1,GIND),NUMTOT)
        LTRPAD(GIND)=DTRPAD
        LTRPRG(GIND)=DTRPRG
        LTRPRF(GIND)=DTRPRF
        LTRREF(GIND)=DTRREF
        LTRERF(GIND)=DTRERF
        LTRTER(GIND)=DTRTER
        LTRWON(GIND)=DTRWON
        CALL FASTMOV(DTRPOL,LTRPOL(1,GIND),2)
        LTRTPL(GIND)=DTRTPL
        LTRTBK(GIND)=DTRTBK
        CALL FASTMOV(DTRBRK,LTRBRK(1,GIND),2)
        LTRABW(GIND)=DTRABW
        CALL FASTMOV(DTRODS,LTRODS(1,GIND),MAXTRPTI)
        CALL FASTMOV(DTRWIN,LTRWIN(1,1,GIND),3*MAXTRPTI)
        CALL FASTMOV(DTRHLD,LTRHLD(1,1,GIND),3*MAXTRPTI)
        LTRTAX(GIND)=DTRTAX
        CALL FASTMOV(DTROTX,LTROTX(1,GIND),NUMTOT)
        CALL FASTMOV(DTRMID,LTRMID(1,GIND),NUMTOT)
        CALL FASTMOV(DTRUTX,LTRUTX(1,GIND),NUMTOT)
        CALL FASTMOV(DTRHST,LTRHST(1,GIND),MAXTRPTI)
        CALL FASTMOV(DTRORM,LTRORM(1,GIND),NUMTOT)
        CALL FASTMOV(DTRMNM,LTRMNM(1,GIND),TRPENM_LEN/4)
        CALL FASTMOV(DTRENM,LTRENM(1,1,GIND),3*(TRPENM_LEN/4))
        CALL FASTMOV(DTRDES,LTRDES(1,1,GIND),3*(TRPDES_LEN/4))
        CALL FASTMOV(DTRNMS,LTRNMS(1,1,1,GIND),3*MAXTRPRW*(TRPNMS_LEN/4))
        CALL FASTMOV(DTRSTA,LTRSTA(1,1,GIND),3*MAXTRPRW)
        CALL FASTMOV(DTREST,LTREST(1,GIND),3)
        CALL FASTMOV(DTREVD,LTREVD(1,GIND),3)
        CALL FASTMOV(DTREVT,LTREVT(1,GIND),3)
        CALL FASTMOV(DTRSBR,LTRSBR(1,1,GIND),3*MAXTRPRW)
        LTRREV(GIND)=DTRREV
        CALL FASTMOV(DTRPFN,LTRPFN(1,GIND),5)
        LTRPRC(GIND)=DTRPRC
        LTRSPR(GIND)=DTRSPR
        CALL FASTMOV(DTRRWS,LTRRWS(1,GIND),3)
        CALL FASTMOV(DTRWCP,LTRWCP(1,GIND),MAXTRPTI)
        CALL FASTMOV(DTRWBT,LTRWBT(1,1,GIND),NUMTOT*MAXTRPTI)
        CALL FASTMOV(DTRWRO,LTRWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DTRWRA,LTRWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DTRWPO,LTRWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DTRWPA,LTRWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DTRWPR,LTRWPR(1,1,GIND),NUMTOT*2)
        LTRCMB(GIND)=DTRCMB
	CALL FASTMOV(DTRLAT,LTRLAT(1,GIND),NUMLAT)
        CALL FASTMOV(LTRREC,GAMREC,LTRRECLEN)
        RETURN
C
C CONVERT SUPERSCORE GAME RECORD
C
14000   CONTINUE

        IF(GIND.GT.NUMSSC) RETURN
        CALL FASTMOV(GAMREC,LSSREC,LSSRECLEN)
        CALL FASTMOV(DSKREC,DSSREC,DSSLEN)
        LSSSTS(GIND)=DSSSTS
        LSSWEK(GIND)=DSSWEK
        LSSDAT(GIND)=DSSDAT
        LSSDRW(GIND)=DSSDRW
        LSSBSD(GIND)=DSSBSD
        LSSESD(GIND)=DSSESD
        LSSPUP(GIND)=DSSPUP
        LSSUPD(GIND)=DSSUPD
        LSSCTM(GIND)=DSSCTM
        LSSTIM(GIND)=DSSTIM
        LSSSER(GIND)=DSSSER
        LSSSAL(GIND)=DSSSAL
        LSSPAD(GIND)=DSSPAD
        LSSPRG(GIND)=DSSPRG
        LSSPRF(GIND)=DSSPRF
        LSSREF(GIND)=DSSREF
        LSSWON(GIND)=DSSWON
        CALL FASTMOV(DSSPOL,LSSPOL(1,GIND),2)
        LSSTPL(GIND)=DSSTPL
        LSSTBK(GIND)=DSSTBK
        CALL FASTMOV(DSSBRK,LSSBRK(1,GIND),2)
        LSSABW(GIND)=DSSABW
        LSSODS(GIND)=DSSODS
        CALL FASTMOV(DSSWIN(1,1),LSSWIN(1,1,GIND),6)
        CALL FASTMOV(DSSHLD(1,1),LSSHLD(1,1,GIND),6)
        LSSTAX(GIND)=DSSTAX
        CALL FASTMOV(DSSOTX,LSSOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DSSMID,LSSMID(1,GIND),NUMTOT)
        CALL FASTMOV(DSSUTX,LSSUTX(1,GIND),NUMTOT)
        LSSHST(GIND)=DSSHST
        CALL FASTMOV(DSSORM,LSSORM(1,GIND),NUMTOT)
        CALL FASTMOV(DSSMNM,LSSMNM(1,GIND),SSNMS_LEN/4)
        CALL FASTMOV(DSSDES,LSSDES(1,GIND),SSDES_LEN/4)
        CALL FASTMOV(DSSSNM,LSSSNM(1,1,GIND),SSNMS_LEN/4*3)
        CALL FASTMOV(DSSEST,LSSEST(1,GIND),3)
        LSSREV(GIND)=DSSREV
        LSSTYP(GIND)=DSSTYP
        CALL FASTMOV(DSSPFN,LSSPFN(1,GIND),5)
        CALL FASTMOV(DSSPOF,LSSPOF(1,GIND),5)
        LSSPRC(GIND)=DSSPRC
        LSSSPR(GIND)=DSSSPR
        CALL FASTMOV(DSSWRO,LSSWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSSWRA,LSSWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSSWPO,LSSWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSSWPA,LSSWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSSWPR,LSSWPR(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSSECD,LSSECD(1,GIND),3)
        CALL FASTMOV(DSSECT,LSSECT(1,GIND),3)
	CALL FASTMOV(DSSLAT,LSSLAT(1,GIND),NUMLAT)
        CALL FASTMOV(LSSREC,GAMREC,LSSRECLEN)
        RETURN
C
C   CONVERT SUPER TRIPLE GAME RECORD
C

15000   CONTINUE

        IF(GIND.GT.NUMSTR) RETURN
        CALL FASTMOV(GAMREC,LSTREC,LSTRECLEN)
        CALL FASTMOV(DSKREC,DSTREC,DSTLEN)
        LSTSTS(GIND)=DSTSTS
        LSTWEK(GIND)=DSTWEK
        LSTDAT(GIND)=DSTDAT
        LSTDRW(GIND)=DSTDRW
        LSTBSD(GIND)=DSTBSD
        LSTESD(GIND)=DSTESD
        LSTPUP(GIND)=DSTPUP
        LSTUPD(GIND)=DSTUPD
        LSTCTM(GIND)=DSTCTM
        LSTTIM(GIND)=DSTTIM
        LSTSER(GIND)=DSTSER
        CALL FASTMOV(DSTSAL,LSTSAL(1,GIND),NUMTOT)
        LSTPAD(GIND)=DSTPAD
        LSTPRG(GIND)=DSTPRG
        LSTPRF(GIND)=DSTPRF
        LSTREF(GIND)=DSTREF
        LSTERF(GIND)=DSTERF
        LSTTER(GIND)=DSTTER
        LSTWON(GIND)=DSTWON
        CALL FASTMOV(DSTPOL,LSTPOL(1,GIND),2)
        LSTTPL(GIND)=DSTTPL
        LSTTBK(GIND)=DSTTBK
        CALL FASTMOV(DSTBRK,LSTBRK(1,GIND),2)
        LSTABW(GIND)=DSTABW
        CALL FASTMOV(DSTODS,LSTODS(1,GIND),MAXSTRTI)
        CALL FASTMOV(DSTWIN,LSTWIN(1,1,GIND),3*MAXSTRTI)
        CALL FASTMOV(DSTHLD,LSTHLD(1,1,GIND),3*MAXSTRTI)
        LSTTAX(GIND)=DSTTAX
        CALL FASTMOV(DSTOTX,LSTOTX(1,GIND),NUMTOT)
        CALL FASTMOV(DSTMID,LSTMID(1,GIND),NUMTOT)
        CALL FASTMOV(DSTUTX,LSTUTX(1,GIND),NUMTOT)
        CALL FASTMOV(DSTHST,LSTHST(1,GIND),MAXSTRTI)
        CALL FASTMOV(DSTORM,LSTORM(1,GIND),NUMTOT)
        CALL FASTMOV(DSTENM,LSTENM(1,GIND),STRENM_LEN/4)
        CALL FASTMOV(DSTDES,LSTDES(1,GIND),STRDES_LEN/4)
        CALL FASTMOV(DSTNMS,LSTNMS(1,1,GIND),MAXSTRRW*(STRNMS_LEN/4))
        CALL FASTMOV(DSTSTA,LSTSTA(1,GIND),MAXSTRRW)
        CALL FASTMOV(DSTSBR,LSTSBR(1,GIND),MAXSTRRW)
        LSTREV(GIND)=DSTREV
        CALL FASTMOV(DSTPFN,LSTPFN(1,GIND),5)
        CALL FASTMOV(DSTRTM,LSTRTM(1,GIND),MAXSTRRW)
        LSTPRC(GIND)=DSTPRC
        LSTSPR(GIND)=DSTSPR
        CALL FASTMOV(DSTTVC,LSTTVC(1,GIND),STRTVC_LEN/4)
        CALL MOVBYT(DSTMDS,1,LSTMDS(1,GIND),1,MAXMLTD_AVL)
        LSTRWS(GIND)=DSTRWS
        CALL FASTMOV(DSTWCP,LSTWCP(1,GIND),MAXSTRTI)
        CALL FASTMOV(DSTWBT,LSTWBT(1,1,GIND),NUMTOT*MAXSTRTI)
        CALL FASTMOV(DSTWRO,LSTWRO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSTWRA,LSTWRA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSTWPO,LSTWPO(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSTWPA,LSTWPA(1,1,GIND),NUMTOT*2)
        CALL FASTMOV(DSTWPR,LSTWPR(1,1,GIND),NUMTOT*2)
        LSTPCC(GIND) = DSTPCC
	LSTCMB(GIND) = DSTCMB
	CALL FASTMOV(DSTLAT,LSTLAT(1,GIND),NUMLAT)
        CALL FASTMOV(LSTREC,GAMREC,LSTRECLEN)
        RETURN
C
C CONVERT RESULTS GAME RECORD ( TOTOGOLO - PORTUGAL )
C
16000   CONTINUE
        IF(GIND .GT. NUMTGL) RETURN
        CALL FASTMOV(GAMREC, LTGREC, LTGRECLEN)
        CALL FASTMOV(DSKREC, DTGREC, DLTLEN)
        LTGSTS(GIND) = DTGSTS
        LTGCTM(GIND) = DTGCTM
        LTGTIM(GIND) = DTGTIM
        LTGDRW(GIND) = DTGDRW
        LTGBSD(GIND) = DTGBSD
        LTGESD(GIND) = DTGESD
        LTGPUP(GIND) = DTGPUP
        LTGUPD(GIND) = DTGUPD
        CALL FASTMOV(DTGDAT, LTGDAT(1,GIND), DATLEN)
        CALL FASTMOV(DTGADV, LTGADV(1,GIND), NUMADV)
        CALL FASTMOV(DTGSAL, LTGSAL(1,GIND), TGGENT)
        CALL FASTMOV(DTGSHV, LTGSHV(1,GIND), TGGDIV)
        CALL FASTMOV(DTGSHR, LTGSHR(1,GIND), TGGDIV)
        CALL FASTMOV(DTGPOL, LTGPOL(1,GIND), TGGDIV)
        CALL FASTMOV(DTGPAD, LTGPAD(1,GIND), TGGDIV)
        CALL FASTMOV(DTGPRG, LTGPRG(1,GIND), TGGDIV)
        CALL FASTMOV(DTGAFD, LTGAFD(1,GIND), TGGDIV)
        CALL FASTMOV(DTGCSP, LTGCSP(1,GIND), TGGDIV)
        CALL FASTMOV(DTGOSV, LTGOSV(1,GIND), TGGDIV)
        CALL FASTMOV(DTGOSH, LTGOSH(1,GIND), TGGDIV)
        CALL FASTMOV(DTGWIN, LTGWIN(1,1,GIND), TGGNBR*2)
        CALL FASTMOV(DTGHLD, LTGHLD(1,1,GIND), TGGNBR*2)
        LTGPRP(GIND) = DTGPRP
        LTGPRN(GIND) = DTGPRN
        LTGTAX(GIND) = DTGTAX
        CALL FASTMOV(DTGRES, LTGRES(1,GIND), 2)
        LTGAPL(GIND) = DTGAPL
        LTGMIN(GIND) = DTGMIN
        LTGSER(GIND) = DTGSER
        LTGOPA(GIND) = DTGOPA
        LTGPRC(GIND) = DTGPRC
        LTGMAX(GIND) = DTGMAX
        LTGMLT(GIND) = DTGMLT
        LTTDIV(GIND) = DTGDIV
        CALL FASTMOV(DTGMAT, LTGMAT(1,GIND), TGGDIV)
        CALL FASTMOV(DTGPER, LTGPER(1,GIND), TGGDIV)
        LTGSPR(GIND) = DTGSPR
        CALL FASTMOV(DTGTSR, LTGTSR(1,GIND), TGGDIV)
        LTGREV(GIND) = DTGREV
        CALL FASTMOV(DTGNMS, LTGNMS(1,1,1,GIND), (TGNMS_LEN / 4) * 2 * TGGNBR)
        CALL FASTMOV(DTGCLB, LTGCLB(1,GIND), 25)
        CALL FASTMOV(DTGASH, LTGASH(1,GIND), TGGDIV)
        LTGFRG(GIND) = DTGFRG
        CALL FASTMOV(DTGWRF, LTGWRF(1,GIND), POSTED)
        LTGBST(GIND) = DTGBST
        CALL MOVBYT(DTGMDS, 1, LTGMDS(1,GIND), 1, MAXMLTD_AVL)
        CALL FASTMOV(DTGBAL, LTGBAL(1,GIND), MAXDRW)
	CALL FASTMOV(DTGEVN, LTGEVN(1,GIND), TGEVN_LEN / 4)
        LTGEXT(GIND) = DTGEXT
        CALL FASTMOV(DTGRGT, LTGRGT(1,GIND), 2)
	CALL FASTMOV(DTGROD, LTGROD(1,GIND), 2)
        CALL FASTMOV(LTGREC, GAMREC, LTGRECLEN)
        RETURN
C
C END OF FILE
C
        END
