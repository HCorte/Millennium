C SUBROUTINE CMDSPT
C
C V06 13-FEB-2001 HXK ALLOW WINNING NUMBERS TO BE ENTERED FOR A
C                     PREVIOUS DRAW
C V05 10-MAR-2000 OXK Change for rollover updates
C V04 17 Apr 1996 HXK Release of Finland for X.25, Telephone Betting, 
C                     Instant Pass Thru Phase 1
C V03 21 Jan 1993 DAB Initial Release
C                     Based on Netherlands Bible, 12/92, and Comm 1/93 update
C                     DEC Baseline
C V02 12-NOV-1991 MTK INITAL RELEASE FOR NETHERLANDS
C V01 01-AUG-1990 XXX RELEASED FOR VAX
C
C SUBROUTINE TO PROCESS SPORTS GAME COMMANDS
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
      SUBROUTINE CMDSPT(TRABUF,MESS)
      IMPLICIT NONE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:SPTCOM.DEF'
      INCLUDE 'INCLIB:DESTRA.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
      INCLUDE 'INCLIB:GTNAMES.DEF'
      INCLUDE 'INCLIB:STANDARD.DEF'

      INTEGER*4 MESS(EDLEN), TEMP, IND, OFF, GIND, CMDNUM, DIV
      INTEGER*4 DRAW, FDB(7), GNUM, UNIT, ST
      INTEGER*2 I2TEMP(2)
      EQUIVALENCE (TEMP,I2TEMP)
      LOGICAL   PREVIOUS_DRAW
C
      CMDNUM=TRABUF(TCMNUM)
      GOTO (10,20,30,40,50,60,70,80,90,100) CMDNUM
      GOTO 1000
C
C CHANGE SPORTS GAME STATUS
C
10    CONTINUE
      GIND=TRABUF(TCMDT1)
      TRABUF(TCMOLD)=SPTSTS(GIND)
      SPTSTS(GIND)=TRABUF(TCMNEW)
      IF(TRABUF(TCMNEW).EQ.GAMBFD) THEN
         SPTCTM(GIND)=TRABUF(TTIM)
         CALL BSET(SPTTIM(GIND),1)
         CALL CLRSUM
         TEMP=SPTREV(GIND)
         I2TEMP(1)=I2TEMP(1)+1
         SPTREV(GIND)=TEMP
      ENDIF
      MESS(2)=TECMD
      MESS(3)=3
      MESS(6)=GIND
      MESS(9)=TRABUF(TCMOLD)
      MESS(10)=TRABUF(TCMNEW)
      RETURN
C
C SET SPORTS WINNING NUMBERS
C
20    CONTINUE

      GIND = TRABUF(TCMDT1)
      DRAW = TRABUF(TCMNEW)

      PREVIOUS_DRAW = .FALSE.
      IF(DRAW.GT.0 .AND. DRAW.LT.SPTDRW(GIND)) PREVIOUS_DRAW = .TRUE.

      IF(PREVIOUS_DRAW) THEN

          ! GET AN AVAILABLE LUN
          CALL FIND_AVAILABLE_LUN(UNIT, ST)
          IF(ST.NE.0) THEN
            MESS(2)  = TECMD
            MESS(3)  = 33
            MESS(6)  = GIND
            MESS(10) = HANDLE_ERROR
            RETURN
          ENDIF

          ! OPEN GAME FILE
          GNUM = GTNTAB(TSPT, GIND)
          CALL OPENW(UNIT,GFNAMES(1,GNUM),4,0,0,ST)
          IF(ST.NE.0) THEN
            MESS(2)  = TECMD
            MESS(3)  = 33
            MESS(6)  = GIND
            MESS(10) = OPEN_ERROR
            RETURN
          ENDIF
          
          ! READ GAME FILE
          CALL IOINIT(FDB,UNIT,DSPSEC*256)
          CALL READW(FDB,DRAW,DSPREC,ST)
          IF(ST.NE.0) THEN
            MESS(2)  = TECMD
            MESS(3)  = 33
            MESS(6)  = GIND
            MESS(10) = READ_ERROR
            CALL CLOSEFIL(FDB)
            RETURN
          ENDIF

          ! SET WINNING NUMBERS IF NOT ENTERED
          IF(DSPSTS.NE.GAMBFD) THEN
            MESS(2)  = TECMD
            MESS(3)  = 34
            MESS(6)  = GIND
            MESS(10) = DRAW
            CALL CLOSEFIL(FDB)
            RETURN
          ENDIF
          OFF=0
          IND=1
21        CONTINUE
          CALL ILBYTE(TEMP,TRABUF(TCMDT2),OFF)
          DSPWIN(IND)=TEMP
          IND=IND+1
          IF(IND.GT.DSPMAX) THEN
             MESS(2)=TECMD
             MESS(3)=4
             MESS(6)=GIND
          ELSE
             OFF=OFF+1
             GOTO 21
          ENDIF

          ! WRITE NEW RECORD
          DSPSTS = GAMENV
          CALL WRITEW(FDB,DRAW,DSPREC, ST)
          IF(ST.NE.0) THEN
             MESS(2)  = TECMD
             MESS(3)  = 33
             MESS(6)  = GIND
             MESS(10) = WRITE_ERROR
             CALL CLOSEFIL(FDB)
             RETURN
          ENDIF

          CALL CLOSEFIL(FDB)
          RETURN

      ELSE

          OFF=0
          IND=1
22        CONTINUE
          CALL ILBYTE(TEMP,TRABUF(TCMDT2),OFF)
          SPTWIN(IND,GIND)=TEMP
          IND=IND+1
          IF(IND.GT.SPTMAX(GIND)) THEN
             MESS(2)=TECMD
             MESS(3)=4
             MESS(6)=GIND
             RETURN
          ENDIF
          OFF=OFF+1
          GOTO 22

      ENDIF
C
C CHANGE SPORT OFFLINE SALES
C
30    CONTINUE
      GIND=TRABUF(TCMDT1)
      TRABUF(TCMOLD)=SPTSAL(2,GIND)    !OFFLINE SALES TABLE
      SPTSAL(2,GIND)=TRABUF(TCMNEW)
      MESS(2)=TECMD
      MESS(3)=3
      MESS(6)=GIND
      MESS(9)=TRABUF(TCMOLD)
      MESS(10)=TRABUF(TCMNEW)
      RETURN
C
C UPDATE ROLLOVER FOR DIVSIONS
C
40    CONTINUE
      GIND=TRABUF(TCMDT1)
      DIV =TRABUF(TCMDT2)
      SPTROD(1,GIND) = TRABUF(TCMDT3)  ! GIND WHERE MONEY CAME FROM
      SPTROD(2,GIND) = TRABUF(TCMDT4)  ! DRAW WHERE MONEY CAME FROM
      TRABUF(TCMOLD)=SPTPOL(DIV,GIND)
      SPTPOL(DIV,GIND)=SPTPOL(DIV,GIND)+TRABUF(TCMNEW)
      MESS(2)=TECMD
      MESS(3)=32
      MESS(6)=GIND
      MESS(9)=DIV
      MESS(10)=TRABUF(TCMNEW)
      RETURN
C
C CANCEL EVENTS AND THE FULL DRAW COMMAND
C
50    CONTINUE
      CALL COMMAND_CANCEL_SPORTS_EVENTS(TRABUF, MESS)
      RETURN
C
C CHANGE THE MAXIMUN NUMBER OF EVENTS CANCELED TO CANCEL THE FULL DRAW
C
60    CONTINUE
      CALL CMD_UPD_MAX_SPORT_EVNTS_CANCEL_TO_CANCEL_DRAW(TRABUF, MESS)
      RETURN
C
C PUT NEXT SPORTS COMMAND HERE
C
70    CONTINUE
80    CONTINUE
90    CONTINUE
100   CONTINUE
C
C INVALID COMMAND NUMBER
C
1000  CONTINUE
      TRABUF(TSTAT)=REJT
      TRABUF(TERR)=INVL
      MESS(2)=TECMD
      MESS(3)=1
      MESS(4)=TRABUF(TCMTYP)
      MESS(5)=TRABUF(TCMNUM)
      RETURN
      END


C ******************************************************************************
C
C     SUBROUTINE: COMMAND_CANCEL_SPORTS_EVENTS
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 03 / 04 / 2017
C
C ******************************************************************************
C
C FUNCTION TO CANCEL AN SPORT EVENT FOR AN SPECIFIC DRAW
C
C==== OPTIONS /CHECK=NOOVERFLOW
      SUBROUTINE COMMAND_CANCEL_SPORTS_EVENTS(TRABUF, MESS)
      IMPLICIT NONE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:SPTCOM.DEF'
      INCLUDE 'INCLIB:DESTRA.DEF'
      INCLUDE 'INCLIB:STOPCOM.DEF'
C
      INTEGER * 4 MESS(*)
C
      INTEGER * 4 FSTS            ! FUNCTION STATUS
      INTEGER * 4 DRAW            ! DRAW NUMBER
      INTEGER * 4 GIND            ! GAME INDEX
      INTEGER * 4 GNUM            ! GAME NUMBER
      INTEGER * 4 ROW_NUM         ! ROW NUMBER
      INTEGER * 4 WIN_IDX         ! WINNING INDEX COUNTER
      INTEGER * 4 DATE_OFFSET     ! DATE OFFSET -- TO MOVE SALES TABLE --
      INTEGER * 4 TOTCAN_EVENTS   ! TOTAL NUMBER OF EVENTS CANCELLED
C
      LOGICAL DRAW_IN_MEM         ! THE DRAW IS IN MEMORY
C
      CHARACTER * 60 DRAW_CANCEL_MESSAGE   ! DRAW CANCELLATION MESSAGE IN THE CONSOLE
C
      DRAW    = TRABUF(TCMDT1)
      GIND    = TRABUF(TCMDT2)
      ROW_NUM = TRABUF(TCMDT3)
C
      MESS(2) = 0  ! DON'T PRINT MESSGES IN THE CONSOLE AT THIS MOMENT
C
      IF(GIND .LT. 1 .OR. GIND .GT. MAXIND) THEN  ! WRONG GAME INDEX REQUESTED
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Wrong Game Index Requested To Cancel An Event', GIND, MAXIND)
        RETURN
      ENDIF
C
      GNUM = GTNTAB(TSPT, GIND)
C
      IF(GNUM .LE. 0 .OR. GNUM .GT. MAXGAM) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, The Game Is Not Active To Cancel An Event', GIND, GNUM)
        RETURN
      ENDIF
C
      TRABUF(TGAM)    = GNUM
      TRABUF(TCMNEW)  = 0
      TRABUF(TGAMTYP) = TSPT
      TRABUF(TGAMIND) = GIND
C
      ! THE DRAW CAN'T BE GREATER THAN CURRENT IN MEMORY DUE THE FUTURE DRAWS CAN'T BE
      ! UPDATED BECAUSE THE TOTAL NUMBER OF CANCELLED EVENTS TO CANCELL THE DRAW CAN BE
      ! MODIFY AS A MASSIVE PROCES IN THE STOPSYS, SO THE PROCESS TO CANCEL THE SPORT EVENT
      ! ONLY IS CONTROLED HERE WHEN THE PREVIOUS PARAMETER CAN'T BE CHANGED
      IF(DRAW .GT. SPTDRW(GIND)) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Wrong Draw Requested To Cancel An Event', DRAW, SPTDRW(GIND))
        RETURN
      ENDIF

      ! SET IF THE DRAW TO BE UPDATE IS IN THE COMMON MEMORY
      IF(DRAW .EQ. SPTDRW(GIND)) THEN
        DRAW_IN_MEM = .TRUE.
      ELSE
        DRAW_IN_MEM = .FALSE.
      ENDIF
C
      CALL READ_SPORTS_DRAW_FROM_MEM_OR_DISK(DRAW, GIND, DSPREC, .TRUE., FSTS)
C
      IF(FSTS .NE. 0) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL   ! ERROR MESSAGES ALREADY PRINTED IN THE ROUTINE
        RETURN
      ENDIF
C
      IF(ROW_NUM .LT. 1 .OR. ROW_NUM .GT. DSPMAX) THEN  ! WRONG ROW NUMBER REQUESTED
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Wrong Row Number Requested To Cancel An Event', ROW_NUM, DSPMAX)
        RETURN
      ENDIF
C
      TRABUF(TCMOLD) = DSPECD(ROW_NUM)
C
      IF(TRABUF(TCMOLD) .NE. 0) THEN  ! EVENT ALREADY CANCELLED
        TRABUF(TSTAT)   = REJT
        TRABUF(TERR)    = INVL
        TRABUF(TSUBERR) = 1     ! ROW NUMBER ALREADY CANCELLED
        CALL OPS('Command Error, The Event Is Already Cancelled', ROW_NUM, TRABUF(TCMOLD))
        RETURN
      ENDIF
C
      IF(DSPSTS .GE. GAMEN1 .AND. DSPDCD .EQ. 0) THEN   ! WINNING NUMBERS ALREADY ENTERED
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Event Can''t Be Cancelled Due Winning Numbers Are Entered', DSPSTS, GIND)
        RETURN
      ENDIF
C
      DATE_OFFSET = DSPDAT(CURDRW) - DAYCDC  ! CALCULATE THE DATE OFFSET FROM THE ORIGINAL DRAW DATE -- DAYS TO MOVE THE DRAW DATE --
C
      IF(DATE_OFFSET .LT. 0) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Cancel Draw Day Can''t Be Greater Than Draw Day', DSPDAT(CURDRW), DAYCDC)
        RETURN
      ENDIF
C
      IF(DSPDIV .GE. SPGDIV .AND. DSPDCD .EQ. 0) THEN   ! NO SPACE TO ADD NEW DIVISIONS (REFUND), SO THE DRAW CAN BE CANCELLED
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('No Free Space To Add The Refund Win Division For The Cancel Draw', DRAW, GIND)
        RETURN
      ENDIF
C
C COUNT THE TOTAL NUMBER OF EVENTS ALRREADY CANCELED -- FROM COMMON MEMORY OR DISK --
C
      CALL GET_SPORTS_TOT_CANCEL_EVENTS(DRAW, GIND, .TRUE., TOTCAN_EVENTS, FSTS)
C
      IF(FSTS .NE. 0) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL   ! ERROR MESSAGES ALREADY PRINTED IN THE ROUTINE
        RETURN
      ENDIF
C
C CANCEL THE EVENT -- SET THE CANCEL DATE AND CANCEL TIME --
C
      CALL SET_CANCEL_EVENT_DATE_TIME(DSPECD(ROW_NUM), DSPDAT(CURDRW), TRABUF(TCDC), TRABUF(TTIM))
C
      TRABUF(TCMNEW) = DSPECD(ROW_NUM)  ! THE NEW VALUE IS NOT SEND IN THE COMMAND, JUST ONLY SET THE DATA GO GET IT
C
      MESS(2)  = TECMD
      MESS(3)  = 37
      MESS(6)  = GIND
      MESS(9)  = DRAW
      MESS(10) = ROW_NUM
C
      IF(DRAW_IN_MEM) SPTECD(ROW_NUM, GIND) = DSPECD(ROW_NUM)  ! UPDATE THE CANCEL DATE AND TIME IN THE MEMORY
C
C CHECK IF THE FULL DRAW SHOULD BE CANCELLED, IF NOT GO TO CHEKC IF THE CHANGE SHOULD BE UPDATE IN THE GAME FILE
C
      IF(DSPDCD .NE. 0) GOTO 1000              ! DRAW ALREADY CANCELLED
      IF(DSPRWD .NE. 0) GOTO 1000              ! REFUND WINNING DIVISION ALREADY SET, THE DRAW IS ALREADY CANCELLED
      IF(DSPMCE .LE. 0) GOTO 1000              ! MAXIMUN NUMBER OF EVENTS TO CANCEL THE DRAW NOT CONFIGURED FOR THIS DRAW
C
      IF(TOTCAN_EVENTS .LT. DSPMCE) GOTO 1000  ! DRAW STILL MUST BE OPEN ACORDING WITH THE SETUP PARAMETERS
C
C SET THE CANCEL DRAW DATE AND TIME
C
      CALL SET_CANCEL_EVENT_DATE_TIME(DSPDCD, DSPDAT(CURDRW), TRABUF(TCDC), TRABUF(TTIM))
C
      WRITE(DRAW_CANCEL_MESSAGE, 100) DRAW, GIND
C
      CALL OPSTXT(DRAW_CANCEL_MESSAGE)
C
      IF(DRAW_IN_MEM) SPTDCD(GIND) = DSPDCD
C
C SET THE WINNING NUMBERS -- ALL EVENTS CANCELLED --
C
      DO WIN_IDX = 1, DSPMAX
         DSPWIN(WIN_IDX) = WINNUM_CANEVENT
      ENDDO
C
      IF(DRAW_IN_MEM) CALL FASTMOV(DSPWIN(1), SPTWIN(1, GIND), DSPMAX)
C
C ADD A NEW WINNING DIVISION -- REFUND DIVISION -- AND SET THAT THE WINNING NUMBER HAS BEEN CONFIRMED DUE THE DRAW IS CANCELLED
C
      DSPSTS = GAMENV        ! WINNING NUMBERS ENTERED
      DSPDIV = DSPDIV + 1    ! INCREASE THE TOTAL NUMBER OF WINNING DIVISION
      DSPRWD = DSPDIV        ! SET THE REFUND WINNING DIVISON
      DSPSPR = 100000        ! 100% OF SALES GOES TO POOL PRIZE TO CALCULATION
C
      IF(DRAW_IN_MEM) THEN
        SPTSTS(GIND) = DSPSTS
        SPTDIV(GIND) = DSPDIV
        SPTRWD(GIND) = DSPRWD
        SPTSPR(GIND) = DSPSPR
      ENDIF
C
C CHANGE SHARE CALCULATION RULES -- ALL SALES GOES TO PRIZE DUE THE DRAW HAS BEEN CANCELLED --
C
      CALL FASTSET(0, DSPPER(1), SPGDIV) ! RESET % POOL BY DIVISION, NO WINNERS IN ALL DIVISIONS EXCEPT REFUND
C
      DSPPER(DSPRWD) = 100000    ! 100% OF POOL GOES TO REFUND DIVISION
      DSPMAT(DSPRWD) = 0         ! NO MATCHES TO WIN THE DIVISION -- THIS CODE IS USE IN REPORTS AND INTERFACES TO INDICATE REFUND DIVISION --
C
      IF(DRAW_IN_MEM) THEN
        SPTPER(SPTRWD(GIND), GIND) = DSPPER(DSPRWD)
        SPTMAT(SPTRWD(GIND), GIND) = DSPMAT(DSPRWD)
        CALL FASTMOV(DSPPER(1), SPTPER(1, GIND), SPGDIV)
      ENDIF
C
C CHANGE THE DRAW DATE TO TODAY DUE THE DRAW HAS BEEN CANCELLED
C
      CALL CHANGE_THE_DRAW_DATE_TO_TODAY(TRABUF, GIND, DSPREC, DATE_OFFSET, DRAW_IN_MEM)
C
C UPDATE "DRWGAM" AND "DRWSTS" FOR MULTIWIN IN STOPCOM -- UPDATE MULTIW WINSEL PROCESS --
C
      DO WIN_IDX = 1, MAX_WINSEL
         IF(DRWGAM(WIN_IDX, GNUM) .EQ. DRAW  .OR.  ! THE SAME DRAW TO BE UPDATED
     *      DRWGAM(WIN_IDX, GNUM) .EQ. 0)          ! FREE TO ADD A NEW DRAW
     *   THEN
            DRWSTS(WIN_IDX, GNUM) = WINYES
            DRWGAM(WIN_IDX, GNUM) = DRAW
            GOTO 1000
         ENDIF
      ENDDO
C
C IF THE DRAW IS NOT IN THE COMMON MEMORY SAVE ALLA TO THE DISK
C
1000  CONTINUE
      IF(DRAW_IN_MEM .EQ. .FALSE.) CALL UPDATE_CANCEL_CMD_DATA_IN_DISK(TRABUF, DRAW, DSPREC)
C
100   FORMAT('THE SPORTS DRAW', X, I6.6, X, 'FOR INDEX', X, I2.2, X, 'HAS BEEN CANCELED !!!')
C
      END


C ******************************************************************************
C
C     SUBROUTINE: CHANGE_THE_DRAW_DATE_TO_TODAY
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 03 / 04 / 2017
C
C ******************************************************************************
C
C FUNCTION TO CHANGE THE DRAW DATE TO TODAY DUE THE DRAW HAS BEEN CANCELLED
C
C==== OPTIONS /CHECK=NOOVERFLOW
      SUBROUTINE CHANGE_THE_DRAW_DATE_TO_TODAY(TRABUF, GIND, GAMREC, DATE_OFFSET, DRAW_IN_MEM)
      IMPLICIT NONE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
      INCLUDE 'INCLIB:DESTRA.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:SPTCOM.DEF'
C
      INTEGER * 4 GIND           ! GAME INDEX
      INTEGER * 4 DATE_OFFSET    ! DATE OFFSET -- TO MOVE SALES TABLE --
      INTEGER * 4 GAMREC(*)      ! GAME RECORD
C
      LOGICAL DRAW_IN_MEM        ! THE DRAW IS IN MEMORY
C
      INTEGER * 4 IDX            ! INDEX COUNTER
      INTEGER * 4 DRWCDC         ! DRAW DATE
      INTEGER * 4 ROW_NUM        ! ROW NUMBER COUNTER  
      INTEGER * 4 CANCEL_DATE    ! CANDEL DATE
      INTEGER * 4 CANCEL_TIME    ! CANCEL TIME
C
      IF(DATE_OFFSET .EQ. 0) RETURN  ! CANCELLED THE SAME DAY THAN THE DRAW DAY, SO NO MORE NEEDS TO BE DONE
C
      CALL FASTMOV(GAMREC, DSPREC, DSPLEN)
C
C MOVE SALES TABLE BY DAY ACCODING WITH THE NEW DRAW DATE -- SET THE SALES IN THE CORRECT DAY --
C
      DO IDX = 3, SPGENT
         IF(IDX + DATE_OFFSET .LE.  SPGENT) THEN
            DSPSAL(IDX) = DSPSAL(IDX + DATE_OFFSET)
         ELSE
            DSPSAL(IDX) = 0   ! NO MORE SALES TO BE MOVED, SO RESET THE VALUE
         ENDIF
      ENDDO
C
      IF(DRAW_IN_MEM) CALL FASTMOV(DSPSAL(1), SPTSAL(1, GIND), SPGENT)
C
C MOVE THE CANCELLATION DATE AND TIME BY ROW -- DATE IS AN OFFSET TO THE DRAW DATE THAT IS GOING TO BE CHANGED --
C
      DRWCDC = DSPDAT(CURDRW)  ! CURRENT DRAW CDC PREVIOUSLY TO THE CHANGE
C
      DO ROW_NUM = 1, DSPMAX
         IF(DSPECD(ROW_NUM) .NE. 0) THEN
           CALL GET_CANCEL_EVENT_DATE_TIME(DSPECD(ROW_NUM), DRWCDC, CANCEL_DATE, CANCEL_TIME)
           CALL SET_CANCEL_EVENT_DATE_TIME(DSPECD(ROW_NUM), DAYCDC, CANCEL_DATE, CANCEL_TIME)
         ENDIF
      ENDDO
C
      IF(DRAW_IN_MEM) CALL FASTMOV(DSPECD(1), SPTECD(1, GIND), DSPMAX)
C
C MOVE THE CANCELLATION DATE AND TIME FOR THE FULL DRAW -- DATE IS AN OFFSET TO THE DRAW DATE THAT IS GOING TO BE CHANGED --
C
      CALL GET_CANCEL_EVENT_DATE_TIME(DSPDCD, DRWCDC, CANCEL_DATE, CANCEL_TIME)
      CALL SET_CANCEL_EVENT_DATE_TIME(DSPDCD, DAYCDC, CANCEL_DATE, CANCEL_TIME)
C
      IF(DRAW_IN_MEM) SPTDCD(GIND) = DSPDCD
C
C SET THE DRAW DATE AND THE END SALES DATE -- TODAY --
C
      DSPESD = DAYCDC
C
      DSPDAT(CURDRW) = DAYCDC
C
      IF(DRAW_IN_MEM) THEN
         SPTESD(GIND)         = DSPESD
         SPTDAT(CURDRW, GIND) = DSPDAT(CURDRW)
      ENDIF
C
      CALL FASTMOV(DSPREC, GAMREC, DSPLEN)
C
      END


C ******************************************************************************
C
C     SUBROUTINE: UPDATE_CANCEL_CMD_DATA_IN_DISK
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 03 / 04 / 2017
C
C ******************************************************************************
C
C FUNCTION TO SAVE ALL CHANGE DONE BY THE CANCEL COMMAND IN THE DISK
C
C==== OPTIONS /CHECK=NOOVERFLOW
      SUBROUTINE UPDATE_CANCEL_CMD_DATA_IN_DISK(TRABUF, DRAW, GAMREC)
      IMPLICIT NONE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:DESTRA.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
C
      INTEGER * 4 DRAW        ! DRAW NUMBER
      INTEGER * 4 GAMREC(*)   ! GAME RECORD
C
      INTEGER * 4 FSTS        ! FUNCTION STATUS
      INTEGER * 4 GNUM        ! GAME NUMBER
      INTEGER * 4 IDFIL       ! FILE ID
      INTEGER * 4 GAM_FDB(7)  ! GAME FILE DESCRIPTOR BLOCK
C
      IDFIL = 3
      GNUM  = TRABUF(TGAM)
C
      ! OPEN THE DRAW FROM THE DISK
      CALL OPENW(IDFIL, GFNAMES(1, GNUM), 4, 0, 0, FSTS)
C
      IF(FSTS .NE. 0) THEN
         TRABUF(TSTAT) = REJT
         TRABUF(TERR)  = INVL
         CALL OPS('Unable To Open The Sports Game File To Save Cancel Event', GNUM, DRAW)
         RETURN  ! FILE NOT OPEN YET,SO RETURN
      ENDIF
C
      CALL IOINIT(GAM_FDB, IDFIL, DSPSEC * 256)
C
      ! WRITE THE GAME RECORD TO UPDATE ALL COMMAND DATA IN THE DISK
      CALL WRITEW(GAM_FDB, DRAW, GAMREC, FSTS)
C
      IF(FSTS .NE. 0) THEN
         TRABUF(TSTAT) = REJT
         TRABUF(TERR)  = INVL
         CALL OPS('Unable To Write The Sports Game File To Save Cancel Event', GNUM, DRAW)
         GOTO 1000
      ENDIF
C
1000  CONTINUE
      CALL CLOSEFIL(GAM_FDB)
C
      IF(FSTS .NE. 0) RETURN   ! RETURN ONCE THE FILE HAS BEEN CLOSED
C
      END


C ******************************************************************************
C
C     SUBROUTINE: CMD_UPD_MAX_SPORT_EVNTS_CANCEL_TO_CANCEL_DRAW
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 03 / 04 / 2017
C
C ******************************************************************************
C
C FUNCTION TO SAVE ALL CHANGE DONE BY THE CANCEL EVENT COMMAND IN THE DISK
C
C==== OPTIONS /CHECK=NOOVERFLOW
      SUBROUTINE CMD_UPD_MAX_SPORT_EVNTS_CANCEL_TO_CANCEL_DRAW(TRABUF, MESS)
      IMPLICIT NONE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:DESTRA.DEF'
      INCLUDE 'INCLIB:DSPREC.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:SPTCOM.DEF'
C
      INTEGER * 4 MESS(*)
C
      INTEGER * 4 DRAW            ! DRAW NUMBER
      INTEGER * 4 GIND            ! GAME INDEX
      INTEGER * 4 GNUM            ! GAME NUMBER
      INTEGER * 4 FSTS            ! GAME NUMBER
      INTEGER * 4 TOTCAN_EVENTS   ! TOTAL NUMBER OF EVENTS CANCELLED
C
      LOGICAL DRAW_IN_MEM         ! THE DRAW IS IN MEMORY
C
      DRAW = TRABUF(TCMDT1)
      GIND = TRABUF(TCMDT2)
C
      MESS(2) = 0  ! DON'T PRINT MESSGES IN THE CONSOLE AT THIS MOMENT
C
      IF(GIND .LT. 1 .OR. GIND .GT. MAXIND) THEN  ! WRONG GAME INDEX REQUESTED
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Wrong Index To Update Max Events To Cancel The Draw', GIND, MAXIND)
        RETURN
      ENDIF
C
      GNUM = GTNTAB(TSPT, GIND)
C
      IF(GNUM .LE. 0 .OR. GNUM .GT. MAXGAM) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, The Game Is Not Active To Cancel An Event', GIND, GNUM)
        RETURN
      ENDIF
C
      TRABUF(TGAM)    = GNUM
      TRABUF(TGAMTYP) = TSPT
      TRABUF(TGAMIND) = GIND
C
      ! THE DRAW CAN'T BE GREATER THAN CURRENT IN MEMORY DUE THE FUTURE DRAWS CAN'T BE
      ! UPDATED BECAUSE THE TOTAL NUMBER OF CANCELLED EVENTS TO CANCELL THE DRAW CAN BE
      ! MODIFY AS A MASSIVE PROCES IN THE STOPSYS, SO THE PROCESS TO CANCEL THE SPORT EVENT
      ! ONLY IS CONTROLED HERE WHEN THE PREVIOUS PARAMETER CAN'T BE CHANGED
      IF(DRAW .GT. SPTDRW(GIND)) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Wrong Draw Requested To Cancel An Event', DRAW, SPTDRW(GIND))
        RETURN
      ENDIF

      ! SET IF THE DRAW TO BE UPDATE IS IN THE COMMON MEMORY
      IF(DRAW .EQ. SPTDRW(GIND)) THEN
        DRAW_IN_MEM = .TRUE.
      ELSE
        DRAW_IN_MEM = .FALSE.
      ENDIF
C
      CALL READ_SPORTS_DRAW_FROM_MEM_OR_DISK(DRAW, GIND, DSPREC, .TRUE., FSTS)
C
      IF(FSTS .NE. 0) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL   ! ERROR MESSAGES ALREADY PRINTED IN THE ROUTINE
        RETURN
      ENDIF
C
      IF(DSPMCE .EQ. TRABUF(TCMNEW)) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Maximum Events To Cancel Already Updated With The New Code', DRAW, GIND)
        RETURN
      ENDIF
C
      IF(DSPSTS .GE. GAMEN1) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Maximum Events Can''t Be Update Due Winning Numbers Are Entered', DSPSTS, GIND)
        RETURN
      ENDIF
C
C COUNT THE TOTAL NUMBER OF EVENTS ALRREADY CANCELED -- FROM COMMON MEMORY OR DISK --
C
      CALL GET_SPORTS_TOT_CANCEL_EVENTS(DRAW, GIND, .TRUE., TOTCAN_EVENTS, FSTS)
C
      IF(FSTS .NE. 0) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL   ! ERROR MESSAGES ALREADY PRINTED IN THE ROUTINE
        RETURN
      ENDIF
C
      IF(TRABUF(TCMNEW) .LE. TOTCAN_EVENTS .AND. TRABUF(TCMNEW) .NE. 0) THEN
        TRABUF(TSTAT) = REJT
        TRABUF(TERR)  = INVL
        CALL OPS('Error, Invalid New Maximum Events To Cancel The Draw', DRAW, GIND)
        RETURN
      ENDIF
C
C UPDATE NEW COMMAND VALUE THAT HAS BEEN REQUESTED
C
      TRABUF(TCMOLD) = DSPMCE
      DSPMCE         = TRABUF(TCMNEW)
C
      IF(DRAW_IN_MEM) SPTMCE(GIND) = DSPMCE
C
      MESS(2)  = TECMD
      MESS(3)  = 38
      MESS(6)  = GIND
      MESS(9)  = TRABUF(TCMDT1)   ! DRAW NUMBER
      MESS(10) = TRABUF(TCMNEW)   ! NEW NUMBER OF CANCEL EVENTS TO CANCEL THE FULL DRAW
C
      IF(DRAW_IN_MEM .EQ. .FALSE.) CALL UPDATE_CANCEL_CMD_DATA_IN_DISK(TRABUF, DRAW, DSPREC)
C
      END
