C
C     FILE   : TOTPURWIN.FOR
C     AUTHOR : J.H.R
C     VERSION: 01            DATE: 12 / 06 / 2001
C
C
C V01 JHR INITIAL RELEASE FOR PORTUGAL PROJECT
C
C THIS FILE CONTAINS:
C
C   - FUNCTION TO CALCULATE TOTAL PURGED BY GAME TYPE / INDEX WITH NO OP.
C   - FUNCTION TO GENERATE ONE REPORT WITH TOTAL PURGED WITH NO OP.
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rigth Reserved
C
C     **************************************************************************
C
C FUNCTION TO CALCULATE TOTAL PURGED BY GAME WITH NO PAYMENT ORDER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE PURGED_WITH_NO_OP(VALREC, TOTPGNOP)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO CALCULATE TOTAL PURGED BY GAME WITH NO PAYMENT ORDER
C
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:DESVAL.DEF'
C
C PARAMETERS DEFINITION TO CALCULATE TOTAL PURGED BY GAME WITH NO PAYMENT ORDER
C
      INTEGER * 4 TOTPGNOP(MAXGAM, NUMTOT)        ! TOTAL PURGED
C
C VARIABLES DEFINITION TO CALCULATE TOTAL PURGED BY GAME WITH NO PAYMENT ORDER
C
      INTEGER * 4 GNUM            ! GAME NUMBER
      INTEGER * 4 KGNUM           ! KIKER GAME NUMBER
      INTEGER * 4 GAMPRGAMT       ! GAME PURGED AMOUNT
      INTEGER * 4 KIKPRGAMT       ! KIKER PURGED AMOUNT
C
C IF VALIDATION STATUS IS NOT UNCASHED WE HAVEN'T TO UPDATE TOTAL PURGED
C
      IF(VALREC(VSTAT) .NE. VUNCSH) RETURN
C
C GET TOTAL PURGED AMOUNT FOR THE WAGER ( WITH NO PAYMENT ORDER )
C
      GAMPRGAMT = VALREC(VPAMT) + VALREC(VRAMT) - VALREC(VOPSAMT)
      KIKPRGAMT = VALREC(VKPAMT) - VALREC(VKOPSAMT)
C
C UPDATE TOTAL PURGED WITH NO PAY ORDER FOR THE VALIDATION GAME
C
      GNUM = VALREC(VGAM)
      IF(GNUM .GT. 0 .AND. GNUM .LE. MAXGAM .AND. GAMPRGAMT .GT. 0) THEN
        TOTPGNOP(GNUM, TRACNT) = TOTPGNOP(GNUM, TRACNT) + 1
        TOTPGNOP(GNUM, DOLAMT) = TOTPGNOP(GNUM, DOLAMT) + GAMPRGAMT
      ENDIF
C
C UPDATE TOTAL PURGED WITH NO PAY ORDER FOR THE KIKER WITH THE VALIDATION
C
      KGNUM = KGNTAB(GNUM)
      IF(KGNUM .GT. 0 .AND. KGNUM .LE. MAXGAM .AND. KIKPRGAMT .GT. 0) THEN
        TOTPGNOP(KGNUM, TRACNT) = TOTPGNOP(KGNUM, TRACNT) + 1
        TOTPGNOP(KGNUM, DOLAMT) = TOTPGNOP(KGNUM, DOLAMT) + KIKPRGAMT
      ENDIF
C
C THIS IS THE END TO CALCULATE TOTAL PURGED BY GAME WITH NO PAYMENT ORDER
C
      END


C ******************************************************************************
C
C     SUBROUTINE: OPEN_FILE_NAME
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 12 / 06 / 2001
C
C ******************************************************************************
C
C FUNCTION TO OPEN FILE THAT WE SET IN PARAMETER FUNCTION
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE OPEN_FILE_NAME(IDFIL, FILENAME)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO OPEN FILE NAME
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C PARAMETERS DEFINITION TO OPEN FILE NAME
C
      INTEGER * 4 IDFIL                   ! IDENTIFICATION FILE
C
      CHARACTER * (*) FILENAME            ! FILE NAME TO OPEN
C
C VARIABLES DEFINITION TO OPEN FILE NAME
C
      INTEGER * 4 FSTS                    ! FUNCTION STATUS
C
C OPEN FILE NAME ( NAME IT'S SET IN FUNCTION PARAMETER )
C
      CALL ROPEN(FILENAME, IDFIL, FSTS)
C
C CHECK FOR OPEN FILE ERROR
C
      IF(FSTS .NE. 0)THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Opening File: ', FILENAME
        TYPE *, IAM()
        CALL GPAUSE
      ENDIF
C
C THIS IS THE END TO OPEN FILE NAME
C
      END


C ******************************************************************************
C
C     SUBROUTINE: GET_FREE_IDFIL
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 12 / 06 / 2001
C
C ******************************************************************************
C
C FUNCTION TO GET FREE IDENTIFICATION FILE NUMBER
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      INTEGER * 4 FUNCTION GET_FREE_IDFIL(CHECKIDFIL)
      IMPLICIT NONE
C
C INCLUDE DEFINITIONS TO GET FREE IDENTIFICATION FILE NUMBER
C
      INCLUDE '(LIB$ROUTINES)'
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C PARAMETERS DEFINITION TO GET FREE IDENTIFICATION FILE NUMBER
C
      INTEGER * 4 CHECKIDFIL          ! CHECK IDFIL (0: NO, 1: YES )
C
C VARIABLES DEFINITION TO GET FREE IDENTIFICATION FILE NUMBER
C
      INTEGER * 4 FSTS                ! FUNCTION STATUS
      INTEGER * 4 IDFIL               ! IDENTIFICATION FILE
C
C GET FREE IDENTIFICATION FILE NUMBER
C
      FSTS = LIB$GET_LUN(IDFIL)
      IF(FSTS .EQ. 0 .OR. IDFIL .LE. 0) THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Getting Identifiation File'
        TYPE *, IAM()
        CALL GPAUSE
      ENDIF
C
C CHECK IDENTIFICATION FILE 
C
      IF(CHECKIDFIL .NE. 0 .AND. IDFIL .GT. 100) IDFIL = MOD(IDFIL, 100)
C
C WRITE FREE IDENTIFICATION FILE TO RETURN FUNCTION
C
       GET_FREE_IDFIL = IDFIL 
C
C THIS IS THE END TO GET FREE IDENTIFICATION FILE NUMBER
C
      END



C ******************************************************************************
C
C     SUBROUTINE: REPORT_PURGED_WITH_NO_OP
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 12 / 06 / 2001
C
C ******************************************************************************
C
C FUNCTION THAT GENERATE THE REPORT WITH TOTAL PURGED WITH NO PAYMENT ORDERS
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE REPORT_PURGED_WITH_NO_OP(TOTPGNOP)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO GENERATE REPORT WITH PURGE WITH NO OP.
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
C
C PARAMETERS DEFINITION TO GENERATE REPORT WITH PURGE WITH NO OP.
C
      INTEGER * 4 TOTPGNOP(MAXGAM, NUMTOT)    ! TOTAL PURGED
C
C FUNCTIONS DEFINITION TO GENERATE REPORT WITH PURGE WITH NO OP.
C
      INTEGER * 4 GET_FREE_IDFIL              ! GET IDENTIFICATION FILE
C
C VARIABLES DEFINITION TO GENERATE REPORT WITH PURGE WITH NO OP.
C
      INTEGER * 4 IDFIL                       ! IDENTIFICATION FILE
      INTEGER * 4 PRGCNT                      ! PURGED COUNT
      INTEGER * 4 PRGAMT                      ! PURGED AMOUNT
      INTEGER * 4 PAGE                        ! PAGE COUNTER
      INTEGER * 4 WEEK                        ! WEEK
      INTEGER * 4 YEAR                        ! YEAR
      INTEGER * 4 GNUM                        ! GAME NUMBER COUNTER
      INTEGER * 4 CNT                         ! COUNTER
      INTEGER * 4 TOTPRGAMT                   ! TOTAL PURGED AMOUNT
      INTEGER * 4 TOTPRGCNT                   ! TOTAL PURGED COUNT
C
      CHARACTER * 52 TITMSG                   ! MESSAGE WRITE IN TITLE
C
C INITIATE VARIABLES TO GENERATE REPORT WITH PURGE WITH NO OP.
C
      PAGE = 0
      WEEK = 0
      YEAR = 0
      TOTPRGAMT = 0
      TOTPRGCNT = 0
C
C GET FREE IDENTIFICATION FILE NUMBER
C
      IDFIL = GET_FREE_IDFIL(0)
C
C OPEN REPORT FILENAME ( 'PRGNOTOP.REP' )
C
      CALL OPEN_FILE_NAME(IDFIL, 'PRGNOTOP.REP')
C
C PRINT TITLE REPORT ( 'RESUMO FINAL DE PRESCRICAO RELATIVA A SEMANA WW/YYYY' )
C
      CALL TITLE('PRESCRICAO DE PREMIOS', 'PRGNOTOP', 1, IDFIL, PAGE, DAYCDC)
C
C GET WEEK AND YEAR STARTING FROM DAYCDC
C
      CALL FIGWEK(DAYCDC, WEEK, YEAR)
      WRITE(TITMSG, 100) WEEK, YEAR
C
C WRITE TITLE OF REPORT ( PORTUGUES ) BEFORE PRINT INFORMATION
C
      WRITE(IDFIL, 101)
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 103) TITMSG
      WRITE(IDFIL, 104) 'MEDIADORES'
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 101)
C
C WRITE GAME NAMES AND TITLE OF INFORMATION
C
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 105)
      WRITE(IDFIL, 106)
      WRITE(IDFIL, 102)
C
C LOOP TO WRITE INFORMATION IN THE REPORT
C
      DO 1000 GNUM = 1, MAXGAM
C
C CHECK IF WE HAVE INFORMATION TO PRINT IN THE REPORT
C
        PRGCNT = TOTPGNOP(GNUM, TRACNT)
        PRGAMT = TOTPGNOP(GNUM, DOLAMT)
        IF(PRGCNT .LE. 0 .AND. PRGAMT .LE. 0) GOTO 1000
C
C PRINT PURGED INFORMATION IN REPORT
C
        WRITE(IDFIL, 107) 
     * 
     *               (GLNAMES(CNT, GNUM), CNT = 1, 4),
     *               TOTPGNOP(GNUM, TRACNT),
     *               CMONY(TOTPGNOP(GNUM, DOLAMT), 14, VALUNIT)
C
C ADD TOTAL COUNT AND TOTAL AMOUNT TO TOTALS PURGED
C
        TOTPRGCNT = TOTPRGCNT + TOTPGNOP(GNUM, TRACNT)
        TOTPRGAMT = TOTPRGAMT + TOTPGNOP(GNUM, DOLAMT)
C
C END OF LOOP TO WRITE INFORMATION IN THE REPORT
C
1000  CONTINUE
C
C PRINT TOTALS PURGED IN THE REPORT
C
      WRITE(IDFIL, 108)
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 109) TOTPRGCNT, CMONY(TOTPRGAMT, 14, VALUNIT)
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 102)
      WRITE(IDFIL, 102)
C
C CLOSE REPORT FILE
C
      CALL USRCLOS1(IDFIL)     
C
C FORMATS DEFINITION TO GENERATE REPORT WITH PURGE WITH NO OP.
C
100   FORMAT('RESUMO FINAL DE PRESCRICAO RELATIVA A SEMANA ', I2.2, '/', I4.4)
101   FORMAT(X, 131('='))
102   FORMAT(X, X)
103   FORMAT(41X, A)
104   FORMAT(60X, A)
105   FORMAT(30X, 'JOGO', 20X, 'TOTAL NAO PAGO', 20X, 'VALOR')
106   FORMAT(30X, 63('-'))
107   FORMAT(30X, 4A4, 12X, I10, 11X, A14) 
108   FORMAT(30X, 63('='))
109   FORMAT(30X, 'TOTAIS: ', 20X, I10, 11X, A14)
C
C THIS IS THE END TO GENERATE REPORT WITH PURGE WITH NO OP.
C
      END



