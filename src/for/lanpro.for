C PROGRAM LANPRO
C
C V06 26-APR-2001 CS  TYPE* REPLACED WITH OPSTXT().
C V05 15-jun-2000 OXK LN_EVNMASK moved here from LANEVN.DEF
C V04 09-OCT-1997 UXN TYPE STATEMENT ADDED AFTER SYS$CREMBX.
C V03 30-MAR-1995 WJK HAVE LANPRO CREATE TEMPORARY MAILBOX LOGICAL
C V02  7-MAR-1994 JWE Change to temporary mailboxs
C V01 30-MAR-1992 DAS ADDED INITIALIZATION OF READTIM(MAXLAN,MAXSAP)
C V01 26-NOV-1990 MRM RELEASE FOR VAX BASELINE.
C
C THIS TASK IMPLEMENTS ETHERNET MEDIUM ACCESS CONTROL AND DATA LINK LAYER.
C IN IEEE TERMS IT'S 802.3 AND 802.2 MODE=1.
C THE DATA STRUCTURES CONFORM TO 802 STANDARD.
C 802.2 MODE=2 OR OTHER ACK BASED PROTOCOL CAN BE IMPLEMENTED AROUND IT.
C
C IN-INTERFACE - LANGETB(BUF,STATUS)
C      FILL IT FROM LANDATA OFFSET
C      SNDLAN(BUF,SSAP,DSAP,LENGTH)
C OUT-INTERFACE- WHEN TRAPED GET A BUFFER FROM LANAPP(1,YOURSAP) QUEUE
C      PROCESS THE DATA FROM LANDATA OFFSET
C
C THE MAIN MODULE JUST SETS UP THE DATA STRUCTURES AND TRAP MECHANISM.
C THE TASK IS TRAP DRIVEN.
C REFERE TO : LTIMTRAP.FTN
C             LTSKTRAP.FTN
C             LBUFTRAP.FTN
C             LTERTRAP.FTN
C             LMESTRAP.FTN
C             LCMDTRAP.FTN FOR THE DETAILS
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	PROGRAM LANPRO
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
	INCLUDE 'INCLIB:LANCOM.DEF'
	INCLUDE 'INCLIB:LOCTABLE.DEF'
	INCLUDE 'INCLIB:LANEVN.DEF'
C
	INCLUDE '($IODEF)'
        INCLUDE '($SSDEF)'
        INCLUDE '($SYSSRVNAM)'
        INCLUDE '($LNMDEF)'                                     ! V03
C
	EXTERNAL LTSKTRAP
C
        CHARACTER GXEVNNAM*4            !NAME FUNCTION

        INTEGER*4       LN_EVNMASK              !BITMAP OF ALL EVENTS SET
C
	INTEGER*4 SAP, ERR, LUN, FRA, CONN, BUF2, BUF, GIVCON
	INTEGER*4 DSAP, SSAP, APP, EVN, STA, STATUS, LAN, ST,I
	INTEGER*4 FLGSTS
C
	INTEGER*4 NOFTLSIG

C       ***** Start V03 changes ***

        STRUCTURE   /CRELSTRUC/
            INTEGER*2   BUFLEN
            INTEGER*2   ITMCOD
            INTEGER*4   BUFADR
            INTEGER*4   LENADR
        END STRUCTURE
C
        RECORD      /CRELSTRUC/ ITEMLIST(10)

        CHARACTER*21  PROC_DIR_TBL, LOGNAM
        DATA PROC_DIR_TBL /'LNM$PROCESS_DIRECTORY'/
        DATA LOGNAM /'LNM$TEMPORARY_MAILBOX'/
        CHARACTER*9   GROUPNAM
        DATA GROUPNAM /'LNM$GROUP'/
        INTEGER*4   RETURN_LEN

C       ***** End V03 changes ***
                                
	EXTERNAL  NOFTLSIG
C
C
C
	CALL LIB$ESTABLISH(NOFTLSIG)
C
	CALL COPYRITE
C V03
	CALL SNIF_AND_WRKSET
C
	LN_EVNMASK = 0
C
C CREATE THE COMMON EVENT FLAG CLUSTER.
C
        STATUS=SYS$ASCEFC(%VAL(LN_EVNTIMER),GXEVNNAM()//LN_EVNNAME,0,0)
        IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
C
C CREATE THE EVENT FLAG MASK OF EVENTS FOR WHICH
C TO TRAP ON.
C
	LN_EVNMASK = IBSET(LN_EVNMASK, MOD(LN_EVNTSK_FLAG(0),32))
C
C CLEAR ALL EVENT FLAGS.
C
        DO 22 I=1,LANMAXTSK
          STATUS=SYS$CLREF(%VAL(LN_EVNTSK_FLAG(I)))
22      CONTINUE
C
C SETUP THE MAILBOX FOR INTERTASK MESSAGES.
C IF MAILBOX DOES NOT EXIST, CREATE IT.
C
        STATUS=SYS$ASSIGN(GXEVNNAM()//LN_MESNAME,LN_MESCHANNEL,,)
        IF(.NOT.STATUS) THEN

C       ***** Start V03 changes ***

        ITEMLIST(1).BUFLEN = 9
        ITEMLIST(1).ITMCOD = LNM$_STRING
        ITEMLIST(1).BUFADR = %LOC(GROUPNAM)
        ITEMLIST(1).LENADR = %LOC(RETURN_LEN)
        ITEMLIST(2).BUFLEN = 0
C
        STATUS = SYS$CRELNM(,PROC_DIR_TBL,LOGNAM,,ITEMLIST(1) )

C       ***** End V03 changes ***

          STATUS=SYS$CREMBX(%VAL(0),LN_MESCHANNEL,,,
     *                      %VAL('FD00'X),,GXEVNNAM()//LN_MESNAME)
          IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
	  CALL OPS('**** MAILBOX CREATED ****',0,0)
        ENDIF
C
C WAIT FOR SOMEONE TO LET YOU GO
C
C**       LANGO=LANPROSTART                       !@@@@ FOR TESTING ONLY
C
50	CONTINUE
	IF(LANGO.LT.LANPROSTART) THEN
	   CALL XWAIT(100,1,ST)
	   GOTO 50
	ENDIF
C
C SET TEST MODE
C
	LANTEST=0
C
C INIT HOME ADDRESSES
C
	DO 80 LAN=1,MAXLAN
	  FLANHOME(1,LAN)=0
	  FLANHOME(2,LAN)=0
80	CONTINUE
C
C READ CONFIG FILE
C
100	CONTINUE
	CALL READCONF(STATUS)
	IF (STATUS.NE.0) THEN
CCC	   TYPE*,'ERROR READING CONFIGURATION FILE...: ',STATUS
CCC	   CALL GPAUSE
CCC	   GOTO 100
	   CALL OPS('ERROR READING CONFIGURATION FILE...: ',STATUS,STATUS)
	   CALL XWAIT(2,1,ST)
           CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C COPY THE STATE TABLE
C
	DO 120 STA=1,MAXSTATE
	  DO 120 EVN=1,MAXEVENT
	    LANSTATES(EVN,STA)=LOCSTATES(EVN,STA)
120	CONTINUE
C
C QUEUES DEFINITION   (WRITE AND DONE(R W) QUEUES DEFINED BY LANS LATER)
C
	CALL FASTSET(0,LANTLIST,TLISTSIZ)
	CALL FASTSET(0,LANFREE,LANBNUM+2)
	CALL FASTSET(0,LANEXTRA,LANBNUM+2)
	CALL FASTSET(0,LANEXEC,LANBNUM+2)
C
	CALL DEFLST(LANTLIST,TLISTSIZ-2)
	CALL DEFLST(LANFREE,LANBNUM)
	CALL DEFLST(LANEXTRA,LANBNUM)
	CALL DEFLST(LANEXEC,LANBNUM)
C
C APPL QUESUS
C
	DO 140 APP=0,LANMAXTSK
	   CALL FASTSET(0,LANAPP(1,APP),LANBNUM+2)
	   CALL FASTSET(0,LANFRAP(1,APP),LANBNUM+2)
	   CALL DEFLST(LANAPP(1,APP),LANBNUM)
	   CALL DEFLST(LANFRAP(1,APP),LANBNUM)
140	CONTINUE
C
	NUMSAP=0
C
C SETUP CONNECTION NUMBER TABLE
C
	DO 150 SSAP=0,MAXSAP
	   DO 160 DSAP=0,MAXSAP
	      CONNECTION(SSAP,DSAP)=GIVCON(SSAP,DSAP)    !FUNCTION
160	   CONTINUE
150	CONTINUE
C
C INIT BUFFERS
C
	DO 200 BUF=1,LANBNUM
	   CALL FASTSET(0,LANBUF(-1,BUF),LANBTOT/4)
200	CONTINUE
C
C SET UP FREE LIST
C
	DO 250 BUF=1,LANBNUM
	   LANBUF(-1,BUF)=0	!QUEUED BUFFER
	   IF(BUF.GT.NUMEXTRA) THEN
	      LANBUF(LANLIST,BUF)=LISTFREE
	   ELSE
	      LANBUF(LANLIST,BUF)=LISTXTRA
	   ENDIF
	   BUF2=BUF
	   CALL LANRELB(BUF2)
250	CONTINUE
C
C SET SOME STARTUP PARAMETERS
C
	DO 300 SSAP=0,MAXSAP
	   LANSAPSTS(SSAP)=SAPDOWN            !OTHER SAPS ARE DOWN
300	CONTINUE
C
	DO 350 CONN=0,MAXCON
	   LANCONN(CONN)=CSAPCLO              !START FROM CLOSED
	   CURLAN(CONN)=0                     !START FROM NOTHING
	   LANTARR(CONN)=0                    !NOTHING ARRIVED YET
	   LANTOUT(CONN)=0                    !NO TIMEOUT SCHEDULED
	   DO 360 FRA=1,MAXFRAME
	      LANFRAMES(FRA,1,CONN)=0           !FRAME COUNTER READ
	      LANFRAMES(FRA,2,CONN)=0           !FRAME COUNTER WRITE
360	   CONTINUE
350	CONTINUE
C
	THISSTA=STADOWN
C
C INIT TIMER
C
	CALL GETTIM(LANTIMER)    !IN SECONDS FROM MIDNIGHT
C
	DO 400 LAN=1,MAXLAN
	   CALL FASTSET(0,LANWRITE(1,LAN),LANBNUM+2)
	   CALL FASTSET(0,LANDONER(1,LAN),LANBNUM+2)
	   CALL FASTSET(0,LANDONEW(1,LAN),LANBNUM+2)
	   CALL DEFLST(LANWRITE(1,LAN),LANBNUM)
	   CALL DEFLST(LANDONER(1,LAN),LANBNUM)
	   CALL DEFLST(LANDONEW(1,LAN),LANBNUM)
C
	   DO 460 ERR=1,MAXERROR
	      LANERRORS(ERR,LAN)=0            !ERROR COUNTERS BY LAN
460	   CONTINUE
C
	   DO 450 SAP=0,MAXSAP
	       LANLAN(SAP,LAN)=LANDOWN
	       FLANADR(1,LAN,SAP)=0
	       FLANADR(2,LAN,SAP)=0
	       LUNLAN(SAP,LAN)=0
               LANLUN(SAP,LAN)=0
               LANOPN(SAP,LAN)=0
               LOCLAN(SAP,LAN)=LANDOWN
450	   CONTINUE
400	CONTINUE
C
	DO 470 ERR=1,MAXERROR
	   LANERRFLG(ERR)=LOCERRFLG(ERR)
470	CONTINUE
C
	DO 500 LUN=11,10+MAXLUN
	   RETLUN(LUN)=0
	   GLOLUN(LUN)=0
500	CONTINUE
	DO 502 LAN=1,MAXLAN
	  DO 504 SAP=1,MAXSAP
	     WRITECNT(LAN,SAP)=0
	     READCNT(LAN,SAP)=0
             READTIM(LAN,SAP)=-1
504	  CONTINUE
502	CONTINUE
C
C LET APPL TASKS GO
C
	LANGO=LANPROUP
C
C START THE TIMER & MESSAGE TRAPS
C
	CALL LN_START_TIME
	CALL LN_START_MESS
C
C
C PLACE TASK IN TRAP WAIT STATE. NOTE: TASK WILL STILL
C SERVICE AST TRAPS WHILE WAITING FOR EVENT FLAGS TO BE SET.
C
C ====================== MAIN PROCESSING =====================
C
1000    CONTINUE
        STATUS=SYS$WFLOR(%VAL(LN_EVNTIMER),%VAL(LN_EVNMASK))
        IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
C
C CHECK FOR LANPRO TASK TRAP.
C
        STATUS=SYS$READEF(%VAL(LN_EVNTSK_FLAG(0)),FLGSTS)
        IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
        IF(STATUS.EQ.SS$_WASSET) THEN
          STATUS=SYS$CLREF(%VAL(LN_EVNTSK_FLAG(0)))
          IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
	  STATUS=SYS$DCLAST(LTSKTRAP,%VAL(0),)	 !TRAP TO LTSKTRAP
          IF(.NOT.STATUS) CALL LIB$SIGNAL(%VAL(STATUS))
	  GOTO 1000
        ELSE IF (STATUS.NE.SS$_WASCLR) THEN
CCC          TYPE *,'LANPRO:INVALID TASK EVENT FLAG'
	  CALL OPSTXT('LANPRO:INVALID TASK EVENT FLAG')
        ENDIF
C
        GOTO 1000
	END
