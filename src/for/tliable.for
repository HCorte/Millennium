C
C SUBROUTINE TLIABLE
C $Log:   GXAFXT:[GOLS]TLIABLE.FOV  $
C  
C     Rev 1.1   05 Sep 1996 10:24:16   RXK
C  Rfss 287. Real*8 value used for calculation of big amounts 
C  
C     Rev 1.10   18 Aug 1995 13:22:12   RXK
C  Liabilities for purge period + 14 days
C  
C     Rev 1.9   08 Aug 1995 12:32:44   HXK
C  Fixes for year + 2 weeks for Oddset liabilities (RXK)
C  
C     Rev 1.8   12 Dec 1994 10:19:34   PXB
C  Now passes correct values to balans file.
C  
C     Rev 1.7   02 Sep 1994 18:14:48   HXK
C  Merge of May,June RFSS batch 
C  
C     Rev 1.7   27 Apr 1994 17:27:04   JXP
C  COPY=0
C  
C     Rev 1.6   25 Nov 1993 14:00:46   SXH
C  MORE BUG FIXES, INIT WONTOT ETC TO ZERO, UNCOMMENT BALWRI CALL
C  
C     Rev 1.5   21 Nov 1993 11:49:48   SXH
C  FIX OVERFLOW
C  
C     Rev 1.4   05 Nov 1993  2:35:14   GXA
C  Corrected Total won and Previously paid (Substract refunds).
C  
C     Rev 1.3   04 Nov 1993 14:57:16   HXK
C  CHANGE FOR GRAND TOTALS -HXN.
C  
C     Rev 1.2   03 Nov 1993 12:27:28   HXK
C  CHANGES FOR PITKA
C  
C     Rev 1.1   24 Aug 1993 18:53:04   SXH
C  Fix for BALWRI CALL
C  
C     Rev 1.0   21 Jan 1993 17:51:28   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - tliable.for **
C
C TLIABLE.FOR
C
C V03 16-Nov-93 HHN Stored total amounts in 2*I4 instead of I4
C V02 12-NOV-91 MTK INITIAL RELEASE FOR NETHERLANDS
C V01 01-AUG-90 XXX RELEASED FOR VAX
C
C
C SUBROUTINE TO GENERATE LIABILITY REPORTS FOR ALL
C AVAILABLE TOTO SELECT
C
C
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1991 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE TLIABLE(TLIB,TPAY,GAMTAB)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:DTSREC.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
C
	INTEGER*4 MDRAW,RDRAW
	PARAMETER(MDRAW=400)
	PARAMETER(RDRAW=365)

C INPUT PARAMETERS
C ----------------
	INTEGER*4 TLIB(MDRAW,2,NUMTSL)
	INTEGER*4 TPAY(MDRAW,2,NUMTSL)
	INTEGER*4 GAMTAB(2,MAXGAM)

	INTEGER*4 TOTWON /0/, 
     *	          TOTPAD /0/, 
     *	          TOTDAY /0/, 
     *	          TOTPRG /0/, 
     *	          TOTLIB /0/

	INTEGER*4 TOTWONREF /0/, 
     *	          TOTPADREF /0/, 
     *	          TOTDAYREF /0/, 
     *	          TOTPRGREF /0/, 
     *	          TOTLIBREF /0/

	INTEGER*4 WONTOT(2) /2*0/,        !TOTAL IS IN 2*I4
     *	          PADTOT(2) /2*0/, 
     *	          DAYTOT(2) /2*0/, 
     *	          PRGTOT(2) /2*0/, 
     *	          LIBTOT(2) /2*0/
       
	INTEGER*4 GRNWON(2) /2*0/, 
     *	          GRNPAD(2) /2*0/, 
     *	          GRNDAY(2) /2*0/, 
     *	          GRNPRG(2) /2*0/, 
     *	          GRNLIB(2) /2*0/
	REAL*8    R_GRNDAY

	INTEGER*4 GRNWONREF(2) /2*0/,
     *            GRNPADREF(2) /2*0/, 
     *	          GRNDAYREF(2) /2*0/, 
     *	          GRNPRGREF(2) /2*0/, 
     *	          GRNLIBREF(2) /2*0/ 

	INTEGER*4 GRNWONTOT(2) /2*0/,
     *            GRNPADTOT(2) /2*0/, 
     *	          GRNDAYTOT(2) /2*0/, 
     *	          GRNPRGTOT(2) /2*0/, 
     *	          GRNLIBTOT(2) /2*0/ 

        REAL*8    R_GRNWON/0.D0/,R_GRNWONREF/0.D0/,R_GRNWONTOT/0.D0/
        REAL*8    R_GRNPAD/0.D0/,R_GRNPADREF/0.D0/,R_GRNPADTOT/0.D0/
C
	INTEGER*4 DRAW, DRWIND, LINCNT, PAGE, ST, K
	INTEGER*4 GNUM, GIND, COPY
	INTEGER*4 DTSFDB(7), REPLU/7/

        INTEGER*4 RAPCODE
        INTEGER*4 GAMESUMS(MAXGAM,NUMFIN,NUMTOT)
        INTEGER*4 TOTSUMS(NO_BALSUMS)

        REAL*8    TOTREAL

	INTEGER*2 DATE(LDATE_LEN) /LDATE_LEN*0/

	CHARACTER REPHDR*40
	CHARACTER REPNAM*12

C BEGIN CODE ---------------------------------------


	DO 1000  GIND=1,NUMTSL
	   DATE(5) = DAYCDC
	   CALL LCDATE(DATE)
	   GNUM=GTNTAB(TTSL,GIND)
	IF(GNUM.LT.1) GOTO 1000
	IF(DAYHDR(GNUM).LT.1) GOTO 1000
        WRITE(5,8000) IAM(),(GLNAMES(K,GNUM),K=1,4)
C       CALL INPNUM('Enter number of report copies ',COPY,0,20,EXT)
	COPY=0
C
	CALL OPENW(3,GFNAMES(1,GNUM),4,0,0,ST)
	CALL IOINIT(DTSFDB,3,DTSSEC*256)
	IF(ST.NE.0) CALL FILERR(GFNAMES(1,GNUM),1,ST,0)
	WRITE (REPHDR,8001) GSNAMES(GNUM),(DATE(K),K=7,13)
	WRITE (REPNAM,8002) GIND
	CALL ROPEN(REPNAM,REPLU,ST)
	IF(ST.NE.0) THEN
	   TYPE*,REPNAM,' report file open error > ',ST
	   CALL GPAUSE
	ENDIF
C
C CLEAR TOTALS
C
	PAGE=0
	LINCNT=70
	CALL FASTSET (0,GRNWON,2)
	CALL FASTSET (0,GRNDAY,2)
	CALL FASTSET (0,GRNLIB,2)
	CALL FASTSET (0,GRNPRG,2)
	CALL FASTSET (0,GRNPAD,2)
	R_GRNDAY = 0.0D0

	CALL FASTSET (0,GRNWONREF,2)
	CALL FASTSET (0,GRNDAYREF,2)
	CALL FASTSET (0,GRNLIBREF,2)
	CALL FASTSET (0,GRNPRGREF,2)
	CALL FASTSET (0,GRNPADREF,2)

	CALL FASTSET (0,GRNWONTOT,2)
	CALL FASTSET (0,GRNDAYTOT,2)
	CALL FASTSET (0,GRNLIBTOT,2)
	CALL FASTSET (0,GRNPRGTOT,2)
	CALL FASTSET (0,GRNPADTOT,2)
C
	DO 300 DRWIND=1,RDRAW
	DRAW=DAYHDR(GNUM)-DRWIND+1
	IF(DRAW.LT.1) GOTO 310
	CALL READW(DTSFDB,DRAW,DTSREC,ST)
	IF(ST.NE.0) CALL FILERR(GFNAMES(1,GNUM),1,ST,DRAW)
	IF(DTSUPD.GT.DAYCDC) GOTO 300
	IF(DTSPUP.NE.0 .AND. (DTSPUP+14).LT.DAYCDC) GOTO 310
C
	TOTWON=0
	TOTPAD=0
	TOTLIB=0
	TOTPRG=0
	TOTDAY=0

        WONTOT(1)=0
        WONTOT(2)=0
        LIBTOT(1)=0
        LIBTOT(2)=0
        DAYTOT(1)=0
        DAYTOT(2)=0
        PADTOT(1)=0
        PADTOT(2)=0
        PRGTOT(1)=0
        PRGTOT(2)=0

	TOTWON    = DTSWON - DTSREF
        TOTWONREF = DTSREF  !TOTAL REFUND AMOUNT
C***	WONTOT    = TOTWON + TOTWONREF
	CALL ADDI8I4 (WONTOT,DTSWON,VALUNIT)

        TOTLIB    = TLIB(DRWIND,1,GIND)            !OUTSTANDING
        TOTLIBREF = TLIB(DRWIND,2,GIND)            !OUTSTANDING REFUNDS
C***	LIBTOT    = TOTLIB + TOTLIBREF
	CALL ADDI8I4 (LIBTOT,TOTLIB,VALUNIT)
	CALL ADDI8I4 (LIBTOT,TOTLIBREF,VALUNIT)

        TOTPAD    = DTSPAD-DTSPRF                  !PREVIOUSLY PAID
        TOTPADREF = DTSPRF                         !PREVIOUSLY PAID REFUNDS

	TOTDAY    = TPAY(DRWIND,1,GIND)            !PAID TODAY
	TOTDAYREF = TPAY(DRWIND,2,GIND)            !PAID TODAY REFUNDS
C***	DAYTOT    = TOTDAY + TOTDAYREF
	CALL ADDI8I4 (DAYTOT,TOTDAY,VALUNIT)
	CALL ADDI8I4 (DAYTOT,TOTDAYREF,VALUNIT)

	IF(DAYCDC.EQ.DTSUPD) THEN
           TOTPAD=TOTPAD-TOTDAY
           TOTPADREF=TOTPADREF-TOTDAYREF
        ENDIF
C***	PADTOT    = TOTPAD + TOTPADREF
	CALL ADDI8I4 (PADTOT,TOTPAD,VALUNIT)
	CALL ADDI8I4 (PADTOT,TOTPADREF,VALUNIT)

	TOTPRG    = TOTWON-TOTLIB-TOTPAD-TOTDAY
	TOTPRGREF = TOTWONREF -TOTLIBREF -TOTPADREF -TOTDAYREF
C***	PRGTOT    = TOTPRG + TOTPRGREF
	CALL ADDI8I4 (PRGTOT,TOTPRG,VALUNIT)
	CALL ADDI8I4 (PRGTOT,TOTPRGREF,VALUNIT)
C
	IF(LINCNT.GT.LINSPP) THEN
	  CALL TITLE(REPHDR,REPNAM,GIND,REPLU,PAGE,DAYCDC)
	  WRITE(REPLU,9000)
C***      WRITE(REPLU,9001) DRAW
	  LINCNT=7
	ENDIF

	LINCNT=LINCNT+9
        WRITE(REPLU,9001) DRAW
	WRITE(REPLU,7002)CSMONY(TOTWON,13,VALUNIT),
     *                   CSMONY(TOTWONREF,13,VALUNIT),
     *                   CSMONYI8 (WONTOT,13,VALUNIT)

	WRITE(REPLU,7003)CSMONY(TOTPAD,13,VALUNIT),
     *                   CSMONY(TOTPADREF,13,VALUNIT),
     *                   CSMONYI8 (PADTOT,13,VALUNIT)

	WRITE(REPLU,7004)CSMONY(TOTDAY,13,VALUNIT),
     *                   CSMONY(TOTDAYREF,13,VALUNIT),
     *                   CSMONYI8 (DAYTOT,13,VALUNIT)

	WRITE(REPLU,7005)CSMONY(TOTPRG,13,VALUNIT),
     *                   CSMONY(TOTPRGREF,13,VALUNIT),
     *                   CSMONYI8 (PRGTOT,13,VALUNIT)

	WRITE(REPLU,7006)CSMONY(TOTLIB,13,VALUNIT),
     *                   CSMONY(TOTLIBREF,13,VALUNIT),
     *                   CSMONYI8 (LIBTOT,13,VALUNIT)

C       CALCULATE GRAND TOTALS
C       ----------------------
C***	GRNWON = GRNWON + TOTWON 
C***	GRNPAD = GRNPAD + TOTPAD 
C***	GRNDAY = GRNDAY + TOTDAY 
C***	GRNPRG = GRNPRG + TOTPRG 
C***	GRNLIB = GRNLIB + TOTLIB 

	CALL ADDI8I4 (GRNWON,TOTWON,VALUNIT)
	CALL ADDI8I4 (GRNPAD,TOTPAD,VALUNIT)
	CALL ADDI8I4 (GRNDAY,TOTDAY,VALUNIT)
	CALL ADDI8I4 (GRNPRG,TOTPRG,VALUNIT)
	CALL ADDI8I4 (GRNLIB,TOTLIB,VALUNIT)

        R_GRNWON = R_GRNWON + DFLOAT(DTSWON-DTSREF)
        R_GRNPAD = R_GRNPAD + DFLOAT(DTSPAD-DTSPRF)

C***	GRNWONREF = GRNWONREF + TOTWONREF
C***	GRNPADREF = GRNPADREF + TOTPADREF
C***	GRNDAYREF = GRNDAYREF + TOTDAYREF
C***	GRNPRGREF = GRNPRGREF + TOTPRGREF
C***	GRNLIBREF = GRNLIBREF + TOTLIBREF

	CALL ADDI8I4 (GRNWONREF,TOTWONREF,VALUNIT)
	CALL ADDI8I4 (GRNPADREF,TOTPADREF,VALUNIT)
	CALL ADDI8I4 (GRNDAYREF,TOTDAYREF,VALUNIT)
	CALL ADDI8I4 (GRNPRGREF,TOTPRGREF,VALUNIT)
	CALL ADDI8I4 (GRNLIBREF,TOTLIBREF,VALUNIT)

        R_GRNWONREF = R_GRNWONREF + DFLOAT(DTSREF)
        R_GRNPADREF = R_GRNPADREF + DFLOAT(DTSPRF)

C***	GRNWONTOT = GRNWONTOT + WONTOT
C***	GRNPADTOT = GRNPADTOT + PADTOT
C***	GRNDAYTOT = GRNDAYTOT + DAYTOT
C***	GRNPRGTOT = GRNPRGTOT + PRGTOT
C***	GRNLIBTOT = GRNLIBTOT + LIBTOT

	CALL ADDI8I8 (GRNWONTOT,WONTOT,VALUNIT)
	CALL ADDI8I8 (GRNPADTOT,PADTOT,VALUNIT)
	CALL ADDI8I8 (GRNDAYTOT,DAYTOT,VALUNIT)
	CALL ADDI8I8 (GRNPRGTOT,PRGTOT,VALUNIT)
	CALL ADDI8I8 (GRNLIBTOT,LIBTOT,VALUNIT)

        R_GRNWONTOT = R_GRNWONTOT + DFLOAT(DTSWON)
        R_GRNPADTOT = R_GRNPADTOT + DFLOAT(DTSPAD)

	R_GRNDAY = R_GRNDAY + DFLOAT (TOTDAY) + DFLOAT (TOTDAYREF)

300	CONTINUE

310	CONTINUE

        WRITE(REPLU,6001)  
C*  	WRITE(REPLU,7002)CSMONYI8(GRNWON,13,VALUNIT),
C*     *                   CSMONYI8(GRNWONREF,13,VALUNIT),
C*     *                   CSMONYI8(GRNWONTOT,13,VALUNIT)

C*	WRITE(REPLU,7003)CSMONYI8(GRNPAD,13,VALUNIT),
C*     *                   CSMONYI8(GRNPADREF,13,VALUNIT),
C*     *                   CSMONYI8(GRNPADTOT,13,VALUNIT)

  	WRITE(REPLU,7007) R_GRNWON*DYN_VALUNIT/100,
     *                    R_GRNWONREF*DYN_VALUNIT/100,
     *                    R_GRNWONTOT*DYN_VALUNIT/100

	WRITE(REPLU,7008) R_GRNPAD*DYN_VALUNIT/100,
     *                    R_GRNPADREF*DYN_VALUNIT/100,
     *                    R_GRNPADTOT*DYN_VALUNIT/100

	WRITE(REPLU,7004)CSMONYI8(GRNDAY,13,VALUNIT),
     *                   CSMONYI8(GRNDAYREF,13,VALUNIT),
     *                   CSMONYI8(GRNDAYTOT,13,VALUNIT)

	WRITE(REPLU,7005)CSMONYI8(GRNPRG,13,VALUNIT),
     *                   CSMONYI8(GRNPRGREF,13,VALUNIT),
     *                   CSMONYI8(GRNPRGTOT,13,VALUNIT)

	WRITE(REPLU,7006)CSMONYI8(GRNLIB,13,VALUNIT),
     *                   CSMONYI8(GRNLIBREF,13,VALUNIT),
     *                   CSMONYI8(GRNLIBTOT,13,VALUNIT)

C        WRITE(REPLU,9003)  CSMONY(GRNWON,13,VALUNIT),
C     *                     CSMONY(GRNPAD,13,VALUNIT),
C     *                     CSMONY(GRNDAY,13,VALUNIT),
C     *                     CSMONY(GRNLIB,13,VALUNIT),
C     *                     CSMONY(GRNPRG,13,VALUNIT)
C***	WRITE(REPLU,9004)  CSMONY(GAMTAB(1,GNUM),13,VALUNIT),
C*** *                     CSMONY(GAMTAB(2,GNUM),13,VALUNIT)
	CALL USRCLOS1(     3)
	CALL USRCLOS1(REPLU)
C	CALL SPOOL(REPNAM,COPY,ST)

        ! send GRAND TOTAL TO BALANSFILE
C                                                                               
C***    TOTREAL = GRNDAY
        TOTREAL = R_GRNDAY
C	WRITE (5,1414) TOTREAL
C 1414   FORMAT (1X,' TOTREAL NEW :',F15.2)

        RAPCODE = 80 + GNUM                   
        CALL BALWRI(RAPCODE,GAMESUMS,TOTSUMS,TOTREAL)

1000	CONTINUE
C
C     ===================== Format Statements =================
C
8000    FORMAT(1X,A,' Generating ',4A4,' liability report')
8001	FORMAT(A4,' LIABILITY REPORT FOR ',7A2)
8002	FORMAT('TLIABLE',I1,'.REP')
8003	FORMAT(1X,A)
C
9000	FORMAT(1X,131('='))


C9001	FORMAT(//,2X,'DRAW',6X,'TOTAL WON',6X,
C     *         'PREV PAID',5X,'PAID TODAY',4X,'OUTSTANDING',
C     *         9X,'PURGED',/)


9001    FORMAT(//,2X,'DRAW',I5,17X,'WINS',12X,
     *         'REFUNDS',14X,'TOTAL'
     *         /)

C9002	FORMAT(2X,I4,5(2X,A13),A16)
9003	FORMAT(/,2X,'TOTAL',5(2X,A13))
C9004	FORMAT(28X,' NET PAID  ',A13,/,
C     *         28X,'    TAXES  ',A13)

7002    FORMAT(1X,'TOTAL WON         ',3(A13,6X))
7003    FORMAT(1X,'PREVIOUSLY PAID   ',3(A13,6X))
7004    FORMAT(1X,'PAID TODAY        ',3(A13,6X))
7005    FORMAT(1X,'PURGED/EXPIRED    ',3(A13,6X))
7006    FORMAT(1X,'OUTSTANDING       ',3(A13,6X))
7007    FORMAT(1X,'TOTAL WON         ',3(F13.2,6X))
7008    FORMAT(1X,'PREVIOUSLY PAID   ',3(F13.2,6X))

6001    FORMAT(//,2X,'GRAND TOTALS',14X,'WINS',12X,
     *         'REFUNDS',14X,'TOTAL'
     *         /)
	RETURN
	END
