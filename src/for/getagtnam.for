C
C     FILE   : GETAGTNAM.FOR
C     AUTHOR : J.H.R
C     VERSION: 01            DATE: 26 / 04 / 2001
C
C V02 JHR CHANGED TERMINAL NUMBER BY AGENT NUMBER
C V01 CS  INITIAL RELEASE FOR PORTUGAL PROJECT
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rigth Reserved
C
C     **************************************************************************
C
C THIS ROUTINE GET AGENT NAME INFORMATION AND SEND IT TO TERMINAL
C
C=======OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE GETAGTNAM(FDB, TASK, TRABUF, MESTAB, OUTLEN)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO GET AGENT NAME INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:AGTCOM.DEF'
      INCLUDE 'INCLIB:AGTINF.DEF'
      INCLUDE 'INCLIB:RECAGT.DEF'
      INCLUDE 'INCLIB:DESTRA.DEF'
      INCLUDE 'INCLIB:CHKSUMCM.DEF'

C
C PARAMETERS DEFINITION TO GET AGENT NAME INFORMATION
C
      INTEGER * 4 FDB(*)             ! FILE DESCRIPTION BLOCK TO READ ASF FILE
      INTEGER * 4 TASK               ! TASK THAT CALL THIS FUNCTION
C
      BYTE MESTAB(*)                 ! IMPUT MESSAGE FROM TERMINAL
C
      INTEGER * 2 OUTLEN             ! LENGHT OF OUTPUT MESSAGE
C
C VARIABLES DEFINITION TO GET AGENT NAME INFORMATION
C
      LOGICAL     FOUND
C
      INTEGER * 4 IND                ! INDEX TO DECODE MESSAGES
      INTEGER * 4 CLASS              ! CLASS NUMBER
      INTEGER * 4 SUBCLAS            ! SUBCLAS NUMBER
      INTEGER * 4 AGT                ! AGENT NUMBER
      INTEGER * 4 MYCHKSUM           ! VARIABLE TO CALCULATE CHECKSUM
      INTEGER * 4 CHKLEN             ! CHECKSUM LENGTH
      INTEGER * 4 FSTS               ! FUNCTION STATUS
      INTEGER * 4 MESS(EDLEN)        ! ERROR MESSAGE
      INTEGER * 4 ERRTYP             ! ERROR TYPE
      INTEGER * 4 TERM               ! TERMINAL NUMBER
C
C INITIATE VARIABLES TO GET AGENT NAME INFORMATION
C
      DATA ERRTYP / Z90 /            ! ERROR TYPE
C
C SET INDEX COUNTER TO DECODE MESSAGE FROM TERMINAL
C
      IND = 5
C
C GET CLASS AND SUBCLAS INFORMATION
C
      CLASS   = ZEXT(MESTAB(IND + 0))
      SUBCLAS = ZEXT(MESTAB(IND + 1))
      IND = IND + 2
C
C CHECK IF CLASS AND SUBCLAS INFORMATION ARE OK
C
      IF(CLASS .NE. 1 .OR. SUBCLAS .NE. 0) THEN
 	TRABUF(TERR) = INVL
        GOTO 9000
      ENDIF
C
C WE ARE USING FINALCIAL REPORT FORMAT, BUT DON'T USE REPORT TYPE / PASS NUMBER
C
      IND = IND + 3
C
C GET AGENT NUMBER SEND FROM TERMINAL
C
      CALL TERM_TO_HOST(MESTAB(IND), AGT, 4)  
C
C SEAR TERMINAL NUMBER TO THIS AGENT
C
      TERM  = 1
      FOUND = .FALSE.
      DO  WHILE(TERM.LE.NUMAGT .AND. .NOT. FOUND)
          IF  ( AGT .EQ. AGTTAB(AGTNUM, TERM) .AND. AGT .NE. 0 ) THEN
              FOUND = .TRUE.
          ELSE
              TERM = TERM + 1
          ENDIF
      ENDDO
C
C WE DON NOT HAVE FOUND TERMINAL FOR THIS AGENT
C
      IF  ( .NOT. FOUND ) THEN
      	  TRABUF(TERR) = BTOPSN
      	  GOTO 9000
      ENDIF
C
C READ INFORMATION FROM ASF FILE
C
      CALL READW(FDB, TERM, ASFREC, FSTS)
C
C CHECK IF READ INFORMATION IT IS OK
C
      IF(FSTS .NE. 0) THEN
	MESS(1) = TASK
	MESS(2) = TEGEN
	MESS(3) = 4
	CALL FASTMOV(SFNAMES(1, ASF), MESS(4), 5)
	MESS(9) = FSTS
	MESS(10) = AGT
	CALL QUEMES(MESS)
	TRABUF(TERR) = INVL
	GOTO 9000
      ENDIF
C
C SET INDEX TO SEND INFORMATION TO TERMINAL 
C
      IND = 5
C
C PUT TIME IN HHMMSS FORMAT
C
      CALL PUTIME(TRABUF(TTIM), MESTAB, IND)
C
C PUT CLASS AND SUBCLAS
C
      MESTAB(IND + 0) = CLASS
      MESTAB(IND + 1) = SUBCLAS
      IND = IND + 2
C
C PUT AGENT NAME 
C
      CALL MOVBYT(%REF(ASFBYT), SNAME, MESTAB, IND, 25)
      IND = IND + 25
C
C SET MESSAGE LENGHT OUTPUT
C
      OUTLEN = IND - 1
      GOTO 1000
C
C ERROR IN REPORT REQUEST FROM TERMINAL
C
9000  CONTINUE
      TRABUF(TSTAT) = REJT
      MESTAB(2)     = ERRTYP
      MESTAB(5)     = TRABUF(TERR)
      OUTLEN        = 6
C
C CALCULATE CHECKSUM FOR MESSAGE BACK TO TERMINAL
C
1000  CONTINUE
      I4CCITT   = TRABUF(TCHK)
      MESTAB(3) = I1CCITT(2)
      MESTAB(4) = I1CCITT(1)
      CHKLEN    = OUTLEN - 1
      CALL GETCCITT(MESTAB,1,CHKLEN,MYCHKSUM)
      I4CCITT   = MYCHKSUM
      MESTAB(3) = I1CCITT(2)
      MESTAB(4) = I1CCITT(1)
C
C END OF ROUTINE TO GET AGENT NAME INFORMATION
C
      RETURN
C
C THIS IS THE END TO GET AGENT NAME INFORMATION 
C
      END

