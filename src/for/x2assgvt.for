C
C SUBROUTINE X2ASSGVT
C $Log:   GXAFXT:[GOLS]X2ASSGVT.FOV  $
C  
C     Rev 1.0   17 Apr 1996 16:08:06   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.1   27 Dec 1994  1:11:46   DJO
C  Updates as a result of shakedown testing for install system.
C  
C     Rev 1.0   16 Dec 1994 11:59:54   DJO
C  Changes added for X2X support for GVT install messages.
C  
C     Rev 1.0   25 Oct 1994 15:01:40   SCD
C  Initial revision.
C  
C
C++++++++++++++++++++++++++++++++++++++++++++++
C
C     X2ASSGVT                 ;ASSIGN DUMMY STATION AND TERMINAL
C                              ;NUMBERS TO NEW GVTS
C     CALL X2ASSGVT(SIGNON_STATUS,REAL_STN_NO,DUMMY_STN_NO,EVSNNUM,STATUS)
C              
C     IN:
C        SIGNON_STATUS  - STATUS AS A RESULT OF TRYING TO SIGN ON TO
C			  THE GVT
C			  = 0 TO FREE DUMMY STATION WITHOUT UPDATING
C			      MEMORY
C			  = 1 TO CONVERT DUMMY STATION TO A REAL STATION
C	 REAL_STN_NO - REAL STATION NUMBER TO BE ASSIGNED
C	 DUMMY_STN_NO - DUMMY STATION NUMBER TO BE MADE AVAILABLE FOR
C		        REASSIGNMENT TO ANOTHER STATION
C	 EVSNNUM - EVSN (GVT ID) TO BE ASSIGNED TO THE REAL STATION
C
C     OUT:
C        STATUS  - STATUS
C
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C V06 23-DEC-94 DJO Added code to prevent subscript range errors.
C V05 15-DEC-94 SCD Add counter for number of active dummy station, i.e.
C		    stations in use
C V04 12-DEC-94 SCD Do NOT write to the station file directly.  Instead,
C		    call X2BLDCMD to write the GVT ID as is done in the
C		    HOTSNP.  This will also update X2XS_EVNS so don't
C		    bother to do it here, either.
C V03 12-OCT-94 SCD Do NOT zero out dummy station EVSN.  If we clear out
C		    EVSN, then we do not get the confirmation message on
C		    the GVT.  Make changes to X2ALLSTN to avoid
C		    displaying available dummy stations on this snapshot.
C V02 12-OCT-94 SCD Use a parameter for the Logical Unit Number 
C		    assigned to Station File, even though OPENLOD will
C		    only allow us to use 1
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE X2ASSGVT(SIGNON_STATUS,REAL_STN_NO,DUMMY_STN_NO,
     *			    EVSNNUM,STATUS)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:AGTINF.DEF'
	INCLUDE 'INCLIB:X2XCOM.DEF'
	INCLUDE 'INCLIB:X2XSTN.DEF'
	INCLUDE 'INCLIB:X2BLDNET.DEF'
C

        INTEGER*4 EVSNNUM(X2X_EVSN_MAXLEN), SIGNON_STATUS
	INTEGER*4 REAL_STN_NO, DUMMY_STN_NO, STATUS
	INTEGER*4 DUMMY_START, DUMMY_END	!DJO - V06
	INTEGER*4 LUN				!V02
	PARAMETER (LUN = 1)			!V02
	INTEGER*4 FREE_DUMMY_ONLY		!SIGNON STATUS VALUE IF WE
	PARAMETER (FREE_DUMMY_ONLY = 0)	!DON'T WANT TO UPDATE MEMORY

	INTEGER*4 CONN_TYPE,DUMMY_CLASS,DUMMY_INDEX
	INTEGER*4 BUF(CDLEN)		  !V04


	STATUS = -100
D	TYPE *, ' X2ASSGVT - initial status = ', status
D	TYPE *, ' X2ASSGVT - SIGNON_STATUS  = ', SIGNON_STATUS 
C	USE CONNECTION TYPE TO DETERMINE THE CLASS OF THE DUMMY STATION
        CONN_TYPE = ZEXT(BX2XS_CONN_TYPE(DUMMY_STN_NO))

	IF (CONN_TYPE.EQ.X2XSCT_GTECH_DIAL) THEN
            DUMMY_CLASS = CLASS_GVT
	ELSEIF (CONN_TYPE.EQ.X2XSCT_X28PAD) THEN
            DUMMY_CLASS = CLASS_X28
	ELSE				!INVALID DUMMY CLASS
	   STATUS = -1
D	TYPE *, ' X2ASSGVT - dummy class status = ', status
	   RETURN
	ENDIF

C	NOTE: THE X2XC_DUMMY_FREE_LIST VECTOR IS INDEXED FROM 
C	(1...X2XC_DUMMY_STN_COUNT(CLASS)).  THE DUMMY_STN_NO WILL BE IN THE 
C	RANGE OF (X2XC_DUMMY_START_STN(CLASS)...X2XC_DUMMY_END_STN(CLASS)).  THEREFORE,
C	THE ENTRIES IN X2XC_DUMMY_FREE_LIST(1...X2XC_DUMMY_STN_COUNT(CLASS)) MAP TO
C	DUMMY_STN_NO VALUES IN THE RANGE OF 
C	(X2XC_DUMMY_START_STN(CLASS)...X2XC_DUMMY_END_STN(CLASS)).  CONSEQUENTLY, 
C	WE NEED AN OFFSET VARIABLE TO GET THE CORRECT INDEX INTO 
C	X2XC_DUMMY_FREE_LIST BASED ON THE VALUE OF DUMMY_STN_NO.
C	
	DUMMY_INDEX = DUMMY_STN_NO - X2XC_DUMMY_START_STN(DUMMY_CLASS) + 1
C
C DJO - MAKE SOME CHECKS TO BE SURE THE DUMMY STATION NUMBER PASSED IS A
C       VALID DUMMY STN NUMBER AND THAT THE RESULTANT "DUMMY_INDEX" IS 
C       WITHIN RANGE
C
	IF(DUMMY_INDEX.LE.0.OR.DUMMY_INDEX.GT.X2XC_MAX_DUMMY_STNS) THEN
	  STATUS = -3
	  RETURN
	ENDIF
	DUMMY_START=X2XC_DUMMY_START_STN(DUMMY_CLASS)
	DUMMY_END=X2XC_DUMMY_END_STN(DUMMY_CLASS)
	IF(DUMMY_STN_NO.LT.DUMMY_START.OR.DUMMY_STN_NO.GT.DUMMY_END) THEN
	  STATUS = -4
	  RETURN
	ENDIF
C
	IF (SIGNON_STATUS .NE. FREE_DUMMY_ONLY) THEN	!ASSIGN DUMMY TO REAL
							!STATION

	    IF (X2XC_DUMMY_FREE_LIST(DUMMY_INDEX,DUMMY_CLASS) .EQ. 
     *		X2XC_DUMMY_IN_USE)
     *      THEN
C	COPY THE EVSN ASSOCIATED WITH THE DUMMY STATION TO THE EVSN FOR
C	THE REAL STATION.
CV04	       DO 140 OFF1=1,X2X_EVSN_MAXLEN
CV04	          X2XS_EVSN(OFF1,REAL_STN_NO) = X2XS_EVSN(OFF1,DUMMY_STN_NO)
CV04140            CONTINUE
CV04C	READ THE STATION RECORD FROM THE STATION FILE, UPDATE THE
CV04C	GVT ID FIELD FOR THE REAL STATION WITH THE GVT ID , AND REWRITE
CV04C	THE REAL STATION RECORD TO THE STATION FILE.

CV04	       CALL OPENLOD(X2FILNAM(XSTN),LUN)		  !V02

CV04	       CALL READLOD(LUN,REAL_STN_NO,X2XSTN_REC,ST)  !READ REAL STN RECORD
CV04	       IF(ST.EQ.144) GOTO 8000

CV04	       DO 240 OFF1=1,X2X_EVSN_MAXLEN		!UPDATE GVT ID
CV04                  X2XSTN_EVSN(OFF1) = X2XS_EVSN(OFF1,REAL_STN_NO)
CV04240            CONTINUE	

CV04	        CALL WRITLOD(LUN,REAL_STN_NO,X2XSTN_REC,ST)  !REWRITE REAL STN RECORD

CV048000	        CALL CLOSLOD(LUN)
C
C	V04 - CALL X2BLDCMD TO UPDATE THE STATION FILE RECORD FOR THIS STATION
		CALL X2BLDCMD (1,XSTN,REAL_STN_NO,38,X2XS_EVSN(1,DUMMY_STN_NO),
     *			       1,0,BUF)
	        STATUS = 0			!0 = REAL STATION # ASSIGNED W/O ERROR
	    ELSE				!DUMMY STATION WAS NEVER ASSIGNED
D	TYPE *, ' X2ASSGVT - dummy in use status = ', status
	        STATUS = -2
	        RETURN
	    ENDIF

	ELSE				!SIGNON_STATUS = FREE_DUMMY_ONLY SO
					!JUST SET STATUS AND RETURN
	   STATUS = 0
	ENDIF

C	REGARDLESS OF THE SIGNON_STATUS, WE ALWAYS WANT TO MAKE THE DUMMY 
C	STATION AVAILABLE AGAIN AND ZERO OUT THE DUMMY STATIONS'S EVSN

	X2XC_DUMMY_FREE_LIST(DUMMY_INDEX,DUMMY_CLASS) = X2XC_DUMMY_AVAILABLE
CV03	DO 340 OFF1=1,X2X_EVSN_MAXLEN
CV03	   X2XS_EVSN(OFF1,DUMMY_STN_NO) = 0
CV03340     CONTINUE

C	***** Start of V05 changes *****
C
C	REGARDLESS OF THE SIGNON_STATUS, WE ALWAYS WANT TO DECREMENT THE
C	COUNT OF DUMMY STATIONS IN USE FOR THIS CLASS
C
CPXN    X2XC_DUMMY_INUSE_COUNT(DUMMY_CLASS) = 
CPXN *				X2XC_DUMMY_INUSE_COUNT(DUMMY_CLASS) - 1
C
C	***** End of V05 changes *******
C
	TYPE *, ' X2ASSGVT - final return status = ', status
	RETURN
	END
