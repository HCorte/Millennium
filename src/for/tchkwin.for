C
C SUBROUTINE TCHKWIN
C
C V06 14-JAN-1999 UXN GET_TEBEID ADDED.
C  
C     Rev 1.0   17 Apr 1996 15:29:28   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.4   26 Oct 1993 18:37:54   GXA
C  Only update winners by divisions for real none refunded winners.
C  
C     Rev 1.3   01 Oct 1993 15:52:38   GXA
C  Do not calculate tax on refunds and do not include refunds in VPAY, keep
C  it separate in REF amt.
C  
C     Rev 1.2   24 Sep 1993 23:11:06   GXA
C  Update winnings count and amount by division.
C  
C     Rev 1.1   06 Sep 1993 23:30:40   GXA
C  Released for Finland Dec Conversion / Oddset.
C  
C     Rev 1.0   21 Jan 1993 17:49:52   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C SUBROUTINE TO CHECK IF TOTO SELECT TICKET IS A WINNER
C AND UPDATE VALIDATION RECORDS
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE TCHKWIN(TRABUF,V4BUF,WIN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:PRMAGT.DEF'
	INCLUDE 'INCLIB:WINCOM.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
	INCLUDE 'INCLIB:VALFIL.DEF'
	INCLUDE 'INCLIB:VDETAIL.DEF'
C
	INTEGER*4 WINTAB(3,20)
	INTEGER*4 WIN, TOTWON, ST, GIND
	INTEGER*4 I, AMT, REF, DIV, PRZIND, NETAMT, TAXAMT
	INTEGER*4 TAMT,NAMT
C
	LOGICAL CXLED,OKRUN,PRVFLG,HLDFLG
        INTEGER*4 AWNTAB(2,NUMAGT)
        COMMON/BIGWIN/ AWNTAB
C
C
	WIN    = 0
	TOTWON = 0
	NETAMT = 0
	TAXAMT = 0
	PRVFLG = .FALSE.
	CXLED  = .FALSE.	
	HLDFLG = .FALSE.
	ST=TRABUF(TSTAT)
	GIND=TRABUF(TGAMIND)
	IF(LTSDRW(GIND).LT.0) RETURN
	IF(ST.NE.GOOD.AND.ST.NE.VOID.AND.
     *	   ST.NE.INCA.AND.ST.NE.EXCH) RETURN
	IF(TRABUF(TWBEG).GT.LTSDRW(GIND)) RETURN
	IF(TRABUF(TWEND).LT.LTSDRW(GIND)) RETURN
	IF(TRABUF(TSTAT).EQ.VOID.OR.TRABUF(TSTAT).EQ.INCA) CXLED=.TRUE.
C
C CHECK IF TICKET CAN BE SELECTED THIS RUN
C
	CALL TCHKSEL(TRABUF,OKRUN)
	IF(.NOT.OKRUN) RETURN
	CALL TWINLOS(TRABUF,WINTAB,WIN)
C
C UPDATE VALIDATION RECORD
C
	IF(WIN.EQ.0) RETURN
	IF(V4BUF(VFSSER).NE.0) THEN
	  CALL LOGVAL(VALREC,V4BUF)
	  CALL DLOGVAL(VALREC,VDETAIL)
	ELSE
	  CALL FASTSET(0,VALREC,VALLEN)
	  CALL FASTSET(0,VDETAIL,VPLEN*VMAX)
	ENDIF
C
C
	DO 1000 I=1,WIN
	AMT=WINTAB(1,I)
	REF=WINTAB(2,I)
	DIV=WINTAB(3,I)
	IF(.NOT.CXLED.AND.REF.NE.0) THEN
	  LTSREF(GIND)=LTSREF(GIND)+AMT
	  LTSRBD(DIV,1,GIND)=LTSRBD(DIV,1,GIND) + 1
	  LTSRBD(DIV,2,GIND)=LTSRBD(DIV,2,GIND) + AMT
	  LTSWON(GIND)=LTSWON(GIND)+AMT
	ENDIF
C
C
	VALREC(VPZOFF)=VALREC(VPZOFF)+1
	PRZIND=VALREC(VPZOFF)
	IF(PRZIND.GT.VMAX) THEN
	  TYPE*,IAM(),' Prize table overflow ',TRABUF(TCDC),TRABUF(TSER)
	  CALL GPAUSE
	  HLDFLG = .TRUE.
	  VALREC(VPZOFF)=VMAX
	  GOTO 20
	ENDIF
C
C
	VDETAIL(VKIK,PRZIND)=0
	VDETAIL(VKI2,PRZIND)=0
	VDETAIL(VPRG,PRZIND)=0
	VDETAIL(VREF,PRZIND)=0
	VDETAIL(VBDR,PRZIND)=0
	VDETAIL(VDIV,PRZIND)=DIV
	VDETAIL(VUPD,PRZIND)=1
	VDETAIL(VSHR,PRZIND)=AMT
	IF(WINTAB(2,I).NE.0) VDETAIL(VREF,PRZIND)=1
	VDETAIL(VDRW,PRZIND)=LTSDRW(GIND)
20	CONTINUE
	IF(WINTAB(2,I).NE.0) THEN
	  VALREC(VRAMT)=VALREC(VRAMT)+AMT
	ELSE
	  TOTWON=TOTWON+AMT
	ENDIF
1000	CONTINUE
C
C UPDATE VALIDATION HEADER IF NEW WINNER
C
	IF(VALREC(VSTAT).EQ.VNOWIN) THEN
	  VALREC(VSCDC)=TRABUF(TCDC)
	  VALREC(VSTER)=TRABUF(TTER)
	  VALREC(VSSER)=TRABUF(TSER)
	  VALREC(VEXP )=TRABUF(TWEND)
	  VALREC(VKEXP)=0
	  VALREC(VGAM )=TRABUF(TGAM)
	  VALREC(VKGME)=0
	  VALREC(VGTYP)=TRABUF(TGAMTYP)
	  VALREC(VGIND)=TRABUF(TGAMIND)
	  VALREC(VFRAC)=TRABUF(TFRAC)
          VALREC(VBNKID)=TRABUF(TWBNKID)
          VALREC(VBNKNUM)=TRABUF(TWBNKNM)
	ENDIF
C
C GET TAXES BY BOARD AND SET PRIV PAY FLAG
C AND UPDATE BIG WINNER COMMISSION TABLE
C AND UPDATE WINNERS BY DIVISON.
C
        IF(.NOT.CXLED.AND.TOTWON.NE.0) THEN
          LTSWON(GIND)=LTSWON(GIND)+TOTWON
          IF(TOTWON.GT.LTSHST(GIND)) LTSHST(GIND)=TOTWON
	  DO 2000 I = 1,WIN
	     AMT = WINTAB(1,I)
	     REF = WINTAB(2,I)
	     DIV = WINTAB(3,I)
	     IF(REF.EQ.0) THEN	     
	        LTSWBD(DIV,1,GIND) = LTSWBD(DIV,1,GIND) + 1
	        LTSWBD(DIV,2,GIND) = LTSWBD(DIV,2,GIND) + AMT
	        CALL GETTAX(AMT,TAMT,NAMT)
	        NETAMT = NETAMT + NAMT
	        TAXAMT = TAXAMT + TAMT
	     ENDIF
2000	  CONTINUE
          IF(NETAMT.GT.REDMAX(TRABUF(TGAM))) PRVFLG=.TRUE.
          LTSTAX(GIND)=LTSTAX(GIND)+TAXAMT
          IF(HVCLVL.NE.0) THEN
            IF(NETAMT.GE.HVCLVL) THEN
              AWNTAB(1,TRABUF(TTER))=AWNTAB(1,TRABUF(TTER))+1
              AWNTAB(2,TRABUF(TTER))=AWNTAB(2,TRABUF(TTER))+NETAMT
            ENDIF
          ENDIF
          VALREC(VPAMT)=VALREC(VPAMT)+NETAMT
          VALREC(VTAMT)=VALREC(VTAMT)+TAXAMT
        ENDIF
C
	VALREC(VWCDC) = DAYCDC
	VALREC(VSTAT) = VUNCSH
	IF(PRVFLG) VALREC(VSTAT) = VPRPAY
	IF(HLDFLG) VALREC(VSTAT) = VHOLD
	IF(TRABUF(TSTAT).EQ.VOID) VALREC(VSTAT) = VCXL
	IF(TRABUF(TSTAT).EQ.INCA) VALREC(VSTAT) = VDEL
	CALL DVALLOG(VALREC,VDETAIL)
	CALL VALLOG (VALREC,V4BUF  )
	RETURN
	END
