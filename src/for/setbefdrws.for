C
C SETBEFDRWS.FOR
C
C V01 21-FEB-2001 CS INITIAL RELEASE FOR PORTUGAL
C
C	THIS PROGRAM WILL RUN ONLY ONE TIME
C	AND WILL UPDATE ALL OFFLINE SALES THAT
C       HAVE BEEN DONE BEFORE LIVE.
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1999 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C UPDATE OFFLINE SALES
C
C=======OPTIONS  /CHECK=NOOVERFLOW/EXT
	PROGRAM  SETBEFDRWS
	IMPLICIT NONE

	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

	INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:DLTREC.DEF'
        INCLUDE 'INCLIB:DKKREC.DEF'
        INCLUDE 'INCLIB:DATBUF.DEF'
        INCLUDE 'INCLIB:STANDARD.DEF'
C
C EXTERNAL FUNCTION
C
	INTEGER*4  GETDRW
	EXTERNAL   GETDRW
C
C LOCAL PARAMETERS
C
	INTEGER*4  MDUR
	PARAMETER  (MDUR=5)
C
C LOCAL VARIABLES
C
	LOGICAL    ISTHERE
C
	INTEGER*4  GAM
	INTEGER*4  GTYP, GIND 
	INTEGER*4  LUN, GLUN
	INTEGER*4  FDB(7),IDX_FDB(7)
	INTEGER*4  ST
	INTEGER*4  DRAW
	INTEGER*4  POS1,POS2
	INTEGER*4  FRSWEEK, LSTWEEK, FRSYEAR, LSTYEAR, AUXWEEK
C
	INTEGER*4  I4_TOTAMT
	INTEGER*4  I4_TOTCOM
C
	CHARACTER*20 FILENAME
	INTEGER*4    IFILNAM(5)
	EQUIVALENCE  (FILENAME,IFILNAM)
C
	CHARACTER*91 REGISTO
C
	INTEGER*8  AMTDRWOFF(2,6,MAXGAM,MDUR)		    !FOR NEXT DRAWS(1=COMISSION / 2=AMOUNT)
C
	STRUCTURE	/STCAMTDRW/
	    INTEGER*8	AMTDRWONL(6,MAXGAM)
	    INTEGER*8	COMDRWONL(6,MAXGAM)
            INTEGER*8	AMTDRWOFF(6,MAXGAM)
	    INTEGER*8	COMDRWOFF(6,MAXGAM)
	END STRUCTURE

	RECORD /STCAMTDRW/ REGAMTDRW
C
C
        CALL COPYRITE                                                             
C
	CALL FASTSET(0,AMTDRWOFF,SIZEOF(AMTDRWOFF)/4)
C
	POS1       = MDUR + 1
	AUXWEEK    = 0

	INQUIRE (FILE='FILE:5SEMANAS.ASC',EXIST=ISTHERE)

	IF (.NOT.ISTHERE) THEN
	    TYPE*,IAM(),' ***************************************************'
	    TYPE*,IAM(),' ****        FILE 5SEMANAS.ASC NOT FOUND !!     ****' 
	    TYPE*,IAM(),' ***************************************************'
	    CALL GPAUSE()
	    CALL GSTOP(GEXIT_FATAL)
	ENDIF

        TYPE *,IAM(),' '
        TYPE *,'------------------------------------------------------------------------'   
        TYPE *,'<<<<<          UPDATE MILLENIUM SYSTEM WITH 5WEEK SALES            >>>>>'
        TYPE *,'------------------------------------------------------------------------'
        TYPE *,IAM(),' '
C
C       OPEN OFFLINE SALES FILE
C	
	CALL FIND_AVAILABLE_LUN(LUN,ST)
	IF (ST.NE.0) THEN
	    TYPE*,IAM(),'>>> ERROR GETTING LUN FOR 5SEMANS.ASC'
	    CALL GSTOP(GEXIT_FATAL)
	ENDIF

	OPEN( UNIT     = LUN,
     *        FILE     = '5SEMANAS.ASC',
     *        STATUS   = 'OLD',
     *        IOSTAT   = ST)

	IF (ST.NE.0) THEN
	    TYPE*,IAM(),'>>> ERRO NA ABERTURA DO FICHEIRO 5SEMANAS.ASC, STATUS = ',ST
	    CALL GSTOP(GEXIT_FATAL)
	ENDIF
C
C       READ FIRST RECORD HERE TO PROCESS THE HEADER
C       ********************************************
      	READ( LUN, FMT= '(A73)', IOSTAT=ST) REGISTO
        IF (ST.NE.0 .OR. REGISTO(1:3).NE.'5S1') THEN
	   TYPE*, IAM(),'ERRO NA LEITURA DO HEADER - FICHEIRO 5SEMANAS'
           CALL GSTOP(GEXIT_FATAL)
        ENDIF
C
C	LOOP READING OFFLINE SALES FILE
C
	CALL FASTSET(0,AMTDRWOFF,SIZEOF(AMTDRWOFF)/4)
C
      	READ(LUN, FMT= '(A73)', IOSTAT=ST) REGISTO
	DO WHILE (ST.EQ.0)
	   IF (REGISTO(1:3).EQ.'5S2') THEN
C
C UPDATE ONE DRAW AMOUNT AND COUNT PER TERMINAL
C
	      READ( REGISTO(4:5),  FMT='(I2)' ) GAM
	      READ( REGISTO(6:7),  FMT='(I2)' ) FRSWEEK
	      READ( REGISTO(10:11),FMT='(I2)' ) FRSYEAR
	      READ( REGISTO(12:13),FMT='(I2)' ) LSTWEEK
	      READ( REGISTO(16:17),FMT='(I2)' ) LSTYEAR
	      READ( REGISTO(54:64),FMT='(I11)') I4_TOTAMT
	      READ( REGISTO(65:73),FMT='(I9)' ) I4_TOTCOM
C
	      IF (FRSWEEK.GT.AUXWEEK) THEN
		 POS1 = POS1 - 1
		 AUXWEEK = FRSWEEK
	      ENDIF
	      POS2 = (LSTWEEK - FRSWEEK) + 2

	      AMTDRWOFF(1,POS2,GAM,POS1) = I4_TOTAMT	    !ILIQUIDO
	      AMTDRWOFF(2,POS2,GAM,POS1) = I4_TOTCOM	    !COMISSAO
C
	      DRAW = GETDRW(LSTYEAR, LSTWEEK, GAM)
C
              GTYP = GNTTAB(GAMTYP,GAM)
              GIND = GNTTAB(GAMIDX,GAM)
C
C             UPDATE SPECIFIC GAME FILES
C
              CALL FIND_AVAILABLE_LUN(GLUN,ST)
              IF (ST.NE.0) CALL FILERR(GFNAMES(1,GAM),0,ST,DRAW)

	      CALL OPENW(GLUN,GFNAMES(1,GAM),4,0,0,ST)
	      IF (ST.NE.0) CALL FILERR(GFNAMES(1,GAM),1,ST,0)

	      IF (GTYP.EQ.TLTO) THEN
                 CALL IOINIT(FDB,GLUN,DLTSEC*256)
C
C USE LAST POSITION OF TABLE FOR FIVE DRAW SALES
C
		 CALL READW(FDB,DRAW,DLTREC,ST)
		 IF (ST.NE.0) CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)

	         DLTSAL(LTGENT) = DLTSAL(LTGENT) + I4_TOTAMT
CCCCCC		 CALL WRITEW(FDB,DRAW,DLTREC,ST)
		 IF(ST.NE.0) CALL FILERR(GFNAMES(1,GAM),3,ST,DRAW)

	      ELSEIF (GTYP.EQ.TKIK) THEN
		 CALL IOINIT(FDB,GLUN,DKKSEC*256)

		 CALL READW(FDB,DRAW,DKKREC,ST)
		 IF (ST.NE.0)  CALL FILERR(GFNAMES(1,GAM),2,ST,DRAW)

	         DKKSAL(KIGENT,GAM) = DKKSAL(KIGENT,GAM) + I4_TOTAMT
CCCCCCC		 CALL WRITEW(FDB,DRAW,DKKREC,ST)
		 IF(ST.NE.0) CALL FILERR(GFNAMES(1,GAM),3,ST,DRAW)
	      ENDIF
	      CALL CLOSEFIL(FDB)
           ENDIF
C
C READ NEXT RECORD
C
      	   READ(LUN, FMT= '(A91)', IOSTAT=ST) REGISTO
	ENDDO
	CLOSE(LUN)
C
        IF (ST.GT.0) THEN
	   TYPE*, IAM(), 'ERRO NA LEITURA DO REGISTO - FICHEIRO 5SEMANAS'
           CALL GPAUSE()
	ELSEIF (ST.LT.0) THEN
	   TYPE*,IAM(), 'FIM NORMAL DE LEITURA - FICHEIRO 5SEMANAS'
	ENDIF
C
C CREATE SAP FILE
C
	FILENAME = 'SAPDRWAMT.FIL'
C
	CALL FIDX_OPEN(IDX_FDB,FILENAME,SIZEOF(REGAMTDRW),'NEW',ST)
	IF  (ST.NE.0) CALL FILERR(IFILNAM,OPEN_ERROR,ST,0)
C
	DO  POS1 = 1, MDUR
	    DO  GAM = 1, MAXGAM
		DO  POS2 = 1, 6
		    REGAMTDRW.AMTDRWONL(POS2,GAM) = 0	                        ! ONLINE AMOUNT
		    REGAMTDRW.COMDRWONL(POS2,GAM) = 0                    	! ONLINE COMISSION
		    REGAMTDRW.AMTDRWOFF(POS2,GAM) = AMTDRWOFF(1,POS2,GAM,POS1)	! OFFLINE AMOUNT
		    REGAMTDRW.COMDRWOFF(POS2,GAM) = AMTDRWOFF(2,POS2,GAM,POS1)	! OFFLINE COMISSION
		ENDDO
	    ENDDO
C
C WRITE CURRENT DRAW
C
	    CALL FIDX_WRITE(IDX_FDB,POS1,SIZEOF(REGAMTDRW),REGAMTDRW,ST)
            IF  (ST.NE.0) CALL FILERR(IFILNAM,WRITE_ERROR,ST,5)
	ENDDO

	CALL FIDX_CLOSE(IDX_FDB,ST)
	IF  (ST.NE.0) CALL FILERR(IFILNAM,CLOSE_ERROR,ST,0)
C
	CALL GSTOP(GEXIT_SUCCESS)
	END
