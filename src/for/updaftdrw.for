C
C     FILE   : UPDAFTDRW.FOR
C     AUTHOR : J.H.R
C     VERSION: 01            DATE: 13 / 11 / 2001
C
C V01 JHR INITIAL RELEASE FOR PORTUGAL PROJECT
C
C
C FIX TOTAT RETURN TICKET AMOUNT FOR CLOSED DRAWS
C
C THIS PROGRAM ASK TO USER TOTAL RETURN TICKET AMOUNT FOR CLOSED DRAW AND WRITE
C USER IMPUT IN DRAW CONFIGURATION FILES
C
C     **************************************************************************
C
C        THIS ITEM IS THE PROPERTY OF GTECH CORPORATION, POVIDENCE, RHODE
C     ISLAND, AND CONTAINS CONFIDENTIAL AND TRADE SECRET INFORMATION. IT MAY
C     NOT BE TRANSFERRED FROM THE CUSTODY OR CONTROL OF GTECH EXCEPT AS AUTO -
C     RIZED IN WRITING BY AN OFFICER OF GTECH. NEITHER THIS ITEM NOR THE
C     INFORMATION IT CONTAINS MAY BE USED, TRANSFERRED, REPRODUCED, PUBLISHED
C     OR DISCLOSED, IN WHOLE OR IN PART, AND DIRECTLY OR INDIRECTLY, EXCEPT AS
C     EXPRESSLY AUTHORIZED BY AN OFFICER OR GTECH, PURSUANT TO WRITTEN AGREEMENT
C
C     Copyright 2000 GTECH Corporation. All Rigth Reserved
C
C     **************************************************************************
C
C THIS PROGRAM UPDATES RETURN TICKET AMOUNT IN DRAW CONFIGURATION FILES
C
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      PROGRAM UPDAFTDRW
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO UPDATE RETURN TICKET AMOUNT IN DRAW CONFIGURATION FILES
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C DISPLAY HEADER TASK PRESENTATION TO USER
C
      CALL DSP_TASK_PRESENTATION
      CALL DSP_PGRM_RULES
C
C ASK TO USER ENTER VALUES AND SET THOSE VALUES IN DRAW CONFIGURATION FILES
C
      CALL ASK_AND_UPDATE_FILES
C
C PROCEDURE TO UPDATE RETURN TICKET AMOUNT IN DRAW CONFIGURATION FILES ENDS OK
C
      TYPE *, IAM()
      CALL GSTOP(GEXIT_SUCCESS)
C
C THIS IS THE END TO UPDATE RETURN TICKET AMOUNT IN DRAW CONFIGURATION FILES
C
      END


C ******************************************************************************
C
C     SUBROUTINE: DSP_TASK_PRESENTATION
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 13 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO DISPLAY USER PRESENTATION TASK
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE DSP_TASK_PRESENTATION
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO DISPLAY USER PRESENTATION TASK
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C CLEAR SCREEN AND DISPLAY USER PRESENTATION ( MANUAL RUN PROGRAM )
C
      CALL CLRSCR(6)
      CALL COPYRITE
      TYPE *, IAM()
      TYPE *, IAM(), '* * * * * * * * * * * * * * * * * * * * * * * * *'
      TYPE *, IAM(), '* UPDATE RETURN TICKETS AMOUNT FOR CLOSED DRAWS *'
      TYPE *, IAM(), '* * * * * * * * * * * * * * * * * * * * * * * * *'
      TYPE *, IAM()
C
C DON'T ALLOW RUN THIS PROGRAM IN SUBRUN MODE, ONLY MANUAL MODE
C
      IF(ISSUBPROC() .EQ. .TRUE.) THEN
        TYPE *, IAM(), 'Is Not Allowed Run This Program In Subrun Mode ...'
        TYPE *, IAM()
        CALL GSTOP(GEXIT_FATAL)
      ENDIF
C
C THIS IS THE END TO DISPLAY USER PRESENTATION TASK
C
      END


C ******************************************************************************
C
C     SUBROUTINE: DSP_PGRM_RULES
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 13 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO DISPLAY PROGRAM RULES TO THE USER
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE DSP_PGRM_RULES
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO DISPLAY PROGRAM RULES
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C VARIABLES DEFINITION TO DISPLAY PROGRAM RULES
C
      INTEGER * 4 LENGHT          ! IMPUT CHARACTER LENGHT
C
      CHARACTER * 1 IMPUSER       ! IMPUT USER 
C
C DISPLAY PROGRAM RULES
C
      TYPE *, IAM(),  'This Task Allow To Update Total Tickets Return Amount'
      TYPE *, IAM()
      TYPE *, IAM(),  'With Information That User Provide' 
      TYPE *, IAM() 
      TYPE *, IAM(), 'When Program Is Waiting For An Answer, You Can Enter:'
      TYPE *, IAM()
      TYPE *, IAM(), '       E -> This Option Ends The Progran'
      TYPE *, IAM(), '       N -> Not Modify Actual File Values'
      TYPE *, IAM(), '  Amount -> Amount To Update In Configuration Files'
      TYPE *, IAM()
      TYPE *, IAM()
      TYPE *, IAM(), 'Note:'
      TYPE *, IAM()
      TYPE *, IAM(), '   If You Enter An Amount Value, Please Enter It With No'
      TYPE *, IAM(), 'Comma Or Period Separator'
      TYPE *, IAM()
      CALL INPTEXT('Press Enter To Continue', IMPUSER, LENGHT)
C
C THIS IS THE END TO DISPLAY PROGRAM RULES
C
      END


C ******************************************************************************
C
C     SUBROUTINE: GET_FREE_IDFIL
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 09 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO GET FREE IDENTIFICATION FILE NUMBER
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      INTEGER * 4 FUNCTION GET_FREE_IDFIL(CHECKIDFIL)
      IMPLICIT NONE
C
C INCLUDE DEFINITIONS TO GET FREE IDENTIFICATION FILE NUMBER
C
      INCLUDE '(LIB$ROUTINES)'
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C PARAMETERS DEFINITION TO GET FREE IDENTIFICATION FILE NUMBER
C
      INTEGER * 4 CHECKIDFIL          ! CHECK IDFIL (0: NO, 1: YES )
C
C VARIABLES DEFINITION TO GET FREE IDENTIFICATION FILE NUMBER
C
      INTEGER * 4 FSTS                ! FUNCTION STATUS
      INTEGER * 4 IDFIL               ! IDENTIFICATION FILE
C
C GET FREE IDENTIFICATION FILE NUMBER
C
      FSTS = LIB$GET_LUN(IDFIL)
      IF(FSTS .EQ. 0 .OR. IDFIL .LE. 0) THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Getting Identifiation File'
        TYPE *, IAM()
        CALL GPAUSE
      ENDIF
C
C CHECK IDENTIFICATION FILE
C
      IF(CHECKIDFIL .NE. 0 .AND. IDFIL .GT. 100) IDFIL = MOD(IDFIL, 100)
C
C WRITE FREE IDENTIFICATION FILE TO RETURN FUNCTION
C
       GET_FREE_IDFIL = IDFIL
C
C THIS IS THE END TO GET FREE IDENTIFICATION FILE NUMBER
C
      END


C ******************************************************************************
C
C     SUBROUTINE: OPEN_FILE_NAME
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 09 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO OPEN FILE THAT WE SET IN PARAMETER FUNCTION
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE OPEN_FILE_NAME(IDFIL, FILENAME)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO OPEN FILE NAME
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C PARAMETERS DEFINITION TO OPEN FILE NAME
C
      INTEGER * 4 IDFIL                   ! IDENTIFICATION FILE
C
      CHARACTER * (*) FILENAME            ! FILE NAME TO OPEN
C
C VARIABLES DEFINITION TO OPEN FILE NAME
C
      INTEGER * 4 FSTS                    ! FUNCTION STATUS
C
C OPEN FILE NAME ( NAME IT'S SET IN FUNCTION PARAMETER )
C
      OPEN(UNIT = IDFIL,
     *     FILE = FILENAME,
     *     IOSTAT = FSTS,
     *     FORM = 'FORMATTED',
     *     RECL = 2048,
     *     STATUS = 'NEW',
     *     RECORDTYPE = 'STREAM_CR')
C
C CHECK FOR OPEN FILE ERROR
C
      IF(FSTS .NE. 0)THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Opening File: ', FILENAME
        TYPE *, IAM()
        CALL GPAUSE
      ENDIF
C
C THIS IS THE END TO OPEN FILE NAME
C
      END


C ******************************************************************************
C
C     SUBROUTINE: DELETE_FILE_NAME
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 09 / 02 / 2001
C
C ******************************************************************************
C
C FUNCTION TO DELETE FILE THAT WE SET IN PARAMETER FUNCTION
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE DELETE_FILE_NAME(FILENAME)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO DELETE FILE NAME
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C PARAMETERS DEFINITION TO DELETE FILE NAME
C
      CHARACTER * (*) FILENAME            ! FILE NAME TO DELETE
C
C VARIABLES DEFINITION TO DELETE FILE NAME
C
      INTEGER * 4 FSTS                    ! FUNCTION STATUS
C
C IF FILENAME EXITS, DELETE IT
C
      CALL DFILX(FILENAME, 0, 0, FSTS)
      IF(FSTS. EQ. 4) FSTS = 0             ! IF FILE DON'T EXIST, NO PROBLEM
      IF(FSTS .NE. 0) THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Deleting File: ', FILENAME
        TYPE *, IAM()
        CALL GPAUSE
      ENDIF
C
C THIS IS THE END TO DELETE FILE NAME
C
      END


C ******************************************************************************
C
C     SUBROUTINE: ASK_USER_GAME_INDEX
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO ASK TO USER GAME INDEX TO UPDATE PASSIVE GAME
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE ASK_USER_GAME_INDEX(GIND)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO ASK TO USER GAME INDEX TO UPDATE PASSIVE GAME
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
C
C PARAMETERS DEFINITION TO ASK TO USER GAME INDEX TO UPDATE PASSIVE GAME
C
      INTEGER * 4 GIND             ! GAME INDEX
C
C VARIABLES DEFINITION TO ASK TO USER GAME INDEX TO UPDATE PASSIVE GAME
C
      INTEGER * 4 FSTS             ! FUNCTION STATUS
C 
C DISPLAY HEADER TASK PRESENTATION TO USER
C
      CALL DSP_TASK_PRESENTATION
C
C DISPLAY TO USER INFORMATION MESSAGE
C
      TYPE *, IAM(), 'You Have To Enter Passive Game Type To Update Draw Files'
      TYPE *, IAM()
      TYPE *, IAM(), '   1.- For Clasica'
      TYPE *, IAM()
      TYPE *, IAM(), '   2.- For Popular'
      TYPE *, IAM()
C
C GET GAME INDEX FROM USER
C
      CALL INPNUM('Enter Passive Game Type: ', GIND, 1, 2, FSTS)
C
C CHECK IF USER HAVE ENTER A CORRECT OPTION
C
      IF(FSTS .NE. 0) THEN
        TYPE *, IAM()
        CALL GSTOP(GEXIT_OPABORT)
      ENDIF
C 
C DISPLAY HEADER TASK PRESENTATION TO USER
C
      CALL DSP_TASK_PRESENTATION
C
C THIS IS THE END TO ASK TO USER GAME INDEX TO UPDATE PASSIVE GAME
C
      END


C ******************************************************************************
C
C     SUBROUTINE: OPEN_UPDAFTDRW_REPORT
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 13 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE OPEN_UPDAFTDRW_REPORT(REPIDFIL, GIND)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
C
C PARAMETERS DEFINITION TO OPEN REPORT FILE AND WRITE HEADER INFORMATION 
C
      INTEGER * 4 REPIDFIL            ! REPORT IDENTIFICATION FILE     
      INTEGER * 4 GIND                ! GAME INDEX
C
C VARIABLES DEFINITION TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      INTEGER * 4 PAGE                ! PAGE COUNTER / PAGE NUMBER
C
      CHARACTER * 21 FILENAME         ! REPORT FILENAME  
      CHARACTER * 29 TITLEMSG         ! MESSAGE TITLE
      CHARACTER * 07 GAMTYPE(NUMPAS)  ! MESSAGE GAME TYPE 
C
C INITIATE VARIABLES TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      DATA GAMTYPE / 'CLASICA', 'POPULAR' /   ! MESSAGE GAME TYPE
C
C FUNCTIONS DEFINITION TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      INTEGER * 4  GET_FREE_IDFIL  ! GET FREE IDENTIFICATION FILE
C
C ASK TO USER FOR GAME INDEX ( USER WANTS UPDATE CLASICA OR POPULAR )
C
      CALL ASK_USER_GAME_INDEX(GIND)
C
C INITIATE VARIABLES TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      PAGE = 0
      WRITE(FILENAME, 500) GAMTYPE(GIND)
C
C IF UPDATE AFTHER DRAW FILE REPORT EXIST, DELETE IT
C
      CALL DELETE_FILE_NAME(FILENAME)
C
C GET FREE IDENTIFICATION FILE NUMBER
C
      REPIDFIL = GET_FREE_IDFIL(0)
C
C OPEN UPDATE AFTHER DRAW FILE REPORT
C
      CALL OPEN_FILE_NAME(REPIDFIL, FILENAME)
C
C WRITE TITLE ON TOP OF REPORT
C
      TITLEMSG = 'RETURN AMOUNT FOR CLOSE DRAWS'
      CALL TITLE(TITLEMSG, FILENAME(1:9), 1, REPIDFIL, PAGE, DAYCDC)
C
C WRITE REPARATION LINE BETWEEN HEADER AND INFORMATION
C
      WRITE(REPIDFIL, 100)
      WRITE(REPIDFIL, 200)
      WRITE(REPIDFIL, 200)
      WRITE(REPIDFIL, 300)
      WRITE(REPIDFIL, 400)
      WRITE(REPIDFIL, 200)
C
C FORMATS DEFINITION TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
100   FORMAT(X, 131('='))
200   FORMAT(X)
300   FORMAT(20X, 'Draw Number', 
     *       10X, 'Week / Year', 
     *       10X, 'Game', 
     *       10X, 'Returned Amount')
400   FORMAT(20X, 71('-'))
500   FORMAT('UPDAFTDRW_', A7, '.REP')
C
C THIS IS THE END TO OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: OPEN_PASSIVE_FILE
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO OPEN PASSIVE DRAW FILE
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE OPEN_PASSIVE_FILE(FDB, GIND, GNUM)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO OPEN PASSIVE DRAW FILE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:DPAREC.DEF'
C
C PARAMETERS DEFINITION TO OPEN PASSIVE DRAW FILE
C
      INTEGER * 4 FDB(7)           ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 GIND             ! GAME INDEX
      INTEGER * 4 GNUM             ! GAME NUMBER
C
C VARIABLES DEFINITION TO OPEN PASSIVE DRAW FILE
C
      INTEGER * 4 IDFIL            ! IDENTIFICATION FILE
      INTEGER * 4 FSTS             ! FUNCTION STATUS
C
C FUNCTIONS DEFINITION TO OPEN PASSIVE DRAW FILE
C
      INTEGER * 4  GET_FREE_IDFIL  ! GET FREE IDENTIFICATION FILE
C
C GET PASSIVE GAME NUMBER AND GET FREE IDENTIFICATION FILE NUMBER
C
      GNUM = GTNTAB(TPAS, GIND)
      IDFIL = GET_FREE_IDFIL(1)
C
C OPEN PASSIVE DRAW FILE
C
      CALL OPENW(IDFIL, GFNAMES(1, GNUM), 4, 0, 0, FSTS)
      CALL IOINIT(FDB, IDFIL, DPASEC * 256)
C
C CHECK IF OPEN PASSIVE DRAW FILE IS OK
C
      IF(FSTS .NE. 0) THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Opening Passive Draw File'
        TYPE *, IAM()
        CALL GSTOP(GEXIT_FATAL)
      ENDIF
C
C THIS IS THE END TO OPEN PASSIVE DRAW FILE
C
      END


C ******************************************************************************
C
C     SUBROUTINE: ASK_AND_UPDATE_FILES
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 13 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO UPDATE DRAW CONFIGURATION FILES WITH USER INFORMATION
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE ASK_AND_UPDATE_FILES
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO UPDATE DRAW CONFIGURATION FILES WITH USER INFORMATION
C
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
C
C VARIABLES DEFINITION TO UPDATE DRAW CONFIGURATION FILES WITH USER INFORMATION
C
      INTEGER * 4 REPIDFIL         ! REPORT IDENTIFICATION FILE
      INTEGER * 4 GIND             ! GAME INDEX
      INTEGER * 4 GNUM             ! GAME NUMBER
      INTEGER * 4 FDB(7)           ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 DRAW             ! DRAW NUMBER
      INTEGER * 4 FSTS             ! FUNCTION STATUS
C
C INITIATE VARIABLES TO UPDATE DRAW CONFIGURATION FILES WITH USER INFORMATION
C
      DRAW = 1
C
C OPEN REPORT FILE AND WRITE HEADER INFORMATION
C
      CALL OPEN_UPDAFTDRW_REPORT(REPIDFIL, GIND)
C
C OPEN PASSIVE DRAW FILES
C
      CALL OPEN_PASSIVE_FILE(FDB, GIND, GNUM)
C
C ASK TO USER AND UPDATE RETUR AMOUNT INFORMATION IN PASSIVE DRAW FILE
C
2000  CONTINUE
      CALL GET_AND_UPDATE_RETURN_AMOUNT(DRAW, FDB, REPIDFIL, GIND, FSTS)
C
C INCREASE DRAW NUMBER
C
      DRAW = DRAW + 1
C
C CHEC IF PROGRAM SHOUL END ( BY USER ORDER OR ALL IS UPDATED )
C
      IF(DRAW .GT. DAYDRW(GNUM)) GOTO 1000 
      IF(FSTS .EQ. -1) GOTO 1000
      GOTO 2000
C
C CLOSE REPORT FILE AND PASSIVE DRAW FILE
C
1000  CONTINUE
      CALL USRCLOS1(REPIDFIL)
      CALL CLOSEFIL(FDB)
C
C THIS IS THE END TO UPDATE DRAW CONFIGURATION FILES WITH USER INFORMATION
C
      END


C ******************************************************************************
C
C     SUBROUTINE: WRITE_TO_REPORT_FILE
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO WRITE RETURNED AMOUNT IN REPORT FILE
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE WRITE_TO_REPORT_FILE(REPIDFIL, DRAW, GIND, RETAMT)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO WRITE RETURNED AMOUNT IN REPORT FILE
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:CONCOM.DEF'
      INCLUDE 'INCLIB:DPAREC.DEF'
C
C PARAMETERS DEFINITION TO WRITE RETURNED AMOUNT IN REPORT FILE
C
      INTEGER * 4 REPIDFIL         ! REPORT IDENTIFICATION FILE
      INTEGER * 4 DRAW             ! DRAW NUMBER
      INTEGER * 4 GIND             ! GAME INDEX
      INTEGER * 4 RETAMT           ! RETURNED AMOUNT
C
C VARIABLES DEFINITION TO WRITE RETURNED AMOUNT IN REPORT FILE
C
      INTEGER * 4 GNUM             ! GAME NUMBER
      INTEGER * 4 WEEK             ! WEEK NUMBER
      INTEGER * 4 YEAR             ! YEAR NUMBER
      INTEGER * 4 FSTS             ! FUNCTION STATUS
C
      CHARACTER * 07 GAMTYPE(NUMPAS)  ! MESSAGE GAME TYPE 
C
C INITIATE VARIABLES TO WRITE RETURNED AMOUNT IN REPORT FILE
C
      DATA GAMTYPE / 'CLASICA', 'POPULAR' /   ! MESSAGE GAME TYPE
C
C GET PASSIVE GAME NUMBER
C
      GNUM = GTNTAB(TPAS, GIND)
C
C GET SANTA CASA DRAW INFORMATION ( WEEK / YEAR )
C
      CALL GETWEK(DRAW, GNUM, WEEK, YEAR, FSTS)
      IF(FSTS .NE. 0) THEN
        TYPE *, IAM(), 'Error, Getting Santa Casa Draw Number Format'
        TYPE *, IAM()
        CALL GSTOP(GEXIT_FATAL)
      ENDIF
C
C WRITE ALL INFORMATION TO REPORT
C
      WRITE(REPIDFIL, 100) 
     *
     *      DRAW,                         ! DRAW NUMBER
     *      WEEK,                         ! DRAW WEEK
     *      YEAR,                         ! DRAW YEAR
     *      GAMTYPE(GIND),                ! GAME TYPE ( CLASICA / POPULAR )
     *      CMONY(RETAMT, 13, BETUNIT)    ! RETURNED AMOUNT
C
C FORMATS DEFINITION TO WRITE RETURNED AMOUNT IN REPORT FILE
C
100   FORMAT(27X, I4, 12X, I2.2, ' / ', I4.4, 7X, A7, 12X, A13)
C
C THIS IS THE END TO WRITE RETURNED AMOUNT IN REPORT FILE
C
      END


C ******************************************************************************
C
C     SUBROUTINE: GET_AND_UPDATE_RETURN_AMOUNT
C     AUTHOR    : J.H.R
C     VERSION   : 01            DATE: 14 / 11 / 2001
C
C ******************************************************************************
C
C PROCEDURE TO GET AND UPDATE RETURN AMOUNT INFORMATION
C
      OPTIONS /CHECK = NOOVERFLOW /EXT
      SUBROUTINE GET_AND_UPDATE_RETURN_AMOUNT(DRAW, FDB, REPIDFIL, GIND, FSTS)
      IMPLICIT NONE
C
C INCLUDES DEFINITION TO GET AND UPDATE RETURN AMOUNT INFORMATION
C
      INCLUDE 'INCLIB:SYSPARAM.DEF'
      INCLUDE 'INCLIB:SYSEXTRN.DEF'
      INCLUDE 'INCLIB:GLOBAL.DEF'
      INCLUDE 'INCLIB:DPAREC.DEF'
C
C PARAMETERS DEFINITION TO GET AND UPDATE RETURN AMOUNT INFORMATION
C
      INTEGER * 4 DRAW             ! DRAW NUMBER
      INTEGER * 4 FDB(7)           ! FILE DESCRIPTOR BLOCK
      INTEGER * 4 REPIDFIL         ! REPORT IDENTIFICATION FILE
      INTEGER * 4 GIND             ! GAME INDEX
      INTEGER * 4 FSTS             ! FUNCTION STATUS
C
C VARIABLES DEFINITION TO GET AND UPDATE RETURN AMOUNT INFORMATION
C
      INTEGER * 4 RETAMT           ! RETURNED AMOUNT
      INTEGER * 4 RDWSTS           ! READ / WRITE STATUS
C
      CHARACTER * 43 USRMSG        ! USER MESSAGE
C
C FORMAT MESSAGE TO ASK TO USER RETURN AMOUNT INFORMATION
C
      WRITE(USRMSG, 100) DRAW
C
C GET USER RETURN AMOUNT INFORMATION FOR ACTUAL DRAW
C
      CALL INPNUM(USRMSG, RETAMT, 0, 1000000000, FSTS)
C
C IF USER ORDER DO NOT MODIFY ACTUAL VALUE WE HAVE TO EXIT
C
      IF(FSTS .NE. -1 .AND. FSTS .NE. -8 .AND. FSTS .LT. 0) FSTS = -8
      IF(FSTS .LT. 0) RETURN
C
C WRITE RETURNED AMOUN INFORMATION IN REPORT FILE
C
      CALL WRITE_TO_REPORT_FILE(REPIDFIL, DRAW, GIND, RETAMT)
C
C READ PASSIVE DRAW FILE FOR ACTUAL DRAW
C
      CALL READW(FDB, (DRAW - PAS_DRW_OFFSET), DPAREC, RDWSTS)
      IF(RDWSTS .NE. 0) THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Reading Passive Draw File'
        TYPE *, IAM()
        CALL GSTOP(GEXIT_FATAL)        
      ENDIF
C
C CHANGE RETURNED DRAW FILE BY USER VALUE
C
      DPARETAFTAMT = RETAMT
C
C WRITE PASSIVE DRAW FILE FOR ACTUAL DRAW
C
      CALL WRITEW(FDB, (DRAW - PAS_DRW_OFFSET), DPAREC, RDWSTS)
      IF(RDWSTS .NE. 0) THEN
        TYPE *, IAM()
        TYPE *, IAM(), 'Error Writing Passive Draw File'
        TYPE *, IAM()
        CALL GSTOP(GEXIT_FATAL)
      ENDIF
C
C FORMATS DEFINITION TO GET AND UPDATE RETURN AMOUNT INFORMATION
C
100   FORMAT('Enter Returned Amount For Draw Number ', I4.4, ':')
C
C THIS IS THE END TO GET AND UPDATE RETURN AMOUNT INFORMATION
C
      END

