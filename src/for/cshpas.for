C CSHPAS.FOR
C
C V02 27-APR-2010 FRP ePassive
C V01 12-JAN-01 CS  INITIAL RELEASE FOR PORTUGAL
C
C 1) STOPSYS PROGRAM THAT GENERATES CASHED PRIZES REPORTS (PER GAME)
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1994 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS  /CHECK=NOOVERFLOW
	PROGRAM  CSHPASS
	IMPLICIT NONE

        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
	INCLUDE 'INCLIB:VALPASFIL.DEF'
	INCLUDE 'INCLIB:HSHCOM.DEF'
CCC	INCLUDE 'INCLIB:VDETAIL.DEF'
	INCLUDE 'INCLIB:GTNAMES.DEF'
	INCLUDE 'INCLIB:DPAREC.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:PASCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:STANDARD.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
        INCLUDE 'INCLIB:CSHPAS.DEF'
C
C PARAMETERS
C
	INTEGER*4 TUBSIZ
	PARAMETER (TUBSIZ=I4BUCSIZ*7)
C
C LOCAL VARIABLES
C
	INTEGER*4 VPFBUF(TUBSIZ)
	INTEGER*4 ST, EMISIND, GIND, GNUM
	INTEGER*4 IFILNAM(5), VLUN, CNTREC
	INTEGER*4 EMISNO,ORC_AGTPRZ(NUMAGT),SAP_AGTPRZ(3,NUMAGT,PAGEMI,NUMPAS)
        INTEGER*4 ORCLUN,SAPLUN
C
	CHARACTER*20 CFILNAM
C
C INITIATE VARIABLES
C
c       CALL FASTSET(0, ORC_AGTPRZ, NUMAGT)
	CALL FASTSET(0, SAP_AGTPRZ, 3 * NUMAGT * PAGEMI * NUMPAS)
C
C OPEN ORACLE AND SAP FILES
C
	CALL OPN_PAS_PRM(ORCLUN,SAPLUN)                               !OPEN BOTH FILES
	CALL WRT_PAS_PRM(ORCLUN,SAPLUN,'HP',ORC_AGTPRZ,SAP_AGTPRZ)    !WRITE BOTH FILES
C
C FOR ALL ACTIVE PASSIVE GAMES
C
	DO GIND = 1, NUMPAS

	    GNUM = GTNTAB(TPAS,GIND)
	    IF	(GNUM.GT.0) THEN
C
C OPEN ALL CASH REPORTS AND PURGED PRIZE REPORTS FOR THIS GAME
C
		CALL OPENREPS(GIND,ST)
		IF  (ST.NE.0) THEN
      		    TYPE*,IAM(),' Reports open error, JOGO: ', GNUM
		    CALL GPAUSE
		ENDIF
C
C LOOP READING ALL FILES
C
		DO EMISIND = 1, PAGEMI
C
C VERIFY IF WE HAD ANY PRIZE PAID FOR A SPECIFIC EMISSION TODAY
C
		    EMISNO = PASEMIS(EMISIND, GIND)

		    IF( PASTODPAY(EMISIND, GIND) .GT. 0 ) THEN

      			CALL BUILD_FILENAME(SFNAMES(1,VPF), GIND,
     *					    PASEMIS(EMISIND,GIND), 
     *					    CFILNAM, IFILNAM)

      			CALL FIND_AVAILABLE_LUN (VLUN,ST)
      			IF (ST.NE.0) CALL FILERR(IFILNAM,HANDLE_ERROR,ST,0)
			
			WRITE(5,1000) IAM(),CFILNAM

			CALL IOPEN(IFILNAM,VLUN,VPFLEN*2,VFSCDC,
     *				   VFSSER*2-1,ST)
			IF(ST.NE.0) CALL FILERR(IFILNAM,OPEN_ERROR,ST,0)
			CALL ITUBSIZE(VLUN,TUBSIZ)
C
C LOOP READING FILE
C
			CNTREC = 0
			DO  WHILE(ST.NE.ERREND)
			    CNTREC = CNTREC + 1
			    CALL ISREAD(V4BUF_PAS,VLUN,VPFBUF,ST)
			    IF	(ST.EQ.0) THEN
				CALL LOGPAS(VALREC,V4BUF_PAS)
C
C GENERATE CASH REPORT RECORD
C			    
				IF  ( VALREC(VCCDC).EQ.DAYCDC .AND.
     *				     (VALREC(VSTAT).EQ.VCASH .OR. VALREC(VSTAT) .EQ. VBANK)) THEN
     				    CALL PRNCSHPAS(VALREC,PASDRAW(EMISIND,GIND))
				    CALL ACC_PRZ(VALREC,ORC_AGTPRZ,SAP_AGTPRZ)
				ENDIF
C
			    ELSEIF(ST.NE.ERREND) THEN
				  CALL FILERR(IFILNAM,READ_ERROR,ST,CNTREC)
			    ENDIF
			ENDDO
C
C CLOSE PASSIVE VALIDATION FILE
C
			CALL ICLOSE(VLUN,VPFBUF,ST)
			IF(ST.NE.0) CALL FILERR(IFILNAM,CLOSE_ERROR,ST,0)
		    ENDIF
		ENDDO
C
C CLOSE REPORT FILES
C
		CALL CLOSEREPS(GIND)
	    ENDIF
	ENDDO
C
c	CALL WRT_PAS_PRM(ORCLUN,SAPLUN,'03',ORC_AGTPRZ,SAP_AGTPRZ)           !WRITE FILE TO ORACLE 
	CALL WRT_PAS_PRM(ORCLUN,SAPLUN,'15',ORC_AGTPRZ,SAP_AGTPRZ)           !WRITE FILE TO SAP
	CALL WRT_PAS_PRM(ORCLUN,SAPLUN,'RC',ORC_AGTPRZ,SAP_AGTPRZ)           !WRITE RESP. CONTABIL.

	CALL WRT_PAS_PRM(ORCLUN,SAPLUN,'TP',ORC_AGTPRZ,SAP_AGTPRZ)           !WRITE TRAILER ON BOTH FILES

	CALL GSTOP(GEXIT_SUCCESS)
C
C FORMAT STATEMENTS
C
1000	FORMAT(1X,A,'PESQUISANDO ARQUIVO ',A20)
	END
C
C*************************************************************
C SUBROUTINE PRNCSHPAS
C*************************************************************
C
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE PRNCSHPAS(VALREC,DRW)
	IMPLICIT   NONE

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:DESVAL.DEF'
        INCLUDE 'INCLIB:CSHPAS.DEF'
C
C ROUTINE PARAMETERS
C
	INTEGER*4 DRW
C
C LOCAL VARIABLES
C
	INTEGER*4 WEEK, YEAR
	INTEGER*4 TER, CAGNT

	INTEGER*8 PAYAMT

	CHARACTER*8	IAGT_NO
	EXTERNAL	IAGT_NO
C
	IF(LINCNT(REP_CSH).GT.MAXPRTLN) THEN
	    CALL TITLE(HEAD(REP_CSH),REPNAM(REP_CSH),VERSION(REP_CSH),
     *		       RLUN(REP_CSH),PAGE(REP_CSH),DAYCDC,0,0)
	    WRITE(RLUN(REP_CSH),1300)
	    LINCNT(REP_CSH) = 9
	ENDIF
C
C  PRINT VPF LINES
C
	PAYAMT = VALREC(VPAMT)
	TER    = VALREC(VCTER)
	CAGNT  = AGTTAB(AGTNUM,TER)
C
C GET WEEK/YEAR (WWYYYY)
C
C	CALL FIGWEK(AUXBSD,WEEK,YEAR)

	CALL GETPASDRW(DRW,WEEK,YEAR)
C		
	WRITE(RLUN(REP_CSH),2000) 
     *			 IAGT_NO(CAGNT),	    ! SELLING AGENT
     *                   TER,                       ! CASHING TER
     *		         GSNAMES(VALREC(VGAM)),	    ! GAME NAME 
     *			 WEEK,'/',YEAR,		    ! EMISSION #
     *			 VALREC(VTCKT),
     *			 VALREC(VSERN),
     *			 VALREC(VPFRAC),
     *                   CMONYI8(PAYAMT,13,VALUNIT) !PAY AMOUNT
        LINCNT(REP_CSH) = LINCNT(REP_CSH) + 1
C
C ACCUMULATE TOTALS
C
	IF(TSBIT(AGTTAB(AGTTYP,VALREC(VCTER)),AGTPRV).EQ.0) THEN
	  CNTREG = CNTREG + 1
	  TOTREG = TOTREG + PAYAMT
	ELSE
	  CNTPRV = CNTPRV + 1
	  TOTPRV = TOTPRV + PAYAMT
	ENDIF

	RETURN
C
C FORMAT STATEMENTS
C
1300	FORMAT(1X,131('-'),/,
     *         1X,'  REVENDEDOR        TERM       JOGO      EXTRACCAO',
     *         '       BILHETE       EMISSAO    FRACCAO',
     *	       '        PREMIO PAGO                ',/,1X,131('-'),/)
2000	FORMAT(2X,A11,7X,I5,7X,A4,7X,I2.2,A1,I4.4,7X,I7,6X,I6,7X,I6,6X,A13,16X)
	END
C
C*************************************************************
C SUBROUTINE CLOSEREPS
C*************************************************************
C
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE CLOSEREPS(GIND)
	IMPLICIT   NONE

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:CSHPAS.DEF'
C
C ROUTINE PARAMETERS
C
	INTEGER*4 GIND
C
C LOCAL VARIABLES
C
	INTEGER*4 CNTAUX
	INTEGER*8 TOTAUX, TEMP/0/
        INTEGER*4 BIG/2147483647/
        INTEGER*4 GNUM, RAPCODE, I  
        INTEGER*4 GAMESUMS(MAXGAM,NUMFIN,NUMTOT)
        INTEGER*4 TOTSUMS(NO_BALSUMS)/NO_BALSUMS *0/
        REAL*8    TOTREAL
C
C PRINT LAST PAGE AND CLOSE CASH REPORT
C
	CNTAUX = CNTREG + CNTPRV
	TOTAUX = TOTREG + TOTPRV

	IF  (RLUN(REP_CSH).GT.0) THEN

	    CALL TITLE(HEAD(REP_CSH),REPNAM(REP_CSH),VERSION(REP_CSH),
     *		       RLUN(REP_CSH),PAGE(REP_CSH),DAYCDC,0,0)

	    CALL PRINT_TOTALS(RLUN(REP_CSH),'  TOTAL DE PREMIOS PAGOS   ',
     *			      CNTAUX,TOTAUX,GIND)
	    CALL PRINT_TOTALS(RLUN(REP_CSH),'  PREMIOS REGULARES PAGOS  ',
     *			      CNTREG,TOTREG,GIND)
	    CALL PRINT_TOTALS(RLUN(REP_CSH),'PREMIOS PRIVILEGIADOS PAGOS',
     *			      CNTPRV,TOTPRV,GIND)

	    CALL USRCLOS1(RLUN(REP_CSH))
	ENDIF
C
C PUT TOTALS TO BALANSFILE
C
        GNUM = GTNTAB(TPAS,GIND)
        GAMESUMS(GNUM,TVAL,TRACNT) = CNTAUX
        TOTSUMS(2*TVAL-1) = TOTSUMS(2*TVAL-1) + CNTAUX
        IF(TOTAUX.GT.BIG) THEN
           CALL BELLS(2)
           TYPE*,IAM(),'Passive validations value overflow'
           TYPE 900,IAM(),'BALANS report shall not report validations for',
     *               (GLNAMES(I,GNUM),I=1,3)
           GAMESUMS(GNUM,TVAL,DOLAMT) = 0
        ELSE           
           GAMESUMS(GNUM,TVAL,DOLAMT) = TOTAUX
           TEMP = TEMP + TOTAUX
        ENDIF
        IF(GIND.EQ.NUMPAS) THEN
           IF(TEMP.GT.BIG) THEN
              CALL BELLS(2)
              TYPE*,IAM(),'Passive validations value overflow'
              TYPE 910,IAM(),'BALANS report shall not report validations for'
              TOTSUMS(2*TVAL) = 0
           ELSE 
              TOTSUMS(2*TVAL) = TEMP
           ENDIF
           RAPCODE = 9
           CALL BALWRI(RAPCODE,GAMESUMS,TOTSUMS,TOTREAL)
        ENDIF
C
	RETURN
C
900     FORMAT(1X,A,A,1X,3A4) 
910     FORMAT(1X,A,A,1X,' totals of Passive') 
	END
C
C*************************************************************
C SUBROUTINE PRINT_TOTALS
C*************************************************************
C
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE PRINT_TOTALS(LUN,CSTR,CNT,AMT,GIND)
	IMPLICIT   NONE

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
C
C ROUTINE PARAMETERS
C
	INTEGER*4 LUN, CNT, GIND
	INTEGER*8 AMT

	CHARACTER*(*) CSTR
C
C LOCAL VARIABLES
C
	INTEGER*4 OFF, GNUM
C
C
	GNUM = GTNTAB(TPAS,GIND)
C
	WRITE(LUN,1000) CSTR
	WRITE(LUN,2000)

	WRITE(LUN,3000) (GLNAMES(OFF,GNUM),OFF=1,4),
     *		        CNT,CMONYI8(AMT,14,BETUNIT)
	RETURN
C
C FORMAT STATEMENTS
C
1000	FORMAT(/,40X,16('-'),A27,17('-'),/)
2000	FORMAT(T59,35X,'TOTAL')
3000	FORMAT(40X,4A4,10X,I10,10X,A14)
	END
C
C*************************************************************
C SUBROUTINE OPENREPS
C*************************************************************
C
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE OPENREPS(GIND,ST)
	IMPLICIT   NONE

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:CSHPAS.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
C
C ROUTINE PARAMETER
C
	INTEGER*4    GIND,ST
C
C LOCAL VARIABLES
C
	CHARACTER*12 REPFIL

	INTEGER*2    DATE(DATLEN)

	INTEGER*4    I
C
C INIT REPORT VARIABLES
C
	CNTREG  = 0
	CNTPRV  = 0

	TOTREG  = 0
	TOTPRV  = 0
C
C INIT ALL REP. VARIABLES
C
	CALL FASTSET(1, VERSION,  SIZEOF(VERSION)/4)
	CALL FASTSET(0, PAGE,     SIZEOF(PAGE)/4)
C
C GET CORRECT DATE
C
	DATE(VCDC) = DAYCDC
	CALL CDATE(DATE)
C
C GET CASH REPORT NAME AND LOGICAL UNIT
C
	WRITE(REPNAM(REP_CSH),FMT='(A7,A1)')'CSHPAS_',STRTYP(GIND)
	WRITE(REPFIL,FMT='(A12)') 'CSHPAS_ .REP'
	REPFIL(8:8) = STRTYP(GIND)

	CALL FIND_AVAILABLE_LUN (RLUN(REP_CSH),ST)
	IF  (ST.NE.0) THEN
	    TYPE *,IAM(),'ERRO OBTENDO HANDLE P/ RELATORIO ', REPNAM(REP_CSH)
	    TYPE *,IAM(),'STATUS ',ST
	    RETURN
	ENDIF
C
C OPEN REPORT FILE
C
	CALL ROPEN(REPFIL,RLUN(REP_CSH),ST)
	IF  (ST.NE.0) THEN
	    TYPE *,IAM(),'ERRO ABRINDO RELATORIO ',REPNAM(REP_CSH)
	    TYPE *,IAM(),'STATUS ',ST
	    RETURN
	ENDIF
C
C FILL REPORT HEADER AND PRINT TITLE
C
	WRITE(HEAD(REP_CSH),1200) (DATE(I),I=7,12)
	CALL TITLE(HEAD(REP_CSH),REPNAM(REP_CSH),VERSION(REP_CSH),
     *		       RLUN(REP_CSH),PAGE(REP_CSH),DAYCDC,0,0)
	WRITE(RLUN(REP_CSH),1300)
	LINCNT(REP_CSH) = 9
C
	RETURN
C
C FORMAT STATEMENTS
C
1200	FORMAT('RELATORIO DE PAGAMENTOS PARA ',6A2)
1300	FORMAT(1X,131('-'),/,
     *         1X,'  REVENDEDOR        TERM       JOGO      EXTRACCAO',
     *         '       BILHETE     EMISSAO      FRACCAO',
     *	       '        PREMIO PAGO                ',/,1X,131('-'),/)
C
	END
C-------------------------------------------------
C
C SUBROUTINES TO GENERATE A FILE TO SCML ORACLE AND SAP SYSTENS.
C
C*************************************************************
C SUBROUTINE OPN_PAS_PRM()
C*************************************************************
C
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE OPN_PAS_PRM(ORCLUN,SAPLUN)
	IMPLICIT   NONE

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'

	INTEGER*4 ST

	CHARACTER*19 ORCFILNAM
	CHARACTER*20 SAPFILNAM
	INTEGER*4    ORCLUN,SAPLUN
	INTEGER*4    TMPLUN

        TMPLUN = ORCLUN

	ORCFILNAM = 'FILE:PASORC_PRM.ASC'

	WRITE(SAPFILNAM,10) DAYCDC

c	CALL FIND_AVAILABLE_LUN(ORCLUN,ST)

c	IF (ST.NE.0) THEN
c	    TYPE*,IAM(),'ERROR GETTING LOGICAL UNIT TO OPEN ',ORCFILNAM
c	    CALL GPAUSE()
c	ENDIF

c	OPEN ( UNIT            = ORCLUN,
c    *         FILE            = ORCFILNAM,
c    *         STATUS          = 'NEW',
c    *         CARRIAGECONTROL = 'LIST',
c    *         ACCESS          = 'SEQUENTIAL',
c    *         IOSTAT          = ST           )

c	IF (ST.NE.0) THEN
c	    TYPE*,IAM(),'ERROR OPPENING FILE ',ORCFILNAM
c	    CALL GPAUSE()
c	ENDIF

	CALL FIND_AVAILABLE_LUN(SAPLUN,ST)

	IF (ST.NE.0) THEN
	    TYPE*,IAM(),'ERROR GETTING LOGICAL UNIT TO OPEN ',SAPFILNAM
	    CALL GPAUSE()
	ENDIF

	OPEN ( UNIT   = SAPLUN,
     *         FILE   = SAPFILNAM,
     *         STATUS = 'NEW',
     *         ACCESS = 'SEQUENTIAL',
     *         IOSTAT = ST)

	IF (ST.NE.0) THEN
	    TYPE*,IAM(),'ERROR OPPENING FILE ',SAPFILNAM
	    CALL GPAUSE()
	ENDIF

	RETURN
10      FORMAT('FILE:PASSAP_',I4.4,'.ASC')
	END

C***********************************************************
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE WRT_PAS_PRM(ORCLUN,SAPLUN,RECTYP,ORC_AGTPRZ,SAP_AGTPRZ)
	IMPLICIT   NONE
C***********************************************************

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:AGTINF.DEF'
        INCLUDE 'INCLIB:RECAGT.DEF'
        INCLUDE 'INCLIB:PASCOM.DEF'
        INCLUDE 'INCLIB:DATBUF.DEF'

	INTEGER*2   DATE(DATLEN)

	INTEGER*4   AGT,CDAGT,CDSAP

	CHARACTER*2 RECTYP,RECID
	CHARACTER*4 ACDBNK

	INTEGER*4    ORCLUN,SAPLUN,ASFLUN
        INTEGER*4    ORC_AGTPRZ(NUMAGT),SAP_AGTPRZ(3,NUMAGT,PAGEMI,NUMPAS)
	INTEGER*4    TPAGT,TPPAS,YEAR,WEEK,INDPAS,INDEMI,ST,CDC,K,AMT
	INTEGER*4    ORC_CNTREC/0/,SAP_CNTREC/0/,IND
	
	INTEGER*4    TMPLUN

	LOGICAL      OPN_ASF/.TRUE./

        TMPLUN = ORCLUN
        TMPLUN = ORC_CNTREC

	IF (OPN_ASF) THEN
           OPN_ASF = .FALSE.
	   CALL FIND_AVAILABLE_LUN(ASFLUN,ST)
	   IF (ST.NE.0) THEN
	      TYPE*,IAM(),'ERROR GETTING LOGICAL UNIT FOR ASF FILE..'
	      CALL GPAUSE()
	   ELSE           
	      CALL OPENASF(ASFLUN)	    
	   ENDIF 
	ENDIF

	IF (RECTYP.EQ.'HP') THEN
	    DATE(VCDC) = DAYCDC
            CALL CDATE(DATE)

c           ORC_CNTREC = ORC_CNTREC + 1
c           WRITE(ORCLUN,100) RECTYP,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY),' '

            SAP_CNTREC = SAP_CNTREC + 1
            WRITE(SAPLUN,101) RECTYP,2000+DATE(VYEAR),DATE(VMON),DATE(VDAY),' '

	ELSEIF (RECTYP.EQ.'03') THEN

	    DO AGT=1,NUMAGT
		IF (ORC_AGTPRZ(AGT).GT.0) THEN
		    CDAGT = AGTTAB(AGTNUM,AGT)
		    CDSAP = AGTSAP(AGT)
	       
c		    ORC_CNTREC = ORC_CNTREC + 1
c		    WRITE(ORCLUN,110) RECTYP,CDSAP,CDAGT,ORC_AGTPRZ(AGT)
		ENDIF
	    ENDDO
	ELSEIF (RECTYP.EQ.'15') THEN
	    DO AGT=1,NUMAGT
                DO INDPAS=1,NUMPAS
		    DO INDEMI=1,PAGEMI

		        IF (SAP_AGTPRZ(1,AGT,INDEMI,INDPAS).GT.0 .OR.
     *                      SAP_AGTPRZ(2,AGT,INDEMI,INDPAS).GT.0 .OR.
     *                      SAP_AGTPRZ(3,AGT,INDEMI,INDPAS).GT.0) THEN

                           CALL READASF(AGT,ASFREC,ST)
                           IF(ST.NE.0) THEN
                              CALL FILERR(GFNAMES(1,ASF),2,ST,AGT)
		           ELSE
			      IF (INDPAS.EQ.PSBPOP) THEN
			          TPPAS = 5
			          CDC = PASESD(INDEMI,INDPAS)
		    	      ELSE
			          TPPAS = 0
		                  CDC = PASBSD(INDEMI,INDPAS)
			      ENDIF

                              WEEK = PASDRAW(INDEMI,INDPAS)/10000
                              YEAR = MOD(PASDRAW(INDEMI,INDPAS),10000)
			      
	                      DATE(VCDC) = CDC
                              CALL CDATE(DATE)

		              CDAGT  = AGTTAB(AGTNUM,AGT)
		              CDSAP  = AGTSAP(AGT)
			      WRITE(ACDBNK,FMT='(4(A1))') (ASFBYT(SPANB+K-1),K=1,4)
			     
			      DO IND=1,3
                                 IF (SAP_AGTPRZ(IND,AGT,INDEMI,INDPAS).GT.0) THEN
				    IF	(IND.EQ.1) THEN		 !OFFTER.GT.0
			                IF (TSBIT(AGTTAB(AGTTYP,AGT),AGTBNK) ) THEN
 			                   TPAGT = 2		 !PRIVILEGED AS BANK
					ELSE
			                   TPAGT = 4		 !PRIVILEGED AS ONLINE/OFFLINE AGENTS
					   ACDBNK = '0000'	 !DO NOT SEND BANK CODE
                                        ENDIF
				    ELSEIF  (IND.EQ.2) THEN	 !OFFTER.EQ.0
					IF (TSBIT(AGTTAB(AGTTYP,AGT),AGTPRV) ) THEN
                                           TPAGT = 1		 !PRIVILEGED
					ELSE
                                           TPAGT = 3		 !ONLINE AGENT
					ENDIF
				    ELSEIF  (IND.EQ.3) THEN	 !OFFTER.EQ.0 (BANK TRANSFER TO PLAYER)
					IF (TSBIT(AGTTAB(AGTTYP,AGT),AGTPRV) ) THEN
                                           TPAGT = 6		 !PRIVILEGED
					ELSE
                                           TPAGT = 5		 !ONLINE AGENT
					ENDIF
					ACDBNK = '0000'	 !DO NOT SEND BANK CODE
				    ENDIF
C
			            SAP_CNTREC = SAP_CNTREC + 1
			            WRITE(SAPLUN,111) RECTYP,
     *                                                TPAGT,
     *                                                TPPAS,
     *                                                YEAR,
     *                                                DATE(VMON), 
     *                                                WEEK,
     *                                                SAP_AGTPRZ(IND,AGT,INDEMI,INDPAS),
     *                                                CDSAP,
     *                                                ACDBNK,
     *                                                CDAGT
                                 ENDIF
                              ENDDO
			   ENDIF
		        ENDIF	
		    ENDDO
		ENDDO
	    ENDDO 
        ELSEIF (RECTYP.EQ.'RC') THEN !RESPONSABILIDADE CONTABILISTICA
	    DO INDPAS=1,NUMPAS
	       DO INDEMI=1,PAGEMI
	          IF (INDPAS.EQ.PSBPOP) THEN
	     	     TPPAS = 5
	             CDC = PASESD(INDEMI,INDPAS)    
                  ELSE
	             TPPAS = 0
		     CDC = PASBSD(INDEMI,INDPAS)
                  ENDIF

                  WEEK = PASDRAW(INDEMI,INDPAS)/10000
                  YEAR = MOD(PASDRAW(INDEMI,INDPAS),10000)
			      
	          DATE(VCDC) = CDC
                  CALL CDATE(DATE)
C
C VERIFY IF WE HAVE TO GANERATE RESPONSABILIDADE CONTABILISTICA
C
		  IF (PASSTS(INDEMI,INDPAS).EQ.GFINAL) THEN

                      IF( PASPRGCDC(INDEMI,INDPAS).LE.DAYCDC .AND.
     *                    PASPRGCDC(INDEMI,INDPAS).GT.0 ) THEN

			  AMT =  PASTOPAYAMT(INDEMI,INDPAS)
			  RECID = '34'
	              ELSE
			  IF (PASTOPAYAMT(INDEMI,INDPAS).GT.0) THEN
		              AMT = PASTOPAYAMT(INDEMI,INDPAS)-PASRETAFTAMT(INDEMI,INDPAS)
		              RECID = '03'
			  ELSE
			      AMT = PASRETAFTAMT(INDEMI,INDPAS)
		              RECID = '33'
			  ENDIF
	              ENDIF

		      SAP_CNTREC = SAP_CNTREC + 1
		      WRITE(SAPLUN,112) RECID,TPPAS,YEAR,DATE(VMON),WEEK,AMT,' '
	          ENDIF
	       ENDDO
	    ENDDO

	ELSEIF (RECTYP.EQ.'TP') THEN
c	       ORC_CNTREC = ORC_CNTREC + 1
	       SAP_CNTREC = SAP_CNTREC + 1
c	       WRITE(ORCLUN,120) RECTYP,ORC_CNTREC,' '
	       WRITE(SAPLUN,121) RECTYP,SAP_CNTREC,' '

c	       CLOSE(ORCLUN)
	       CLOSE(SAPLUN)
	       CALL CLOSASF(ASFLUN)
	ENDIF

	RETURN
100	FORMAT(A2,I4,I2.2,I2.2,18(A1))
101	FORMAT(A2,I4.4,I2.2,I2.2,32(A1))
110	FORMAT(A2,I6.6,I7.7,I13.13)
111	FORMAT(A2,I1,I1,I4,I2.2,I2.2,I13.13,I6.6,A4,I7.7)
112 	FORMAT(A2,I1,I4,I2.2,I2.2,I13.13,18(A1))
120	FORMAT(A2,I8.8,18(A1))
121	FORMAT(A2,I6.6,34(A1))

	END



C***********************************************************
C=======OPTIONS    /CHECK=NOOVERFLOW
	SUBROUTINE ACC_PRZ(VALREC,ORC_AGTPRZ,SAP_AGTPRZ)
	IMPLICIT   NONE
C***********************************************************

	INCLUDE 'INCLIB:SYSDEFINE.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'

        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:PASCOM.DEF'
        INCLUDE 'INCLIB:DESVAL.DEF'
        INCLUDE 'INCLIB:DATBUF.DEF'

	INTEGER*4    ORC_AGTPRZ(NUMAGT), SAP_AGTPRZ(3,NUMAGT,PAGEMI,NUMPAS)
	INTEGER*4    INDEMI,GIND
	LOGICAL      FOUND

	FOUND = .FALSE.
	GIND  = VALREC(VGIND)
	DO INDEMI=1,PAGEMI
	    IF (VALREC(VEXTR).EQ.PASEMIS(INDEMI,GIND)) THEN
		FOUND = .TRUE.
		EXIT
	    ENDIF
	ENDDO

	IF (.NOT.FOUND) THEN
	    TYPE*,IAM(),'ERROR GETTING MEMORY OPFFSET..'
	    CALL GPAUSE()
	    RETURN
	ENDIF


	IF (VALREC(VOFFTER).GT.0) THEN

	    IF (.NOT.TSBIT(AGTTAB(AGTTYP,VALREC(VOFFTER)),AGTBNK)) THEN
	       ORC_AGTPRZ(VALREC(VOFFTER))             = ORC_AGTPRZ(VALREC(VOFFTER)) + VALREC(VPAMT)
	    ENDIF

	    SAP_AGTPRZ(1,VALREC(VOFFTER),INDEMI,GIND) = SAP_AGTPRZ(1,VALREC(VOFFTER),INDEMI,GIND) + VALREC(VPAMT)

	ELSE

            IF(VALREC(VSTAT) .EQ. VCASH)
     *      SAP_AGTPRZ(2,VALREC(VCTER),INDEMI,GIND) = SAP_AGTPRZ(2,VALREC(VCTER),INDEMI,GIND) + VALREC(VPAMT)

            IF(VALREC(VSTAT) .EQ. VBANK)
     *      SAP_AGTPRZ(3,VALREC(VCTER),INDEMI,GIND) = SAP_AGTPRZ(3,VALREC(VCTER),INDEMI,GIND) + VALREC(VPAMT)

	ENDIF


	RETURN
	END
