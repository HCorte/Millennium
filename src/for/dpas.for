C DPAS.FOR
C
C V06 13-JAN-13 FRP Use maximum configured number for emission before PAS_RESERVE
C V05 16-FEB-12 FRP Use maximum configured number and serie for emission in PAS_RESERVE
C V04 01-NOV-10 FJG Loto2 Batch: RFSS#0163 PRETTIM
C V03 07-OCT-10 FJG HARDCODE FOR ALLOW RETURNS LATER ON CLOSING DRAW
C V02 31-MAR-10 RXK EPASSIVE CHANGES
C               FJG PASIOSUBS CHANGES
C V01 15-DEC-00 CS  INITIAL RELEASE FOR PORTUGAL
C
C SUBROUTINE TO DECODE PASSIVE OPERATIONS MESSAGES FROM WAGERING TERMINAL
C
C ROUTINE MAY GENERATE FOLLOWING 'SYNTERRCOD' VALUES:
C    0     NO SYNTAX ERROR
C   10     INVALID OPERATION REQUESTED
C   20     INVALID GAME TYPE
C   30     GAME INDEX OUT OF RANGE
C   40     INVALID NUMBER OF BOARDS
C   50
C   60
C   65
C   80     INVALID DURATION
C   90     INVALID OPTION BYTES
C  100     INVALID VALUE FOR WEEK
C  110     INVALID FAVORITE NUMBERS 
C  120     INVALID NUMBER TO RELEASE   
C  130     INVALID NUMBER OF FRACTIONS REQUESTED
C  140     INVALID SALE REQUESTED
C      
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 1992 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C PROJECT LOTARIA CLASSICA EM SERIES (PLCS)
C ADD NEW FIELD ON FILE
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE DPAS(TERMES,TRABUF,MESLEN)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:AGTCOM.DEF'
	INCLUDE 'INCLIB:PASCOM.DEF'
	INCLUDE 'INCLIB:DESTRA.DEF'
	INCLUDE 'INCLIB:TASKID.DEF'
	INCLUDE 'INCLIB:DATBUF.DEF'
	INCLUDE 'INCLIB:CHKSUMCM.DEF'
C
C LOCAL VARIABLES
C
	BYTE	    TERMES(*)
	INTEGER*2   MESLEN

	INTEGER*4   TEMP, TEMP1, TEMP2, CNT_UTKT
	INTEGER*4   GIND, GNUM, TYPE, IND, OPTIONS, EMIS
	INTEGER*4   CHKLEN, MYCHKSUM, ENCMES, ENCACT, SUBTYP
	INTEGER*4   OFF_AUXEMIS
	INTEGER*4   TICKETS,NUMTCKS,OFFSET,OFFSET_TRA
	INTEGER*4   INDTAB, AGTNUMAUX
        INTEGER*4   MAXNUM(NUMPAS),NUMTOGET(NUMPAS)
        INTEGER*4   MAXFRA(NUMPAS),MAXSERIE(NUMPAS)
        INTEGER*4   MAXSEED(NUMPAS),MAXNUM_FOR_SEED(NUMPAS)
        INTEGER*4   CNT,I,LOOPS,NFOUND,SEED,NFR,ST,NUM(5),DOFF,NFF
        INTEGER*4   TAKENUM,TAKESERIE(PMAXTIC),TAKEFRAC(PMAXTIC)
        INTEGER*4   OPREQ
        INTEGER*4   TIME
        LOGICAL     EPRV

        INTEGER*2   WEEK
        INTEGER*2   YEAR

        INTEGER*4   I4TEMP
        BYTE        I1TEMP(4), SYMB
        INTEGER*2   I2TEMP(2)
	EQUIVALENCE (I1TEMP,I2TEMP,I4TEMP)

	LOGICAL FOUND, FIRST /.TRUE./
C
C EXTERNAL FUNCTIONS
C
	INTEGER*4   GETDRW
	EXTERNAL    GETDRW
C
C GET MAX VALUE FOR NUMBERS 
C
        IF(FIRST) THEN
           NUMTOGET(PSBCLA) = P(PMAXSEK)
           NUMTOGET(PSBPOP) = P(PMAXSEK)
           MAXNUM(PSBCLA) = PMAXNUMCLA
           MAXNUM(PSBPOP) = PMAXNUMPOP
           MAXFRA(PSBCLA) = PMAXFRACLA
           MAXFRA(PSBPOP) = PMAXFRAPOP
           MAXSERIE(PSBCLA) = PMAXSERCLA
           MAXSERIE(PSBPOP) = PMAXSERPOP
           MAXSEED(1) = PMAXNUMCLA
           MAXSEED(2) = PMAXNUMPOP
           FIRST = .FALSE.
        ENDIF
C
C CLEAR SOME VARIABLES
C
	SYNTERRCOD = 0
	CNT_UTKT   = 0
C
C GET TRANSACTION SEQUENCE NUMBER
C
	TEMP         = ZEXT(TERMES(1))
	TRABUF(TTRN) = IAND(TEMP,15)
C
C GET TYPE, SUBTYPE
C
	TEMP         = ZEXT(TERMES(2))
        TYPE         = ISHFT(TEMP,-4)
	SUBTYP       = IAND(TEMP,'0F'X)
C
C GET AND VERIFY OPERATION REQUEST
C
        IF(TYPE.EQ.0) THEN
           TEMP  = ZEXT(TERMES(7))
           OPREQ = IAND(TEMP,'0F'X)
           IF(OPREQ.LT.EPASRES.OR.OPREQ.GT.EPASREL) THEN
              TRABUF(TWEPOP) = OPREQ
	      TRABUF(TSTAT)= REJT
	      TRABUF(TERR) = SYNT
	      SYNTERRCOD   = 10
	      RETURN
           ENDIF 
        ELSEIF(TYPE.EQ.4) THEN
           OPREQ = PPASRET
        ELSE
	   TRABUF(TSTAT)= REJT
	   TRABUF(TERR) = SYNT
	   SYNTERRCOD   = 10
           RETURN
        ENDIF   
C
C IF INTERNAL CANCELLATION THEN PROCEED ONLY IF SALE
C
       IF(TRABUF(TTYP).EQ.TINC) THEN
          IF(OPREQ.NE.EPASSAL) THEN
            TRABUF(TWEPOP) = OPREQ  
            TRABUF(TSTAT)= REJT
            TRABUF(TERR) = INVL
            RETURN
          ENDIF 
       ENDIF
C
C GET TERMINAL CHECKSUM
C
	TEMP1        = ZEXT(TERMES(3))
	TEMP2        = ZEXT(TERMES(4))
	TRABUF(TCHK) = ISHFT(TEMP1,8) + TEMP2
C
C GET STATISTICS
C
 	TRABUF(TTSTCS)=ZEXT(TERMES(5))
C
C GET GAME TYPE
C
        IF(OPREQ.EQ.PPASRET) THEN
   	   TRABUF(TGAMTYP) = TPAS
           IND = 6 
        ELSE
           TRABUF(TGAMTYP) = ZEXT(TERMES(6))
           IF(TRABUF(TGAMTYP).NE.TPAS) THEN
	      TRABUF(TSTAT)= REJT
	      TRABUF(TERR) = SYNT
	      SYNTERRCOD   = 20
              RETURN
           ENDIF
           IND = 7
        ENDIF 
C
C GET GAME INDEX 
C
	TEMP = ZEXT(TERMES(IND))
	
	TRABUF(TGAMIND) = ISHFT(TEMP,-4)
	IF (TRABUF(TGAMIND).GT.0 .AND. TRABUF(TGAMIND).LE.NUMPAS) THEN
     	   TRABUF(TGAM) = GTNTAB(TPAS,TRABUF(TGAMIND))
        ELSE
	   TRABUF(TSTAT)= REJT
	   TRABUF(TERR) = SYNT
	   SYNTERRCOD   = 30
	   RETURN
	ENDIF
C
	GIND = TRABUF(TGAMIND)
	GNUM = TRABUF(TGAM)
C
        IF(OPREQ.EQ.PPASRET) GOTO 400
        TRABUF(TWEPOP) = OPREQ  
C
C GET DURATION, NO OF BOARDS
C
        TEMP = ZEXT(TERMES(8))
        TRABUF(TWNBET)=IAND(TEMP,15)
        TRABUF(TWDUR)=ISHFT(TEMP,-4)

        IF(TRABUF(TWNBET).NE.0) THEN
	   TRABUF(TSTAT)= REJT
	   TRABUF(TERR) = SYNT
	   SYNTERRCOD   = 40
	   RETURN
        ENDIF

        IF(TRABUF(TWDUR).NE.1) THEN
	   TRABUF(TSTAT)= REJT
	   TRABUF(TERR) = SYNT
	   SYNTERRCOD   = 80
	   RETURN
        ENDIF
C
C GET OPTION FLAGS
C
        TEMP1 = ZEXT(TERMES(9))
        TEMP2 = ZEXT(TERMES(10))
        OPTIONS = ISHFT(TEMP1,8) + TEMP2
        IND = 11
C
C GET OPTIONAL DATA
C CHECK FOR CONTROL REVISION (IGNORE FOR EPASSIVE) 
C
        IF(IAND(OPTIONS,'8000'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR TEXT REVISION (IGNORE FOR EPASSIVE)
C
        IF(IAND(OPTIONS,'4000'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR TICKET TEXT REVISION (IGNORE FOR EPASSIVE)
C
        IF(IAND(OPTIONS,'2000'X).NE.0) THEN
           IND=IND+2
        ENDIF
C
C CHECK FOR JOKER AND OTHER UNUSED OPTIONS 
C
        IF(IAND(OPTIONS,'1DFF'X).NE.0) THEN
	   TRABUF(TSTAT)= REJT
	   TRABUF(TERR) = SYNT
	   SYNTERRCOD   = 90
	   RETURN           
        ENDIF
C
C CHECK FOR QP IF TRUE THEN GET QUICK PICK FLAGS
C
        IF(IAND(OPTIONS,'0200'X).NE.0) THEN
           TEMP1 = ZEXT(TERMES(IND+0))
           TEMP2 = ZEXT(TERMES(IND+1))
           TRABUF(TWQPF) = ISHFT(TEMP1,8) + TEMP2
           IND=IND+2
        ENDIF
C
C GET WEEK AND YEAR
C
        WEEK = ZEXT(TERMES(IND))
        IND=IND+1
        TRABUF(TWEPWK) = WEEK
        IF(WEEK.LT.1.OR.WEEK.GT.53) THEN
	   TRABUF(TSTAT)= REJT
	   TRABUF(TERR) = SYNT
	   SYNTERRCOD   = 100
	   RETURN           
        ENDIF 
        YEAR = ZEXT(TERMES(IND))
        IND=IND+1
        TRABUF(TWEPYR) = YEAR
        YEAR = MOD(YEAR,10)
C
C GET DRAW NUMBER
C
        EMIS = PASEXTDRW(WEEK,YEAR,GIND)
        IF(EMIS.LT.1.OR.EMIS.GT.PAGEMI) THEN
           TRABUF(TSTAT)= REJT
           TRABUF(TERR) = SYNT
           SYNTERRCOD   = 100
           RETURN          
        ENDIF
        TRABUF(TWBEG)  = PASEMIS(EMIS,GIND)
        TRABUF(TWDUR)  = 1
        TRABUF(TWEND)  = TRABUF(TWBEG) + TRABUF(TWDUR) - 1
        DOFF = PASSALTAB(EMIS,GIND)
        IF(DOFF.LE.0.OR.DOFF.GT.PMAXSAL) THEN   ! DRAW NOT ON SALE
          TRABUF(TSTAT) = REJT	
          TRABUF(TERR)  = SUPR
          RETURN
        ENDIF
C
C CHECK DRAW STATUS      
C
        IF(TRABUF(TWEPOP).EQ.EPASRES.OR.TRABUF(TWEPOP).EQ.EPASSAL) THEN
           IF(PASSTS(EMIS,GIND).GE.GAMBFD) THEN
              TRABUF(TSTAT)= REJT
              TRABUF(TERR)=SDRW
              RETURN
           ENDIF
        ENDIF
C
C
        GOTO (100,200,300) TRABUF(TWEPOP)
C
C===========================================================================
C
C RESERVATION  
C
100     CONTINUE
C
C GET PLAYER FAVORITE NUMBERS
C  
        CNT = 0     
        DO I=1,5
           SYMB = ZEXT(TERMES(IND))
           IND = IND+1
           IF(SYMB.EQ.ICHAR('*')) THEN    
              NUM(I) = 0
              CNT = CNT + 1
           ELSE
              NUM(I) = SYMB - ICHAR('0')
              IF(NUM(I).LT.0.OR.NUM(I).GT.9) THEN
	         TRABUF(TSTAT)= REJT
	         TRABUF(TERR) = SYNT
	         SYNTERRCOD   = 110
	         RETURN           
	      ENDIF
           ENDIF 
        ENDDO

        TRABUF(TWEPNE) = 5 - CNT     ! NUMBER OF GIVEN ENDING NUMBERS
        DO I=5,1,-1
           TRABUF(TWEPRM) = TRABUF(TWEPRM) + NUM(I)*10**(5-I) !ENDING NUMBERS
        ENDDO     
        IF(CNT.EQ.0) THEN
           IF(TRABUF(TWEPRM).GT.MAXNUM(GIND)) THEN 
	      TRABUF(TSTAT)= REJT
	      TRABUF(TERR) = SYNT
	      SYNTERRCOD   = 110
	      RETURN           
           ENDIF
        ENDIF
C
C GET NUMBER OF FRACTIONS REQUESTED
C
       TRABUF(TWEPNF) = ZEXT(TERMES(IND))
       IND = IND+1 
       IF(TRABUF(TWEPNF).LT.1.OR.TRABUF(TWEPNF).GT.PMAXTIC) THEN
	  TRABUF(TSTAT)= REJT
          TRABUF(TERR) = SYNT
	  SYNTERRCOD   = 130
	  RETURN           
       ENDIF 
C  
C GET RESERVATION TIME FOR SEED
C
        CALL MOVBYT(TERMES, MESLEN-3, TRABUF(TWEPSD), 1, 4)
        MESLEN = MESLEN - 4
C
C GET RESERVATIONS
C
       NFOUND = 0
       LOOPS = 0
C
C      SEED = MOD(TRABUF(TWEPSD)*TRABUF(TTER),MAXNUM(GIND))  !v06
       MAXNUM_FOR_SEED(GIND) = PASNUMTCK(EMIS,GIND)-1  !v06
       SEED = MOD(TRABUF(TWEPSD)*TRABUF(TTER),MAXNUM_FOR_SEED(GIND))  !v06
C
       NFR = TRABUF(TWEPNF)
       DO LOOPS=1,NUMTOGET(GIND)         !search fracs for PMAXSEK numbers each 
          CALL PAS_RESERVE(TRABUF,SEED,NFR,TAKENUM,TAKESERIE,TAKEFRAC,NFF,ST)
          IF(ST.EQ.0) THEN                
             IF(LOOPS.GT.1) THEN
               IF(TAKENUM.EQ.TRABUF(TWEPRES1)) GOTO 110
               IF(TAKENUM.EQ.TRABUF(TWEPRES2)) GOTO 110
             ENDIF
             NFOUND = NFOUND +1
             TRABUF(TWEPRES1+NFOUND-1) = TAKENUM
             TRABUF(TWEPNFR1+NFOUND-1) = NFF
             CALL FASTMOV(TAKESERIE,TRABUF(TWEPSER1_1+20*(NFOUND-1)),NFF)
             CALL FASTMOV(TAKEFRAC, TRABUF(TWEPFRC1_1+20*(NFOUND-1)),NFF)  
          ELSE
             GOTO 110  !stop search, appropriate number was not found    
          ENDIF
          IF(TRABUF(TWEPNE).EQ.5) GOTO 110  
       ENDDO
       
110    CONTINUE
       TRABUF(TWEPNR) = NFOUND
       IF(NFOUND.EQ.0) THEN
          TRABUF(TSTAT)= REJT
          TRABUF(TERR) = EPNR
       ENDIF
C
       GOTO 500
C
C===========================================================================
C
C SALE  
C  
200     CONTINUE
C
C GET NUMBER
C
       I1TEMP(4) = ZEXT(TERMES(IND))
       I1TEMP(3) = ZEXT(TERMES(IND+1))
       I1TEMP(2) = ZEXT(TERMES(IND+2))
       I1TEMP(1) = ZEXT(TERMES(IND+3))
       IND = IND+4
       TRABUF(TWEPSN) = I4TEMP
       IF(TRABUF(TWEPSN).LT.0.OR.TRABUF(TWEPSN).GT.MAXNUM(GIND)) THEN
          TRABUF(TSTAT)= REJT
          TRABUF(TERR) = SYNT
	  SYNTERRCOD   = 140
       ENDIF
C
C GET SERIE
C 
       TEMP = ZEXT(TERMES(IND))
       IND = IND+1

       TRABUF(TWEPSS) = ISHFT(TEMP,-4)
       IF(TRABUF(TWEPSS).LT.1.OR.TRABUF(TWEPSS).GT.MAXSERIE(GIND)) THEN
          TRABUF(TSTAT)= REJT
          TRABUF(TERR) = SYNT
          SYNTERRCOD   = 140
       ENDIF
C
C GET FRACTION
C  
       TRABUF(TWEPSF) = IAND(TEMP,'0F'X)
       IF(TRABUF(TWEPSF).LT.1.OR.TRABUF(TWEPSF).GT.MAXFRA(GIND)) THEN
          TRABUF(TSTAT)= REJT
          TRABUF(TERR) = SYNT
          SYNTERRCOD   = 140
       ENDIF
C
C SET WAGER AMOUNT
C               
       TRABUF(TWAMT) = PASPRC(EMIS,GIND)       
C
C CHECK RESERVATION OF THE NUMBER AND AVAILABILITY OF SERIE AND FRACTION
C
       IF(GIND.EQ.PSBCLA) THEN
          IF(PASNUMCLA(TRABUF(TWEPSN),DOFF).RESTER.GT.0.AND.                ! FJG: IF NO RESERVATION, WHY DON'T SELL?
     *       PASNUMCLA(TRABUF(TWEPSN),DOFF).RESTER.NE.TRABUF(TTER)) THEN
            TRABUF(TSTAT)= REJT
            TRABUF(TERR) = EPNR
            RETURN          
          ENDIF
          IF(PASNUMCLA(TRABUF(TWEPSN),DOFF).BILLET(TRABUF(TWEPSS),TRABUF(TWEPSF)).NE.PBILONL) THEN
             TRABUF(TSTAT)= REJT
             TRABUF(TERR) = EPNR
             RETURN          
          ENDIF
       ELSE
          IF(PASNUMPOP(TRABUF(TWEPSN),DOFF).RESTER.GT.0.AND.                ! FJG: IF NO RESERVATION, WHY DON'T SELL?
     *       PASNUMPOP(TRABUF(TWEPSN),DOFF).RESTER.NE.TRABUF(TTER)) THEN
            TRABUF(TSTAT)= REJT
            TRABUF(TERR) = EPNR
            RETURN          
          ENDIF
          IF(PASNUMPOP(TRABUF(TWEPSN),DOFF).BILLET(1,TRABUF(TWEPSF)).NE.PBILONL) THEN
             TRABUF(TSTAT)= REJT
             TRABUF(TERR) = EPNR
             RETURN          
          ENDIF 
       ENDIF
C 
       GOTO 500

C===========================================================================
C
C RELEASE  
C  
300     CONTINUE
C
C GET NUMBER OF NUMBERS TO RELEASE
C 
       TRABUF(TWEPNR) = ZEXT(TERMES(IND))
       IND = IND+1
       IF(TRABUF(TWEPNR).LT.1.OR.TRABUF(TWEPNR).GT.NUMTOGET(GIND)) THEN
          TRABUF(TSTAT)= REJT
          TRABUF(TERR) = SYNT
          SYNTERRCOD   = 120
          RETURN
       ENDIF
C
C GET NUMBERS
C
       DO I=0,TRABUF(TWEPNR)-1
          I1TEMP(4) = ZEXT(TERMES(IND))
          I1TEMP(3) = ZEXT(TERMES(IND+1))
          I1TEMP(2) = ZEXT(TERMES(IND+2))
          I1TEMP(1) = ZEXT(TERMES(IND+3))
          IND = IND+4
          TRABUF(TWEPRES1+I) = I4TEMP
          IF(TRABUF(TWEPRES1+I).LT.0.OR.TRABUF(TWEPRES1+I).GT.MAXNUM(GIND))
     *    THEN
             TRABUF(TSTAT)= REJT
             TRABUF(TERR) = SYNT
             SYNTERRCOD   = 120 
             RETURN 
          ENDIF
       ENDDO
C
       GOTO 500
C
C============================================================================
C
C ONLINE RETURN OF PTICKETS
C
400    CONTINUE
C
       TRABUF(TTYP) = TRET
C
C VERIFY SUBTYPE
C
	IF(SUBTYP.NE.6) THEN
	    TRABUF(TSTAT)= REJT
	    TRABUF(TERR) = SYNT
	    SYNTERRCOD   = 50
	    RETURN
	ENDIF

C GET RETURN TYPE
C
	TRABUF(TPRETYP) = IAND(TEMP,'0F'X)

	IF (TRABUF(TPRETYP).LT.1 .OR. TRABUF(TPRETYP).GT.4) THEN
	    TRABUF(TSTAT)= REJT
	    TRABUF(TERR) = SYNT
	    SYNTERRCOD   = 60
	    RETURN   
	ENDIF
C
C OFFLINE/ONLINE/BANK AGENTS (IF EXISTS - FROM PRIVILEGED TERMINALS)
C
	I1TEMP(4) = ZEXT(TERMES(7))
	I1TEMP(3) = ZEXT(TERMES(8))
	I1TEMP(2) = ZEXT(TERMES(9))
	I1TEMP(1) = ZEXT(TERMES(10))
	AGTNUMAUX = I4TEMP
C
	TRABUF(TPOFFTER) = 0
        EPRV = TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTPRV)
C
	IF  (EPRV) THEN
	    FOUND  = .FALSE.
	    INDTAB = 1
	    DO  WHILE(INDTAB.LE.NUMAGT .AND. .NOT. FOUND .AND. AGTNUMAUX.GT.0)
		IF  ( AGTTAB(AGTNUM,INDTAB) .EQ. AGTNUMAUX ) THEN
		    FOUND = .TRUE.
		ELSE
		    INDTAB = INDTAB + 1
		ENDIF
            ENDDO
C
            IF  ( .NOT. FOUND ) THEN
	        TRABUF(TSTAT) = REJT
	        TRABUF(TERR)  = BTOPSN
            ! No suppressions for Returns, offset AGTCAN is used for cancels
            !ELSEIF ( TSBIT(AGTGAM(GFLAGS,GNUM,INDTAB),AGTCAN) ) THEN             ! PASSIVE AGENT ??
            !    TRABUF(TSTAT) = REJT						  ! THIS IS A NON PASSIVE AGENT....
            !    TRABUF(TERR)  = SUPR
	    ELSEIF ( .NOT. TSBIT(AGTTAB(AGTTYP,INDTAB),AGTPRV) ) THEN		  ! NON PRIVILEGED ??
	        TRABUF(TPOFFTER) = INDTAB					  ! SET TRABUF(TPOFFTER)
	    ENDIF
	ELSE
            !IF ( TSBIT(AGTGAM(GFLAGS,GNUM,TRABUF(TTER)),AGTCAN)  .OR.            ! IF NOT PASSIVE AGENT OR
            IF(.NOT. TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTTON) ) THEN	          ! NOT ONLINE ??
               TRABUF(TSTAT) = REJT						  ! THIS IS A NON PASSIVE AGENT....
               TRABUF(TERR)  = SUPR						  ! OR WAITING TO BE ONLINE (WITH A ALTURA TERM)
	    ENDIF
	ENDIF
C
	IF  (TRABUF(TSTAT).EQ.REJT) RETURN					  ! RETURN ERROR CODE
C
C GET NUMBER OF UNSOLD TICKETS TO VALIDATE
C
	NUMTCKS = ZEXT(TERMES(11))
C
C ALLOW ONLY "MAXNUMTCKS" UNSOLD TICKETS A TIME
C
	IF(NUMTCKS.LE.0 .OR. NUMTCKS.GT.MAXNUMTCKS) THEN
	    TRABUF(TSTAT)= REJT
	    TRABUF(TERR)=SYNT
	    SYNTERRCOD = 65
	    RETURN
	ENDIF

	TRABUF(TPTCK) = NUMTCKS
C
C GET ALL UNSOLD TICKETS
C
	DO  TICKETS = 1,NUMTCKS
	    OFFSET_TRA = (TICKETS-1)*OFFTRA
	    OFFSET     = (TICKETS-1)*12

	    TRABUF(TPSTS1+OFFSET_TRA) = RETURND
C
C GET WEEK(2 DIGITS) AND YEAR(ONE DIGIT IF BARCODE READING)
C
	    WEEK       = ZEXT(TERMES(12+OFFSET))
	    YEAR       = ZEXT(TERMES(13+OFFSET))
	    YEAR       = MOD(YEAR,10)
C
C CONVERT YEAR TO TWO DIGITS(YY) AND CHECK DECADE CHANGES
C
C	    DATE(VCDC) = DAYCDC
C	    CALL CDATE(DATE)
C	    AUXYEAR    = MOD(DATE(VYEAR),10)
C	    IF  (YEAR.EQ.AUXYEAR) THEN
C     		YEAR   = DATE(VYEAR)
C	    ELSEIF(YEAR.EQ.AUXYEAR+1 .OR. YEAR+10.EQ.AUXYEAR+1) THEN
C     		YEAR   = DATE(VYEAR)+1
C	    ELSEIF(YEAR.EQ.AUXYEAR-1 .OR. YEAR-10.EQ.AUXYEAR-1) THEN
C     		YEAR   = DATE(VYEAR)-1
C	    ELSE
C		YEAR   = -1		    !FORCE GETDRW ERROR
C	    ENDIF
C
C CHECK SPECIAL CASE EMISSION = 90 (EXTRAORDINARY DRAWS HAVE TWO SERIES)
C AND WE DO NOT HAVE SERIES # IN PASSIVE BARCODE.
C
C(PLCS)
C	    IF  (WEEK.EQ.90) THEN 
C		I4TEMP = 50  
C	       TRABUF(TSTAT)= REJT
C	       TRABUF(TERR)=SYNT
C	       SYNTERRCOD = 66
C	       RETURN
C	    ELSE  
C		     I4TEMP = WEEK
C	    ENDIF 
C (PLCS)
C	    AUXEMIS    = GETDRW(YEAR, I4TEMP, GNUM)
C
C GET EMISSION #
C
            OFF_AUXEMIS = PASEXTDRW(WEEK,YEAR,GIND)
	    IF(OFF_AUXEMIS.LE.0.OR.OFF_AUXEMIS.GT.PAGEMI) THEN
	      TRABUF(TPSTS1+OFFSET_TRA) = EMINOPN
	    ELSE
	      IF(PASEMIS(OFF_AUXEMIS,GIND).GT.0) THEN
                TRABUF(TPEMIS1+OFFSET_TRA) = PASEMIS(OFF_AUXEMIS,GIND)	 
                IF(PASSTS(OFF_AUXEMIS,GIND).EQ.GAMBFD) THEN
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!                   HARDCODE TO LET RETURNS LATER ON                    
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                  if(.not.eprv) then
                    if(pasesd(off_auxemis,gind).eq.daycdc) then
                      if(pastim(off_auxemis,gind).gt.'40000000'X) then
                        time = pastim(off_auxemis,gind) - '40000000'X
                      else
                        time = pastim(off_auxemis,gind)                        
                      endif
                      time = (trabuf(ttim) - time)/60
C                     if(time.ge.45) then
                      if(time.ge.P(PRETTIM)) then ! V04
                        TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS                        
                      endif
                    else
                      TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS                       
                    endif
                  endif
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                ELSEIF(PASSTS(OFF_AUXEMIS,GIND).GE.GAMEN1.AND.PASSTS(OFF_AUXEMIS,GIND).LT.GFINAL) THEN
                  TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
                ELSEIF(PASSTS(OFF_AUXEMIS,GIND).GE.GFINAL) THEN
                  if(.not.eprv) then
                    TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS                  
                  endif  
                ENDIF
              ELSE
	        TRABUF(TPSTS1+OFFSET_TRA) = EMINOPN                
              ENDIF
	    ENDIF
C
C CREATE AUXILIARY VARIABLES (OFFSET TO PASCOM) AND FIND LAST EMISSION
C
C	    LSTOPN      = 0
C	    LSTCLS      = 0
C	    OFF_AUXEMIS = -1
C	    IF  (AUXEMIS.GT.0) THEN
C		DO  TEMP = CURDRW, PAGEMI
C		    IF (PASSTS(TEMP,GIND).EQ.GAMOPN .AND.
C     *                  PASEMIS(TEMP,GIND).GT.LSTOPN     ) !GET LAST OPEN EMIS
C     *		       LSTOPN = PASEMIS(TEMP,GIND)
C
C		    IF (PASSTS(TEMP,GIND).GT.GAMOPN)	!GET LAST GFINAL EMIS
C     *		       LSTCLS = PASEMIS(TEMP,GIND)
C
C		    IF (AUXEMIS.EQ.PASEMIS(TEMP,GIND))
C     *		       OFF_AUXEMIS = TEMP
C		ENDDO
C	    ENDIF
C
C TEST IF OFF_AUXEMIS = -1
C
C	    IF (AUXEMIS.GT.LSTOPN.AND.LSTOPN.GT.0) THEN
C	       TRABUF(TPSTS1+OFFSET_TRA) = EMINOPN
C	    ELSEIF (AUXEMIS.LT.LSTCLS .OR. AUXEMIS.EQ.0) THEN
C	       TRABUF(TPSTS1+OFFSET_TRA) = WEMIS
C	    ENDIF
C
C CHECK RETURN TYPE FOR THIS EMISSION
C
C (PLCS)
            IF(GIND.EQ.PSBCLA) THEN ! (PASSIVE SUBTYPE: CLASSICA)
              IF(OFF_AUXEMIS.GT.0.AND.OFF_AUXEMIS.LE.PAGEMI) THEN
                IF((TRABUF(TPRETYP).EQ.HALFTCK.AND.
     *             (MOD(PASNOFFRA(OFF_AUXEMIS,GIND),4).EQ.0.OR.PASNOFFRA(OFF_AUXEMIS,GIND).EQ.5)).OR.
     *             (TRABUF(TPRETYP).EQ.QUARTCK.AND.
     *             (MOD(PASNOFFRA(OFF_AUXEMIS,GIND),4).GT.0.OR.PASNOFFRA(OFF_AUXEMIS,GIND)/4.NE.5)))
     * 		  TRABUF(TPSTS1+OFFSET_TRA) = HLDRTCK
C                  IF(PASSTS(OFF_AUXEMIS,GIND).GE.GAMBFD ) THEN
C                    IF(.NOT.TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTPRV) ) THEN
C      		      TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
C		    ELSEIF( PASSTS(OFF_AUXEMIS,GIND).GT.GAMEN1.AND.PASSTS(OFF_AUXEMIS,GIND).LT.GFINAL) THEN
C      		      TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
C		    ENDIF
C	          ENDIF
	      ENDIF
	    ENDIF
!
            IF(GIND.EQ.PSBPOP) THEN ! (PASSIVE SUBTYPE: POPULAR)
              IF(OFF_AUXEMIS.GT.0.AND.OFF_AUXEMIS.LE.PAGEMI) THEN
                IF((TRABUF(TPRETYP).EQ.HALFTCK.AND.MOD(PASNOFFRA(OFF_AUXEMIS,GIND),4).EQ.0).OR.
     *             (TRABUF(TPRETYP).EQ.QUARTCK.AND.(MOD(PASNOFFRA(OFF_AUXEMIS,GIND),4).GT.0.OR.
     *              PASNOFFRA(OFF_AUXEMIS,GIND)/4.NE.5))) TRABUF(TPSTS1+OFFSET_TRA) = HLDRTCK
C     	          IF( PASSTS(OFF_AUXEMIS,GIND).GE.GAMBFD ) THEN
C                    IF( .NOT. TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTPRV) ) THEN
C      		      TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
C		    ELSEIF( PASSTS(OFF_AUXEMIS,GIND).GT.GAMEN1.AND.PASSTS(OFF_AUXEMIS,GIND).LT.GFINAL) THEN
C      		      TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
C		    ENDIF
C	          ENDIF
	      ENDIF
	    ENDIF
C (PLCS)
C
C	      IF( (TRABUF(TPRETYP).EQ.HALFTCK                    .AND.
C     *             MOD(PASNOFFRA(OFF_AUXEMIS,GIND),4).EQ.0            ) .OR.
C     *            (TRABUF(TPRETYP).EQ.QUARTCK                    .AND.
C     *             (MOD(PASNOFFRA(OFF_AUXEMIS,GIND),4).GT.0 .OR.
C     *              PASNOFFRA(OFF_AUXEMIS,GIND)/4.NE.5          )     )     )
C     * 		TRABUF(TPSTS1+OFFSET_TRA) = HLDRTCK
C
C IF EMISION STATUS = GFINAL ONLY PRIVILEGED TERMS CAN RETURN
C
C	      IF( PASSTS(OFF_AUXEMIS,GIND).GE.GAMBFD ) THEN
C                 IF( .NOT. TSBIT(AGTTAB(AGTTYP,TRABUF(TTER)),AGTPRV) ) THEN
C      		   TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
C		 ELSEIF( PASSTS(OFF_AUXEMIS,GIND).GT.GAMEN1 .AND. 
C     *                   PASSTS(OFF_AUXEMIS,GIND).LT.GFINAL      ) THEN
C      		   TRABUF(TPSTS1+OFFSET_TRA) = ENDEMIS
C		 ENDIF
C	      ENDIF
C	    ENDIF
C
C DECODE TICKET NUMBER
C
	    I1TEMP(4) = ZEXT(TERMES(14+OFFSET))
	    I1TEMP(3) = ZEXT(TERMES(15+OFFSET))
	    I1TEMP(2) = ZEXT(TERMES(16+OFFSET))
	    I1TEMP(1) = ZEXT(TERMES(17+OFFSET))
	    TRABUF(TPNUM1+OFFSET_TRA) = I4TEMP
C
C VERIFY TICKET NUMBER (FROM 00000 TO X9999)
C
	    IF(OFF_AUXEMIS.GT.0 .AND. OFF_AUXEMIS.LE.PAGEMI) THEN
		IF( TRABUF(TPNUM1+OFFSET_TRA).LT.0 .OR. 
     *		    TRABUF(TPNUM1+OFFSET_TRA).GT.
     *		    PASNUMTCK(OFF_AUXEMIS,GIND) - 1 ) THEN
		    TRABUF(TPSTS1+OFFSET_TRA) = BTKT
		ENDIF
	    ENDIF
C
C DECODE TICKET SERIES
C
	    TEMP = ZEXT(TERMES(18+OFFSET))
	    IF(TEMP.EQ.0) TEMP = 1
C
C SET SERIES = 2 WHEN EMISSION = 90 (WE MUST RECEIVE SERIES = 0 FROM BARCODE)
C ** NOTE ** FOR MANUALLY ENTRY WE WILL RECEIVE SERIES # <> 0
C
C(PLCS)
C	    IF  (TEMP.EQ.0) THEN	! READ FROM BARCODE ??
C		IF  (WEEK.EQ.90) THEN	! YES ...
C		    TEMP = 2
C		ELSE
C		    TEMP = 1
C		ENDIF
C	    ENDIF
C(PLCS)
	    TRABUF(TPSER1+OFFSET_TRA) = TEMP
C
C VERIFY SERIE
C
	    IF(OFF_AUXEMIS.GT.0 .AND. OFF_AUXEMIS.LE.PAGEMI) THEN
		IF( TRABUF(TPSER1+OFFSET_TRA).LE.0 .OR. 
     *		    TRABUF(TPSER1+OFFSET_TRA).GT.
     *		    PASNUMSER(OFF_AUXEMIS,GIND) ) THEN
		    TRABUF(TPSTS1+OFFSET_TRA) = BDSER
		ENDIF
	    ENDIF
C
C DECODE TICKET FRACTION
C
	    TEMP = ZEXT(TERMES(19+OFFSET))
	    TRABUF(TPTEN1+OFFSET_TRA) = TEMP
C
C VERIFY FRACTION
C
	    IF (OFF_AUXEMIS.GT.0 .AND. OFF_AUXEMIS.LE.PAGEMI) THEN
	       IF  ( TRABUF(TPTEN1+OFFSET_TRA).LE.0 .OR. 
     *	             TRABUF(TPTEN1+OFFSET_TRA).GT.PASNOFFRA(OFF_AUXEMIS,GIND) ) THEN
		   TRABUF(TPSTS1+OFFSET_TRA) = BTEN
	       ENDIF
	    ENDIF
C
C DECODE TICKET VALIDATION NUMBER
C
	    I1TEMP(4) = ZEXT(TERMES(20+OFFSET))
	    I1TEMP(3) = ZEXT(TERMES(21+OFFSET))
	    I1TEMP(2) = ZEXT(TERMES(22+OFFSET))
	    I1TEMP(1) = ZEXT(TERMES(23+OFFSET))
	    TRABUF(TPKEY1+OFFSET_TRA) = I4TEMP

	ENDDO	    !FOR ALL UNSOLD TICKETS ON MESSAGE
C
C CHECK MESSAGE CHECKSUM
C
500     CONTINUE
	IF(P(SUPSUM).EQ.0) THEN
	  I4CCITT=IAND(BASECHKSUM+TRABUF(TTER),'FFFF'X)
	  TERMES(3) = I1CCITT(2)    !ANG - CHANGED FROM 1 TO 2
 	  TERMES(4) = I1CCITT(1)    !ANG - CHANGED FROM 2 TO 1
	  CHKLEN    = MESLEN-1
	  CALL GETCCITT(TERMES,1,CHKLEN,MYCHKSUM)
	  IF(MYCHKSUM.NE.TRABUF(TCHK)) TRABUF(TERR)=CBAD
	ENDIF
C
C CHECK FOR DES ERROR
C
	IF(P(DESACT).EQ.0) THEN
	  ENCMES = ZEXT(TERMES(1))
	  ENCMES = IAND(ENCMES,'08'X)
	  IF(P(DESFLG).EQ.0.AND.BTEST(AGTTAB(AGTTYP,TRABUF(TTER)),AGTDES)) THEN
	    ENCACT = '08'X
	  ELSE
	    ENCACT = 0
	  ENDIF
	  IF(ENCMES.NE.ENCACT) TRABUF(TERR) = DESMOD
	ENDIF

	IF(TRABUF(TERR).NE.NOER) TRABUF(TSTAT)=REJT
	RETURN
	END
C
C==============================================================================
CC
C=======OPTIONS /CHECK=NOOVERFLOW
        SUBROUTINE PAS_RESERVE(TRABUF,SEED,NFR,TAKENUM,TAKESERIE,TAKEFRAC,
     *             NFF,ST)
        IMPLICIT NONE
C
        INCLUDE 'INCLIB:SYSPARAM.DEF'
        INCLUDE 'INCLIB:SYSEXTRN.DEF'
        INCLUDE 'INCLIB:GLOBAL.DEF'
        INCLUDE 'INCLIB:CONCOM.DEF'
        INCLUDE 'INCLIB:AGTCOM.DEF'
        INCLUDE 'INCLIB:PASCOM.DEF'
        INCLUDE 'INCLIB:DESTRA.DEF'

        INTEGER*4 TAKENUM,TAKESERIE(PMAXTIC),TAKEFRAC(PMAXTIC)
        INTEGER*4 SEED,NFR,NFF,ST

        INTEGER*4 MAXAVAILABLE(PMAXSAL,NUMPAS)
        COMMON /MAXAVAIL/ MAXAVAILABLE

        INTEGER*4 MAXNUM(NUMPAS),OCT(NUMPAS),MAXSERIE(NUMPAS)
        INTEGER*4 DRAW,DOFF,MODSD,STEP,MULTIP,SERIE
        INTEGER*4 REMFRAC,REMNUM,GETNFRAC,ININUM
        INTEGER*4 GIND,I,SS
        INTEGER*4 EMIS
        
        INTEGER*4 GETPAGEMI

        LOGICAL FIRST/.TRUE./
        LOGICAL ENDSEARCH   

        IF(FIRST) THEN
           MAXNUM(PSBCLA) = PMAXNUMCLA 
           MAXNUM(PSBPOP) = PMAXNUMPOP  
           MAXSERIE(PSBCLA) = PMAXSERCLA
           MAXSERIE(PSBPOP) = PMAXSERPOP
           OCT(PSBCLA) = 6
           OCT(PSBPOP) = 7
           FIRST = .FALSE.
        ENDIF        

        CALL FASTSET(0,TAKESERIE,PMAXTIC)
        CALL FASTSET(0,TAKEFRAC,PMAXTIC)
        GIND = TRABUF(TGAMIND) 
C
C GET PSEUDORANDOM NUMBER AND COMBINE IT WITH FAVORITE DIGITS 
C
        ST = -1

        DRAW = TRABUF(TWBEG)
        EMIS = GETPAGEMI(DRAW,GIND)
        DOFF = PASSALTAB(EMIS,GIND)
        IF(NFR.GT.MAXAVAILABLE(DOFF,GIND)) NFR = MAXAVAILABLE(DOFF,GIND)
        IF(NFR.EQ.0) RETURN
C
        MAXNUM(GIND)   = PASNUMTCK(EMIS,GIND)-1  !v05
        MAXSERIE(GIND) = PASNUMSER(EMIS,GIND)    !v05
C
        MODSD = MOD(DRAW,64)
        CALL RND64(SEED,MODSD,1,MAXNUM(GIND),OCT(GIND)) 
        SERIE = MOD(SEED,MAXSERIE(GIND))+1
        SS = SERIE
        MULTIP = 10**(TRABUF(TWEPNE))
        TAKENUM = (SEED / MULTIP) * MULTIP + TRABUF(TWEPRM)
        ININUM = TAKENUM
        ENDSEARCH = .FALSE.
C
        STEP = 0
        NFF = 0
        REMFRAC = 0
        REMNUM  = 0
        GETNFRAC = NFR
C
100     CONTINUE
        STEP = STEP + 1
        IF(P(PMAXLOP).GT.0.AND.STEP.GT.P(PMAXLOP) .OR. ENDSEARCH) THEN
           IF(REMFRAC.GT.0) THEN
              TAKENUM = REMNUM
              GETNFRAC = REMFRAC
           ELSE
              RETURN
           ENDIF 
        ENDIF 
C
C GET FRACTIONS 
C
        IF(GIND.EQ.PSBCLA) THEN
           IF(PASNUMCLA(TAKENUM,DOFF).RESTER .EQ. 0 .OR.
     *        PASNUMCLA(TAKENUM,DOFF).RESTER .EQ. TRABUF(TTER)) THEN
              IF(TRABUF(TWEPNE).LT.5) THEN
                 IF(PASNUMCLA(TAKENUM,DOFF).FORSAL .GT. REMFRAC) THEN
                    REMFRAC = PASNUMCLA(TAKENUM,DOFF).FORSAL
                    REMNUM  = TAKENUM
                 ENDIF
              ENDIF
              IF((TRABUF(TWEPNE).LT.5.AND.
     *           PASNUMCLA(TAKENUM,DOFF).FORSAL .GE. GETNFRAC) .OR.
     *           (TRABUF(TWEPNE).EQ.5.AND.
     *           PASNUMCLA(TAKENUM,DOFF).FORSAL .GE.1))  THEN
                 ! get fractions
200              CONTINUE
                 DO I = 1, PMAXFRACLA
                    IF(PASNUMCLA(TAKENUM,DOFF).BILLET(SS,I).EQ.PBILONL) THEN
                       NFF = NFF + 1
                       TAKESERIE(NFF) = SS
                       TAKEFRAC(NFF) = I
                       IF(NFF.EQ.GETNFRAC) THEN
                          ST = 0
                          RETURN  
                       ENDIF
                    ENDIF
                 ENDDO
                 !not enough fractions found, continue with next serie
                 SS = SS +1
                 IF(SS.GT.MAXSERIE(GIND)) SS = 1
                 IF(SS.EQ.SERIE) THEN
                    ST = 0 !we've gone thru all series and picked all available
                    RETURN 
                 ENDIF
                 GOTO 200
              ENDIF
           ENDIF
C
        ELSEIF(GIND.EQ.PSBPOP) THEN
           IF(PASNUMPOP(TAKENUM,DOFF).RESTER .EQ. 0. OR.
     *        PASNUMPOP(TAKENUM,DOFF).RESTER .EQ. TRABUF(TTER)) THEN
              IF(TRABUF(TWEPNE).LT.5) THEN
                 IF(PASNUMPOP(TAKENUM,DOFF).FORSAL .GT. REMFRAC) THEN
                    REMFRAC = PASNUMPOP(TAKENUM,DOFF).FORSAL
                    REMNUM  = TAKENUM
                 ENDIF
              ENDIF
              IF((TRABUF(TWEPNE).LT.5.AND.
     *           PASNUMPOP(TAKENUM,DOFF).FORSAL .GE. GETNFRAC) .OR.
     *           (TRABUF(TWEPNE).EQ.5.AND.
     *           PASNUMPOP(TAKENUM,DOFF).FORSAL .GE. 1)) THEN
                 ! get fractions
                 DO I = 1, PMAXFRAPOP
                    IF(PASNUMPOP(TAKENUM,DOFF).BILLET(1,I).EQ.PBILONL) THEN
                       NFF = NFF + 1
                       TAKEFRAC(NFF) = I
                       TAKESERIE(NFF) = 1
                       IF(NFF.EQ.GETNFRAC) THEN
                          ST = 0
                          RETURN  
                       ENDIF
                    ENDIF
                 ENDDO
                 ST = 0    !we've picked all available
                 RETURN
              ENDIF 
           ENDIF
        ENDIF
C
C GET NEXT NUMBER
C     
        IF(TRABUF(TWEPNE).EQ.5) RETURN  
        TAKENUM = TAKENUM + MULTIP
        IF(TAKENUM.GT.MAXNUM(GIND)) TAKENUM = TRABUF(TWEPRM)
        IF(TAKENUM.EQ.ININUM) ENDSEARCH = .TRUE.
        GOTO 100
C
        END      
