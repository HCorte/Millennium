C SUBROUTINE LSSPOOL
C
C V02 05-JUN-2000 OXK SSOREC REPLACED W/ SSOCOM
C V01 XX-XXX-1997 RXK INITIAL RELEASE
C
C SUBROUTINE TO LOAD SUPERSCORE POOL TABLES INTO SSPCOM
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C This item is the property of GTECH Corporation, Providence, Rhode
C Island, and contains confidential and trade secret information. It
C may not be transferred from the custody or control of GTECH except
C as authorized in writing by an officer of GTECH. Neither this item
C nor the information it contains may be used, transferred,
C reproduced, published, or disclosed, in whole or in part, and
C directly or indirectly, except as expressly authorized by an
C officer of GTECH, pursuant to written agreement.
C
C Copyright 2000 GTECH Corporation. All rights reserved.
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE LSSPOOL(GAM)
	IMPLICIT NONE
C
	INCLUDE 'INCLIB:SYSPARAM.DEF'
	INCLUDE 'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:GLOBAL.DEF'
	INCLUDE 'INCLIB:CONCOM.DEF'
	INCLUDE 'INCLIB:SSCCOM.DEF'
	INCLUDE 'INCLIB:SSPCOM.DEF'
	INCLUDE 'INCLIB:SSFREC.DEF'
	INCLUDE 'INCLIB:SSOREC.DEF'
	INCLUDE 'INCLIB:SSOCOM.DEF'

	INTEGER*4 FDB(7)
	INTEGER*4 GIND,DRW,BSAL,ST,GAM
C
C
C GET GAME INDEX AND DRAW NUMBER
C
	GIND=GNTTAB(GAMIDX,GAM)
	DRW=DAYDRW(GAM)
C
C GET BEGINING SALES DAY
C
	BSAL=SSCBSD(GIND)
C
C DETERMINE IF THIS IS FIRST DAY OF SALES
C
	IF(DAYCDC.EQ.BSAL) GOTO 30          ! INIT FILES AND MEMORY
C
C OPEN SUPERSCORE POOL FILE 
C
10	CONTINUE
	CALL OPENQW(4,SSCPFN(1,GIND),4,0,0,ST)
	IF(ST.NE.0) THEN
	   WRITE(5,900) SSCPFN(1,GIND),ST
	   CALL GPAUSE
	   GOTO 10
	ENDIF
	CALL IOQINIT(FDB,4,SSFSEC*256)
C
C READ SUPERSCORE POOL FILE 
C
	CALL READQW(FDB,1,SSFREC,ST)
        IF(ST.NE.0) THEN
           WRITE(5,902) SSCPFN(1,GIND),ST
           CALL GPAUSE
           GOTO 10
        ENDIF
C
C LOAD POOL ARRAYS INTO SSPCOM
C
        SSPLAMT(GIND) = SSFLAMT
        SSPFEL(GIND)  = SSFFEL
	SSPLEL(GIND)  = SSFLEL
	SSPTNUM(GIND) = SSFTNUM
	SSPONUM(GIND) = SSFONUM
        SSPCMB(GIND)  = SSFCMB
        SSPDCMB(GIND) = SSFDCMB
	SSPNBA(GIND)  = SSFNBA
	SSPNBU(GIND)  = SSFNBU
        CALL FASTMOV(SSFMAIN,SSPMAIN(1,0,GIND),SSGPOL)
        CALL FASTMOV(SSFCAMT,SSPCAMT(1,0,GIND),SSGPOL)
        CALL FASTMOV(SSFTOPC,SSPTOPC(1,1,GIND),SSGTPS*SSGTOP)

	CALL CLOSEQFIL(FDB)
C
C OPEN OVERFLOW FILE & READ DATA
C
20	CONTINUE
	CALL OPENW(4,SSCPOF(1,GIND),4,0,0,ST)
	IF(ST.NE.0) THEN
	   WRITE(5,900) SSCPOF(1,GIND),ST
	   CALL GPAUSE
	   GOTO 20
	ENDIF
	CALL IOINIT(FDB,4,SSOSEC*256)
C
        CALL READW(FDB,1,SSOREC,ST)
	CALL CLOSEFIL(FDB)
C
C LOAD OVERPOOL ARRAYS INTO SSOCOM
C
	CALL FASTMOV(SSOCMB,SSOCOMCMB(1,GIND),SSONUM)
	CALL FASTMOV(SSOAMT,SSOCOMAMT(1,GIND),SSONUM)

        RETURN
C
C CREATE FILE AND INTIAILIZE MEMORY
C
30	CONTINUE
        SSPLAMT(GIND)=999999999
        SSPTNUM(GIND)=0
        SSPONUM(GIND)=0
        SSPFEL(GIND)=0
        SSPLEL(GIND)=0
        SSPCMB(GIND)=0
        SSPDCMB(GIND)=0
        SSPNBA(GIND)=P(SSCINB)
        SSPNBU(GIND)=0
        CALL FASTSET(-1,SSPMAIN(1,0,GIND),(SSGNOB+1)*SSGISZ)
        CALL FASTSET(0,SSPCAMT(1,0,GIND),(SSGNOB+1)*SSGISZ)
        CALL FASTSET(0,SSPTOPC(1,1,GIND),SSGTPS*SSGTOP/4)

40      CONTINUE
	CALL CRTFIL(SSCPFN(1,GIND),SSFSEC,ST)
c	CALL CRTFIL(SSCPFN(1,GIND),SSFSEC+1,ST)
	IF(ST.NE.0) THEN
	   WRITE(5,901) SSCPFN(1,GIND),ST
	   CALL GPAUSE
	   GOTO 40
	ENDIF

50      CONTINUE
	CALL CRTFIL(SSCPOF(1,GIND),SSOSEC,ST)
	IF(ST.NE.0) THEN
	   WRITE(5,901) SSCPOF(1,GIND),ST
	   CALL GPAUSE
	   GOTO 50
	ENDIF

	RETURN
C
C FORMAT STATEMENTS
C
900	FORMAT(1X,5A4,' - Open error   status - ',I2)
902	FORMAT(1X,5A4,' - Read error   status - ',I2)
901	FORMAT(1X,5A4,' - Allocation error    status - ',I2)
	END

