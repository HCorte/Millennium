C
C SUBROUTINE READQW
C $Log:   GXAFXT:[GOLS]READQW.FOV  $
C  
C     Rev 1.0   17 Apr 1996 14:38:52   HXK
C  Release of Finland for X.25, Telephone Betting, Instant Pass Thru Phase 1
C  
C     Rev 1.0   21 Jan 1993 17:27:22   DAB
C  Initial Release
C  Based on Netherlands Bible, 12/92, and Comm 1/93 update
C  DEC Baseline
C
C ** Source - nrm_diskqio.for **
C
C
C
C *** READQW       <<<READ and wait for completion>>>
C
C=======OPTIONS /CHECK=NOOVERFLOW
	SUBROUTINE READQW(FDB, BLOCK, BUFFER, STATUS)
	IMPLICIT NONE
C
	INCLUDE	'INCLIB:SYSPARAM.DEF'
	INCLUDE	'INCLIB:SYSEXTRN.DEF'
	INCLUDE 'INCLIB:DISKQIO.DEF'
C
	INCLUDE '($SYSSRVNAM)'
C
	INTEGER*4   FDB(7)
	INTEGER*4   BLOCK
	INTEGER*4   BUFFER(*)
	INTEGER*4   STATUS
	INTEGER*4   FLAG
C
	INTEGER*4   HOLD
	INTEGER*4   I4TEMP
	INTEGER*2   I2TEMP(2)
	EQUIVALENCE (I4TEMP,I2TEMP)
C
	CALL LIB$GET_EF(FLAG)			    !GET AN EVENT FLAG TO USE
	IF(FLAG.EQ.-1)THEN
	  STATUS = -99
	  GOTO 9000
	ENDIF
	FDB(FDB_EVNT) = FLAG
C
	CALL READQXX(FDB, BLOCK, BUFFER, STATUS)
	IF(.NOT.STATUS)THEN
	  CALL LIB$FREE_EF(FLAG)		    !ERROR...FREE THE FLAG
	  GOTO 9000
	ENDIF
C
	STATUS = SYS$WAITFR(%VAL(FLAG))		    !WAIT FOR EVENT FLAG
C
	CALL LIB$FREE_EF(FLAG)			    !FREE THE FLAG
	IF(STATUS)THEN
	  I4TEMP = FDB(FDB_IOSB)
	  STATUS = ZEXT(I2TEMP(1))
	  IF(STATUS)THEN
	    STATUS = 0
	  ELSE
	    IF (STATUS .EQ. 2160) THEN
	      STATUS = 144
	    ENDIF
	  ENDIF
	ENDIF
C
C	I/O COUNT IS NOT FULLWORD ALIGNED...GET IT ANYWAY
C
	I4TEMP = FDB(FDB_IOSB)
	HOLD   = I2TEMP(2)
	I4TEMP = FDB(FDB_IOSB+1)
	I2TEMP(2) = I2TEMP(1)
	I2TEMP(1) = HOLD
C
	FDB(FDB_IOLEN) = I4TEMP
C
9000	CONTINUE
	RETURN
	END
